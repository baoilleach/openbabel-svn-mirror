#Open Babel Makefile

CC            = @CC@
CXX	      = @CXX@

CFLAGS        = @CFLAGS@
CXXFLAGS      = @CXXFLAGS@
LIBS	      = @LIBS@
LIBFLAGS      = -DLIBRARY

LINKER	      = $(CXX)
LDFLAGS       = @LDFLAGS@

RM            = rm -f
INSTALL	      = @INSTALL_PROGRAM@
AR	      = @AR@

srcdir        = @srcdir@
VPATH         = @srcdir@
top_srcdir    = @top_srcdir@

DEST	      = @bindir@

MAIN	      = main.o

HDRS	      = StdAfx.h Vector.h aromatic.h atomtyp.h base.h binary.h \
		bitgrid.h bitvec.h chiral.h chains.h commandline.h cwrap.h \
		data.h element.h extable.h fileformat.h grid.h \
		matrix.h mol.h molchrg.h molvector.h oeifstream.h \
		obutil.h parsmart.h patty.h phmodel.h phmodeldata.h \
		resdata.h ring.h rotor.h smi.h typer.h types.h version.h \
		chains.h ctransform.h binary_io.h generic.h smarts.h 

OBJS	      =	alchemy.o binary.o typer.o atom.o base.o bitvec.o \
		bitgrid.o bond.o \
		chains.o commandline.o data.o molvector.o matrix.o\
		chiral.o grid.o mdl.o mol.o mol2.o molchrg.o \
		obutil.o parsmi.o parsmart.o patty.o quat.o \
		ring.o rotor.o smi.o tokenst.o Vector.o pdb.o ccc.o \
		mmod.o rand.o box.o balst.o bgf.o cacao.o cache.o chdrw.o \
		csr.o cssr.o feat.o fh.o gromos96.o cwrap.o \
		ghemical.o xyz.o fileformat.o gamess.o hin.o \
		qchem.o tinker.o unichem.o mpqc.o phmodel.o car.o xed.o \
		jaguar.o amber.o ctransform.o binary_io.o generic.o smarts.o\
		dmol.o report.o nwchem.o mopac.o gaussian.o

PROGRAM	      = babel

LIBRARY       = libopenbabel.a

DATAFILES     = aromatic.txt atomtyp.txt element.txt extable.txt\
		resdata.txt types.txt phmodel.txt GNULICENSE.txt \
		Primer.html bin2hex.pl

MAKEFILE      = Makefile

$(PROGRAM):     $(OBJS) $(MAIN) 
		$(LINKER) $(LDFLAGS) $(OBJS) $(MAIN) -o  $(PROGRAM) $(LIBS)
		$(AR) -r $(LIBRARY) $(OBJS)

all:		$(PROGRAM)

test:		check
check:		$(PROGRAM)

clean:;		$(RM) $(OBJS) $(MAIN) $(PROGRAM) $(LIBRARY)

install:	$(PROGRAM)
		$(INSTALL) $(PROGRAM) $(DEST)

print:;		$(PRINT) $(HDRS) $(SRCS)

program:        $(PROGRAM)

dist:;          rm -rf openbabel openbabel.tgz
		mkdir openbabel
		cp *.h *.cpp *.c Makefile.in $(DATAFILES) configure openbabel
		tar -zcvf openbabel.tgz openbabel
		rm -rf openbabel

datafiles:;   chmod +x $(srcdir)/bin2hex.pl
	      $(srcdir)/bin2hex.pl $(srcdir)/atomtyp.txt  AtomTypeData       > atomtyp.h
	      $(srcdir)/bin2hex.pl $(srcdir)/element.txt  ElementData        > element.h
	      $(srcdir)/bin2hex.pl $(srcdir)/extable.txt  ExtensionTableData > extable.h
	      $(srcdir)/bin2hex.pl $(srcdir)/resdata.txt  ResidueData        > resdata.h
	      $(srcdir)/bin2hex.pl $(srcdir)/types.txt    TypesData          > types.h
	      $(srcdir)/bin2hex.pl $(srcdir)/aromatic.txt AromaticData       > aromatic.h
	      $(srcdir)/bin2hex.pl $(srcdir)/phmodel.txt  PhModelData        > phmodeldata.h

# Update the Makefile if the Makefile.in or configure script changes
Makefile:	$(srcdir)/Makefile.in
		(cd ..; ./config.status)

.SUFFIXES:	.cpp
.cpp.o:
		$(CXX) $(CXXFLAGS) -c $< -o $@
