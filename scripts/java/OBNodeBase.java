/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class OBNodeBase extends OBBase {
  private long swigCPtr;

  protected OBNodeBase(long cPtr, boolean cMemoryOwn) {
    super(net.sourceforge.openbabelJNI.SWIGOBNodeBaseUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OBNodeBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      net.sourceforge.openbabelJNI.delete_OBNodeBase(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public void setVisit(boolean value) {
    net.sourceforge.openbabelJNI.OBNodeBase_Visit_set(swigCPtr, this, value);
  }

  public boolean getVisit() {
    return net.sourceforge.openbabelJNI.OBNodeBase_Visit_get(swigCPtr, this);
  }

  public OBNodeBase() {
    this(net.sourceforge.openbabelJNI.new_OBNodeBase(), true);
  }

  public long GetIdx() {
    return net.sourceforge.openbabelJNI.OBNodeBase_GetIdx(swigCPtr, this);
  }

  public void SetIdx(int idx) {
    net.sourceforge.openbabelJNI.OBNodeBase_SetIdx(swigCPtr, this, idx);
  }

  public OBGraphBase GetParent() {
    long cPtr = net.sourceforge.openbabelJNI.OBNodeBase_GetParent(swigCPtr, this);
    return (cPtr == 0) ? null : new OBGraphBase(cPtr, false);
  }

  public void SetParent(OBGraphBase arg0) {
    net.sourceforge.openbabelJNI.OBNodeBase_SetParent(swigCPtr, this, OBGraphBase.getCPtr(arg0), arg0);
  }

  public void AddEdge(OBEdgeBase b) {
    net.sourceforge.openbabelJNI.OBNodeBase_AddEdge(swigCPtr, this, OBEdgeBase.getCPtr(b), b);
  }

  public long GetValence() {
    return net.sourceforge.openbabelJNI.OBNodeBase_GetValence(swigCPtr, this);
  }

  public boolean IsConnected(OBNodeBase arg0) {
    return net.sourceforge.openbabelJNI.OBNodeBase_IsConnected(swigCPtr, this, OBNodeBase.getCPtr(arg0), arg0);
  }

  public void Error(int f) {
    net.sourceforge.openbabelJNI.OBNodeBase_Error(swigCPtr, this, f);
  }

  public int GetFormalCharge() {
    return net.sourceforge.openbabelJNI.OBNodeBase_GetFormalCharge(swigCPtr, this);
  }

  public long ExplicitHydrogenCount() {
    return net.sourceforge.openbabelJNI.OBNodeBase_ExplicitHydrogenCount(swigCPtr, this);
  }

  public long ImplicitHydrogenCount() {
    return net.sourceforge.openbabelJNI.OBNodeBase_ImplicitHydrogenCount(swigCPtr, this);
  }

  public long GetImplicitValence() {
    return net.sourceforge.openbabelJNI.OBNodeBase_GetImplicitValence(swigCPtr, this);
  }

  public long GetHvyValence() {
    return net.sourceforge.openbabelJNI.OBNodeBase_GetHvyValence(swigCPtr, this);
  }

  public long KBOSum() {
    return net.sourceforge.openbabelJNI.OBNodeBase_KBOSum(swigCPtr, this);
  }

  public long GetHyb() {
    return net.sourceforge.openbabelJNI.OBNodeBase_GetHyb(swigCPtr, this);
  }

  public long MemberOfRingCount() {
    return net.sourceforge.openbabelJNI.OBNodeBase_MemberOfRingCount(swigCPtr, this);
  }

  public long GetAtomicNum() {
    return net.sourceforge.openbabelJNI.OBNodeBase_GetAtomicNum(swigCPtr, this);
  }

  public void SetMatch(OBNodeBase arg0) {
    net.sourceforge.openbabelJNI.OBNodeBase_SetMatch(swigCPtr, this, OBNodeBase.getCPtr(arg0), arg0);
  }

  public void SetAromatic() {
    net.sourceforge.openbabelJNI.OBNodeBase_SetAromatic(swigCPtr, this);
  }

  public boolean IsInRingSize(int arg0) {
    return net.sourceforge.openbabelJNI.OBNodeBase_IsInRingSize(swigCPtr, this, arg0);
  }

  public boolean IsAromatic() {
    return net.sourceforge.openbabelJNI.OBNodeBase_IsAromatic(swigCPtr, this);
  }

  public boolean IsInRing() {
    return net.sourceforge.openbabelJNI.OBNodeBase_IsInRing(swigCPtr, this);
  }

  public boolean Eval(OBNodeBase arg0) {
    return net.sourceforge.openbabelJNI.OBNodeBase_Eval(swigCPtr, this, OBNodeBase.getCPtr(arg0), arg0);
  }

  public OBNodeBase GetMatch() {
    long cPtr = net.sourceforge.openbabelJNI.OBNodeBase_GetMatch(swigCPtr, this);
    return (cPtr == 0) ? null : new OBNodeBase(cPtr, false);
  }

}
