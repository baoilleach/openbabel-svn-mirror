/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class OBChiralData extends OBGenericData {
  private long swigCPtr;

  protected OBChiralData(long cPtr, boolean cMemoryOwn) {
    super(openbabelJNI.SWIGOBChiralDataUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OBChiralData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      openbabelJNI.delete_OBChiralData(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public SWIGTYPE_p_std__vectorTunsigned_int_t GetAtom4Refs(atomreftype t) {
    return new SWIGTYPE_p_std__vectorTunsigned_int_t(openbabelJNI.OBChiralData_GetAtom4Refs(swigCPtr, this, t.swigValue()), true);
  }

  public long GetAtomRef(int a, atomreftype t) {
    return openbabelJNI.OBChiralData_GetAtomRef(swigCPtr, this, a, t.swigValue());
  }

  public OBChiralData() {
    this(openbabelJNI.new_OBChiralData__SWIG_0(), true);
  }

  public OBChiralData(OBChiralData src) {
    this(openbabelJNI.new_OBChiralData__SWIG_1(OBChiralData.getCPtr(src), src), true);
  }

  public OBGenericData Clone(OBBase arg0) {
    long cPtr = openbabelJNI.OBChiralData_Clone(swigCPtr, this, OBBase.getCPtr(arg0), arg0);
    return (cPtr == 0) ? null : new OBGenericData(cPtr, false);
  }

  public void Clear() {
    openbabelJNI.OBChiralData_Clear(swigCPtr, this);
  }

  public boolean SetAtom4Refs(SWIGTYPE_p_std__vectorTunsigned_int_t atom4refs, atomreftype t) {
    return openbabelJNI.OBChiralData_SetAtom4Refs(swigCPtr, this, SWIGTYPE_p_std__vectorTunsigned_int_t.getCPtr(atom4refs), t.swigValue());
  }

  public int AddAtomRef(long atomref, atomreftype t) {
    return openbabelJNI.OBChiralData_AddAtomRef(swigCPtr, this, atomref, t.swigValue());
  }

  public long GetSize(atomreftype t) {
    return openbabelJNI.OBChiralData_GetSize(swigCPtr, this, t.swigValue());
  }

}
