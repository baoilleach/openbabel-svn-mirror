/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class OBForceField {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected OBForceField(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OBForceField obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      openbabelJNI.delete_OBForceField(swigCPtr);
    }
    swigCPtr = 0;
  }

  public static pluginiterForceField Iter() {
    return new pluginiterForceField(openbabelJNI.OBForceField_Iter(), false);
  }

  public static OBForceField FindDefaultType() {
    long cPtr = openbabelJNI.OBForceField_FindDefaultType();
    return (cPtr == 0) ? null : new OBForceField(cPtr, false);
  }

  public static OBForceField FindType(String ID) {
    long cPtr = openbabelJNI.OBForceField_FindType(ID);
    return (cPtr == 0) ? null : new OBForceField(cPtr, false);
  }

  public String Description() {
    return openbabelJNI.OBForceField_Description(swigCPtr, this);
  }

  public static OBForceField FindForceField(String ID) {
    long cPtr = openbabelJNI.OBForceField_FindForceField__SWIG_0(ID);
    return (cPtr == 0) ? null : new OBForceField(cPtr, false);
  }

  public String GetUnit() {
    return openbabelJNI.OBForceField_GetUnit(swigCPtr, this);
  }

  public boolean Setup(OBMol mol) {
    return openbabelJNI.OBForceField_Setup(swigCPtr, this, OBMol.getCPtr(mol), mol);
  }

  public void UpdateCoordinates(OBMol mol) {
    openbabelJNI.OBForceField_UpdateCoordinates(swigCPtr, this, OBMol.getCPtr(mol), mol);
  }

  public double Energy() {
    return openbabelJNI.OBForceField_Energy(swigCPtr, this);
  }

  public double E_Bond() {
    return openbabelJNI.OBForceField_E_Bond(swigCPtr, this);
  }

  public double E_Angle() {
    return openbabelJNI.OBForceField_E_Angle(swigCPtr, this);
  }

  public double E_StrBnd() {
    return openbabelJNI.OBForceField_E_StrBnd(swigCPtr, this);
  }

  public double E_Torsion() {
    return openbabelJNI.OBForceField_E_Torsion(swigCPtr, this);
  }

  public double E_OOP() {
    return openbabelJNI.OBForceField_E_OOP(swigCPtr, this);
  }

  public double E_VDW() {
    return openbabelJNI.OBForceField_E_VDW(swigCPtr, this);
  }

  public double E_Electrostatic() {
    return openbabelJNI.OBForceField_E_Electrostatic(swigCPtr, this);
  }

  public boolean SetLogFile(SWIGTYPE_p_std__ostream pos) {
    return openbabelJNI.OBForceField_SetLogFile(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(pos));
  }

  public boolean SetLogLevel(int level) {
    return openbabelJNI.OBForceField_SetLogLevel(swigCPtr, this, level);
  }

  public int GetLogLevel() {
    return openbabelJNI.OBForceField_GetLogLevel(swigCPtr, this);
  }

  public void DistanceGeometry() {
    openbabelJNI.OBForceField_DistanceGeometry(swigCPtr, this);
  }

  public void GenerateCoordinates() {
    openbabelJNI.OBForceField_GenerateCoordinates(swigCPtr, this);
  }

  public void SystematicRotorSearch() {
    openbabelJNI.OBForceField_SystematicRotorSearch(swigCPtr, this);
  }

  public vector3 LineSearch(OBAtom atom, vector3 direction) {
    return new vector3(openbabelJNI.OBForceField_LineSearch(swigCPtr, this, OBAtom.getCPtr(atom), atom, vector3.getCPtr(direction), direction), true);
  }

  public void SteepestDescent(int steps, int method) {
    openbabelJNI.OBForceField_SteepestDescent__SWIG_0(swigCPtr, this, steps, method);
  }

  public void SteepestDescent(int steps) {
    openbabelJNI.OBForceField_SteepestDescent__SWIG_1(swigCPtr, this, steps);
  }

  public void ConjugateGradients(int steps, int method) {
    openbabelJNI.OBForceField_ConjugateGradients__SWIG_0(swigCPtr, this, steps, method);
  }

  public void ConjugateGradients(int steps) {
    openbabelJNI.OBForceField_ConjugateGradients__SWIG_1(swigCPtr, this, steps);
  }

  public vector3 ValidateLineSearch(OBAtom atom, vector3 direction) {
    return new vector3(openbabelJNI.OBForceField_ValidateLineSearch(swigCPtr, this, OBAtom.getCPtr(atom), atom, vector3.getCPtr(direction), direction), true);
  }

  public void ValidateSteepestDescent(int steps) {
    openbabelJNI.OBForceField_ValidateSteepestDescent(swigCPtr, this, steps);
  }

  public void ValidateConjugateGradients(int steps) {
    openbabelJNI.OBForceField_ValidateConjugateGradients(swigCPtr, this, steps);
  }

  public boolean Validate() {
    return openbabelJNI.OBForceField_Validate(swigCPtr, this);
  }

  public boolean ValidateGradients() {
    return openbabelJNI.OBForceField_ValidateGradients(swigCPtr, this);
  }

  public vector3 ValidateGradientError(vector3 numgrad, vector3 anagrad) {
    return new vector3(openbabelJNI.OBForceField_ValidateGradientError(swigCPtr, this, vector3.getCPtr(numgrad), numgrad, vector3.getCPtr(anagrad), anagrad), true);
  }

  public static double VectorLengthDerivative(vector3 a, vector3 b) {
    return openbabelJNI.OBForceField_VectorLengthDerivative(vector3.getCPtr(a), a, vector3.getCPtr(b), b);
  }

  public static double VectorAngleDerivative(vector3 a, vector3 b, vector3 c) {
    return openbabelJNI.OBForceField_VectorAngleDerivative(vector3.getCPtr(a), a, vector3.getCPtr(b), b, vector3.getCPtr(c), c);
  }

  public static double VectorTorsionDerivative(vector3 a, vector3 b, vector3 c, vector3 d) {
    return openbabelJNI.OBForceField_VectorTorsionDerivative(vector3.getCPtr(a), a, vector3.getCPtr(b), b, vector3.getCPtr(c), c, vector3.getCPtr(d), d);
  }

}
