/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPERL
#define SWIG_CASTRANK_MODE

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC)
#   if (__SUNPRO_CC <= 0x560)
#     define SWIGTEMPLATEDISAMBIGUATOR template
#   else
#     define SWIGTEMPLATEDISAMBIGUATOR 
#   endif
# else
#   define SWIGTEMPLATEDISAMBIGUATOR 
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "3"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store inforomation on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (l1 - f1) - (l2 - f2);
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



#ifdef __cplusplus
/* Needed on some windows machines---since MS plays funny games with the header files under C++ */
#include <math.h>
#include <stdlib.h>
extern "C" {
#endif
#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

/* Add in functionality missing in older versions of Perl. Much of this is based on Devel-PPPort on cpan. */

/* Add PERL_REVISION, PERL_VERSION, PERL_SUBVERSION if missing */
#ifndef PERL_REVISION
#  if !defined(__PATCHLEVEL_H_INCLUDED__) && !(defined(PATCHLEVEL) && defined(SUBVERSION))
#    define PERL_PATCHLEVEL_H_IMPLICIT
#    include <patchlevel.h>
#  endif
#  if !(defined(PERL_VERSION) || (defined(SUBVERSION) && defined(PATCHLEVEL)))
#    include <could_not_find_Perl_patchlevel.h>
#  endif
#  ifndef PERL_REVISION
#    define PERL_REVISION       (5)
#    define PERL_VERSION        PATCHLEVEL
#    define PERL_SUBVERSION     SUBVERSION
#  endif
#endif

#if defined(WIN32) && defined(PERL_OBJECT) && !defined(PerlIO_exportFILE)
#define PerlIO_exportFILE(fh,fl) (FILE*)(fh)
#endif

#ifndef SvIOK_UV
# define SvIOK_UV(sv)       (SvIOK(sv) && (SvUVX(sv) == SvIVX(sv)))
#endif

#ifndef SvUOK
# define SvUOK(sv)           SvIOK_UV(sv)
#endif

#if ((PERL_VERSION < 4) || ((PERL_VERSION == 4) && (PERL_SUBVERSION <= 5)))
#  define PL_sv_undef               sv_undef
#  define PL_na	                    na
#  define PL_errgv                  errgv
#  define PL_sv_no                  sv_no
#  define PL_sv_yes                 sv_yes
#  define PL_markstack_ptr          markstack_ptr
#endif

#ifndef IVSIZE
#  ifdef LONGSIZE
#    define IVSIZE LONGSIZE
#  else
#    define IVSIZE 4 /* A bold guess, but the best we can make. */
#  endif
#endif

#ifndef INT2PTR
#  if (IVSIZE == PTRSIZE) && (UVSIZE == PTRSIZE)
#    define PTRV                  UV
#    define INT2PTR(any,d)        (any)(d)
#  else
#    if PTRSIZE == LONGSIZE
#      define PTRV                unsigned long
#    else
#      define PTRV                unsigned
#    endif
#    define INT2PTR(any,d)        (any)(PTRV)(d)
#  endif

#  define NUM2PTR(any,d)  (any)(PTRV)(d)
#  define PTR2IV(p)       INT2PTR(IV,p)
#  define PTR2UV(p)       INT2PTR(UV,p)
#  define PTR2NV(p)       NUM2PTR(NV,p)

#  if PTRSIZE == LONGSIZE
#    define PTR2ul(p)     (unsigned long)(p)
#  else
#    define PTR2ul(p)     INT2PTR(unsigned long,p)
#  endif
#endif /* !INT2PTR */

#ifndef get_sv
#  define get_sv perl_get_sv
#endif

#ifndef ERRSV
#  define ERRSV get_sv("@",FALSE)
#endif

#ifndef pTHX_
#define pTHX_
#endif   

#include <string.h>
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGINTERN const char*
SWIG_Perl_ErrorType(int code) {
  const char* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = "MemoryError";
    break;
  case SWIG_IOError:
    type = "IOError";
    break;
  case SWIG_RuntimeError:
    type = "RuntimeError";
    break;
  case SWIG_IndexError:
    type = "IndexError";
    break;
  case SWIG_TypeError:
    type = "TypeError";
    break;
  case SWIG_DivisionByZero:
    type = "ZeroDivisionError";
    break;
  case SWIG_OverflowError:
    type = "OverflowError";
    break;
  case SWIG_SyntaxError:
    type = "SyntaxError";
    break;
  case SWIG_ValueError:
    type = "ValueError";
    break;
  case SWIG_SystemError:
    type = "SystemError";
    break;
  case SWIG_AttributeError:
    type = "AttributeError";
    break;
  default:
    type = "RuntimeError";
  }
  return type;
}




/* -----------------------------------------------------------------------------
 * perlrun.swg
 *
 * This file contains the runtime support for Perl modules
 * and includes code for managing global variables and pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

#ifdef PERL_OBJECT
#define SWIG_PERL_OBJECT_DECL CPerlObj *SWIGUNUSEDPARM(pPerl),
#define SWIG_PERL_OBJECT_CALL pPerl,
#else
#define SWIG_PERL_OBJECT_DECL
#define SWIG_PERL_OBJECT_CALL
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_ConvertPtr(obj, pp, type, flags)           SWIG_Perl_ConvertPtr(SWIG_PERL_OBJECT_CALL obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags)              SWIG_Perl_NewPointerObj(SWIG_PERL_OBJECT_CALL p, type, flags)

/* for raw packed data */
#define SWIG_ConvertPacked(obj, p, s, type)             SWIG_Perl_ConvertPacked(SWIG_PERL_OBJECT_CALL obj, p, s, type)
#define SWIG_NewPackedObj(p, s, type)	                SWIG_Perl_NewPackedObj(SWIG_PERL_OBJECT_CALL p, s, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_ConvertPtr(obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Perl_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Perl_SetModule(pointer)


/* Error manipulation */

#define SWIG_ErrorType(code)                            SWIG_Perl_ErrorType(code)               
#define SWIG_Error(code, msg)            		sv_setpvf(GvSV(PL_errgv),"%s %s\n", SWIG_ErrorType(code), msg)
#define SWIG_fail                        		goto fail						    

/* Perl-specific SWIG API */

#define SWIG_MakePtr(sv, ptr, type, flags)              SWIG_Perl_MakePtr(SWIG_PERL_OBJECT_CALL sv, ptr, type, flags)
#define SWIG_MakePackedObj(sv, p, s, type)	        SWIG_Perl_MakePackedObj(SWIG_PERL_OBJECT_CALL sv, p, s, type)
#define SWIG_SetError(str)                              SWIG_Error(SWIG_RuntimeError, str)


#define SWIG_PERL_DECL_ARGS_1(arg1)                     (SWIG_PERL_OBJECT_DECL arg1)
#define SWIG_PERL_CALL_ARGS_1(arg1)                     (SWIG_PERL_OBJECT_CALL arg1)
#define SWIG_PERL_DECL_ARGS_2(arg1, arg2)               (SWIG_PERL_OBJECT_DECL arg1, arg2)
#define SWIG_PERL_CALL_ARGS_2(arg1, arg2)               (SWIG_PERL_OBJECT_CALL arg1, arg2)

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* For backward compatibility only */
#define SWIG_POINTER_EXCEPTION  0

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_OWNER   SWIG_POINTER_OWN
#define SWIG_SHADOW  SWIG_OWNER << 1

#define SWIG_MAYBE_PERL_OBJECT SWIG_PERL_OBJECT_DECL

/* SWIG Perl macros */

/* Macro to call an XS function */
#ifdef PERL_OBJECT 
#  define SWIG_CALLXS(_name) _name(cv,pPerl) 
#else 
#  ifndef MULTIPLICITY 
#    define SWIG_CALLXS(_name) _name(cv) 
#  else 
#    define SWIG_CALLXS(_name) _name(PERL_GET_THX, cv) 
#  endif 
#endif 

/* Note: SwigMagicFuncHack is a typedef used to get the C++ compiler to just shut up already */

#ifdef PERL_OBJECT
#define MAGIC_PPERL  CPerlObj *pPerl = (CPerlObj *) this;
typedef int (CPerlObj::*SwigMagicFunc)(SV *, MAGIC *);

#ifdef __cplusplus
extern "C" {
#endif
typedef int (CPerlObj::*SwigMagicFuncHack)(SV *, MAGIC *);
#ifdef __cplusplus
}
#endif

#define SWIG_MAGIC(a,b) (SV *a, MAGIC *b)
#define SWIGCLASS_STATIC
#else
#define MAGIC_PPERL
#define SWIGCLASS_STATIC static SWIGUNUSED
#ifndef MULTIPLICITY
#define SWIG_MAGIC(a,b) (SV *a, MAGIC *b)
typedef int (*SwigMagicFunc)(SV *, MAGIC *);

#ifdef __cplusplus
extern "C" {
#endif
typedef int (*SwigMagicFuncHack)(SV *, MAGIC *);
#ifdef __cplusplus
}
#endif


#else
#define SWIG_MAGIC(a,b) (struct interpreter *interp, SV *a, MAGIC *b)
typedef int (*SwigMagicFunc)(struct interpreter *, SV *, MAGIC *);
#ifdef __cplusplus
extern "C" {
#endif
typedef int (*SwigMagicFuncHack)(struct interpreter *, SV *, MAGIC *);
#ifdef __cplusplus
}
#endif

#endif
#endif

/* Workaround for bug in perl 5.6.x croak and earlier */
#if (PERL_VERSION < 8)
#  ifdef PERL_OBJECT
#    define SWIG_croak_null() SWIG_Perl_croak_null(pPerl)
static void SWIG_Perl_croak_null(CPerlObj *pPerl)
#  else
static void SWIG_croak_null()
#  endif
{
  SV *err=ERRSV;
#  if (PERL_VERSION < 6)
  croak("%_", err);
#  else
  if (SvOK(err) && !SvROK(err)) croak("%_", err);
  croak(Nullch);
#  endif
}
#else
#  define SWIG_croak_null() croak(Nullch)
#endif


/* 
   Define how strict is the cast between strings and integers/doubles
   when overloading between these types occurs.
   
   The default is making it as strict as possible by using SWIG_AddCast
   when needed.
   
   You can use -DSWIG_PERL_NO_STRICT_STR2NUM at compilation time to
   disable the SWIG_AddCast, making the casting between string and
   numbers less strict.

   In the end, we try to solve the overloading between strings and
   numerical types in the more natural way, but if you can avoid it,
   well, avoid it using %rename, for example.
*/
#ifndef SWIG_PERL_NO_STRICT_STR2NUM
# ifndef SWIG_PERL_STRICT_STR2NUM
#  define SWIG_PERL_STRICT_STR2NUM
# endif
#endif
#ifdef SWIG_PERL_STRICT_STR2NUM
/* string takes precedence */
#define SWIG_Str2NumCast(x) SWIG_AddCast(x)  
#else
/* number takes precedence */
#define SWIG_Str2NumCast(x) x
#endif



#include <stdlib.h>

SWIGRUNTIME const char *
SWIG_Perl_TypeProxyName(const swig_type_info *type) {
  if (!type) return NULL;
  if (type->clientdata != NULL) {
    return (const char*) type->clientdata;
  } 
  else {
    return type->name;
  }
}

SWIGRUNTIME swig_cast_info *
SWIG_TypeProxyCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(( (!iter->type->clientdata && (strcmp((char*)iter->type->name, c) == 0)) 
			    || (iter->type->clientdata && (strcmp((char*)iter->type->clientdata, c) == 0))), ty);
}


/* Function for getting a pointer value */

SWIGRUNTIME int
SWIG_Perl_ConvertPtr(SWIG_MAYBE_PERL_OBJECT SV *sv, void **ptr, swig_type_info *_t, int flags) {
  swig_cast_info *tc;
  void *voidptr = (void *)0;
  SV *tsv = 0;
  /* If magical, apply more magic */
  if (SvGMAGICAL(sv))
    mg_get(sv);

  /* Check to see if this is an object */
  if (sv_isobject(sv)) {
    IV tmp = 0;
    tsv = (SV*) SvRV(sv);
    if ((SvTYPE(tsv) == SVt_PVHV)) {
      MAGIC *mg;
      if (SvMAGICAL(tsv)) {
        mg = mg_find(tsv,'P');
        if (mg) {
          sv = mg->mg_obj;
          if (sv_isobject(sv)) {
	    tsv = (SV*)SvRV(sv);
            tmp = SvIV(tsv);
          }
        }
      } else {
        return SWIG_ERROR;
      }
    } else {
      tmp = SvIV(tsv);
    }
    voidptr = INT2PTR(void *,tmp);
  } else if (! SvOK(sv)) {            /* Check for undef */
    *(ptr) = (void *) 0;
    return SWIG_OK;
  } else if (SvTYPE(sv) == SVt_RV) {  /* Check for NULL pointer */
    if (!SvROK(sv)) {
      *(ptr) = (void *) 0;
      return SWIG_OK;
    } else {
      return SWIG_ERROR;
    }
  } else {                            /* Don't know what it is */
    return SWIG_ERROR;
  }
  if (_t) {
    /* Now see if the types match */
    char *_c = HvNAME(SvSTASH(SvRV(sv)));
    tc = SWIG_TypeProxyCheck(_c,_t);
    if (!tc) {
      return SWIG_ERROR;
    }
    *ptr = SWIG_TypeCast(tc,voidptr);
  } else {
    *ptr = voidptr;
  }

  /* 
   *  DISOWN implementation: we need a perl guru to check this one.
   */
  if (tsv && (flags & SWIG_POINTER_DISOWN)) {
    /* 
     *  almost copy paste code from below SWIG_POINTER_OWN setting
     */
    SV *obj = sv;
    HV *stash = SvSTASH(SvRV(obj));
    GV *gv = *(GV**) hv_fetch(stash, "OWNER", 5, TRUE);
    if (isGV(gv)) {
      HV *hv = GvHVn(gv);
      /*
       * To set ownership (see below), a newSViv(1) entry is added. 
       * Hence, to remove ownership, we delete the entry.
       */
      if (hv_exists_ent(hv, obj, 0)) {
	hv_delete_ent(hv, obj, 0, 0);
      }
    }
  }
  return SWIG_OK;
}

SWIGRUNTIME void
SWIG_Perl_MakePtr(SWIG_MAYBE_PERL_OBJECT SV *sv, void *ptr, swig_type_info *t, int flags) {
  if (ptr && (flags & SWIG_SHADOW)) {
    SV *self;
    SV *obj=newSV(0);
    HV *hash=newHV();
    HV *stash;
    sv_setref_pv(obj, (char *) SWIG_Perl_TypeProxyName(t), ptr);
    stash=SvSTASH(SvRV(obj));
    if (flags & SWIG_POINTER_OWN) {
      HV *hv;
      GV *gv=*(GV**)hv_fetch(stash, "OWNER", 5, TRUE);
      if (!isGV(gv))
        gv_init(gv, stash, "OWNER", 5, FALSE);
      hv=GvHVn(gv);
      hv_store_ent(hv, obj, newSViv(1), 0);
    }
    sv_magic((SV *)hash, (SV *)obj, 'P', Nullch, 0);
    SvREFCNT_dec(obj);
    self=newRV_noinc((SV *)hash);
    sv_setsv(sv, self);
    SvREFCNT_dec((SV *)self);
    sv_bless(sv, stash);
  }
  else {
    sv_setref_pv(sv, (char *) SWIG_Perl_TypeProxyName(t), ptr);
  }
}

SWIGRUNTIMEINLINE SV *
SWIG_Perl_NewPointerObj(SWIG_MAYBE_PERL_OBJECT void *ptr, swig_type_info *t, int flags) {
  SV *result = sv_newmortal();
  SWIG_MakePtr(result, ptr, t, flags);
  return result;
}

SWIGRUNTIME void
SWIG_Perl_MakePackedObj(SWIG_MAYBE_PERL_OBJECT SV *sv, void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(SWIG_Perl_TypeProxyName(type))) > 1000) return;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,SWIG_Perl_TypeProxyName(type));
  sv_setpv(sv, result);
}

SWIGRUNTIME SV *
SWIG_Perl_NewPackedObj(SWIG_MAYBE_PERL_OBJECT void *ptr, int sz, swig_type_info *type) {
  SV *result = sv_newmortal();
  SWIG_Perl_MakePackedObj(result, ptr, sz, type);
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Perl_ConvertPacked(SWIG_MAYBE_PERL_OBJECT SV *obj, void *ptr, int sz, swig_type_info *ty) {
  swig_cast_info *tc;
  const char  *c = 0;

  if ((!obj) || (!SvOK(obj))) return SWIG_ERROR;
  c = SvPV(obj, PL_na);
  /* Pointer values must start with leading underscore */
  if (*c != '_') return SWIG_ERROR;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) return SWIG_ERROR;
  }
  return SWIG_OK;
}


/* Macros for low-level exception handling */
#define SWIG_croak(x)    { SWIG_Error(SWIG_RuntimeError, x); SWIG_fail; }


typedef XS(SwigPerlWrapper);
typedef SwigPerlWrapper *SwigPerlWrapperPtr;

/* Structure for command table */
typedef struct {
  const char         *name;
  SwigPerlWrapperPtr  wrapper;
} swig_command_info;

/* Information for constant table */

#define SWIG_INT     1
#define SWIG_FLOAT   2
#define SWIG_STRING  3
#define SWIG_POINTER 4
#define SWIG_BINARY  5

/* Constant information structure */
typedef struct swig_constant_info {
    int              type;
    const char      *name;
    long             lvalue;
    double           dvalue;
    void            *pvalue;
    swig_type_info **ptype;
} swig_constant_info;


/* Structure for variable table */
typedef struct {
  const char   *name;
  SwigMagicFunc   set;
  SwigMagicFunc   get;
  swig_type_info  **type;
} swig_variable_info;

/* Magic variable code */
#ifndef PERL_OBJECT
#define swig_create_magic(s,a,b,c) _swig_create_magic(s,a,b,c)
  #ifndef MULTIPLICITY
     SWIGRUNTIME void _swig_create_magic(SV *sv, char *name, int (*set)(SV *, MAGIC *), int (*get)(SV *,MAGIC *)) 
  #else
     SWIGRUNTIME void _swig_create_magic(SV *sv, char *name, int (*set)(struct interpreter*, SV *, MAGIC *), int (*get)(struct interpreter*, SV *,MAGIC *)) 
  #endif
#else
#  define swig_create_magic(s,a,b,c) _swig_create_magic(pPerl,s,a,b,c)
SWIGRUNTIME void _swig_create_magic(CPerlObj *pPerl, SV *sv, const char *name, int (CPerlObj::*set)(SV *, MAGIC *), int (CPerlObj::*get)(SV *, MAGIC *)) 
#endif
{
  MAGIC *mg;
  sv_magic(sv,sv,'U',(char *) name,strlen(name));
  mg = mg_find(sv,'U');
  mg->mg_virtual = (MGVTBL *) malloc(sizeof(MGVTBL));
  mg->mg_virtual->svt_get = (SwigMagicFuncHack) get;
  mg->mg_virtual->svt_set = (SwigMagicFuncHack) set;
  mg->mg_virtual->svt_len = 0;
  mg->mg_virtual->svt_clear = 0;
  mg->mg_virtual->svt_free = 0;
}


SWIGRUNTIME swig_module_info *
SWIG_Perl_GetModule(void) {
  static void *type_pointer = (void *)0;
  SV *pointer;

  /* first check if pointer already created */
  if (!type_pointer) {
    pointer = get_sv("swig_runtime_data::type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, FALSE);
    if (pointer && SvOK(pointer)) {
      type_pointer = INT2PTR(swig_type_info **, SvIV(pointer));
    }
  }

  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Perl_SetModule(swig_module_info *module) {
  SV *pointer;

  /* create a new pointer */
  pointer = get_sv("swig_runtime_data::type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, TRUE);
  sv_setiv(pointer, PTR2IV(module));
}

#ifdef __cplusplus
}
#endif

/* Workaround perl5 global namespace pollution. Note that undefining library
 * functions like fopen will not solve the problem on all platforms as fopen
 * might be a macro on Windows but not necessarily on other operating systems. */
#ifdef do_open
  #undef do_open
#endif
#ifdef do_close
  #undef do_close
#endif
#ifdef scalar
  #undef scalar
#endif
#ifdef list
  #undef list
#endif
#ifdef apply
  #undef apply
#endif
#ifdef convert
  #undef convert
#endif
#ifdef Error
  #undef Error
#endif
#ifdef form
  #undef form
#endif
#ifdef vform
  #undef vform
#endif
#ifdef LABEL
  #undef LABEL
#endif
#ifdef METHOD
  #undef METHOD
#endif
#ifdef Move
  #undef Move
#endif
#ifdef yylex
  #undef yylex
#endif
#ifdef yyparse
  #undef yyparse
#endif
#ifdef yyerror
  #undef yyerror
#endif
#ifdef invert
  #undef invert
#endif
#ifdef ref
  #undef ref
#endif
#ifdef read
  #undef read
#endif
#ifdef write
  #undef write
#endif
#ifdef eof
  #undef eof
#endif
#ifdef bool
  #undef bool
#endif
#ifdef close
  #undef close
#endif
#ifdef rewind
  #undef rewind
#endif
#ifdef free
  #undef free
#endif
#ifdef malloc
  #undef malloc
#endif
#ifdef calloc
  #undef calloc
#endif
#ifdef Stat
  #undef Stat
#endif
#ifdef check
  #undef check
#endif
#ifdef seekdir
  #undef seekdir
#endif
#ifdef open
  #undef open
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg);; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_OpenBabel__CharPtrLess swig_types[0]
#define SWIGTYPE_p_OpenBabel__DoubleType swig_types[1]
#define SWIGTYPE_p_OpenBabel__FMapType__iterator swig_types[2]
#define SWIGTYPE_p_OpenBabel__FastSearch swig_types[3]
#define SWIGTYPE_p_OpenBabel__FastSearchIndexer swig_types[4]
#define SWIGTYPE_p_OpenBabel__FptIndex swig_types[5]
#define SWIGTYPE_p_OpenBabel__FptIndexHeader swig_types[6]
#define SWIGTYPE_p_OpenBabel__OBAngle swig_types[7]
#define SWIGTYPE_p_OpenBabel__OBAngleData swig_types[8]
#define SWIGTYPE_p_OpenBabel__OBAromaticTyper swig_types[9]
#define SWIGTYPE_p_OpenBabel__OBAtom swig_types[10]
#define SWIGTYPE_p_OpenBabel__OBAtomAtomIter swig_types[11]
#define SWIGTYPE_p_OpenBabel__OBAtomBondIter swig_types[12]
#define SWIGTYPE_p_OpenBabel__OBAtomTyper swig_types[13]
#define SWIGTYPE_p_OpenBabel__OBBase swig_types[14]
#define SWIGTYPE_p_OpenBabel__OBBitVec swig_types[15]
#define SWIGTYPE_p_OpenBabel__OBBond swig_types[16]
#define SWIGTYPE_p_OpenBabel__OBChainsParser swig_types[17]
#define SWIGTYPE_p_OpenBabel__OBChiralData swig_types[18]
#define SWIGTYPE_p_OpenBabel__OBCommentData swig_types[19]
#define SWIGTYPE_p_OpenBabel__OBConformerData swig_types[20]
#define SWIGTYPE_p_OpenBabel__OBConversion swig_types[21]
#define SWIGTYPE_p_OpenBabel__OBElement swig_types[22]
#define SWIGTYPE_p_OpenBabel__OBElementTable swig_types[23]
#define SWIGTYPE_p_OpenBabel__OBError swig_types[24]
#define SWIGTYPE_p_OpenBabel__OBExternalBond swig_types[25]
#define SWIGTYPE_p_OpenBabel__OBExternalBondData swig_types[26]
#define SWIGTYPE_p_OpenBabel__OBFingerprint swig_types[27]
#define SWIGTYPE_p_OpenBabel__OBFormat swig_types[28]
#define SWIGTYPE_p_OpenBabel__OBGenericData swig_types[29]
#define SWIGTYPE_p_OpenBabel__OBGlobalDataBase swig_types[30]
#define SWIGTYPE_p_OpenBabel__OBInternalCoord swig_types[31]
#define SWIGTYPE_p_OpenBabel__OBIsotopeTable swig_types[32]
#define SWIGTYPE_p_OpenBabel__OBMessageHandler swig_types[33]
#define SWIGTYPE_p_OpenBabel__OBMol swig_types[34]
#define SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter swig_types[35]
#define SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter swig_types[36]
#define SWIGTYPE_p_OpenBabel__OBMolAtomIter swig_types[37]
#define SWIGTYPE_p_OpenBabel__OBMolBondIter swig_types[38]
#define SWIGTYPE_p_OpenBabel__OBPairData swig_types[39]
#define SWIGTYPE_p_OpenBabel__OBPairTemplateTdouble_t swig_types[40]
#define SWIGTYPE_p_OpenBabel__OBPairTemplateTint_t swig_types[41]
#define SWIGTYPE_p_OpenBabel__OBRTree swig_types[42]
#define SWIGTYPE_p_OpenBabel__OBRandom swig_types[43]
#define SWIGTYPE_p_OpenBabel__OBResidue swig_types[44]
#define SWIGTYPE_p_OpenBabel__OBResidueAtomIter swig_types[45]
#define SWIGTYPE_p_OpenBabel__OBResidueData swig_types[46]
#define SWIGTYPE_p_OpenBabel__OBResidueIter swig_types[47]
#define SWIGTYPE_p_OpenBabel__OBRing swig_types[48]
#define SWIGTYPE_p_OpenBabel__OBRingData swig_types[49]
#define SWIGTYPE_p_OpenBabel__OBRingSearch swig_types[50]
#define SWIGTYPE_p_OpenBabel__OBSSMatch swig_types[51]
#define SWIGTYPE_p_OpenBabel__OBSerialNums swig_types[52]
#define SWIGTYPE_p_OpenBabel__OBSetData swig_types[53]
#define SWIGTYPE_p_OpenBabel__OBSmartsPattern swig_types[54]
#define SWIGTYPE_p_OpenBabel__OBSqrtTbl swig_types[55]
#define SWIGTYPE_p_OpenBabel__OBStopwatch swig_types[56]
#define SWIGTYPE_p_OpenBabel__OBSymmetryData swig_types[57]
#define SWIGTYPE_p_OpenBabel__OBTorsion swig_types[58]
#define SWIGTYPE_p_OpenBabel__OBTorsionData swig_types[59]
#define SWIGTYPE_p_OpenBabel__OBTypeTable swig_types[60]
#define SWIGTYPE_p_OpenBabel__OBUnitCell swig_types[61]
#define SWIGTYPE_p_OpenBabel__OBVirtualBond swig_types[62]
#define SWIGTYPE_p_OpenBabel__Pattern swig_types[63]
#define SWIGTYPE_p_OpenBabel__Template swig_types[64]
#define SWIGTYPE_p_OpenBabel__matrix3x3 swig_types[65]
#define SWIGTYPE_p_OpenBabel__obLogBuf swig_types[66]
#define SWIGTYPE_p_OpenBabel__quadTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t swig_types[67]
#define SWIGTYPE_p_OpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t swig_types[68]
#define SWIGTYPE_p_OpenBabel__vector3 swig_types[69]
#define SWIGTYPE_p_a_3__double swig_types[70]
#define SWIGTYPE_p_a_4__char swig_types[71]
#define SWIGTYPE_p_char swig_types[72]
#define SWIGTYPE_p_double swig_types[73]
#define SWIGTYPE_p_int swig_types[74]
#define SWIGTYPE_p_p_OpenBabel__OBFingerprint swig_types[75]
#define SWIGTYPE_p_p_OpenBabel__OBFormat swig_types[76]
#define SWIGTYPE_p_p_double swig_types[77]
#define SWIGTYPE_p_p_int swig_types[78]
#define SWIGTYPE_p_std__dequeTint_t swig_types[79]
#define SWIGTYPE_p_std__ifstream swig_types[80]
#define SWIGTYPE_p_std__istream swig_types[81]
#define SWIGTYPE_p_std__mapTchar_const_p_OpenBabel__OBFormat_p_OpenBabel__CharPtrLess_t swig_types[82]
#define SWIGTYPE_p_std__mapTint_OpenBabel__OBAtom_p_t swig_types[83]
#define SWIGTYPE_p_std__mapTstd__string_std__string_t swig_types[84]
#define SWIGTYPE_p_std__multimapTdouble_unsigned_int_t swig_types[85]
#define SWIGTYPE_p_std__ostream swig_types[86]
#define SWIGTYPE_p_std__out_of_range swig_types[87]
#define SWIGTYPE_p_std__pairTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t swig_types[88]
#define SWIGTYPE_p_std__streampos swig_types[89]
#define SWIGTYPE_p_std__string swig_types[90]
#define SWIGTYPE_p_std__type_info swig_types[91]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t swig_types[92]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator swig_types[93]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t swig_types[94]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator swig_types[95]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t swig_types[96]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBExternalBond_t swig_types[97]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t swig_types[98]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator swig_types[99]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBInternalCoord_p_t swig_types[100]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBInternalCoord_p_t__iterator swig_types[101]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t swig_types[102]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_p_t__iterator swig_types[103]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t swig_types[104]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBRing_p_t swig_types[105]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBRing_p_t__iterator swig_types[106]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t swig_types[107]
#define SWIGTYPE_p_std__vectorTOpenBabel__OBTorsion_t swig_types[108]
#define SWIGTYPE_p_std__vectorTOpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_double_t_t swig_types[109]
#define SWIGTYPE_p_std__vectorTOpenBabel__vector3_t swig_types[110]
#define SWIGTYPE_p_std__vectorTdouble_p_t swig_types[111]
#define SWIGTYPE_p_std__vectorTdouble_p_t__iterator swig_types[112]
#define SWIGTYPE_p_std__vectorTdouble_t swig_types[113]
#define SWIGTYPE_p_std__vectorTint_t swig_types[114]
#define SWIGTYPE_p_std__vectorTstd__pairTint_int_t_t swig_types[115]
#define SWIGTYPE_p_std__vectorTstd__pairTstd__string_std__string_t_t swig_types[116]
#define SWIGTYPE_p_std__vectorTstd__string_t swig_types[117]
#define SWIGTYPE_p_std__vectorTstd__vectorTOpenBabel__vector3_t_t swig_types[118]
#define SWIGTYPE_p_std__vectorTstd__vectorTint_t_t swig_types[119]
#define SWIGTYPE_p_std__vectorTstd__vectorTint_t_t__iterator swig_types[120]
#define SWIGTYPE_p_std__vectorTstd__vectorTunsigned_int_t_t swig_types[121]
#define SWIGTYPE_p_std__vectorTunsigned_int_t swig_types[122]
#define SWIGTYPE_p_std__vectorTunsigned_short_t swig_types[123]
#define SWIGTYPE_p_unsigned_int swig_types[124]
static swig_type_info *swig_types[126];
static swig_module_info swig_module = {swig_types, 125, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    boot_Chemistry__OpenBabel

#define SWIG_name   "Chemistry::OpenBabelc::boot_Chemistry__OpenBabel"
#define SWIG_prefix "Chemistry::OpenBabelc::"

#define SWIGVERSION 0x010330 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


#ifdef __cplusplus
extern "C"
#endif
#ifndef PERL_OBJECT
#ifndef MULTIPLICITY
SWIGEXPORT void SWIG_init (CV* cv);
#else
SWIGEXPORT void SWIG_init (pTHXo_ CV* cv);
#endif
#else
SWIGEXPORT void SWIG_init (CV *cv, CPerlObj *);
#endif


// used to set import/export for Cygwin DLLs
#ifdef WIN32
#define USING_OBDLL
#endif


#include "obutil.h"
#include "rand.h"
#include "math/vector3.h"
#include "math/matrix3x3.h"
#include "generic.h"

#include "base.h"
#include "mol.h"
#include "atom.h"
#include "bond.h"
#include "residue.h"
#include "internalcoord.h"

#include "ring.h"
#include "obconversion.h"
#include "oberror.h"

#include "fingerprint.h"

#include "data.h"
#include "parsmart.h"


#include <stdexcept>


#include <string>

double SwigSvToNumber(SV* sv) {
    return SvIOK(sv) ? double(SvIVX(sv)) : SvNVX(sv);
}
std::string SwigSvToString(SV* sv) {
    STRLEN len;
    char *ptr = SvPV(sv, len);
    return std::string(ptr, len);
}
void SwigSvFromString(SV* sv, const std::string& s) {
    sv_setpvn(sv,s.data(),s.size());
}


#include <list>
#include <algorithm>
#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>


#include <vector>
#include <algorithm>
#include <stdexcept>


#include <string>


#include <limits.h>
#ifndef LLONG_MIN
# define LLONG_MIN	LONG_LONG_MIN
#endif
#ifndef LLONG_MAX
# define LLONG_MAX	LONG_LONG_MAX
#endif
#ifndef ULLONG_MAX
# define ULLONG_MAX	ULONG_LONG_MAX
#endif


SWIGINTERN int
SWIG_AsVal_double SWIG_PERL_DECL_ARGS_2(SV *obj, double *val)
{
  if (SvNIOK(obj)) {
    if (val) *val = SvNV(obj);
    return SWIG_OK;
  } else if (SvIOK(obj)) {
    if (val) *val = (double) SvIV(obj);
    return SWIG_AddCast(SWIG_OK);
  } else {
    const char *nptr = SvPV(obj, PL_na);
    if (nptr) {
      char *endptr;
      double v = strtod(nptr, &endptr);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
  }
  return SWIG_TypeError;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long SWIG_PERL_DECL_ARGS_2(SV *obj, unsigned long *val) 
{
  if (SvUOK(obj)) {
    if (val) *val = SvUV(obj);
    return SWIG_OK;
  } else  if (SvIOK(obj)) {
    long v = SvIV(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else {
    int dispatch = 0;
    const char *nptr = SvPV(obj, PL_na);
    if (nptr) {
      char *endptr;
      unsigned long v = strtoul(nptr, &endptr,0);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int SWIG_PERL_DECL_ARGS_2(SV * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_long SWIG_PERL_DECL_ARGS_2(SV *obj, long* val)
{
  if (SvIOK(obj)) {
    if (val) *val = SvIV(obj);
    return SWIG_OK;
  } else {
    int dispatch = 0;
    const char *nptr = SvPV(obj, PL_na);
    if (nptr) {
      char *endptr;
      long v = strtol(nptr, &endptr,0);
      if (errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_Str2NumCast(SWIG_OK);
	}
      }
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int SWIG_PERL_DECL_ARGS_2(SV * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_long  SWIG_PERL_DECL_ARGS_1(unsigned long value)
{    
  SV *obj = sv_newmortal();
  sv_setuv(obj, (UV) value);
  return obj;
}


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_int  SWIG_PERL_DECL_ARGS_1(unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(value);
}


SWIGINTERNINLINE SV *
SWIG_From_bool  SWIG_PERL_DECL_ARGS_1(bool value)
{    
  SV *obj = sv_newmortal();
  if (value) {
    sv_setsv(obj, &PL_sv_yes);
  } else {
    sv_setsv(obj, &PL_sv_no); 
  }
  return obj;
}

SWIGINTERN int std_vector_Sl_int_Sg__pop(std::vector<int > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                int x = self->back();
                self->pop_back();
                return x;
            }

SWIGINTERNINLINE SV *
SWIG_From_long  SWIG_PERL_DECL_ARGS_1(long value)
{    
  SV *obj = sv_newmortal();
  sv_setiv(obj, (IV) value);
  return obj;
}


SWIGINTERNINLINE SV *
SWIG_From_int  SWIG_PERL_DECL_ARGS_1(int value)
{    
  return SWIG_From_long  SWIG_PERL_CALL_ARGS_1(value);
}

SWIGINTERN int std_vector_Sl_int_Sg__get(std::vector<int > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_int_Sg__set(std::vector<int > *self,int i,int x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector<int > std_vector_Sl_std_vector_Sl_int_Sg__Sg__pop(std::vector<std::vector<int > > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                std::vector<int > x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN std::vector<int > &std_vector_Sl_std_vector_Sl_int_Sg__Sg__get(std::vector<std::vector<int > > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_std_vector_Sl_int_Sg__Sg__set(std::vector<std::vector<int > > *self,int i,std::vector<int > const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN double std_vector_Sl_double_Sg__pop(std::vector<double > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                double x = self->back();
                self->pop_back();
                return x;
            }

SWIGINTERNINLINE SV *
SWIG_From_double  SWIG_PERL_DECL_ARGS_1(double value)
{    
  SV *obj = sv_newmortal();
  sv_setnv(obj, value);
  return obj;
}

SWIGINTERN double std_vector_Sl_double_Sg__get(std::vector<double > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_double_Sg__set(std::vector<double > *self,int i,double x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN OpenBabel::vector3 std_vector_Sl_OpenBabel_vector3_Sg__pop(std::vector<OpenBabel::vector3 > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                OpenBabel::vector3 x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN OpenBabel::vector3 &std_vector_Sl_OpenBabel_vector3_Sg__get(std::vector<OpenBabel::vector3 > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_OpenBabel_vector3_Sg__set(std::vector<OpenBabel::vector3 > *self,int i,OpenBabel::vector3 const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN OpenBabel::OBMol std_vector_Sl_OpenBabel_OBMol_Sg__pop(std::vector<OpenBabel::OBMol > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                OpenBabel::OBMol x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN OpenBabel::OBMol &std_vector_Sl_OpenBabel_OBMol_Sg__get(std::vector<OpenBabel::OBMol > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_OpenBabel_OBMol_Sg__set(std::vector<OpenBabel::OBMol > *self,int i,OpenBabel::OBMol const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN OpenBabel::OBBond std_vector_Sl_OpenBabel_OBBond_Sg__pop(std::vector<OpenBabel::OBBond > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                OpenBabel::OBBond x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN OpenBabel::OBBond &std_vector_Sl_OpenBabel_OBBond_Sg__get(std::vector<OpenBabel::OBBond > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_OpenBabel_OBBond_Sg__set(std::vector<OpenBabel::OBBond > *self,int i,OpenBabel::OBBond const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN OpenBabel::OBResidue std_vector_Sl_OpenBabel_OBResidue_Sg__pop(std::vector<OpenBabel::OBResidue > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                OpenBabel::OBResidue x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN OpenBabel::OBResidue &std_vector_Sl_OpenBabel_OBResidue_Sg__get(std::vector<OpenBabel::OBResidue > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_OpenBabel_OBResidue_Sg__set(std::vector<OpenBabel::OBResidue > *self,int i,OpenBabel::OBResidue const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN OpenBabel::OBRing std_vector_Sl_OpenBabel_OBRing_Sg__pop(std::vector<OpenBabel::OBRing > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                OpenBabel::OBRing x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN OpenBabel::OBRing &std_vector_Sl_OpenBabel_OBRing_Sg__get(std::vector<OpenBabel::OBRing > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_OpenBabel_OBRing_Sg__set(std::vector<OpenBabel::OBRing > *self,int i,OpenBabel::OBRing const &x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN OpenBabel::OBGenericData *std_vector_Sl_OpenBabel_OBGenericData_Sm__Sg__pop(std::vector<OpenBabel::OBGenericData * > *self){
                if (self->size() == 0)
                    throw std::out_of_range("pop from empty vector");
                OpenBabel::OBGenericData *x = self->back();
                self->pop_back();
                return x;
            }
SWIGINTERN OpenBabel::OBGenericData *std_vector_Sl_OpenBabel_OBGenericData_Sm__Sg__get(std::vector<OpenBabel::OBGenericData * > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_OpenBabel_OBGenericData_Sm__Sg__set(std::vector<OpenBabel::OBGenericData * > *self,int i,OpenBabel::OBGenericData *x){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("vector index out of range");
            }

SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(SV *obj, char** cptr, size_t* psize, int *alloc)
{
  if (SvPOK(obj)) {
    STRLEN len = 0;
    char *cstr = SvPV(obj, len); 
    size_t size = len + 1;
    if (cptr)  {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy((new char[size]), cstr, sizeof(char)*(size)));
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      }
    }
    if (psize) *psize = size;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      char* vptr = 0; 
      if (SWIG_ConvertPtr(obj, (void**)&vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = vptr;
	if (psize) *psize = vptr ? (strlen(vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





SWIGINTERN int
SWIG_AsPtr_std_string SWIG_PERL_DECL_ARGS_2(SV * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE SV *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  SV *obj = sv_newmortal();
  if (carray) {
    if (size && (carray[size - 1] == 0)) {
      sv_setpv(obj, carray);
    } else {
      char *tmp = (new char[size + 1]);
      memcpy(tmp, carray, size);
      tmp[size] = 0;
      sv_setpv(obj, tmp);
      delete[] tmp;
    }
  } else {
    sv_setsv(obj, &PL_sv_undef);
  }
  return obj;
}


SWIGINTERNINLINE SV * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERNINLINE SV *
SWIG_From_std_string  SWIG_PERL_DECL_ARGS_1(const std::string& s)
{
  if (s.size()) {
    return SWIG_FromCharPtrAndSize(s.data(), s.size());
  } else {
    return SWIG_FromCharPtrAndSize(s.c_str(), 0);
  }
}


SWIGINTERN int
SWIG_AsVal_bool SWIG_PERL_DECL_ARGS_2(SV *obj, bool* val)
{
  if (obj == &PL_sv_yes) {
    if (val) *val = true;
    return SWIG_OK;
  } else if (obj == &PL_sv_no) { 
    if (val) *val = false;
    return SWIG_OK;
  } else {
    if (val) *val = SvTRUE(obj) ? true: false;
    return SWIG_AddCast(SWIG_OK);    
  }
  return SWIG_TypeError;
}


SWIGINTERNINLINE SV *
SWIG_From_size_t  SWIG_PERL_DECL_ARGS_1(size_t value)
{    
  return SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned long >(value));
}


SWIGINTERN int
SWIG_AsCharArray(SV * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    if ((csize == size + 1) && cptr && !(cptr[csize-1])) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char SWIG_PERL_DECL_ARGS_2(SV * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}


SWIGINTERNINLINE SV *
SWIG_From_char  SWIG_PERL_DECL_ARGS_1(char c) 
{ 
  return SWIG_FromCharPtrAndSize(&c,1);
}


SWIGINTERN int
SWIG_AsVal_short SWIG_PERL_DECL_ARGS_2(SV * obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE SV *
SWIG_From_unsigned_SS_short  SWIG_PERL_DECL_ARGS_1(unsigned short value)
{    
  return SWIG_From_unsigned_SS_long  SWIG_PERL_CALL_ARGS_1(value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short SWIG_PERL_DECL_ARGS_2(SV * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_PERL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}

#ifdef PERL_OBJECT
#define MAGIC_CLASS _wrap_Chemistry::OpenBabel_var::
class _wrap_Chemistry::OpenBabel_var : public CPerlObj {
public:
#else
#define MAGIC_CLASS
#endif
SWIGCLASS_STATIC int swig_magic_readonly(pTHX_ SV *SWIGUNUSEDPARM(sv), MAGIC *SWIGUNUSEDPARM(mg)) {
    MAGIC_PPERL
    croak("Value is read-only.");
    return 0;
}
SWIGCLASS_STATIC int _wrap_VZero_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::VZero));
  return 1;
}


SWIGCLASS_STATIC int _wrap_VX_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::VX));
  return 1;
}


SWIGCLASS_STATIC int _wrap_VY_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::VY));
  return 1;
}


SWIGCLASS_STATIC int _wrap_VZ_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::VZ));
  return 1;
}


SWIGCLASS_STATIC int _wrap_UndefinedData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::UndefinedData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_PairData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::PairData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_EnergyData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::EnergyData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CommentData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CommentData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ConformerData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::ConformerData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ExternalBondData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::ExternalBondData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_RotamerList_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::RotamerList)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_VirtualBondData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::VirtualBondData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_RingData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::RingData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_TorsionData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::TorsionData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_AngleData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::AngleData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SerialNums_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::SerialNums)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_UnitCell_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::UnitCell)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SpinData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::SpinData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ChargeData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::ChargeData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SymmetryData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::SymmetryData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ChiralData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::ChiralData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_OccupationData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::OccupationData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_DensityData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::DensityData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ElectronicData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::ElectronicData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_VibrationData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::VibrationData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_RotationData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::RotationData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_NuclearData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::NuclearData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SetData_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::SetData)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData0_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData0)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData1_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData1)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData2_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData2)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData3_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData3)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData4_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData4)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData5_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData5)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData6_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData6)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData7_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData7)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData8_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData8)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData9_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData9)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData10_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData10)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData11_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData11)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData12_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData12)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData13_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData13)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData14_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData14)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CustomData15_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBGenericDataType::CustomData15)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_obErrorLog_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(sv, &argp, SWIGTYPE_p_OpenBabel__OBMessageHandler,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::obErrorLog""' of type '""OpenBabel::OBMessageHandler""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::obErrorLog""' of type '""OpenBabel::OBMessageHandler""'");
    } else {
      OpenBabel::obErrorLog = *(reinterpret_cast< OpenBabel::OBMessageHandler * >(argp));
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_obErrorLog_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::obErrorLog));
  return 1;
}


SWIGCLASS_STATIC int _wrap_ACIDIC_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::ACIDIC)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ACYCLIC_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::ACYCLIC)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ALIPHATIC_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::ALIPHATIC)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_AROMATIC_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::AROMATIC)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_BASIC_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::BASIC)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_BURIED_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::BURIED)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CHARGED_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::CHARGED)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CYCLIC_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::CYCLIC)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_HYDROPHOBIC_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::HYDROPHOBIC)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_LARGE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::LARGE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_MEDIUM_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::MEDIUM)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_NEGATIVE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::NEGATIVE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_NEUTRAL_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::NEUTRAL)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_POLAR_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::POLAR)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_POSITIVE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::POSITIVE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SMALL_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::SMALL)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SURFACE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBAminoAcidProperty::SURFACE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ALPHA_CARBON_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::ALPHA_CARBON)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_AMINO_BACKBONE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::AMINO_BACKBONE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_BACKBONE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::BACKBONE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CYSTEINE_SULPHUR_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::CYSTEINE_SULPHUR)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_LIGAND_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::LIGAND)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_NUCLEIC_BACKBONE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::NUCLEIC_BACKBONE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SHAPELY_BACKBONE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::SHAPELY_BACKBONE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SHAPELY_SPECIAL_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::SHAPELY_SPECIAL)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SIDECHAIN_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::SIDECHAIN)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SUGAR_PHOSPHATE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueAtomProperty::SUGAR_PHOSPHATE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ALA_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::ALA)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_GLY_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::GLY)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_LEU_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::LEU)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SER_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::SER)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_VAL_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::VAL)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_LYS_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::LYS)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ASP_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::ASP)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ILE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::ILE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ASN_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::ASN)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_GLU_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::GLU)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_PRO_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::PRO)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ARG_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::ARG)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_PHE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::PHE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_GLN_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::GLN)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_TYR_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::TYR)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_HIS_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::HIS)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_CYS_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::CYS)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_MET_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::MET)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_TRP_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::TRP)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ASX_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::ASX)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_GLX_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::GLX)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_PCA_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::PCA)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_HYP_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::HYP)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_A_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::A)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_C_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::C)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_G_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::G)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_T_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::T)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_U_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::U)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_UPLUS_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::UPLUS)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_I_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::I)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap__1MA_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::_1MA)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap__5MC_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::_5MC)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_OMC_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::OMC)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap__1MG_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::_1MG)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap__2MG_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::_2MG)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_M2G_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::M2G)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap__7MG_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::_7MG)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_OMG_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::OMG)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_YG_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::YG)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_H2U_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::H2U)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap__5MU_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::_5MU)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_PSU_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::PSU)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_UNK_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::UNK)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ACE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::ACE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_FOR_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::FOR)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_HOH_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::HOH)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_DOD_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::DOD)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SO4_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::SO4)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_PO4_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::PO4)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_NAD_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::NAD)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_COA_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::COA)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_NAP_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::NAP)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_NDP_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueIndex::NDP)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_AMINO_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::AMINO)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_AMINO_NUCLEO_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::AMINO_NUCLEO)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_COENZYME_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::COENZYME)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ION_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::ION)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_NUCLEO_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::NUCLEO)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_PROTEIN_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::PROTEIN)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_PURINE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::PURINE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_PYRIMIDINE_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::PYRIMIDINE)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_SOLVENT_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::SOLVENT)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_WATER_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::OBResidueProperty::WATER)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_Residue_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    char (*inp)[4] = 0;
    int res = SWIG_ConvertPtr(sv, SWIG_as_voidptrptr(&inp), SWIGTYPE_p_a_4__char,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::Residue""' of type '""char [100][4]""'");
    } else if (inp) {
      size_t ii = 0;
      for (; ii < (size_t)100; ++ii) {
        if (inp[ii]) {
          size_t jj = 0;
          for (; jj < (size_t)4; ++jj) OpenBabel::Residue[ii][jj] = inp[ii][jj];
        } else {
          SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::Residue""' of type '""char [100][4]""'");
        }
      }
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::Residue""' of type '""char [100][4]""'");
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_Residue_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv),PTR2IV(OpenBabel::Residue));
  return 1;
}


SWIGCLASS_STATIC int _wrap_ElemDesc_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    char (*inp)[4] = 0;
    int res = SWIG_ConvertPtr(sv, SWIG_as_voidptrptr(&inp), SWIGTYPE_p_a_4__char,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::ElemDesc""' of type '""char [1024][4]""'");
    } else if (inp) {
      size_t ii = 0;
      for (; ii < (size_t)1024; ++ii) {
        if (inp[ii]) {
          size_t jj = 0;
          for (; jj < (size_t)4; ++jj) OpenBabel::ElemDesc[ii][jj] = inp[ii][jj];
        } else {
          SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::ElemDesc""' of type '""char [1024][4]""'");
        }
      }
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::ElemDesc""' of type '""char [1024][4]""'");
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_ElemDesc_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv),PTR2IV(OpenBabel::ElemDesc));
  return 1;
}


SWIGCLASS_STATIC int _wrap_ResNo_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    unsigned int val;
    int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(sv, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::ResNo""' of type '""unsigned int""'");
    }
    OpenBabel::ResNo = static_cast< unsigned int >(val);
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_ResNo_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::ResNo)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_ElemNo_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    unsigned int val;
    int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(sv, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::ElemNo""' of type '""unsigned int""'");
    }
    OpenBabel::ElemNo = static_cast< unsigned int >(val);
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_ElemNo_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setsv(sv,SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(OpenBabel::ElemNo)))  ;
  return 1;
}


SWIGCLASS_STATIC int _wrap_etab_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(sv, &argp, SWIGTYPE_p_OpenBabel__OBElementTable,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::etab""' of type '""OpenBabel::OBElementTable""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::etab""' of type '""OpenBabel::OBElementTable""'");
    } else {
      OpenBabel::etab = *(reinterpret_cast< OpenBabel::OBElementTable * >(argp));
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_etab_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::etab));
  return 1;
}


SWIGCLASS_STATIC int _wrap_ttab_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(sv, &argp, SWIGTYPE_p_OpenBabel__OBTypeTable,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::ttab""' of type '""OpenBabel::OBTypeTable""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::ttab""' of type '""OpenBabel::OBTypeTable""'");
    } else {
      OpenBabel::ttab = *(reinterpret_cast< OpenBabel::OBTypeTable * >(argp));
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_ttab_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::ttab));
  return 1;
}


SWIGCLASS_STATIC int _wrap_isotab_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(sv, &argp, SWIGTYPE_p_OpenBabel__OBIsotopeTable,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::isotab""' of type '""OpenBabel::OBIsotopeTable""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::isotab""' of type '""OpenBabel::OBIsotopeTable""'");
    } else {
      OpenBabel::isotab = *(reinterpret_cast< OpenBabel::OBIsotopeTable * >(argp));
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_isotab_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::isotab));
  return 1;
}


SWIGCLASS_STATIC int _wrap_aromtyper_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(sv, &argp, SWIGTYPE_p_OpenBabel__OBAromaticTyper,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::aromtyper""' of type '""OpenBabel::OBAromaticTyper""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::aromtyper""' of type '""OpenBabel::OBAromaticTyper""'");
    } else {
      OpenBabel::aromtyper = *(reinterpret_cast< OpenBabel::OBAromaticTyper * >(argp));
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_aromtyper_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::aromtyper));
  return 1;
}


SWIGCLASS_STATIC int _wrap_atomtyper_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(sv, &argp, SWIGTYPE_p_OpenBabel__OBAtomTyper,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::atomtyper""' of type '""OpenBabel::OBAtomTyper""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::atomtyper""' of type '""OpenBabel::OBAtomTyper""'");
    } else {
      OpenBabel::atomtyper = *(reinterpret_cast< OpenBabel::OBAtomTyper * >(argp));
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_atomtyper_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::atomtyper));
  return 1;
}


SWIGCLASS_STATIC int _wrap_chainsparser_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(sv, &argp, SWIGTYPE_p_OpenBabel__OBChainsParser,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::chainsparser""' of type '""OpenBabel::OBChainsParser""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::chainsparser""' of type '""OpenBabel::OBChainsParser""'");
    } else {
      OpenBabel::chainsparser = *(reinterpret_cast< OpenBabel::OBChainsParser * >(argp));
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_chainsparser_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::chainsparser));
  return 1;
}


SWIGCLASS_STATIC int _wrap_resdat_set(pTHX_ SV* sv, MAGIC * SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(sv, &argp, SWIGTYPE_p_OpenBabel__OBResidueData,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""OpenBabel::resdat""' of type '""OpenBabel::OBResidueData""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""OpenBabel::resdat""' of type '""OpenBabel::OBResidueData""'");
    } else {
      OpenBabel::resdat = *(reinterpret_cast< OpenBabel::OBResidueData * >(argp));
    }
  }
fail:
  return 1;
}


SWIGCLASS_STATIC int _wrap_resdat_get(pTHX_ SV *sv, MAGIC *SWIGUNUSEDPARM(mg)) {
  MAGIC_PPERL
  sv_setiv(SvRV(sv), PTR2IV(&OpenBabel::resdat));
  return 1;
}




#ifdef PERL_OBJECT
};
#endif

#ifdef __cplusplus
extern "C" {
#endif
XS(_wrap_new_vectorInt__SWIG_0) {
  {
    unsigned int arg1 ;
    std::vector<int > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorInt(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorInt" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector<int > *)new std::vector<int >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorInt__SWIG_1) {
  {
    std::vector<int > *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vectorInt();");
    }
    result = (std::vector<int > *)new std::vector<int >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorInt__SWIG_2) {
  {
    unsigned int arg1 ;
    int arg2 ;
    std::vector<int > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vectorInt(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorInt" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vectorInt" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (std::vector<int > *)new std::vector<int >(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorInt__SWIG_3) {
  {
    std::vector<int > *arg1 = 0 ;
    std::vector<int > *result = 0 ;
    std::vector<int > temp1 ;
    std::vector<int > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorInt(std::vector<int > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTint_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_vectorInt. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp1.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_vectorInt. "
              "Expected an array of ""int");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_vectorInt. "
          "Expected an array of ""int");
      }
    }
    result = (std::vector<int > *)new std::vector<int >((std::vector<int > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorInt) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<int >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorTint_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  tv = av_fetch(av, 0, 0);
                  if (SvIOK(*tv))
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorInt__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorInt__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorInt__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorInt__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vectorInt'");
  XSRETURN(0);
}


XS(_wrap_vectorInt_size) {
  {
    std::vector<int > *arg1 = (std::vector<int > *) 0 ;
    unsigned int result;
    std::vector<int > temp1 ;
    std::vector<int > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorInt_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTint_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorInt_size. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp1.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorInt_size. "
              "Expected an array of ""int");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorInt_size. "
          "Expected an array of ""int");
      }
    }
    result = (unsigned int)((std::vector<int > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorInt_empty) {
  {
    std::vector<int > *arg1 = (std::vector<int > *) 0 ;
    bool result;
    std::vector<int > temp1 ;
    std::vector<int > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorInt_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTint_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorInt_empty. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp1.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorInt_empty. "
              "Expected an array of ""int");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorInt_empty. "
          "Expected an array of ""int");
      }
    }
    result = (bool)((std::vector<int > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorInt_clear) {
  {
    std::vector<int > *arg1 = (std::vector<int > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorInt_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTint_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_clear" "', argument " "1"" of type '" "std::vector<int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<int > * >(argp1);
    (arg1)->clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorInt_push) {
  {
    std::vector<int > *arg1 = (std::vector<int > *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorInt_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTint_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_push" "', argument " "1"" of type '" "std::vector<int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<int > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt_push" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->push_back(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorInt_pop) {
  {
    std::vector<int > *arg1 = (std::vector<int > *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorInt_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTint_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_pop" "', argument " "1"" of type '" "std::vector<int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<int > * >(argp1);
    try {
      result = (int)std_vector_Sl_int_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorInt_get) {
  {
    std::vector<int > *arg1 = (std::vector<int > *) 0 ;
    int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorInt_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTint_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_get" "', argument " "1"" of type '" "std::vector<int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<int > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (int)std_vector_Sl_int_Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorInt_set) {
  {
    std::vector<int > *arg1 = (std::vector<int > *) 0 ;
    int arg2 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vectorInt_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTint_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorInt_set" "', argument " "1"" of type '" "std::vector<int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<int > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorInt_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorInt_set" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    try {
      std_vector_Sl_int_Sg__set(arg1,arg2,arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vectorInt) {
  {
    std::vector<int > *arg1 = (std::vector<int > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vectorInt(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTint_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorInt" "', argument " "1"" of type '" "std::vector<int > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<int > * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vvInt__SWIG_0) {
  {
    unsigned int arg1 ;
    std::vector<std::vector<int > > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vvInt(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vvInt" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector<std::vector<int > > *)new std::vector<std::vector<int > >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vvInt__SWIG_1) {
  {
    std::vector<std::vector<int > > *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vvInt();");
    }
    result = (std::vector<std::vector<int > > *)new std::vector<std::vector<int > >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vvInt__SWIG_2) {
  {
    unsigned int arg1 ;
    std::vector<int > *arg2 = 0 ;
    std::vector<std::vector<int > > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    std::vector<int > temp2 ;
    std::vector<int > *v2 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vvInt(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vvInt" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    {
      if (SWIG_ConvertPtr(ST(1),(void **) &v2, 
          SWIGTYPE_p_std__vectorTint_t,1) != -1) {
        arg2 = v2;
      } else if (SvROK(ST(1))) {
        AV *av = (AV *)SvRV(ST(1));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 2 of new_vvInt. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp2.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 2 of "
              "new_vvInt. "
              "Expected an array of ""int");
          }
        }
        arg2 = &temp2;
      } else {
        SWIG_croak("Type error in argument 2 of new_vvInt. "
          "Expected an array of ""int");
      }
    }
    result = (std::vector<std::vector<int > > *)new std::vector<std::vector<int > >(arg1,(std::vector<int > const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vvInt__SWIG_3) {
  {
    std::vector<std::vector<int > > *arg1 = 0 ;
    std::vector<std::vector<int > > *result = 0 ;
    std::vector<std::vector<int > > temp1 ;
    std::vector<std::vector<int > > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vvInt(std::vector<std::vector<int > > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTstd__vectorTint_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_vvInt. "
          "Expected an array of " "std::vector<int >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::vector<int >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__vectorTint_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_vvInt. "
              "Expected an array of " "std::vector<int >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_vvInt. "
          "Expected an array of " "std::vector<int >");
      }
    }
    result = (std::vector<std::vector<int > > *)new std::vector<std::vector<int > >((std::vector<std::vector<int > > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vvInt) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<std::vector<int > >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorTstd__vectorTint_t_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  std::vector<int >* obj;
                  tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_std__vectorTint_t,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          {
            /* wrapped vector? */
            std::vector<int >* v;
            if (SWIG_ConvertPtr(ST(1),(void **) &v, 
                SWIGTYPE_p_std__vectorTint_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(1))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(1));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  tv = av_fetch(av, 0, 0);
                  if (SvIOK(*tv))
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vvInt__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vvInt__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vvInt__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vvInt__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vvInt'");
  XSRETURN(0);
}


XS(_wrap_vvInt_size) {
  {
    std::vector<std::vector<int > > *arg1 = (std::vector<std::vector<int > > *) 0 ;
    unsigned int result;
    std::vector<std::vector<int > > temp1 ;
    std::vector<std::vector<int > > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vvInt_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTstd__vectorTint_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vvInt_size. "
          "Expected an array of " "std::vector<int >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::vector<int >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__vectorTint_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vvInt_size. "
              "Expected an array of " "std::vector<int >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vvInt_size. "
          "Expected an array of " "std::vector<int >");
      }
    }
    result = (unsigned int)((std::vector<std::vector<int > > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vvInt_empty) {
  {
    std::vector<std::vector<int > > *arg1 = (std::vector<std::vector<int > > *) 0 ;
    bool result;
    std::vector<std::vector<int > > temp1 ;
    std::vector<std::vector<int > > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vvInt_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTstd__vectorTint_t_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vvInt_empty. "
          "Expected an array of " "std::vector<int >");
        SV **tv;
        I32 len = av_len(av) + 1;
        std::vector<int >* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_std__vectorTint_t,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vvInt_empty. "
              "Expected an array of " "std::vector<int >");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vvInt_empty. "
          "Expected an array of " "std::vector<int >");
      }
    }
    result = (bool)((std::vector<std::vector<int > > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vvInt_clear) {
  {
    std::vector<std::vector<int > > *arg1 = (std::vector<std::vector<int > > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vvInt_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vvInt_clear" "', argument " "1"" of type '" "std::vector<std::vector<int > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::vector<int > > * >(argp1);
    (arg1)->clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vvInt_push) {
  {
    std::vector<std::vector<int > > *arg1 = (std::vector<std::vector<int > > *) 0 ;
    std::vector<int > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    std::vector<int > temp2 ;
    std::vector<int > *v2 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vvInt_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vvInt_push" "', argument " "1"" of type '" "std::vector<std::vector<int > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::vector<int > > * >(argp1);
    {
      if (SWIG_ConvertPtr(ST(1),(void **) &v2, 
          SWIGTYPE_p_std__vectorTint_t,1) != -1) {
        arg2 = v2;
      } else if (SvROK(ST(1))) {
        AV *av = (AV *)SvRV(ST(1));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 2 of vvInt_push. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp2.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 2 of "
              "vvInt_push. "
              "Expected an array of ""int");
          }
        }
        arg2 = &temp2;
      } else {
        SWIG_croak("Type error in argument 2 of vvInt_push. "
          "Expected an array of ""int");
      }
    }
    (arg1)->push_back((std::vector<int > const &)*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vvInt_pop) {
  {
    std::vector<std::vector<int > > *arg1 = (std::vector<std::vector<int > > *) 0 ;
    std::vector<int > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vvInt_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vvInt_pop" "', argument " "1"" of type '" "std::vector<std::vector<int > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::vector<int > > * >(argp1);
    try {
      result = std_vector_Sl_std_vector_Sl_int_Sg__Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    {
      size_t len = (&result)->size();
      SV **svs = new SV*[len];
      for (size_t i=0; i<len; i++) {
        svs[i] = sv_newmortal();
        sv_setiv(svs[i], result[i]);
      }
      AV *myav = av_make(len, svs);
      delete[] svs;
      ST(argvi) = newRV_noinc((SV*) myav);
      sv_2mortal(ST(argvi));
      argvi++;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vvInt_get) {
  {
    std::vector<std::vector<int > > *arg1 = (std::vector<std::vector<int > > *) 0 ;
    int arg2 ;
    std::vector<int > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vvInt_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vvInt_get" "', argument " "1"" of type '" "std::vector<std::vector<int > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::vector<int > > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vvInt_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      {
        std::vector<int > &_result_ref = std_vector_Sl_std_vector_Sl_int_Sg__Sg__get(arg1,arg2);
        result = (std::vector<int > *) &_result_ref;
      }
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_t, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vvInt_set) {
  {
    std::vector<std::vector<int > > *arg1 = (std::vector<std::vector<int > > *) 0 ;
    int arg2 ;
    std::vector<int > *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    std::vector<int > temp3 ;
    std::vector<int > *v3 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vvInt_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vvInt_set" "', argument " "1"" of type '" "std::vector<std::vector<int > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::vector<int > > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vvInt_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    {
      if (SWIG_ConvertPtr(ST(2),(void **) &v3, 
          SWIGTYPE_p_std__vectorTint_t,1) != -1) {
        arg3 = v3;
      } else if (SvROK(ST(2))) {
        AV *av = (AV *)SvRV(ST(2));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 3 of vvInt_set. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp3.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 3 of "
              "vvInt_set. "
              "Expected an array of ""int");
          }
        }
        arg3 = &temp3;
      } else {
        SWIG_croak("Type error in argument 3 of vvInt_set. "
          "Expected an array of ""int");
      }
    }
    try {
      std_vector_Sl_std_vector_Sl_int_Sg__Sg__set(arg1,arg2,(std::vector<int > const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vvInt) {
  {
    std::vector<std::vector<int > > *arg1 = (std::vector<std::vector<int > > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vvInt(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vvInt" "', argument " "1"" of type '" "std::vector<std::vector<int > > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::vector<int > > * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorDouble__SWIG_0) {
  {
    unsigned int arg1 ;
    std::vector<double > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorDouble(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorDouble" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector<double > *)new std::vector<double >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTdouble_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorDouble__SWIG_1) {
  {
    std::vector<double > *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vectorDouble();");
    }
    result = (std::vector<double > *)new std::vector<double >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTdouble_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorDouble__SWIG_2) {
  {
    unsigned int arg1 ;
    double arg2 ;
    std::vector<double > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vectorDouble(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorDouble" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vectorDouble" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    result = (std::vector<double > *)new std::vector<double >(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTdouble_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorDouble__SWIG_3) {
  {
    std::vector<double > *arg1 = 0 ;
    std::vector<double > *result = 0 ;
    std::vector<double > temp1 ;
    std::vector<double > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorDouble(std::vector<double > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTdouble_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_vectorDouble. "
          "Expected an array of ""double");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvNIOK(*tv)) {
            temp1.push_back((double)SwigSvToNumber(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_vectorDouble. "
              "Expected an array of ""double");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_vectorDouble. "
          "Expected an array of ""double");
      }
    }
    result = (std::vector<double > *)new std::vector<double >((std::vector<double > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTdouble_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorDouble) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<double >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorTdouble_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  tv = av_fetch(av, 0, 0);
                  if (SvNIOK(*tv))
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorDouble__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorDouble__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorDouble__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorDouble__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vectorDouble'");
  XSRETURN(0);
}


XS(_wrap_vectorDouble_size) {
  {
    std::vector<double > *arg1 = (std::vector<double > *) 0 ;
    unsigned int result;
    std::vector<double > temp1 ;
    std::vector<double > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorDouble_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTdouble_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorDouble_size. "
          "Expected an array of ""double");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvNIOK(*tv)) {
            temp1.push_back((double)SwigSvToNumber(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorDouble_size. "
              "Expected an array of ""double");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorDouble_size. "
          "Expected an array of ""double");
      }
    }
    result = (unsigned int)((std::vector<double > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorDouble_empty) {
  {
    std::vector<double > *arg1 = (std::vector<double > *) 0 ;
    bool result;
    std::vector<double > temp1 ;
    std::vector<double > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorDouble_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTdouble_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorDouble_empty. "
          "Expected an array of ""double");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvNIOK(*tv)) {
            temp1.push_back((double)SwigSvToNumber(*tv));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorDouble_empty. "
              "Expected an array of ""double");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorDouble_empty. "
          "Expected an array of ""double");
      }
    }
    result = (bool)((std::vector<double > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorDouble_clear) {
  {
    std::vector<double > *arg1 = (std::vector<double > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorDouble_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTdouble_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorDouble_clear" "', argument " "1"" of type '" "std::vector<double > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<double > * >(argp1);
    (arg1)->clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorDouble_push) {
  {
    std::vector<double > *arg1 = (std::vector<double > *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorDouble_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTdouble_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorDouble_push" "', argument " "1"" of type '" "std::vector<double > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<double > * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorDouble_push" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (arg1)->push_back(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorDouble_pop) {
  {
    std::vector<double > *arg1 = (std::vector<double > *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorDouble_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTdouble_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorDouble_pop" "', argument " "1"" of type '" "std::vector<double > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<double > * >(argp1);
    try {
      result = (double)std_vector_Sl_double_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorDouble_get) {
  {
    std::vector<double > *arg1 = (std::vector<double > *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorDouble_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTdouble_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorDouble_get" "', argument " "1"" of type '" "std::vector<double > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<double > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorDouble_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (double)std_vector_Sl_double_Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorDouble_set) {
  {
    std::vector<double > *arg1 = (std::vector<double > *) 0 ;
    int arg2 ;
    double arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vectorDouble_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTdouble_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorDouble_set" "', argument " "1"" of type '" "std::vector<double > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<double > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorDouble_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vectorDouble_set" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    try {
      std_vector_Sl_double_Sg__set(arg1,arg2,arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vectorDouble) {
  {
    std::vector<double > *arg1 = (std::vector<double > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vectorDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTdouble_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorDouble" "', argument " "1"" of type '" "std::vector<double > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<double > * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vVector3__SWIG_0) {
  {
    unsigned int arg1 ;
    std::vector<OpenBabel::vector3 > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vVector3(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vVector3" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector<OpenBabel::vector3 > *)new std::vector<OpenBabel::vector3 >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vVector3__SWIG_1) {
  {
    std::vector<OpenBabel::vector3 > *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vVector3();");
    }
    result = (std::vector<OpenBabel::vector3 > *)new std::vector<OpenBabel::vector3 >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vVector3__SWIG_2) {
  {
    unsigned int arg1 ;
    OpenBabel::vector3 *arg2 = 0 ;
    std::vector<OpenBabel::vector3 > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vVector3(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vVector3" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vVector3" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vVector3" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = (std::vector<OpenBabel::vector3 > *)new std::vector<OpenBabel::vector3 >(arg1,(OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vVector3__SWIG_3) {
  {
    std::vector<OpenBabel::vector3 > *arg1 = 0 ;
    std::vector<OpenBabel::vector3 > *result = 0 ;
    std::vector<OpenBabel::vector3 > temp1 ;
    std::vector<OpenBabel::vector3 > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vVector3(std::vector<OpenBabel::vector3 > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__vector3_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_vVector3. "
          "Expected an array of " "OpenBabel::vector3");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::vector3* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__vector3,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_vVector3. "
              "Expected an array of " "OpenBabel::vector3");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_vVector3. "
          "Expected an array of " "OpenBabel::vector3");
      }
    }
    result = (std::vector<OpenBabel::vector3 > *)new std::vector<OpenBabel::vector3 >((std::vector<OpenBabel::vector3 > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vVector3) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<OpenBabel::vector3 >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorTOpenBabel__vector3_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  OpenBabel::vector3* obj;
                  tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_OpenBabel__vector3,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vVector3__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vVector3__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vVector3__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vVector3__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vVector3'");
  XSRETURN(0);
}


XS(_wrap_vVector3_size) {
  {
    std::vector<OpenBabel::vector3 > *arg1 = (std::vector<OpenBabel::vector3 > *) 0 ;
    unsigned int result;
    std::vector<OpenBabel::vector3 > temp1 ;
    std::vector<OpenBabel::vector3 > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vVector3_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__vector3_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vVector3_size. "
          "Expected an array of " "OpenBabel::vector3");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::vector3* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__vector3,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vVector3_size. "
              "Expected an array of " "OpenBabel::vector3");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vVector3_size. "
          "Expected an array of " "OpenBabel::vector3");
      }
    }
    result = (unsigned int)((std::vector<OpenBabel::vector3 > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vVector3_empty) {
  {
    std::vector<OpenBabel::vector3 > *arg1 = (std::vector<OpenBabel::vector3 > *) 0 ;
    bool result;
    std::vector<OpenBabel::vector3 > temp1 ;
    std::vector<OpenBabel::vector3 > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vVector3_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__vector3_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vVector3_empty. "
          "Expected an array of " "OpenBabel::vector3");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::vector3* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__vector3,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vVector3_empty. "
              "Expected an array of " "OpenBabel::vector3");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vVector3_empty. "
          "Expected an array of " "OpenBabel::vector3");
      }
    }
    result = (bool)((std::vector<OpenBabel::vector3 > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vVector3_clear) {
  {
    std::vector<OpenBabel::vector3 > *arg1 = (std::vector<OpenBabel::vector3 > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vVector3_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vVector3_clear" "', argument " "1"" of type '" "std::vector<OpenBabel::vector3 > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::vector3 > * >(argp1);
    (arg1)->clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vVector3_push) {
  {
    std::vector<OpenBabel::vector3 > *arg1 = (std::vector<OpenBabel::vector3 > *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vVector3_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vVector3_push" "', argument " "1"" of type '" "std::vector<OpenBabel::vector3 > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::vector3 > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vVector3_push" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vVector3_push" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    (arg1)->push_back((OpenBabel::vector3 const &)*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vVector3_pop) {
  {
    std::vector<OpenBabel::vector3 > *arg1 = (std::vector<OpenBabel::vector3 > *) 0 ;
    OpenBabel::vector3 result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vVector3_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vVector3_pop" "', argument " "1"" of type '" "std::vector<OpenBabel::vector3 > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::vector3 > * >(argp1);
    try {
      result = std_vector_Sl_OpenBabel_vector3_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vVector3_get) {
  {
    std::vector<OpenBabel::vector3 > *arg1 = (std::vector<OpenBabel::vector3 > *) 0 ;
    int arg2 ;
    OpenBabel::vector3 *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vVector3_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vVector3_get" "', argument " "1"" of type '" "std::vector<OpenBabel::vector3 > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::vector3 > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vVector3_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      {
        OpenBabel::vector3 &_result_ref = std_vector_Sl_OpenBabel_vector3_Sg__get(arg1,arg2);
        result = (OpenBabel::vector3 *) &_result_ref;
      }
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vVector3_set) {
  {
    std::vector<OpenBabel::vector3 > *arg1 = (std::vector<OpenBabel::vector3 > *) 0 ;
    int arg2 ;
    OpenBabel::vector3 *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vVector3_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vVector3_set" "', argument " "1"" of type '" "std::vector<OpenBabel::vector3 > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::vector3 > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vVector3_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vVector3_set" "', argument " "3"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vVector3_set" "', argument " "3"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::vector3 * >(argp3);
    try {
      std_vector_Sl_OpenBabel_vector3_Sg__set(arg1,arg2,(OpenBabel::vector3 const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vVector3) {
  {
    std::vector<OpenBabel::vector3 > *arg1 = (std::vector<OpenBabel::vector3 > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vVector3(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vVector3" "', argument " "1"" of type '" "std::vector<OpenBabel::vector3 > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::vector3 > * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorMol__SWIG_0) {
  {
    unsigned int arg1 ;
    std::vector<OpenBabel::OBMol > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorMol(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorMol" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector<OpenBabel::OBMol > *)new std::vector<OpenBabel::OBMol >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorMol__SWIG_1) {
  {
    std::vector<OpenBabel::OBMol > *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vectorMol();");
    }
    result = (std::vector<OpenBabel::OBMol > *)new std::vector<OpenBabel::OBMol >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorMol__SWIG_2) {
  {
    unsigned int arg1 ;
    OpenBabel::OBMol *arg2 = 0 ;
    std::vector<OpenBabel::OBMol > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vectorMol(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorMol" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorMol" "', argument " "2"" of type '" "OpenBabel::OBMol const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorMol" "', argument " "2"" of type '" "OpenBabel::OBMol const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    result = (std::vector<OpenBabel::OBMol > *)new std::vector<OpenBabel::OBMol >(arg1,(OpenBabel::OBMol const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorMol__SWIG_3) {
  {
    std::vector<OpenBabel::OBMol > *arg1 = 0 ;
    std::vector<OpenBabel::OBMol > *result = 0 ;
    std::vector<OpenBabel::OBMol > temp1 ;
    std::vector<OpenBabel::OBMol > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorMol(std::vector<OpenBabel::OBMol > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_vectorMol. "
          "Expected an array of " "OpenBabel::OBMol");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBMol* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBMol,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_vectorMol. "
              "Expected an array of " "OpenBabel::OBMol");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_vectorMol. "
          "Expected an array of " "OpenBabel::OBMol");
      }
    }
    result = (std::vector<OpenBabel::OBMol > *)new std::vector<OpenBabel::OBMol >((std::vector<OpenBabel::OBMol > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorMol) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<OpenBabel::OBMol >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  OpenBabel::OBMol* obj;
                  tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_OpenBabel__OBMol,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorMol__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorMol__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorMol__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorMol__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vectorMol'");
  XSRETURN(0);
}


XS(_wrap_vectorMol_size) {
  {
    std::vector<OpenBabel::OBMol > *arg1 = (std::vector<OpenBabel::OBMol > *) 0 ;
    unsigned int result;
    std::vector<OpenBabel::OBMol > temp1 ;
    std::vector<OpenBabel::OBMol > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorMol_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorMol_size. "
          "Expected an array of " "OpenBabel::OBMol");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBMol* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBMol,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorMol_size. "
              "Expected an array of " "OpenBabel::OBMol");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorMol_size. "
          "Expected an array of " "OpenBabel::OBMol");
      }
    }
    result = (unsigned int)((std::vector<OpenBabel::OBMol > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorMol_empty) {
  {
    std::vector<OpenBabel::OBMol > *arg1 = (std::vector<OpenBabel::OBMol > *) 0 ;
    bool result;
    std::vector<OpenBabel::OBMol > temp1 ;
    std::vector<OpenBabel::OBMol > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorMol_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorMol_empty. "
          "Expected an array of " "OpenBabel::OBMol");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBMol* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBMol,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorMol_empty. "
              "Expected an array of " "OpenBabel::OBMol");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorMol_empty. "
          "Expected an array of " "OpenBabel::OBMol");
      }
    }
    result = (bool)((std::vector<OpenBabel::OBMol > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorMol_clear) {
  {
    std::vector<OpenBabel::OBMol > *arg1 = (std::vector<OpenBabel::OBMol > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorMol_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorMol_clear" "', argument " "1"" of type '" "std::vector<OpenBabel::OBMol > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBMol > * >(argp1);
    (arg1)->clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorMol_push) {
  {
    std::vector<OpenBabel::OBMol > *arg1 = (std::vector<OpenBabel::OBMol > *) 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorMol_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorMol_push" "', argument " "1"" of type '" "std::vector<OpenBabel::OBMol > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBMol > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorMol_push" "', argument " "2"" of type '" "OpenBabel::OBMol const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorMol_push" "', argument " "2"" of type '" "OpenBabel::OBMol const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (arg1)->push_back((OpenBabel::OBMol const &)*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorMol_pop) {
  {
    std::vector<OpenBabel::OBMol > *arg1 = (std::vector<OpenBabel::OBMol > *) 0 ;
    OpenBabel::OBMol result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorMol_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorMol_pop" "', argument " "1"" of type '" "std::vector<OpenBabel::OBMol > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBMol > * >(argp1);
    try {
      result = std_vector_Sl_OpenBabel_OBMol_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBMol(static_cast< const OpenBabel::OBMol& >(result))), SWIGTYPE_p_OpenBabel__OBMol, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorMol_get) {
  {
    std::vector<OpenBabel::OBMol > *arg1 = (std::vector<OpenBabel::OBMol > *) 0 ;
    int arg2 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorMol_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorMol_get" "', argument " "1"" of type '" "std::vector<OpenBabel::OBMol > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBMol > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorMol_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      {
        OpenBabel::OBMol &_result_ref = std_vector_Sl_OpenBabel_OBMol_Sg__get(arg1,arg2);
        result = (OpenBabel::OBMol *) &_result_ref;
      }
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorMol_set) {
  {
    std::vector<OpenBabel::OBMol > *arg1 = (std::vector<OpenBabel::OBMol > *) 0 ;
    int arg2 ;
    OpenBabel::OBMol *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vectorMol_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorMol_set" "', argument " "1"" of type '" "std::vector<OpenBabel::OBMol > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBMol > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorMol_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorMol_set" "', argument " "3"" of type '" "OpenBabel::OBMol const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorMol_set" "', argument " "3"" of type '" "OpenBabel::OBMol const &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBMol * >(argp3);
    try {
      std_vector_Sl_OpenBabel_OBMol_Sg__set(arg1,arg2,(OpenBabel::OBMol const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vectorMol) {
  {
    std::vector<OpenBabel::OBMol > *arg1 = (std::vector<OpenBabel::OBMol > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vectorMol(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorMol" "', argument " "1"" of type '" "std::vector<OpenBabel::OBMol > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBMol > * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorBond__SWIG_0) {
  {
    unsigned int arg1 ;
    std::vector<OpenBabel::OBBond > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorBond(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorBond" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector<OpenBabel::OBBond > *)new std::vector<OpenBabel::OBBond >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorBond__SWIG_1) {
  {
    std::vector<OpenBabel::OBBond > *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vectorBond();");
    }
    result = (std::vector<OpenBabel::OBBond > *)new std::vector<OpenBabel::OBBond >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorBond__SWIG_2) {
  {
    unsigned int arg1 ;
    OpenBabel::OBBond *arg2 = 0 ;
    std::vector<OpenBabel::OBBond > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vectorBond(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorBond" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBBond,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorBond" "', argument " "2"" of type '" "OpenBabel::OBBond const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorBond" "', argument " "2"" of type '" "OpenBabel::OBBond const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (std::vector<OpenBabel::OBBond > *)new std::vector<OpenBabel::OBBond >(arg1,(OpenBabel::OBBond const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorBond__SWIG_3) {
  {
    std::vector<OpenBabel::OBBond > *arg1 = 0 ;
    std::vector<OpenBabel::OBBond > *result = 0 ;
    std::vector<OpenBabel::OBBond > temp1 ;
    std::vector<OpenBabel::OBBond > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorBond(std::vector<OpenBabel::OBBond > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_vectorBond. "
          "Expected an array of " "OpenBabel::OBBond");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBBond* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBBond,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_vectorBond. "
              "Expected an array of " "OpenBabel::OBBond");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_vectorBond. "
          "Expected an array of " "OpenBabel::OBBond");
      }
    }
    result = (std::vector<OpenBabel::OBBond > *)new std::vector<OpenBabel::OBBond >((std::vector<OpenBabel::OBBond > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorBond) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<OpenBabel::OBBond >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  OpenBabel::OBBond* obj;
                  tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_OpenBabel__OBBond,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBond, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorBond__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorBond__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorBond__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorBond__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vectorBond'");
  XSRETURN(0);
}


XS(_wrap_vectorBond_size) {
  {
    std::vector<OpenBabel::OBBond > *arg1 = (std::vector<OpenBabel::OBBond > *) 0 ;
    unsigned int result;
    std::vector<OpenBabel::OBBond > temp1 ;
    std::vector<OpenBabel::OBBond > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorBond_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorBond_size. "
          "Expected an array of " "OpenBabel::OBBond");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBBond* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBBond,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorBond_size. "
              "Expected an array of " "OpenBabel::OBBond");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorBond_size. "
          "Expected an array of " "OpenBabel::OBBond");
      }
    }
    result = (unsigned int)((std::vector<OpenBabel::OBBond > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorBond_empty) {
  {
    std::vector<OpenBabel::OBBond > *arg1 = (std::vector<OpenBabel::OBBond > *) 0 ;
    bool result;
    std::vector<OpenBabel::OBBond > temp1 ;
    std::vector<OpenBabel::OBBond > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorBond_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorBond_empty. "
          "Expected an array of " "OpenBabel::OBBond");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBBond* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBBond,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorBond_empty. "
              "Expected an array of " "OpenBabel::OBBond");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorBond_empty. "
          "Expected an array of " "OpenBabel::OBBond");
      }
    }
    result = (bool)((std::vector<OpenBabel::OBBond > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorBond_clear) {
  {
    std::vector<OpenBabel::OBBond > *arg1 = (std::vector<OpenBabel::OBBond > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorBond_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorBond_clear" "', argument " "1"" of type '" "std::vector<OpenBabel::OBBond > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBBond > * >(argp1);
    (arg1)->clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorBond_push) {
  {
    std::vector<OpenBabel::OBBond > *arg1 = (std::vector<OpenBabel::OBBond > *) 0 ;
    OpenBabel::OBBond *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorBond_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorBond_push" "', argument " "1"" of type '" "std::vector<OpenBabel::OBBond > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBBond > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBBond,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorBond_push" "', argument " "2"" of type '" "OpenBabel::OBBond const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorBond_push" "', argument " "2"" of type '" "OpenBabel::OBBond const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    (arg1)->push_back((OpenBabel::OBBond const &)*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorBond_pop) {
  {
    std::vector<OpenBabel::OBBond > *arg1 = (std::vector<OpenBabel::OBBond > *) 0 ;
    OpenBabel::OBBond result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorBond_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorBond_pop" "', argument " "1"" of type '" "std::vector<OpenBabel::OBBond > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBBond > * >(argp1);
    try {
      result = std_vector_Sl_OpenBabel_OBBond_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBBond(static_cast< const OpenBabel::OBBond& >(result))), SWIGTYPE_p_OpenBabel__OBBond, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorBond_get) {
  {
    std::vector<OpenBabel::OBBond > *arg1 = (std::vector<OpenBabel::OBBond > *) 0 ;
    int arg2 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorBond_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorBond_get" "', argument " "1"" of type '" "std::vector<OpenBabel::OBBond > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBBond > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorBond_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      {
        OpenBabel::OBBond &_result_ref = std_vector_Sl_OpenBabel_OBBond_Sg__get(arg1,arg2);
        result = (OpenBabel::OBBond *) &_result_ref;
      }
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorBond_set) {
  {
    std::vector<OpenBabel::OBBond > *arg1 = (std::vector<OpenBabel::OBBond > *) 0 ;
    int arg2 ;
    OpenBabel::OBBond *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vectorBond_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorBond_set" "', argument " "1"" of type '" "std::vector<OpenBabel::OBBond > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBBond > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorBond_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__OBBond,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorBond_set" "', argument " "3"" of type '" "OpenBabel::OBBond const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorBond_set" "', argument " "3"" of type '" "OpenBabel::OBBond const &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBond * >(argp3);
    try {
      std_vector_Sl_OpenBabel_OBBond_Sg__set(arg1,arg2,(OpenBabel::OBBond const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vectorBond) {
  {
    std::vector<OpenBabel::OBBond > *arg1 = (std::vector<OpenBabel::OBBond > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vectorBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorBond" "', argument " "1"" of type '" "std::vector<OpenBabel::OBBond > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBBond > * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorResidue__SWIG_0) {
  {
    unsigned int arg1 ;
    std::vector<OpenBabel::OBResidue > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorResidue(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorResidue" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector<OpenBabel::OBResidue > *)new std::vector<OpenBabel::OBResidue >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorResidue__SWIG_1) {
  {
    std::vector<OpenBabel::OBResidue > *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vectorResidue();");
    }
    result = (std::vector<OpenBabel::OBResidue > *)new std::vector<OpenBabel::OBResidue >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorResidue__SWIG_2) {
  {
    unsigned int arg1 ;
    OpenBabel::OBResidue *arg2 = 0 ;
    std::vector<OpenBabel::OBResidue > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vectorResidue(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorResidue" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBResidue,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    result = (std::vector<OpenBabel::OBResidue > *)new std::vector<OpenBabel::OBResidue >(arg1,(OpenBabel::OBResidue const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorResidue__SWIG_3) {
  {
    std::vector<OpenBabel::OBResidue > *arg1 = 0 ;
    std::vector<OpenBabel::OBResidue > *result = 0 ;
    std::vector<OpenBabel::OBResidue > temp1 ;
    std::vector<OpenBabel::OBResidue > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorResidue(std::vector<OpenBabel::OBResidue > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_vectorResidue. "
          "Expected an array of " "OpenBabel::OBResidue");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBResidue* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBResidue,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_vectorResidue. "
              "Expected an array of " "OpenBabel::OBResidue");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_vectorResidue. "
          "Expected an array of " "OpenBabel::OBResidue");
      }
    }
    result = (std::vector<OpenBabel::OBResidue > *)new std::vector<OpenBabel::OBResidue >((std::vector<OpenBabel::OBResidue > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorResidue) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<OpenBabel::OBResidue >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  OpenBabel::OBResidue* obj;
                  tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_OpenBabel__OBResidue,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBResidue, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorResidue__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorResidue__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorResidue__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorResidue__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vectorResidue'");
  XSRETURN(0);
}


XS(_wrap_vectorResidue_size) {
  {
    std::vector<OpenBabel::OBResidue > *arg1 = (std::vector<OpenBabel::OBResidue > *) 0 ;
    unsigned int result;
    std::vector<OpenBabel::OBResidue > temp1 ;
    std::vector<OpenBabel::OBResidue > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorResidue_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorResidue_size. "
          "Expected an array of " "OpenBabel::OBResidue");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBResidue* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBResidue,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorResidue_size. "
              "Expected an array of " "OpenBabel::OBResidue");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorResidue_size. "
          "Expected an array of " "OpenBabel::OBResidue");
      }
    }
    result = (unsigned int)((std::vector<OpenBabel::OBResidue > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorResidue_empty) {
  {
    std::vector<OpenBabel::OBResidue > *arg1 = (std::vector<OpenBabel::OBResidue > *) 0 ;
    bool result;
    std::vector<OpenBabel::OBResidue > temp1 ;
    std::vector<OpenBabel::OBResidue > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorResidue_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorResidue_empty. "
          "Expected an array of " "OpenBabel::OBResidue");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBResidue* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBResidue,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorResidue_empty. "
              "Expected an array of " "OpenBabel::OBResidue");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorResidue_empty. "
          "Expected an array of " "OpenBabel::OBResidue");
      }
    }
    result = (bool)((std::vector<OpenBabel::OBResidue > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorResidue_clear) {
  {
    std::vector<OpenBabel::OBResidue > *arg1 = (std::vector<OpenBabel::OBResidue > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorResidue_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorResidue_clear" "', argument " "1"" of type '" "std::vector<OpenBabel::OBResidue > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBResidue > * >(argp1);
    (arg1)->clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorResidue_push) {
  {
    std::vector<OpenBabel::OBResidue > *arg1 = (std::vector<OpenBabel::OBResidue > *) 0 ;
    OpenBabel::OBResidue *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorResidue_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorResidue_push" "', argument " "1"" of type '" "std::vector<OpenBabel::OBResidue > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBResidue > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBResidue,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorResidue_push" "', argument " "2"" of type '" "OpenBabel::OBResidue const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorResidue_push" "', argument " "2"" of type '" "OpenBabel::OBResidue const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    (arg1)->push_back((OpenBabel::OBResidue const &)*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorResidue_pop) {
  {
    std::vector<OpenBabel::OBResidue > *arg1 = (std::vector<OpenBabel::OBResidue > *) 0 ;
    OpenBabel::OBResidue result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorResidue_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorResidue_pop" "', argument " "1"" of type '" "std::vector<OpenBabel::OBResidue > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBResidue > * >(argp1);
    try {
      result = std_vector_Sl_OpenBabel_OBResidue_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBResidue(static_cast< const OpenBabel::OBResidue& >(result))), SWIGTYPE_p_OpenBabel__OBResidue, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorResidue_get) {
  {
    std::vector<OpenBabel::OBResidue > *arg1 = (std::vector<OpenBabel::OBResidue > *) 0 ;
    int arg2 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorResidue_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorResidue_get" "', argument " "1"" of type '" "std::vector<OpenBabel::OBResidue > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBResidue > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorResidue_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      {
        OpenBabel::OBResidue &_result_ref = std_vector_Sl_OpenBabel_OBResidue_Sg__get(arg1,arg2);
        result = (OpenBabel::OBResidue *) &_result_ref;
      }
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorResidue_set) {
  {
    std::vector<OpenBabel::OBResidue > *arg1 = (std::vector<OpenBabel::OBResidue > *) 0 ;
    int arg2 ;
    OpenBabel::OBResidue *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vectorResidue_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorResidue_set" "', argument " "1"" of type '" "std::vector<OpenBabel::OBResidue > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBResidue > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorResidue_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__OBResidue,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorResidue_set" "', argument " "3"" of type '" "OpenBabel::OBResidue const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorResidue_set" "', argument " "3"" of type '" "OpenBabel::OBResidue const &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBResidue * >(argp3);
    try {
      std_vector_Sl_OpenBabel_OBResidue_Sg__set(arg1,arg2,(OpenBabel::OBResidue const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vectorResidue) {
  {
    std::vector<OpenBabel::OBResidue > *arg1 = (std::vector<OpenBabel::OBResidue > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vectorResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorResidue" "', argument " "1"" of type '" "std::vector<OpenBabel::OBResidue > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBResidue > * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorRing__SWIG_0) {
  {
    unsigned int arg1 ;
    std::vector<OpenBabel::OBRing > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorRing(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorRing" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector<OpenBabel::OBRing > *)new std::vector<OpenBabel::OBRing >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorRing__SWIG_1) {
  {
    std::vector<OpenBabel::OBRing > *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vectorRing();");
    }
    result = (std::vector<OpenBabel::OBRing > *)new std::vector<OpenBabel::OBRing >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorRing__SWIG_2) {
  {
    unsigned int arg1 ;
    OpenBabel::OBRing *arg2 = 0 ;
    std::vector<OpenBabel::OBRing > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vectorRing(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorRing" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBRing,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorRing" "', argument " "2"" of type '" "OpenBabel::OBRing const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vectorRing" "', argument " "2"" of type '" "OpenBabel::OBRing const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBRing * >(argp2);
    result = (std::vector<OpenBabel::OBRing > *)new std::vector<OpenBabel::OBRing >(arg1,(OpenBabel::OBRing const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorRing__SWIG_3) {
  {
    std::vector<OpenBabel::OBRing > *arg1 = 0 ;
    std::vector<OpenBabel::OBRing > *result = 0 ;
    std::vector<OpenBabel::OBRing > temp1 ;
    std::vector<OpenBabel::OBRing > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorRing(std::vector<OpenBabel::OBRing > const &);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_vectorRing. "
          "Expected an array of " "OpenBabel::OBRing");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBRing* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBRing,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_vectorRing. "
              "Expected an array of " "OpenBabel::OBRing");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_vectorRing. "
          "Expected an array of " "OpenBabel::OBRing");
      }
    }
    result = (std::vector<OpenBabel::OBRing > *)new std::vector<OpenBabel::OBRing >((std::vector<OpenBabel::OBRing > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorRing) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<OpenBabel::OBRing >* v;
            if (SWIG_ConvertPtr(ST(0),(void **) &v, 
                SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t,0) != -1) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  OpenBabel::OBRing* obj;
                  tv = av_fetch(av, 0, 0);
                  if (SWIG_ConvertPtr(*tv, (void **)&obj, 
                      SWIGTYPE_p_OpenBabel__OBRing,0) != -1)
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBRing, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorRing__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorRing__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorRing__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorRing__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vectorRing'");
  XSRETURN(0);
}


XS(_wrap_vectorRing_size) {
  {
    std::vector<OpenBabel::OBRing > *arg1 = (std::vector<OpenBabel::OBRing > *) 0 ;
    unsigned int result;
    std::vector<OpenBabel::OBRing > temp1 ;
    std::vector<OpenBabel::OBRing > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorRing_size(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorRing_size. "
          "Expected an array of " "OpenBabel::OBRing");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBRing* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBRing,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorRing_size. "
              "Expected an array of " "OpenBabel::OBRing");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorRing_size. "
          "Expected an array of " "OpenBabel::OBRing");
      }
    }
    result = (unsigned int)((std::vector<OpenBabel::OBRing > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorRing_empty) {
  {
    std::vector<OpenBabel::OBRing > *arg1 = (std::vector<OpenBabel::OBRing > *) 0 ;
    bool result;
    std::vector<OpenBabel::OBRing > temp1 ;
    std::vector<OpenBabel::OBRing > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorRing_empty(self);");
    }
    {
      if (SWIG_ConvertPtr(ST(0),(void **) &v1, 
          SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t,1) != -1) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorRing_empty. "
          "Expected an array of " "OpenBabel::OBRing");
        SV **tv;
        I32 len = av_len(av) + 1;
        OpenBabel::OBRing* obj;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SWIG_ConvertPtr(*tv, (void **)&obj, 
              SWIGTYPE_p_OpenBabel__OBRing,0) != -1) {
            temp1.push_back(*obj);
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorRing_empty. "
              "Expected an array of " "OpenBabel::OBRing");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorRing_empty. "
          "Expected an array of " "OpenBabel::OBRing");
      }
    }
    result = (bool)((std::vector<OpenBabel::OBRing > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorRing_clear) {
  {
    std::vector<OpenBabel::OBRing > *arg1 = (std::vector<OpenBabel::OBRing > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorRing_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorRing_clear" "', argument " "1"" of type '" "std::vector<OpenBabel::OBRing > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBRing > * >(argp1);
    (arg1)->clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorRing_push) {
  {
    std::vector<OpenBabel::OBRing > *arg1 = (std::vector<OpenBabel::OBRing > *) 0 ;
    OpenBabel::OBRing *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorRing_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorRing_push" "', argument " "1"" of type '" "std::vector<OpenBabel::OBRing > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBRing > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBRing,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorRing_push" "', argument " "2"" of type '" "OpenBabel::OBRing const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorRing_push" "', argument " "2"" of type '" "OpenBabel::OBRing const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBRing * >(argp2);
    (arg1)->push_back((OpenBabel::OBRing const &)*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorRing_pop) {
  {
    std::vector<OpenBabel::OBRing > *arg1 = (std::vector<OpenBabel::OBRing > *) 0 ;
    OpenBabel::OBRing result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorRing_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorRing_pop" "', argument " "1"" of type '" "std::vector<OpenBabel::OBRing > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBRing > * >(argp1);
    try {
      result = std_vector_Sl_OpenBabel_OBRing_Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBRing(static_cast< const OpenBabel::OBRing& >(result))), SWIGTYPE_p_OpenBabel__OBRing, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorRing_get) {
  {
    std::vector<OpenBabel::OBRing > *arg1 = (std::vector<OpenBabel::OBRing > *) 0 ;
    int arg2 ;
    OpenBabel::OBRing *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorRing_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorRing_get" "', argument " "1"" of type '" "std::vector<OpenBabel::OBRing > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBRing > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorRing_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      {
        OpenBabel::OBRing &_result_ref = std_vector_Sl_OpenBabel_OBRing_Sg__get(arg1,arg2);
        result = (OpenBabel::OBRing *) &_result_ref;
      }
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRing, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorRing_set) {
  {
    std::vector<OpenBabel::OBRing > *arg1 = (std::vector<OpenBabel::OBRing > *) 0 ;
    int arg2 ;
    OpenBabel::OBRing *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vectorRing_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorRing_set" "', argument " "1"" of type '" "std::vector<OpenBabel::OBRing > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBRing > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorRing_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__OBRing,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorRing_set" "', argument " "3"" of type '" "OpenBabel::OBRing const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorRing_set" "', argument " "3"" of type '" "OpenBabel::OBRing const &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBRing * >(argp3);
    try {
      std_vector_Sl_OpenBabel_OBRing_Sg__set(arg1,arg2,(OpenBabel::OBRing const &)*arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vectorRing) {
  {
    std::vector<OpenBabel::OBRing > *arg1 = (std::vector<OpenBabel::OBRing > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vectorRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorRing" "', argument " "1"" of type '" "std::vector<OpenBabel::OBRing > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBRing > * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorData__SWIG_0) {
  {
    unsigned int arg1 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorData(size);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorData" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    result = (std::vector<OpenBabel::OBGenericData * > *)new std::vector<OpenBabel::OBGenericData * >(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorData__SWIG_1) {
  {
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vectorData();");
    }
    result = (std::vector<OpenBabel::OBGenericData * > *)new std::vector<OpenBabel::OBGenericData * >();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorData__SWIG_2) {
  {
    unsigned int arg1 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vectorData(size,value);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vectorData" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_vectorData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    result = (std::vector<OpenBabel::OBGenericData * > *)new std::vector<OpenBabel::OBGenericData * >(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorData__SWIG_3) {
  {
    std::vector<OpenBabel::OBGenericData * > *arg1 = 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    std::vector<OpenBabel::OBGenericData * > temp1 ;
    std::vector<OpenBabel::OBGenericData * > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vectorData(std::vector<OpenBabel::OBGenericData * > const &);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of new_vectorData. "
          "Expected an array of " "OpenBabel::OBGenericData");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_OpenBabel__OBGenericData,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< OpenBabel::OBGenericData * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "new_vectorData. "
              "Expected an array of " "OpenBabel::OBGenericData");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of new_vectorData. "
          "Expected an array of " "OpenBabel::OBGenericData");
      }
    }
    result = (std::vector<OpenBabel::OBGenericData * > *)new std::vector<OpenBabel::OBGenericData * >((std::vector<OpenBabel::OBGenericData * > const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vectorData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          {
            /* wrapped vector? */
            std::vector<OpenBabel::OBGenericData *> *v;
            int res = SWIG_ConvertPtr(ST(0),SWIG_as_voidptrptr(&v), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,0);
            if (SWIG_IsOK(res)) {
              _v = 1;
            } else if (SvROK(ST(0))) {
              /* native sequence? */
              AV *av = (AV *)SvRV(ST(0));
              if (SvTYPE(av) == SVt_PVAV) {
                SV **tv;
                I32 len = av_len(av) + 1;
                if (len == 0) {
                  /* an empty sequence can be of any type */
                  _v = 1;
                } else {
                  /* check the first element only */
                  void *v;
                  SV **tv = av_fetch(av, 0, 0);
                  int res = SWIG_ConvertPtr(*tv, &v, SWIGTYPE_p_OpenBabel__OBGenericData,0);
                  if (SWIG_IsOK(res))
                  _v = 1;
                  else
                  _v = 0;
                }
              }
            } else {
              _v = 0;
            }
          }
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorData__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vectorData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vectorData'");
  XSRETURN(0);
}


XS(_wrap_vectorData_size) {
  {
    std::vector<OpenBabel::OBGenericData * > *arg1 = (std::vector<OpenBabel::OBGenericData * > *) 0 ;
    unsigned int result;
    std::vector<OpenBabel::OBGenericData * > temp1 ;
    std::vector<OpenBabel::OBGenericData * > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorData_size(self);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorData_size. "
          "Expected an array of " "OpenBabel::OBGenericData");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_OpenBabel__OBGenericData,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< OpenBabel::OBGenericData * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorData_size. "
              "Expected an array of " "OpenBabel::OBGenericData");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorData_size. "
          "Expected an array of " "OpenBabel::OBGenericData");
      }
    }
    result = (unsigned int)((std::vector<OpenBabel::OBGenericData * > const *)arg1)->size();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorData_empty) {
  {
    std::vector<OpenBabel::OBGenericData * > *arg1 = (std::vector<OpenBabel::OBGenericData * > *) 0 ;
    bool result;
    std::vector<OpenBabel::OBGenericData * > temp1 ;
    std::vector<OpenBabel::OBGenericData * > *v1 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorData_empty(self);");
    }
    {
      int res = SWIG_ConvertPtr(ST(0),(void **) &v1, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,0);
      if (SWIG_IsOK(res)) {
        arg1 = v1;
      } else if (SvROK(ST(0))) {
        AV *av = (AV *)SvRV(ST(0));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 1 of vectorData_empty. "
          "Expected an array of " "OpenBabel::OBGenericData");
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          void *v1;
          SV **tv = av_fetch(av, i, 0);
          int res = SWIG_ConvertPtr(*tv, &v1, SWIGTYPE_p_OpenBabel__OBGenericData,0);
          if (SWIG_IsOK(res)) {
            temp1.push_back(static_cast< OpenBabel::OBGenericData * >(v1));
          } else {
            SWIG_croak("Type error in argument 1 of "
              "vectorData_empty. "
              "Expected an array of " "OpenBabel::OBGenericData");
          }
        }
        arg1 = &temp1;
      } else {
        SWIG_croak("Type error in argument 1 of vectorData_empty. "
          "Expected an array of " "OpenBabel::OBGenericData");
      }
    }
    result = (bool)((std::vector<OpenBabel::OBGenericData * > const *)arg1)->empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorData_clear) {
  {
    std::vector<OpenBabel::OBGenericData * > *arg1 = (std::vector<OpenBabel::OBGenericData * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorData_clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorData_clear" "', argument " "1"" of type '" "std::vector<OpenBabel::OBGenericData * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp1);
    (arg1)->clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorData_push) {
  {
    std::vector<OpenBabel::OBGenericData * > *arg1 = (std::vector<OpenBabel::OBGenericData * > *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorData_push(self,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorData_push" "', argument " "1"" of type '" "std::vector<OpenBabel::OBGenericData * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorData_push" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (arg1)->push_back(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorData_pop) {
  {
    std::vector<OpenBabel::OBGenericData * > *arg1 = (std::vector<OpenBabel::OBGenericData * > *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vectorData_pop(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorData_pop" "', argument " "1"" of type '" "std::vector<OpenBabel::OBGenericData * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp1);
    try {
      result = (OpenBabel::OBGenericData *)std_vector_Sl_OpenBabel_OBGenericData_Sm__Sg__pop(arg1);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorData_get) {
  {
    std::vector<OpenBabel::OBGenericData * > *arg1 = (std::vector<OpenBabel::OBGenericData * > *) 0 ;
    int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorData_get(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorData_get" "', argument " "1"" of type '" "std::vector<OpenBabel::OBGenericData * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorData_get" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    try {
      result = (OpenBabel::OBGenericData *)std_vector_Sl_OpenBabel_OBGenericData_Sm__Sg__get(arg1,arg2);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorData_set) {
  {
    std::vector<OpenBabel::OBGenericData * > *arg1 = (std::vector<OpenBabel::OBGenericData * > *) 0 ;
    int arg2 ;
    OpenBabel::OBGenericData *arg3 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vectorData_set(self,i,x);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorData_set" "', argument " "1"" of type '" "std::vector<OpenBabel::OBGenericData * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vectorData_set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vectorData_set" "', argument " "3"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBGenericData * >(argp3);
    try {
      std_vector_Sl_OpenBabel_OBGenericData_Sm__Sg__set(arg1,arg2,arg3);
    }
    catch(std::out_of_range &_e) {
      sv_setsv(GvSV(PL_errgv), SWIG_NewPointerObj((new std::out_of_range(static_cast< const std::out_of_range& >(_e))),SWIGTYPE_p_std__out_of_range,SWIG_POINTER_OWN)); SWIG_fail ;
    }
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vectorData) {
  {
    std::vector<OpenBabel::OBGenericData * > *arg1 = (std::vector<OpenBabel::OBGenericData * > *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vectorData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vectorData" "', argument " "1"" of type '" "std::vector<OpenBabel::OBGenericData * > *""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBGlobalDataBase) {
  {
    OpenBabel::OBGlobalDataBase *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBGlobalDataBase();");
    }
    result = (OpenBabel::OBGlobalDataBase *)new OpenBabel::OBGlobalDataBase();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGlobalDataBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBGlobalDataBase) {
  {
    OpenBabel::OBGlobalDataBase *arg1 = (OpenBabel::OBGlobalDataBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBGlobalDataBase(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGlobalDataBase, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBGlobalDataBase" "', argument " "1"" of type '" "OpenBabel::OBGlobalDataBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGlobalDataBase * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBGlobalDataBase_Init) {
  {
    OpenBabel::OBGlobalDataBase *arg1 = (OpenBabel::OBGlobalDataBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBGlobalDataBase_Init(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGlobalDataBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGlobalDataBase_Init" "', argument " "1"" of type '" "OpenBabel::OBGlobalDataBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGlobalDataBase * >(argp1);
    (arg1)->Init();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBGlobalDataBase_GetSize) {
  {
    OpenBabel::OBGlobalDataBase *arg1 = (OpenBabel::OBGlobalDataBase *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBGlobalDataBase_GetSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGlobalDataBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGlobalDataBase_GetSize" "', argument " "1"" of type '" "OpenBabel::OBGlobalDataBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGlobalDataBase * >(argp1);
    result = (unsigned int)(arg1)->GetSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBGlobalDataBase_SetReadDirectory) {
  {
    OpenBabel::OBGlobalDataBase *arg1 = (OpenBabel::OBGlobalDataBase *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBGlobalDataBase_SetReadDirectory(self,dir);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGlobalDataBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGlobalDataBase_SetReadDirectory" "', argument " "1"" of type '" "OpenBabel::OBGlobalDataBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGlobalDataBase * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBGlobalDataBase_SetReadDirectory" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->SetReadDirectory(arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBGlobalDataBase_SetEnvironmentVariable) {
  {
    OpenBabel::OBGlobalDataBase *arg1 = (OpenBabel::OBGlobalDataBase *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBGlobalDataBase_SetEnvironmentVariable(self,var);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGlobalDataBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGlobalDataBase_SetEnvironmentVariable" "', argument " "1"" of type '" "OpenBabel::OBGlobalDataBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGlobalDataBase * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBGlobalDataBase_SetEnvironmentVariable" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->SetEnvironmentVariable(arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBGlobalDataBase_ParseLine) {
  {
    OpenBabel::OBGlobalDataBase *arg1 = (OpenBabel::OBGlobalDataBase *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBGlobalDataBase_ParseLine(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGlobalDataBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGlobalDataBase_ParseLine" "', argument " "1"" of type '" "OpenBabel::OBGlobalDataBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGlobalDataBase * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBGlobalDataBase_ParseLine" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->ParseLine((char const *)arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBElement__SWIG_0) {
  {
    OpenBabel::OBElement *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBElement();");
    }
    result = (OpenBabel::OBElement *)new OpenBabel::OBElement();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBElement, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBElement__SWIG_1) {
  {
    int arg1 ;
    char *arg2 = (char *) 0 ;
    double arg3 ;
    double arg4 ;
    int arg5 ;
    double arg6 ;
    double arg7 ;
    double arg8 ;
    double arg9 ;
    double arg10 ;
    double arg11 ;
    double arg12 ;
    std::string arg13 ;
    OpenBabel::OBElement *result = 0 ;
    int val1 ;
    int ecode1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    double val6 ;
    int ecode6 = 0 ;
    double val7 ;
    int ecode7 = 0 ;
    double val8 ;
    int ecode8 = 0 ;
    double val9 ;
    int ecode9 = 0 ;
    double val10 ;
    int ecode10 = 0 ;
    double val11 ;
    int ecode11 = 0 ;
    double val12 ;
    int ecode12 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 13) || (items > 13)) {
      SWIG_croak("Usage: new_OBElement(num,sym,rcov,rvdw,maxbo,mass,elNeg,ionize,elAffin,red,green,blue,name);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OBElement" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBElement" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_OBElement" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_OBElement" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_OBElement" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    ecode6 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_OBElement" "', argument " "6"" of type '" "double""'");
    } 
    arg6 = static_cast< double >(val6);
    ecode7 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_OBElement" "', argument " "7"" of type '" "double""'");
    } 
    arg7 = static_cast< double >(val7);
    ecode8 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(7), &val8);
    if (!SWIG_IsOK(ecode8)) {
      SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_OBElement" "', argument " "8"" of type '" "double""'");
    } 
    arg8 = static_cast< double >(val8);
    ecode9 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(8), &val9);
    if (!SWIG_IsOK(ecode9)) {
      SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_OBElement" "', argument " "9"" of type '" "double""'");
    } 
    arg9 = static_cast< double >(val9);
    ecode10 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(9), &val10);
    if (!SWIG_IsOK(ecode10)) {
      SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_OBElement" "', argument " "10"" of type '" "double""'");
    } 
    arg10 = static_cast< double >(val10);
    ecode11 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(10), &val11);
    if (!SWIG_IsOK(ecode11)) {
      SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_OBElement" "', argument " "11"" of type '" "double""'");
    } 
    arg11 = static_cast< double >(val11);
    ecode12 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(11), &val12);
    if (!SWIG_IsOK(ecode12)) {
      SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_OBElement" "', argument " "12"" of type '" "double""'");
    } 
    arg12 = static_cast< double >(val12);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(12), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_OBElement" "', argument " "13"" of type '" "std::string""'"); 
      }
      arg13 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = (OpenBabel::OBElement *)new OpenBabel::OBElement(arg1,(char const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBElement, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    
    
    
    
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    
    
    
    
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBElement) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 13) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(6), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(7), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(8), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(9), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(10), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(11), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(12), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBElement__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBElement__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBElement'");
  XSRETURN(0);
}


XS(_wrap_OBElement_GetAtomicNum) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetAtomicNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (int)(arg1)->GetAtomicNum();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetSymbol) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetSymbol(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetSymbol" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (char *)(arg1)->GetSymbol();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetCovalentRad) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetCovalentRad(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetCovalentRad" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (double)(arg1)->GetCovalentRad();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetVdwRad) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetVdwRad(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetVdwRad" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (double)(arg1)->GetVdwRad();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetMass) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetMass" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (double)(arg1)->GetMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetMaxBonds) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetMaxBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetMaxBonds" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (int)(arg1)->GetMaxBonds();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetElectroNeg) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetElectroNeg(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetElectroNeg" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (double)(arg1)->GetElectroNeg();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetIonization) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetIonization(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetIonization" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (double)(arg1)->GetIonization();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetElectronAffinity) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetElectronAffinity(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetElectronAffinity" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (double)(arg1)->GetElectronAffinity();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetName) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetName" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetRed) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetRed(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetRed" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (double)(arg1)->GetRed();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetGreen) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetGreen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetGreen" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (double)(arg1)->GetGreen();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElement_GetBlue) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElement_GetBlue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElement_GetBlue" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    result = (double)(arg1)->GetBlue();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBElement) {
  {
    OpenBabel::OBElement *arg1 = (OpenBabel::OBElement *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBElement(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElement, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBElement" "', argument " "1"" of type '" "OpenBabel::OBElement *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElement * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBElementTable) {
  {
    OpenBabel::OBElementTable *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBElementTable();");
    }
    result = (OpenBabel::OBElementTable *)new OpenBabel::OBElementTable();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBElementTable, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBElementTable) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBElementTable(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBElementTable" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_ParseLine) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_ParseLine(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_ParseLine" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBElementTable_ParseLine" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->ParseLine((char const *)arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetNumberOfElements) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElementTable_GetNumberOfElements(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetNumberOfElements" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    result = (unsigned int)(arg1)->GetNumberOfElements();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetSize) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBElementTable_GetSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetSize" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    result = (unsigned int)(arg1)->GetSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetAtomicNum__SWIG_0) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    char *arg2 = (char *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetAtomicNum(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBElementTable_GetAtomicNum" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (int)(arg1)->GetAtomicNum((char const *)arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetAtomicNum__SWIG_1) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    char *arg2 = (char *) 0 ;
    int *arg3 = 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBElementTable_GetAtomicNum(self,char const *,iso);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBElementTable_GetAtomicNum" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_int,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBElementTable_GetAtomicNum" "', argument " "3"" of type '" "int &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBElementTable_GetAtomicNum" "', argument " "3"" of type '" "int &""'"); 
    }
    arg3 = reinterpret_cast< int * >(argp3);
    result = (int)(arg1)->GetAtomicNum((char const *)arg2,*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetAtomicNum) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBElementTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBElementTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBElementTable_GetAtomicNum__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBElementTable_GetAtomicNum__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBElementTable_GetAtomicNum'");
  XSRETURN(0);
}


XS(_wrap_OBElementTable_GetSymbol) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetSymbol(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetSymbol" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetSymbol" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (char *)(arg1)->GetSymbol(arg2);
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetVdwRad) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetVdwRad(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetVdwRad" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetVdwRad" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(arg1)->GetVdwRad(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetCovalentRad) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetCovalentRad(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetCovalentRad" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetCovalentRad" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(arg1)->GetCovalentRad(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetMass) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetMass(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetMass" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetMass" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(arg1)->GetMass(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_CorrectedBondRad__SWIG_0) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBElementTable_CorrectedBondRad(self,int,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_CorrectedBondRad" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_CorrectedBondRad" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBElementTable_CorrectedBondRad" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (double)(arg1)->CorrectedBondRad(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_CorrectedBondRad__SWIG_1) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_CorrectedBondRad(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_CorrectedBondRad" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_CorrectedBondRad" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(arg1)->CorrectedBondRad(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_CorrectedBondRad) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBElementTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBElementTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBElementTable_CorrectedBondRad__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBElementTable_CorrectedBondRad__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBElementTable_CorrectedBondRad'");
  XSRETURN(0);
}


XS(_wrap_OBElementTable_CorrectedVdwRad__SWIG_0) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBElementTable_CorrectedVdwRad(self,int,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_CorrectedVdwRad" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_CorrectedVdwRad" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBElementTable_CorrectedVdwRad" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (double)(arg1)->CorrectedVdwRad(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_CorrectedVdwRad__SWIG_1) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_CorrectedVdwRad(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_CorrectedVdwRad" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_CorrectedVdwRad" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(arg1)->CorrectedVdwRad(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_CorrectedVdwRad) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBElementTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBElementTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBElementTable_CorrectedVdwRad__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBElementTable_CorrectedVdwRad__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBElementTable_CorrectedVdwRad'");
  XSRETURN(0);
}


XS(_wrap_OBElementTable_GetMaxBonds) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetMaxBonds(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetMaxBonds" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetMaxBonds" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (int)(arg1)->GetMaxBonds(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetElectroNeg) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetElectroNeg(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetElectroNeg" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetElectroNeg" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(arg1)->GetElectroNeg(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetIonization) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetIonization(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetIonization" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetIonization" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(arg1)->GetIonization(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetElectronAffinity) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetElectronAffinity(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetElectronAffinity" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetElectronAffinity" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(arg1)->GetElectronAffinity(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetRGB) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    std::vector<double > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetRGB(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetRGB" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetRGB" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->GetRGB(arg2);
    {
      size_t len = (&result)->size();
      SV **svs = new SV*[len];
      for (size_t i=0; i<len; i++) {
        svs[i] = sv_newmortal();
        sv_setnv(svs[i], result[i]);
      }
      AV *myav = av_make(len, svs);
      delete[] svs;
      ST(argvi) = newRV_noinc((SV*) myav);
      sv_2mortal(ST(argvi));
      argvi++;
    }
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBElementTable_GetName) {
  {
    OpenBabel::OBElementTable *arg1 = (OpenBabel::OBElementTable *) 0 ;
    int arg2 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBElementTable_GetName(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBElementTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBElementTable_GetName" "', argument " "1"" of type '" "OpenBabel::OBElementTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBElementTable * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBElementTable_GetName" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->GetName(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBIsotopeTable) {
  {
    OpenBabel::OBIsotopeTable *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBIsotopeTable();");
    }
    result = (OpenBabel::OBIsotopeTable *)new OpenBabel::OBIsotopeTable();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBIsotopeTable, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBIsotopeTable) {
  {
    OpenBabel::OBIsotopeTable *arg1 = (OpenBabel::OBIsotopeTable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBIsotopeTable(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBIsotopeTable, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBIsotopeTable" "', argument " "1"" of type '" "OpenBabel::OBIsotopeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBIsotopeTable * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBIsotopeTable_GetSize) {
  {
    OpenBabel::OBIsotopeTable *arg1 = (OpenBabel::OBIsotopeTable *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBIsotopeTable_GetSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBIsotopeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBIsotopeTable_GetSize" "', argument " "1"" of type '" "OpenBabel::OBIsotopeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBIsotopeTable * >(argp1);
    result = (unsigned int)(arg1)->GetSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBIsotopeTable_ParseLine) {
  {
    OpenBabel::OBIsotopeTable *arg1 = (OpenBabel::OBIsotopeTable *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBIsotopeTable_ParseLine(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBIsotopeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBIsotopeTable_ParseLine" "', argument " "1"" of type '" "OpenBabel::OBIsotopeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBIsotopeTable * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBIsotopeTable_ParseLine" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->ParseLine((char const *)arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBIsotopeTable_GetExactMass__SWIG_0) {
  {
    OpenBabel::OBIsotopeTable *arg1 = (OpenBabel::OBIsotopeTable *) 0 ;
    unsigned int arg2 ;
    unsigned int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBIsotopeTable_GetExactMass(self,atomicNum,isotope);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBIsotopeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBIsotopeTable_GetExactMass" "', argument " "1"" of type '" "OpenBabel::OBIsotopeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBIsotopeTable * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBIsotopeTable_GetExactMass" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBIsotopeTable_GetExactMass" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    result = (double)(arg1)->GetExactMass(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBIsotopeTable_GetExactMass__SWIG_1) {
  {
    OpenBabel::OBIsotopeTable *arg1 = (OpenBabel::OBIsotopeTable *) 0 ;
    unsigned int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBIsotopeTable_GetExactMass(self,atomicNum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBIsotopeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBIsotopeTable_GetExactMass" "', argument " "1"" of type '" "OpenBabel::OBIsotopeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBIsotopeTable * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBIsotopeTable_GetExactMass" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (double)(arg1)->GetExactMass(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBIsotopeTable_GetExactMass) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBIsotopeTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBIsotopeTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBIsotopeTable_GetExactMass__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBIsotopeTable_GetExactMass__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBIsotopeTable_GetExactMass'");
  XSRETURN(0);
}


XS(_wrap_new_OBTypeTable) {
  {
    OpenBabel::OBTypeTable *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBTypeTable();");
    }
    result = (OpenBabel::OBTypeTable *)new OpenBabel::OBTypeTable();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBTypeTable, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBTypeTable) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBTypeTable(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBTypeTable" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTypeTable_ParseLine) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTypeTable_ParseLine(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTypeTable_ParseLine" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTypeTable_ParseLine" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->ParseLine((char const *)arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBTypeTable_GetSize) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTypeTable_GetSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTypeTable_GetSize" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    result = (unsigned int)(arg1)->GetSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTypeTable_SetFromType) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTypeTable_SetFromType(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTypeTable_SetFromType" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTypeTable_SetFromType" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(arg1)->SetFromType((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBTypeTable_SetToType) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTypeTable_SetToType(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTypeTable_SetToType" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTypeTable_SetToType" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(arg1)->SetToType((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBTypeTable_Translate__SWIG_0) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBTypeTable_Translate(self,to,from);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTypeTable_Translate" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTypeTable_Translate" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBTypeTable_Translate" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (bool)(arg1)->Translate(arg2,(char const *)arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_OBTypeTable_Translate__SWIG_1) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    std::string temp2 ;
    int res2 = SWIG_TMPOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    arg2 = &temp2;
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTypeTable_Translate(self,from);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTypeTable_Translate" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBTypeTable_Translate" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBTypeTable_Translate" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (bool)(arg1)->Translate(*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    if (SWIG_IsTmpObj(res2)) {
      if (argvi >= items) EXTEND(sp,1);  ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1((*arg2)); argvi++  ;
    } else {
      int new_flags = SWIG_IsNewObj(res2) ? (SWIG_POINTER_OWN | 0) : 0;
      if (argvi >= items) EXTEND(sp,1);  ST(argvi) = SWIG_NewPointerObj((void*)(arg2), SWIGTYPE_p_std__string, new_flags); argvi++  ;
    }
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_OBTypeTable_Translate__SWIG_2) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    std::string *arg2 = 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTypeTable_Translate(self,from);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTypeTable_Translate" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTypeTable_Translate" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBTypeTable_Translate" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (arg1)->Translate((std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBTypeTable_Translate) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTypeTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTypeTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTypeTable, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBTypeTable_Translate__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBTypeTable_Translate__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBTypeTable_Translate__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBTypeTable_Translate'");
  XSRETURN(0);
}


XS(_wrap_OBTypeTable_GetFromType) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTypeTable_GetFromType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTypeTable_GetFromType" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    result = (arg1)->GetFromType();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTypeTable_GetToType) {
  {
    OpenBabel::OBTypeTable *arg1 = (OpenBabel::OBTypeTable *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTypeTable_GetToType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTypeTable, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTypeTable_GetToType" "', argument " "1"" of type '" "OpenBabel::OBTypeTable *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTypeTable * >(argp1);
    result = (arg1)->GetToType();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueData) {
  {
    OpenBabel::OBResidueData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBResidueData();");
    }
    result = (OpenBabel::OBResidueData *)new OpenBabel::OBResidueData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueData_ParseLine) {
  {
    OpenBabel::OBResidueData *arg1 = (OpenBabel::OBResidueData *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueData_ParseLine(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueData_ParseLine" "', argument " "1"" of type '" "OpenBabel::OBResidueData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueData * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueData_ParseLine" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->ParseLine((char const *)arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueData_GetSize) {
  {
    OpenBabel::OBResidueData *arg1 = (OpenBabel::OBResidueData *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueData_GetSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueData_GetSize" "', argument " "1"" of type '" "OpenBabel::OBResidueData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueData * >(argp1);
    result = (unsigned int)(arg1)->GetSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueData_SetResName) {
  {
    OpenBabel::OBResidueData *arg1 = (OpenBabel::OBResidueData *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueData_SetResName(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueData_SetResName" "', argument " "1"" of type '" "OpenBabel::OBResidueData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueData_SetResName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueData_SetResName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->SetResName((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueData_LookupBO__SWIG_0) {
  {
    OpenBabel::OBResidueData *arg1 = (OpenBabel::OBResidueData *) 0 ;
    std::string *arg2 = 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueData_LookupBO(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueData_LookupBO" "', argument " "1"" of type '" "OpenBabel::OBResidueData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueData_LookupBO" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueData_LookupBO" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (int)(arg1)->LookupBO((std::string const &)*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueData_LookupBO__SWIG_1) {
  {
    OpenBabel::OBResidueData *arg1 = (OpenBabel::OBResidueData *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueData_LookupBO(self,std::string const &,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueData_LookupBO" "', argument " "1"" of type '" "OpenBabel::OBResidueData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueData_LookupBO" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueData_LookupBO" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBResidueData_LookupBO" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueData_LookupBO" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (int)(arg1)->LookupBO((std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueData_LookupBO) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueData_LookupBO__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueData_LookupBO__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueData_LookupBO'");
  XSRETURN(0);
}


XS(_wrap_OBResidueData_LookupType) {
  {
    OpenBabel::OBResidueData *arg1 = (OpenBabel::OBResidueData *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    int *arg4 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBResidueData_LookupType(self,std::string const &,std::string &,int &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueData_LookupType" "', argument " "1"" of type '" "OpenBabel::OBResidueData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueData_LookupType" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueData_LookupType" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBResidueData_LookupType" "', argument " "3"" of type '" "std::string &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueData_LookupType" "', argument " "3"" of type '" "std::string &""'"); 
    }
    arg3 = reinterpret_cast< std::string * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_int,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBResidueData_LookupType" "', argument " "4"" of type '" "int &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueData_LookupType" "', argument " "4"" of type '" "int &""'"); 
    }
    arg4 = reinterpret_cast< int * >(argp4);
    result = (bool)(arg1)->LookupType((std::string const &)*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueData_AssignBonds) {
  {
    OpenBabel::OBResidueData *arg1 = (OpenBabel::OBResidueData *) 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    OpenBabel::OBBitVec *arg3 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueData_AssignBonds(self,OpenBabel::OBMol &,OpenBabel::OBBitVec &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueData_AssignBonds" "', argument " "1"" of type '" "OpenBabel::OBResidueData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueData_AssignBonds" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueData_AssignBonds" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__OBBitVec,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBResidueData_AssignBonds" "', argument " "3"" of type '" "OpenBabel::OBBitVec &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueData_AssignBonds" "', argument " "3"" of type '" "OpenBabel::OBBitVec &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBitVec * >(argp3);
    result = (bool)(arg1)->AssignBonds(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBResidueData) {
  {
    OpenBabel::OBResidueData *arg1 = (OpenBabel::OBResidueData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBResidueData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBResidueData" "', argument " "1"" of type '" "OpenBabel::OBResidueData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OpenDatafile) {
  {
    std::ifstream *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OpenDatafile(fs,filename);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__ifstream,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OpenDatafile" "', argument " "1"" of type '" "std::ifstream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpenDatafile" "', argument " "1"" of type '" "std::ifstream &""'"); 
    }
    arg1 = reinterpret_cast< std::ifstream * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OpenDatafile" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OpenDatafile" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = OpenBabel::OpenDatafile(*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_DoubleType_hi_set) {
  {
    OpenBabel::DoubleType *arg1 = (OpenBabel::DoubleType *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: DoubleType_hi_set(self,hi);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__DoubleType, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DoubleType_hi_set" "', argument " "1"" of type '" "OpenBabel::DoubleType *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::DoubleType * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DoubleType_hi_set" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    if (arg1) (arg1)->hi = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_DoubleType_hi_get) {
  {
    OpenBabel::DoubleType *arg1 = (OpenBabel::DoubleType *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: DoubleType_hi_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__DoubleType, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DoubleType_hi_get" "', argument " "1"" of type '" "OpenBabel::DoubleType *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::DoubleType * >(argp1);
    result = (unsigned int) ((arg1)->hi);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_DoubleType_lo_set) {
  {
    OpenBabel::DoubleType *arg1 = (OpenBabel::DoubleType *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: DoubleType_lo_set(self,lo);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__DoubleType, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DoubleType_lo_set" "', argument " "1"" of type '" "OpenBabel::DoubleType *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::DoubleType * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DoubleType_lo_set" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    if (arg1) (arg1)->lo = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_DoubleType_lo_get) {
  {
    OpenBabel::DoubleType *arg1 = (OpenBabel::DoubleType *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: DoubleType_lo_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__DoubleType, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DoubleType_lo_get" "', argument " "1"" of type '" "OpenBabel::DoubleType *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::DoubleType * >(argp1);
    result = (unsigned int) ((arg1)->lo);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_DoubleType) {
  {
    OpenBabel::DoubleType *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_DoubleType();");
    }
    result = (OpenBabel::DoubleType *)new OpenBabel::DoubleType();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__DoubleType, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_DoubleType) {
  {
    OpenBabel::DoubleType *arg1 = (OpenBabel::DoubleType *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_DoubleType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__DoubleType, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DoubleType" "', argument " "1"" of type '" "OpenBabel::DoubleType *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::DoubleType * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_DoubleMultiply) {
  {
    unsigned int arg1 ;
    unsigned int arg2 ;
    OpenBabel::DoubleType *arg3 = (OpenBabel::DoubleType *) 0 ;
    unsigned int val1 ;
    int ecode1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: DoubleMultiply(unsigned int,unsigned int,OpenBabel::DoubleType *);");
    }
    ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DoubleMultiply" "', argument " "1"" of type '" "unsigned int""'");
    } 
    arg1 = static_cast< unsigned int >(val1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DoubleMultiply" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__DoubleType, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DoubleMultiply" "', argument " "3"" of type '" "OpenBabel::DoubleType *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::DoubleType * >(argp3);
    OpenBabel::DoubleMultiply(arg1,arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_DoubleAdd) {
  {
    OpenBabel::DoubleType *arg1 = (OpenBabel::DoubleType *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: DoubleAdd(OpenBabel::DoubleType *,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__DoubleType, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DoubleAdd" "', argument " "1"" of type '" "OpenBabel::DoubleType *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::DoubleType * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DoubleAdd" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    OpenBabel::DoubleAdd(arg1,arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_DoubleModulus) {
  {
    OpenBabel::DoubleType *arg1 = (OpenBabel::DoubleType *) 0 ;
    unsigned int arg2 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: DoubleModulus(OpenBabel::DoubleType *,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__DoubleType, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DoubleModulus" "', argument " "1"" of type '" "OpenBabel::DoubleType *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::DoubleType * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DoubleModulus" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (unsigned int)OpenBabel::DoubleModulus(arg1,arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRandom__SWIG_0) {
  {
    bool arg1 ;
    OpenBabel::OBRandom *result = 0 ;
    bool val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBRandom(useSys);");
    }
    ecode1 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OBRandom" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
    result = (OpenBabel::OBRandom *)new OpenBabel::OBRandom(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRandom, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRandom__SWIG_1) {
  {
    OpenBabel::OBRandom *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBRandom();");
    }
    result = (OpenBabel::OBRandom *)new OpenBabel::OBRandom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRandom, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRandom) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBRandom__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBRandom__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBRandom'");
  XSRETURN(0);
}


XS(_wrap_OBRandom_Seed) {
  {
    OpenBabel::OBRandom *arg1 = (OpenBabel::OBRandom *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRandom_Seed(self,seed);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRandom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRandom_Seed" "', argument " "1"" of type '" "OpenBabel::OBRandom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRandom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBRandom_Seed" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->Seed(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRandom_TimeSeed) {
  {
    OpenBabel::OBRandom *arg1 = (OpenBabel::OBRandom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRandom_TimeSeed(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRandom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRandom_TimeSeed" "', argument " "1"" of type '" "OpenBabel::OBRandom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRandom * >(argp1);
    (arg1)->TimeSeed();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRandom_NextInt) {
  {
    OpenBabel::OBRandom *arg1 = (OpenBabel::OBRandom *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRandom_NextInt(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRandom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRandom_NextInt" "', argument " "1"" of type '" "OpenBabel::OBRandom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRandom * >(argp1);
    result = (int)(arg1)->NextInt();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRandom_NextFloat) {
  {
    OpenBabel::OBRandom *arg1 = (OpenBabel::OBRandom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRandom_NextFloat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRandom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRandom_NextFloat" "', argument " "1"" of type '" "OpenBabel::OBRandom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRandom * >(argp1);
    result = (double)(arg1)->NextFloat();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBRandom) {
  {
    OpenBabel::OBRandom *arg1 = (OpenBabel::OBRandom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBRandom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRandom, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBRandom" "', argument " "1"" of type '" "OpenBabel::OBRandom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRandom * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBStopwatch_Start) {
  {
    OpenBabel::OBStopwatch *arg1 = (OpenBabel::OBStopwatch *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBStopwatch_Start(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBStopwatch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBStopwatch_Start" "', argument " "1"" of type '" "OpenBabel::OBStopwatch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBStopwatch * >(argp1);
    (arg1)->Start();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBStopwatch_Lap) {
  {
    OpenBabel::OBStopwatch *arg1 = (OpenBabel::OBStopwatch *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBStopwatch_Lap(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBStopwatch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBStopwatch_Lap" "', argument " "1"" of type '" "OpenBabel::OBStopwatch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBStopwatch * >(argp1);
    result = (double)(arg1)->Lap();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBStopwatch_Elapsed) {
  {
    OpenBabel::OBStopwatch *arg1 = (OpenBabel::OBStopwatch *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBStopwatch_Elapsed(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBStopwatch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBStopwatch_Elapsed" "', argument " "1"" of type '" "OpenBabel::OBStopwatch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBStopwatch * >(argp1);
    result = (double)(arg1)->Elapsed();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBStopwatch) {
  {
    OpenBabel::OBStopwatch *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBStopwatch();");
    }
    result = (OpenBabel::OBStopwatch *)new OpenBabel::OBStopwatch();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBStopwatch, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBStopwatch) {
  {
    OpenBabel::OBStopwatch *arg1 = (OpenBabel::OBStopwatch *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBStopwatch(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBStopwatch, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBStopwatch" "', argument " "1"" of type '" "OpenBabel::OBStopwatch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBStopwatch * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSqrtTbl__SWIG_0) {
  {
    OpenBabel::OBSqrtTbl *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBSqrtTbl();");
    }
    result = (OpenBabel::OBSqrtTbl *)new OpenBabel::OBSqrtTbl();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSqrtTbl, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSqrtTbl__SWIG_1) {
  {
    double arg1 ;
    double arg2 ;
    OpenBabel::OBSqrtTbl *result = 0 ;
    double val1 ;
    int ecode1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_OBSqrtTbl(max,incr);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OBSqrtTbl" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_OBSqrtTbl" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    result = (OpenBabel::OBSqrtTbl *)new OpenBabel::OBSqrtTbl(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSqrtTbl, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSqrtTbl) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBSqrtTbl__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBSqrtTbl__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBSqrtTbl'");
  XSRETURN(0);
}


XS(_wrap_delete_OBSqrtTbl) {
  {
    OpenBabel::OBSqrtTbl *arg1 = (OpenBabel::OBSqrtTbl *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBSqrtTbl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSqrtTbl, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBSqrtTbl" "', argument " "1"" of type '" "OpenBabel::OBSqrtTbl *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSqrtTbl * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSqrtTbl_Sqrt) {
  {
    OpenBabel::OBSqrtTbl *arg1 = (OpenBabel::OBSqrtTbl *) 0 ;
    double arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSqrtTbl_Sqrt(self,d2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSqrtTbl, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSqrtTbl_Sqrt" "', argument " "1"" of type '" "OpenBabel::OBSqrtTbl const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSqrtTbl * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBSqrtTbl_Sqrt" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    result = (double)((OpenBabel::OBSqrtTbl const *)arg1)->Sqrt(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSqrtTbl_Init) {
  {
    OpenBabel::OBSqrtTbl *arg1 = (OpenBabel::OBSqrtTbl *) 0 ;
    double arg2 ;
    double arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBSqrtTbl_Init(self,max,incr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSqrtTbl, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSqrtTbl_Init" "', argument " "1"" of type '" "OpenBabel::OBSqrtTbl *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSqrtTbl * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBSqrtTbl_Init" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBSqrtTbl_Init" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    (arg1)->Init(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vector3__SWIG_0) {
  {
    double arg1 ;
    double arg2 ;
    double arg3 ;
    OpenBabel::vector3 *result = 0 ;
    double val1 ;
    int ecode1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_vector3(inX,inY,inZ);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vector3" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vector3" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_vector3" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    result = (OpenBabel::vector3 *)new OpenBabel::vector3(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vector3__SWIG_1) {
  {
    double arg1 ;
    double arg2 ;
    OpenBabel::vector3 *result = 0 ;
    double val1 ;
    int ecode1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_vector3(inX,inY);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vector3" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_vector3" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    result = (OpenBabel::vector3 *)new OpenBabel::vector3(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vector3__SWIG_2) {
  {
    double arg1 ;
    OpenBabel::vector3 *result = 0 ;
    double val1 ;
    int ecode1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vector3(inX);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_vector3" "', argument " "1"" of type '" "double""'");
    } 
    arg1 = static_cast< double >(val1);
    result = (OpenBabel::vector3 *)new OpenBabel::vector3(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vector3__SWIG_3) {
  {
    OpenBabel::vector3 *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_vector3();");
    }
    result = (OpenBabel::vector3 *)new OpenBabel::vector3();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_vector3__SWIG_4) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    OpenBabel::vector3 *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_vector3(v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_vector3" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_vector3" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    result = (OpenBabel::vector3 *)new OpenBabel::vector3((OpenBabel::vector3 const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_vector3) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vector3__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vector3__SWIG_4); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vector3__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vector3__SWIG_1); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_vector3__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_vector3'");
  XSRETURN(0);
}


XS(_wrap_vector3_Set__SWIG_0) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: vector3_Set(self,inX,inY,inZ);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_Set" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector3_Set" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vector3_Set" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "vector3_Set" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    (arg1)->Set(arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_Set__SWIG_1) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double *arg2 = (double *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3_Set(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_Set" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vector3_Set" "', argument " "2"" of type '" "double const *""'"); 
    }
    arg2 = reinterpret_cast< double * >(argp2);
    (arg1)->Set((double const *)arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_Set) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_Set__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_Set__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'vector3_Set'");
  XSRETURN(0);
}


XS(_wrap_vector3_SetX) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3_SetX(self,inX);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_SetX" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector3_SetX" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (arg1)->SetX(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_SetY) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3_SetY(self,inY);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_SetY" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector3_SetY" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (arg1)->SetY(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_SetZ) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3_SetZ(self,inZ);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_SetZ" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector3_SetZ" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (arg1)->SetZ(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_Get) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double *arg2 = (double *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3_Get(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_Get" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vector3_Get" "', argument " "2"" of type '" "double *""'"); 
    }
    arg2 = reinterpret_cast< double * >(argp2);
    (arg1)->Get(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_AsArray) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_AsArray(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_AsArray" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    result = (double *)(arg1)->AsArray();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_randomUnitVector__SWIG_0) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    OpenBabel::OBRandom *arg2 = (OpenBabel::OBRandom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3_randomUnitVector(self,oeRand);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_randomUnitVector" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBRandom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vector3_randomUnitVector" "', argument " "2"" of type '" "OpenBabel::OBRandom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBRandom * >(argp2);
    (arg1)->randomUnitVector(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_randomUnitVector__SWIG_1) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_randomUnitVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_randomUnitVector" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    (arg1)->randomUnitVector();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_randomUnitVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBRandom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_randomUnitVector__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_randomUnitVector__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'vector3_randomUnitVector'");
  XSRETURN(0);
}


XS(_wrap_vector3_normalize) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    OpenBabel::vector3 *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_normalize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_normalize" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    {
      OpenBabel::vector3 &_result_ref = (arg1)->normalize();
      result = (OpenBabel::vector3 *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_CanBeNormalized) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_CanBeNormalized(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_CanBeNormalized" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    result = (bool)((OpenBabel::vector3 const *)arg1)->CanBeNormalized();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_length_2) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_length_2(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_length_2" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    result = (double)((OpenBabel::vector3 const *)arg1)->length_2();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_length) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_length(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_length" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    result = (double)((OpenBabel::vector3 const *)arg1)->length();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_x__SWIG_0) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_x(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_x" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    {
      double const &_result_ref = ((OpenBabel::vector3 const *)arg1)->x();
      result = (double *) &_result_ref;
    }
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_y__SWIG_0) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_y(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_y" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    {
      double const &_result_ref = ((OpenBabel::vector3 const *)arg1)->y();
      result = (double *) &_result_ref;
    }
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_z__SWIG_0) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_z(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_z" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    {
      double const &_result_ref = ((OpenBabel::vector3 const *)arg1)->z();
      result = (double *) &_result_ref;
    }
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_x__SWIG_1) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_x(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_x" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    {
      double &_result_ref = (arg1)->x();
      result = (double *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_x) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_x__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_x__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'vector3_x'");
  XSRETURN(0);
}


XS(_wrap_vector3_y__SWIG_1) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_y(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_y" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    {
      double &_result_ref = (arg1)->y();
      result = (double *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_y) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_y__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_y__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'vector3_y'");
  XSRETURN(0);
}


XS(_wrap_vector3_z__SWIG_1) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: vector3_z(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_z" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    {
      double &_result_ref = (arg1)->z();
      result = (double *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_z) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_z__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_vector3_z__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'vector3_z'");
  XSRETURN(0);
}


XS(_wrap_vector3___eq__) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3___eq__(self,OpenBabel::vector3 const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3___eq__" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vector3___eq__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector3___eq__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = (int)((OpenBabel::vector3 const *)arg1)->operator ==((OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3___ne__) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3___ne__(self,other);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3___ne__" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vector3___ne__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector3___ne__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = (int)((OpenBabel::vector3 const *)arg1)->operator !=((OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_IsApprox) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double *arg3 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    double temp3 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: vector3_IsApprox(self,other,precision);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_IsApprox" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vector3_IsApprox" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector3_IsApprox" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vector3_IsApprox" "', argument " "3"" of type '" "double""'");
    } 
    temp3 = static_cast< double >(val3);
    arg3 = &temp3;
    result = (bool)((OpenBabel::vector3 const *)arg1)->IsApprox((OpenBabel::vector3 const &)*arg2,(double const &)*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_distSq) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3_distSq(self,vv);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_distSq" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vector3_distSq" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector3_distSq" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = (double)((OpenBabel::vector3 const *)arg1)->distSq((OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vector3_createOrthoVector) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vector3_createOrthoVector(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector3_createOrthoVector" "', argument " "1"" of type '" "OpenBabel::vector3 const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vector3_createOrthoVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector3_createOrthoVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = (bool)((OpenBabel::vector3 const *)arg1)->createOrthoVector(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_vector3) {
  {
    OpenBabel::vector3 *arg1 = (OpenBabel::vector3 *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_vector3(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_vector3" "', argument " "1"" of type '" "OpenBabel::vector3 *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap___lshift__) {
  {
    std::ostream *arg1 = 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    std::ostream *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __lshift__(std::ostream &,OpenBabel::vector3 const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__ostream,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "1"" of type '" "std::ostream &""'"); 
    }
    arg1 = reinterpret_cast< std::ostream * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__lshift__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__lshift__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    {
      std::ostream &_result_ref = OpenBabel::operator <<(*arg1,(OpenBabel::vector3 const &)*arg2);
      result = (std::ostream *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___add__) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    OpenBabel::vector3 result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __add__(v1,v2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__add__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__add__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__add__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__add__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = OpenBabel::operator +((OpenBabel::vector3 const &)*arg1,(OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___sub____SWIG_0) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    OpenBabel::vector3 result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __sub__(v1,v2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__sub__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__sub__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__sub__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__sub__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = OpenBabel::operator -((OpenBabel::vector3 const &)*arg1,(OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___sub____SWIG_1) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    OpenBabel::vector3 result;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: __sub__(v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__sub__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__sub__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    result = OpenBabel::operator -((OpenBabel::vector3 const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap___sub__) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap___sub____SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap___sub____SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded '__sub__'");
  XSRETURN(0);
}


XS(_wrap___mul____SWIG_0) {
  {
    double *arg1 = 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    OpenBabel::vector3 result;
    double temp1 ;
    double val1 ;
    int ecode1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __mul__(c,v);");
    }
    ecode1 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "__mul__" "', argument " "1"" of type '" "double""'");
    } 
    temp1 = static_cast< double >(val1);
    arg1 = &temp1;
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__mul__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__mul__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = OpenBabel::operator *((double const &)*arg1,(OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___mul____SWIG_1) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    double *arg2 = 0 ;
    OpenBabel::vector3 result;
    void *argp1 ;
    int res1 = 0 ;
    double temp2 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __mul__(v,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__mul__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__mul__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "__mul__" "', argument " "2"" of type '" "double""'");
    } 
    temp2 = static_cast< double >(val2);
    arg2 = &temp2;
    result = OpenBabel::operator *((OpenBabel::vector3 const &)*arg1,(double const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___div__) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    double *arg2 = 0 ;
    OpenBabel::vector3 result;
    void *argp1 ;
    int res1 = 0 ;
    double temp2 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __div__(v,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__div__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__div__" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "__div__" "', argument " "2"" of type '" "double""'");
    } 
    temp2 = static_cast< double >(val2);
    arg2 = &temp2;
    result = OpenBabel::operator /((OpenBabel::vector3 const &)*arg1,(double const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___mul____SWIG_2) {
  {
    OpenBabel::matrix3x3 *arg1 = 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    OpenBabel::vector3 result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: __mul__(m,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__matrix3x3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "__mul__" "', argument " "1"" of type '" "OpenBabel::matrix3x3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__mul__" "', argument " "1"" of type '" "OpenBabel::matrix3x3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::matrix3x3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "__mul__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "__mul__" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = OpenBabel::operator *((OpenBabel::matrix3x3 const &)*arg1,(OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap___mul__) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__matrix3x3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap___mul____SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap___mul____SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap___mul____SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded '__mul__'");
  XSRETURN(0);
}


XS(_wrap_dot) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: dot(v1,v2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dot" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dot" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dot" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dot" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = (double)OpenBabel::dot((OpenBabel::vector3 const &)*arg1,(OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_cross) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    OpenBabel::vector3 result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: cross(OpenBabel::vector3 const &,OpenBabel::vector3 const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cross" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cross" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "cross" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "cross" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = OpenBabel::cross((OpenBabel::vector3 const &)*arg1,(OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_vectorAngle) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: vectorAngle(v1,v2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vectorAngle" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorAngle" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "vectorAngle" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vectorAngle" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    result = (double)OpenBabel::vectorAngle((OpenBabel::vector3 const &)*arg1,(OpenBabel::vector3 const &)*arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_CalcTorsionAngle) {
  {
    OpenBabel::vector3 *arg1 = 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    OpenBabel::vector3 *arg3 = 0 ;
    OpenBabel::vector3 *arg4 = 0 ;
    double result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: CalcTorsionAngle(a,b,c,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CalcTorsionAngle" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CalcTorsionAngle" "', argument " "1"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::vector3 * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CalcTorsionAngle" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CalcTorsionAngle" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CalcTorsionAngle" "', argument " "3"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CalcTorsionAngle" "', argument " "3"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::vector3 * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CalcTorsionAngle" "', argument " "4"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CalcTorsionAngle" "', argument " "4"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::vector3 * >(argp4);
    result = (double)OpenBabel::CalcTorsionAngle((OpenBabel::vector3 const &)*arg1,(OpenBabel::vector3 const &)*arg2,(OpenBabel::vector3 const &)*arg3,(OpenBabel::vector3 const &)*arg4);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_Point2Plane) {
  {
    OpenBabel::vector3 arg1 ;
    OpenBabel::vector3 arg2 ;
    OpenBabel::vector3 arg3 ;
    OpenBabel::vector3 arg4 ;
    double result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: Point2Plane(a,b,c,d);");
    }
    {
      res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__vector3,  0 );
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point2Plane" "', argument " "1"" of type '" "OpenBabel::vector3""'"); 
      }  
      if (!argp1) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point2Plane" "', argument " "1"" of type '" "OpenBabel::vector3""'");
      } else {
        arg1 = *(reinterpret_cast< OpenBabel::vector3 * >(argp1));
      }
    }
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point2Plane" "', argument " "2"" of type '" "OpenBabel::vector3""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point2Plane" "', argument " "2"" of type '" "OpenBabel::vector3""'");
      } else {
        arg2 = *(reinterpret_cast< OpenBabel::vector3 * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__vector3,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Point2Plane" "', argument " "3"" of type '" "OpenBabel::vector3""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point2Plane" "', argument " "3"" of type '" "OpenBabel::vector3""'");
      } else {
        arg3 = *(reinterpret_cast< OpenBabel::vector3 * >(argp3));
      }
    }
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_OpenBabel__vector3,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Point2Plane" "', argument " "4"" of type '" "OpenBabel::vector3""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Point2Plane" "', argument " "4"" of type '" "OpenBabel::vector3""'");
      } else {
        arg4 = *(reinterpret_cast< OpenBabel::vector3 * >(argp4));
      }
    }
    result = (double)OpenBabel::Point2Plane(arg1,arg2,arg3,arg4);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_Trim) {
  {
    std::string *arg1 = 0 ;
    std::string *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: Trim(txt);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Trim" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Trim" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    {
      std::string &_result_ref = OpenBabel::Trim(*arg1);
      result = (std::string *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBGenericData__SWIG_0) {
  {
    std::string arg1 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_OBGenericData(attr,type);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_OBGenericData" "', argument " "1"" of type '" "std::string const""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_OBGenericData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)new OpenBabel::OBGenericData(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBGenericData__SWIG_1) {
  {
    std::string arg1 ;
    OpenBabel::OBGenericData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBGenericData(attr);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_OBGenericData" "', argument " "1"" of type '" "std::string const""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = (OpenBabel::OBGenericData *)new OpenBabel::OBGenericData(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBGenericData__SWIG_2) {
  {
    OpenBabel::OBGenericData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBGenericData();");
    }
    result = (OpenBabel::OBGenericData *)new OpenBabel::OBGenericData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBGenericData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBGenericData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBGenericData__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBGenericData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBGenericData'");
  XSRETURN(0);
}


XS(_wrap_OBGenericData_Clone) {
  {
    OpenBabel::OBGenericData *arg1 = (OpenBabel::OBGenericData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBGenericData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGenericData_Clone" "', argument " "1"" of type '" "OpenBabel::OBGenericData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGenericData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBGenericData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBGenericData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBGenericData) {
  {
    OpenBabel::OBGenericData *arg1 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBGenericData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGenericData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBGenericData" "', argument " "1"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGenericData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBGenericData_SetAttribute) {
  {
    OpenBabel::OBGenericData *arg1 = (OpenBabel::OBGenericData *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBGenericData_SetAttribute(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGenericData_SetAttribute" "', argument " "1"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGenericData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBGenericData_SetAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBGenericData_SetAttribute" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetAttribute((std::string const &)*arg2);
    
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBGenericData_GetAttribute) {
  {
    OpenBabel::OBGenericData *arg1 = (OpenBabel::OBGenericData *) 0 ;
    std::string *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBGenericData_GetAttribute(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGenericData_GetAttribute" "', argument " "1"" of type '" "OpenBabel::OBGenericData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGenericData * >(argp1);
    {
      std::string const &_result_ref = ((OpenBabel::OBGenericData const *)arg1)->GetAttribute();
      result = (std::string *) &_result_ref;
    }
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBGenericData_GetDataType) {
  {
    OpenBabel::OBGenericData *arg1 = (OpenBabel::OBGenericData *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBGenericData_GetDataType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGenericData_GetDataType" "', argument " "1"" of type '" "OpenBabel::OBGenericData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGenericData * >(argp1);
    result = (unsigned int)((OpenBabel::OBGenericData const *)arg1)->GetDataType();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBGenericData_GetValue) {
  {
    OpenBabel::OBGenericData *arg1 = (OpenBabel::OBGenericData *) 0 ;
    std::string *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBGenericData_GetValue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBGenericData_GetValue" "', argument " "1"" of type '" "OpenBabel::OBGenericData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBGenericData * >(argp1);
    {
      std::string const &_result_ref = ((OpenBabel::OBGenericData const *)arg1)->GetValue();
      result = (std::string *) &_result_ref;
    }
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBCommentData__SWIG_0) {
  {
    OpenBabel::OBCommentData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBCommentData();");
    }
    result = (OpenBabel::OBCommentData *)new OpenBabel::OBCommentData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBCommentData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBCommentData__SWIG_1) {
  {
    OpenBabel::OBCommentData *arg1 = 0 ;
    OpenBabel::OBCommentData *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBCommentData(OpenBabel::OBCommentData const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBCommentData,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBCommentData" "', argument " "1"" of type '" "OpenBabel::OBCommentData const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBCommentData" "', argument " "1"" of type '" "OpenBabel::OBCommentData const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBCommentData * >(argp1);
    result = (OpenBabel::OBCommentData *)new OpenBabel::OBCommentData((OpenBabel::OBCommentData const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBCommentData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBCommentData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBCommentData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBCommentData__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBCommentData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBCommentData'");
  XSRETURN(0);
}


XS(_wrap_OBCommentData_Clone) {
  {
    OpenBabel::OBCommentData *arg1 = (OpenBabel::OBCommentData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBCommentData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBCommentData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBCommentData_Clone" "', argument " "1"" of type '" "OpenBabel::OBCommentData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBCommentData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBCommentData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBCommentData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBCommentData_SetData__SWIG_0) {
  {
    OpenBabel::OBCommentData *arg1 = (OpenBabel::OBCommentData *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBCommentData_SetData(self,data);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBCommentData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBCommentData_SetData" "', argument " "1"" of type '" "OpenBabel::OBCommentData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBCommentData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBCommentData_SetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBCommentData_SetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetData((std::string const &)*arg2);
    
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBCommentData_SetData__SWIG_1) {
  {
    OpenBabel::OBCommentData *arg1 = (OpenBabel::OBCommentData *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBCommentData_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBCommentData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBCommentData_SetData" "', argument " "1"" of type '" "OpenBabel::OBCommentData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBCommentData * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBCommentData_SetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->SetData((char const *)arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBCommentData_SetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBCommentData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBCommentData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBCommentData_SetData__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBCommentData_SetData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBCommentData_SetData'");
  XSRETURN(0);
}


XS(_wrap_OBCommentData_GetData) {
  {
    OpenBabel::OBCommentData *arg1 = (OpenBabel::OBCommentData *) 0 ;
    std::string *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBCommentData_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBCommentData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBCommentData_GetData" "', argument " "1"" of type '" "OpenBabel::OBCommentData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBCommentData * >(argp1);
    {
      std::string const &_result_ref = ((OpenBabel::OBCommentData const *)arg1)->GetData();
      result = (std::string *) &_result_ref;
    }
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBCommentData_GetValue) {
  {
    OpenBabel::OBCommentData *arg1 = (OpenBabel::OBCommentData *) 0 ;
    std::string *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBCommentData_GetValue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBCommentData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBCommentData_GetValue" "', argument " "1"" of type '" "OpenBabel::OBCommentData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBCommentData * >(argp1);
    {
      std::string const &_result_ref = ((OpenBabel::OBCommentData const *)arg1)->GetValue();
      result = (std::string *) &_result_ref;
    }
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBCommentData) {
  {
    OpenBabel::OBCommentData *arg1 = (OpenBabel::OBCommentData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBCommentData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBCommentData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBCommentData" "', argument " "1"" of type '" "OpenBabel::OBCommentData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBCommentData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBExternalBond__SWIG_0) {
  {
    OpenBabel::OBExternalBond *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBExternalBond();");
    }
    result = (OpenBabel::OBExternalBond *)new OpenBabel::OBExternalBond();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBExternalBond, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBExternalBond__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    int arg3 ;
    OpenBabel::OBExternalBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_OBExternalBond(OpenBabel::OBAtom *,OpenBabel::OBBond *,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBExternalBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBExternalBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_OBExternalBond" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (OpenBabel::OBExternalBond *)new OpenBabel::OBExternalBond(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBExternalBond, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBExternalBond__SWIG_2) {
  {
    OpenBabel::OBExternalBond *arg1 = 0 ;
    OpenBabel::OBExternalBond *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBExternalBond(OpenBabel::OBExternalBond const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBExternalBond,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBExternalBond" "', argument " "1"" of type '" "OpenBabel::OBExternalBond const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBExternalBond" "', argument " "1"" of type '" "OpenBabel::OBExternalBond const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBond * >(argp1);
    result = (OpenBabel::OBExternalBond *)new OpenBabel::OBExternalBond((OpenBabel::OBExternalBond const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBExternalBond, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBExternalBond) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBExternalBond, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBond, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBExternalBond__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBExternalBond__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBExternalBond__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBExternalBond'");
  XSRETURN(0);
}


XS(_wrap_delete_OBExternalBond) {
  {
    OpenBabel::OBExternalBond *arg1 = (OpenBabel::OBExternalBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBExternalBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBond, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBExternalBond" "', argument " "1"" of type '" "OpenBabel::OBExternalBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBond * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBExternalBond_GetIdx) {
  {
    OpenBabel::OBExternalBond *arg1 = (OpenBabel::OBExternalBond *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBExternalBond_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBExternalBond_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBExternalBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBond * >(argp1);
    result = (int)((OpenBabel::OBExternalBond const *)arg1)->GetIdx();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBExternalBond_GetAtom) {
  {
    OpenBabel::OBExternalBond *arg1 = (OpenBabel::OBExternalBond *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBExternalBond_GetAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBExternalBond_GetAtom" "', argument " "1"" of type '" "OpenBabel::OBExternalBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBond * >(argp1);
    result = (OpenBabel::OBAtom *)((OpenBabel::OBExternalBond const *)arg1)->GetAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBExternalBond_GetBond) {
  {
    OpenBabel::OBExternalBond *arg1 = (OpenBabel::OBExternalBond *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBExternalBond_GetBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBExternalBond_GetBond" "', argument " "1"" of type '" "OpenBabel::OBExternalBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBond * >(argp1);
    result = (OpenBabel::OBBond *)((OpenBabel::OBExternalBond const *)arg1)->GetBond();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBExternalBond_SetIdx) {
  {
    OpenBabel::OBExternalBond *arg1 = (OpenBabel::OBExternalBond *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBExternalBond_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBExternalBond_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBExternalBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBond * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBExternalBond_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBExternalBond_SetAtom) {
  {
    OpenBabel::OBExternalBond *arg1 = (OpenBabel::OBExternalBond *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBExternalBond_SetAtom(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBExternalBond_SetAtom" "', argument " "1"" of type '" "OpenBabel::OBExternalBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBond * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBExternalBond_SetAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (arg1)->SetAtom(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBExternalBond_SetBond) {
  {
    OpenBabel::OBExternalBond *arg1 = (OpenBabel::OBExternalBond *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBExternalBond_SetBond(self,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBExternalBond_SetBond" "', argument " "1"" of type '" "OpenBabel::OBExternalBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBond * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBExternalBond_SetBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    (arg1)->SetBond(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBExternalBondData) {
  {
    OpenBabel::OBExternalBondData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBExternalBondData();");
    }
    result = (OpenBabel::OBExternalBondData *)new OpenBabel::OBExternalBondData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBExternalBondData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBExternalBondData_Clone) {
  {
    OpenBabel::OBExternalBondData *arg1 = (OpenBabel::OBExternalBondData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBExternalBondData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBondData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBExternalBondData_Clone" "', argument " "1"" of type '" "OpenBabel::OBExternalBondData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBondData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBExternalBondData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBExternalBondData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBExternalBondData_SetData) {
  {
    OpenBabel::OBExternalBondData *arg1 = (OpenBabel::OBExternalBondData *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *arg3 = (OpenBabel::OBBond *) 0 ;
    int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBExternalBondData_SetData(self,OpenBabel::OBAtom *,OpenBabel::OBBond *,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBondData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBExternalBondData_SetData" "', argument " "1"" of type '" "OpenBabel::OBExternalBondData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBondData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBExternalBondData_SetData" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBExternalBondData_SetData" "', argument " "3"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBond * >(argp3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBExternalBondData_SetData" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    (arg1)->SetData(arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBExternalBondData_GetData) {
  {
    OpenBabel::OBExternalBondData *arg1 = (OpenBabel::OBExternalBondData *) 0 ;
    std::vector<OpenBabel::OBExternalBond > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBExternalBondData_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBondData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBExternalBondData_GetData" "', argument " "1"" of type '" "OpenBabel::OBExternalBondData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBondData * >(argp1);
    result = (std::vector<OpenBabel::OBExternalBond > *)(arg1)->GetData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBExternalBond_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBExternalBondData) {
  {
    OpenBabel::OBExternalBondData *arg1 = (OpenBabel::OBExternalBondData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBExternalBondData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBExternalBondData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBExternalBondData" "', argument " "1"" of type '" "OpenBabel::OBExternalBondData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBExternalBondData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBPairData) {
  {
    OpenBabel::OBPairData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBPairData();");
    }
    result = (OpenBabel::OBPairData *)new OpenBabel::OBPairData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBPairData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBPairData_Clone) {
  {
    OpenBabel::OBPairData *arg1 = (OpenBabel::OBPairData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBPairData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBPairData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBPairData_Clone" "', argument " "1"" of type '" "OpenBabel::OBPairData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBPairData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBPairData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBPairData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBPairData_SetValue__SWIG_0) {
  {
    OpenBabel::OBPairData *arg1 = (OpenBabel::OBPairData *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBPairData_SetValue(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBPairData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBPairData_SetValue" "', argument " "1"" of type '" "OpenBabel::OBPairData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBPairData * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBPairData_SetValue" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->SetValue((char const *)arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBPairData_SetValue__SWIG_1) {
  {
    OpenBabel::OBPairData *arg1 = (OpenBabel::OBPairData *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBPairData_SetValue(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBPairData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBPairData_SetValue" "', argument " "1"" of type '" "OpenBabel::OBPairData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBPairData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBPairData_SetValue" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBPairData_SetValue" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetValue((std::string const &)*arg2);
    
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBPairData_SetValue) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBPairData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBPairData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBPairData_SetValue__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBPairData_SetValue__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBPairData_SetValue'");
  XSRETURN(0);
}


XS(_wrap_OBPairData_GetValue) {
  {
    OpenBabel::OBPairData *arg1 = (OpenBabel::OBPairData *) 0 ;
    std::string *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBPairData_GetValue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBPairData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBPairData_GetValue" "', argument " "1"" of type '" "OpenBabel::OBPairData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBPairData * >(argp1);
    {
      std::string const &_result_ref = ((OpenBabel::OBPairData const *)arg1)->GetValue();
      result = (std::string *) &_result_ref;
    }
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBPairData) {
  {
    OpenBabel::OBPairData *arg1 = (OpenBabel::OBPairData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBPairData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBPairData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBPairData" "', argument " "1"" of type '" "OpenBabel::OBPairData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBPairData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSetData) {
  {
    OpenBabel::OBSetData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBSetData();");
    }
    result = (OpenBabel::OBSetData *)new OpenBabel::OBSetData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSetData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBSetData_Clone) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSetData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSetData_Clone" "', argument " "1"" of type '" "OpenBabel::OBSetData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSetData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBSetData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSetData_AddData) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSetData_AddData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSetData_AddData" "', argument " "1"" of type '" "OpenBabel::OBSetData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSetData_AddData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (arg1)->AddData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSetData_SetData) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSetData_SetData(self,vdata);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSetData_SetData" "', argument " "1"" of type '" "OpenBabel::OBSetData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSetData_SetData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSetData_SetData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (arg1)->SetData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSetData_GetData__SWIG_0) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSetData_GetData(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSetData_GetData" "', argument " "1"" of type '" "OpenBabel::OBSetData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSetData_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBSetData_GetData__SWIG_1) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSetData_GetData(self,s);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSetData_GetData" "', argument " "1"" of type '" "OpenBabel::OBSetData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSetData_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSetData_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBSetData_GetData__SWIG_2) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSetData_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSetData_GetData" "', argument " "1"" of type '" "OpenBabel::OBSetData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > const &_result_ref = ((OpenBabel::OBSetData const *)arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSetData_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSetData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSetData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSetData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSetData_GetData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSetData_GetData__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSetData_GetData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBSetData_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBSetData_GetBegin) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSetData_GetBegin(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSetData_GetBegin" "', argument " "1"" of type '" "OpenBabel::OBSetData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    result = (arg1)->GetBegin();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSetData_GetEnd) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSetData_GetEnd(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSetData_GetEnd" "', argument " "1"" of type '" "OpenBabel::OBSetData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    result = (arg1)->GetEnd();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSetData_DeleteData) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSetData_DeleteData(self,gd);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSetData_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBSetData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSetData_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBSetData) {
  {
    OpenBabel::OBSetData *arg1 = (OpenBabel::OBSetData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBSetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSetData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBSetData" "', argument " "1"" of type '" "OpenBabel::OBSetData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSetData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBVirtualBond__SWIG_0) {
  {
    OpenBabel::OBVirtualBond *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBVirtualBond();");
    }
    result = (OpenBabel::OBVirtualBond *)new OpenBabel::OBVirtualBond();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBVirtualBond, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBVirtualBond_Clone) {
  {
    OpenBabel::OBVirtualBond *arg1 = (OpenBabel::OBVirtualBond *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBVirtualBond_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBVirtualBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBVirtualBond_Clone" "', argument " "1"" of type '" "OpenBabel::OBVirtualBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBVirtualBond * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBVirtualBond_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBVirtualBond const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBVirtualBond__SWIG_1) {
  {
    int arg1 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    OpenBabel::OBVirtualBond *result = 0 ;
    int val1 ;
    int ecode1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_OBVirtualBond(int,int,int,stereo);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OBVirtualBond" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_OBVirtualBond" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_OBVirtualBond" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_OBVirtualBond" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (OpenBabel::OBVirtualBond *)new OpenBabel::OBVirtualBond(arg1,arg2,arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBVirtualBond, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBVirtualBond__SWIG_2) {
  {
    int arg1 ;
    int arg2 ;
    int arg3 ;
    OpenBabel::OBVirtualBond *result = 0 ;
    int val1 ;
    int ecode1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_OBVirtualBond(int,int,int);");
    }
    ecode1 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_OBVirtualBond" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_OBVirtualBond" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_OBVirtualBond" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (OpenBabel::OBVirtualBond *)new OpenBabel::OBVirtualBond(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBVirtualBond, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBVirtualBond) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(0), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBVirtualBond__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBVirtualBond__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBVirtualBond__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBVirtualBond'");
  XSRETURN(0);
}


XS(_wrap_OBVirtualBond_GetBgn) {
  {
    OpenBabel::OBVirtualBond *arg1 = (OpenBabel::OBVirtualBond *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBVirtualBond_GetBgn(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBVirtualBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBVirtualBond_GetBgn" "', argument " "1"" of type '" "OpenBabel::OBVirtualBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBVirtualBond * >(argp1);
    result = (int)(arg1)->GetBgn();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBVirtualBond_GetEnd) {
  {
    OpenBabel::OBVirtualBond *arg1 = (OpenBabel::OBVirtualBond *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBVirtualBond_GetEnd(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBVirtualBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBVirtualBond_GetEnd" "', argument " "1"" of type '" "OpenBabel::OBVirtualBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBVirtualBond * >(argp1);
    result = (int)(arg1)->GetEnd();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBVirtualBond_GetOrder) {
  {
    OpenBabel::OBVirtualBond *arg1 = (OpenBabel::OBVirtualBond *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBVirtualBond_GetOrder(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBVirtualBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBVirtualBond_GetOrder" "', argument " "1"" of type '" "OpenBabel::OBVirtualBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBVirtualBond * >(argp1);
    result = (int)(arg1)->GetOrder();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBVirtualBond_GetStereo) {
  {
    OpenBabel::OBVirtualBond *arg1 = (OpenBabel::OBVirtualBond *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBVirtualBond_GetStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBVirtualBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBVirtualBond_GetStereo" "', argument " "1"" of type '" "OpenBabel::OBVirtualBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBVirtualBond * >(argp1);
    result = (int)(arg1)->GetStereo();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBVirtualBond) {
  {
    OpenBabel::OBVirtualBond *arg1 = (OpenBabel::OBVirtualBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBVirtualBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBVirtualBond, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBVirtualBond" "', argument " "1"" of type '" "OpenBabel::OBVirtualBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBVirtualBond * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRingData__SWIG_0) {
  {
    OpenBabel::OBRingData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBRingData();");
    }
    result = (OpenBabel::OBRingData *)new OpenBabel::OBRingData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRingData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRingData__SWIG_1) {
  {
    OpenBabel::OBRingData *arg1 = 0 ;
    OpenBabel::OBRingData *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBRingData(OpenBabel::OBRingData const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBRingData,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBRingData" "', argument " "1"" of type '" "OpenBabel::OBRingData const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBRingData" "', argument " "1"" of type '" "OpenBabel::OBRingData const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingData * >(argp1);
    result = (OpenBabel::OBRingData *)new OpenBabel::OBRingData((OpenBabel::OBRingData const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRingData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRingData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBRingData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBRingData__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBRingData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBRingData'");
  XSRETURN(0);
}


XS(_wrap_OBRingData_Clone) {
  {
    OpenBabel::OBRingData *arg1 = (OpenBabel::OBRingData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRingData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingData_Clone" "', argument " "1"" of type '" "OpenBabel::OBRingData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRingData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBRingData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBRingData) {
  {
    OpenBabel::OBRingData *arg1 = (OpenBabel::OBRingData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBRingData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBRingData" "', argument " "1"" of type '" "OpenBabel::OBRingData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingData_SetData) {
  {
    OpenBabel::OBRingData *arg1 = (OpenBabel::OBRingData *) 0 ;
    std::vector<OpenBabel::OBRing * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRingData_SetData(self,vr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingData_SetData" "', argument " "1"" of type '" "OpenBabel::OBRingData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBRing_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRingData_SetData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBRing * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBRingData_SetData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBRing * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBRing * > * >(argp2);
    (arg1)->SetData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingData_PushBack) {
  {
    OpenBabel::OBRingData *arg1 = (OpenBabel::OBRingData *) 0 ;
    OpenBabel::OBRing *arg2 = (OpenBabel::OBRing *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRingData_PushBack(self,r);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingData_PushBack" "', argument " "1"" of type '" "OpenBabel::OBRingData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRingData_PushBack" "', argument " "2"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBRing * >(argp2);
    (arg1)->PushBack(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingData_GetData) {
  {
    OpenBabel::OBRingData *arg1 = (OpenBabel::OBRingData *) 0 ;
    std::vector<OpenBabel::OBRing * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRingData_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingData_GetData" "', argument " "1"" of type '" "OpenBabel::OBRingData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingData * >(argp1);
    {
      std::vector<OpenBabel::OBRing * > &_result_ref = (arg1)->GetData();
      result = (std::vector<OpenBabel::OBRing * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBRing_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBUnitCell__SWIG_0) {
  {
    OpenBabel::OBUnitCell *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBUnitCell();");
    }
    result = (OpenBabel::OBUnitCell *)new OpenBabel::OBUnitCell();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBUnitCell, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBUnitCell__SWIG_1) {
  {
    OpenBabel::OBUnitCell *arg1 = 0 ;
    OpenBabel::OBUnitCell *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBUnitCell(OpenBabel::OBUnitCell const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBUnitCell,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBUnitCell" "', argument " "1"" of type '" "OpenBabel::OBUnitCell const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBUnitCell" "', argument " "1"" of type '" "OpenBabel::OBUnitCell const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (OpenBabel::OBUnitCell *)new OpenBabel::OBUnitCell((OpenBabel::OBUnitCell const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBUnitCell, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBUnitCell) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBUnitCell, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBUnitCell__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBUnitCell__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBUnitCell'");
  XSRETURN(0);
}


XS(_wrap_OBUnitCell_Clone) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBUnitCell_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_Clone" "', argument " "1"" of type '" "OpenBabel::OBUnitCell const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBUnitCell_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBUnitCell const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBUnitCell) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBUnitCell(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBUnitCell" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_SetData__SWIG_0) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    double arg7 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    double val5 ;
    int ecode5 = 0 ;
    double val6 ;
    int ecode6 = 0 ;
    double val7 ;
    int ecode7 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 7) || (items > 7)) {
      SWIG_croak("Usage: OBUnitCell_SetData(self,a,b,c,alpha,beta,gamma);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_SetData" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBUnitCell_SetData" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBUnitCell_SetData" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBUnitCell_SetData" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    ecode5 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OBUnitCell_SetData" "', argument " "5"" of type '" "double""'");
    } 
    arg5 = static_cast< double >(val5);
    ecode6 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "OBUnitCell_SetData" "', argument " "6"" of type '" "double""'");
    } 
    arg6 = static_cast< double >(val6);
    ecode7 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(6), &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "OBUnitCell_SetData" "', argument " "7"" of type '" "double""'");
    } 
    arg7 = static_cast< double >(val7);
    (arg1)->SetData(arg2,arg3,arg4,arg5,arg6,arg7);
    
    
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_SetData__SWIG_1) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    OpenBabel::vector3 arg2 ;
    OpenBabel::vector3 arg3 ;
    OpenBabel::vector3 arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    void *argp4 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBUnitCell_SetData(self,v1,v2,v3);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_SetData" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBUnitCell_SetData" "', argument " "2"" of type '" "OpenBabel::vector3 const""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBUnitCell_SetData" "', argument " "2"" of type '" "OpenBabel::vector3 const""'");
      } else {
        arg2 = *(reinterpret_cast< OpenBabel::vector3 * >(argp2));
      }
    }
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__vector3,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBUnitCell_SetData" "', argument " "3"" of type '" "OpenBabel::vector3 const""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBUnitCell_SetData" "', argument " "3"" of type '" "OpenBabel::vector3 const""'");
      } else {
        arg3 = *(reinterpret_cast< OpenBabel::vector3 * >(argp3));
      }
    }
    {
      res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_OpenBabel__vector3,  0 );
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBUnitCell_SetData" "', argument " "4"" of type '" "OpenBabel::vector3 const""'"); 
      }  
      if (!argp4) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBUnitCell_SetData" "', argument " "4"" of type '" "OpenBabel::vector3 const""'");
      } else {
        arg4 = *(reinterpret_cast< OpenBabel::vector3 * >(argp4));
      }
    }
    (arg1)->SetData(arg2,arg3,arg4);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_SetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBUnitCell, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 7) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBUnitCell, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(6), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBUnitCell_SetData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBUnitCell_SetData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBUnitCell_SetData'");
  XSRETURN(0);
}


XS(_wrap_OBUnitCell_SetOffset) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    OpenBabel::vector3 arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBUnitCell_SetOffset(self,v1);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_SetOffset" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBUnitCell_SetOffset" "', argument " "2"" of type '" "OpenBabel::vector3 const""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBUnitCell_SetOffset" "', argument " "2"" of type '" "OpenBabel::vector3 const""'");
      } else {
        arg2 = *(reinterpret_cast< OpenBabel::vector3 * >(argp2));
      }
    }
    (arg1)->SetOffset(arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_SetSpaceGroup__SWIG_0) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    std::string arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBUnitCell_SetSpaceGroup(self,sg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_SetSpaceGroup" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBUnitCell_SetSpaceGroup" "', argument " "2"" of type '" "std::string const""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    (arg1)->SetSpaceGroup(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_SetSpaceGroup__SWIG_1) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBUnitCell_SetSpaceGroup(self,sg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_SetSpaceGroup" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBUnitCell_SetSpaceGroup" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetSpaceGroup(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_SetSpaceGroup) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBUnitCell, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBUnitCell, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBUnitCell_SetSpaceGroup__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBUnitCell_SetSpaceGroup__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBUnitCell_SetSpaceGroup'");
  XSRETURN(0);
}


XS(_wrap_OBUnitCell_SetLatticeType) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    OpenBabel::OBUnitCell::LatticeType arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBUnitCell_SetLatticeType(self,lt);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_SetLatticeType" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBUnitCell_SetLatticeType" "', argument " "2"" of type '" "OpenBabel::OBUnitCell::LatticeType""'");
    } 
    arg2 = static_cast< OpenBabel::OBUnitCell::LatticeType >(val2);
    (arg1)->SetLatticeType(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetA) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetA(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetA" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (double)(arg1)->GetA();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetB) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetB(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetB" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (double)(arg1)->GetB();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetC) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetC(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetC" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (double)(arg1)->GetC();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetAlpha) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetAlpha(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetAlpha" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (double)(arg1)->GetAlpha();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetBeta) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetBeta(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetBeta" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (double)(arg1)->GetBeta();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetGamma) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetGamma(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetGamma" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (double)(arg1)->GetGamma();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetOffset) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    OpenBabel::vector3 result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetOffset(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetOffset" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (arg1)->GetOffset();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetSpaceGroup) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetSpaceGroup(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetSpaceGroup" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (arg1)->GetSpaceGroup();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetLatticeType__SWIG_0) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    int arg2 ;
    OpenBabel::OBUnitCell::LatticeType result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBUnitCell_GetLatticeType(self,spacegroup);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetLatticeType" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBUnitCell_GetLatticeType" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (OpenBabel::OBUnitCell::LatticeType)(arg1)->GetLatticeType(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetLatticeType__SWIG_1) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    OpenBabel::OBUnitCell::LatticeType result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetLatticeType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetLatticeType" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (OpenBabel::OBUnitCell::LatticeType)(arg1)->GetLatticeType();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetLatticeType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBUnitCell, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBUnitCell, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBUnitCell_GetLatticeType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBUnitCell_GetLatticeType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBUnitCell_GetLatticeType'");
  XSRETURN(0);
}


XS(_wrap_OBUnitCell_GetCellVectors) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    std::vector<OpenBabel::vector3 > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetCellVectors(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetCellVectors" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (arg1)->GetCellVectors();
    {
      int len = (&result)->size();
      SV **svs = new SV*[len];
      for (unsigned int i=0; i<len; i++) {
        OpenBabel::vector3* ptr = new OpenBabel::vector3(result[i]);
        svs[i] = sv_newmortal();
        SWIG_MakePtr(svs[i], (void*) ptr, 
          SWIGTYPE_p_OpenBabel__vector3, SWIG_SHADOW|0);
      }
      AV *myav = av_make(len, svs);
      delete[] svs;
      ST(argvi) = newRV_noinc((SV*) myav);
      sv_2mortal(ST(argvi));
      argvi++;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetCellMatrix) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    OpenBabel::matrix3x3 result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetCellMatrix(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetCellMatrix" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (arg1)->GetCellMatrix();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::matrix3x3(static_cast< const OpenBabel::matrix3x3& >(result))), SWIGTYPE_p_OpenBabel__matrix3x3, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetOrthoMatrix) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    OpenBabel::matrix3x3 result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetOrthoMatrix(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetOrthoMatrix" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (arg1)->GetOrthoMatrix();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::matrix3x3(static_cast< const OpenBabel::matrix3x3& >(result))), SWIGTYPE_p_OpenBabel__matrix3x3, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetFractionalMatrix) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    OpenBabel::matrix3x3 result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetFractionalMatrix(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetFractionalMatrix" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (arg1)->GetFractionalMatrix();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::matrix3x3(static_cast< const OpenBabel::matrix3x3& >(result))), SWIGTYPE_p_OpenBabel__matrix3x3, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetSpaceGroupNumber) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    std::string arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBUnitCell_GetSpaceGroupNumber(self,name);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetSpaceGroupNumber" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBUnitCell_GetSpaceGroupNumber" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = (int)(arg1)->GetSpaceGroupNumber(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBUnitCell_GetCellVolume) {
  {
    OpenBabel::OBUnitCell *arg1 = (OpenBabel::OBUnitCell *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBUnitCell_GetCellVolume(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBUnitCell, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBUnitCell_GetCellVolume" "', argument " "1"" of type '" "OpenBabel::OBUnitCell *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBUnitCell * >(argp1);
    result = (double)(arg1)->GetCellVolume();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBConformerData__SWIG_0) {
  {
    OpenBabel::OBConformerData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBConformerData();");
    }
    result = (OpenBabel::OBConformerData *)new OpenBabel::OBConformerData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBConformerData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBConformerData__SWIG_1) {
  {
    OpenBabel::OBConformerData *arg1 = 0 ;
    OpenBabel::OBConformerData *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBConformerData(OpenBabel::OBConformerData const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBConformerData,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBConformerData" "', argument " "1"" of type '" "OpenBabel::OBConformerData const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBConformerData" "', argument " "1"" of type '" "OpenBabel::OBConformerData const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    result = (OpenBabel::OBConformerData *)new OpenBabel::OBConformerData((OpenBabel::OBConformerData const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBConformerData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBConformerData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConformerData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBConformerData__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBConformerData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBConformerData'");
  XSRETURN(0);
}


XS(_wrap_OBConformerData_Clone) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConformerData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_Clone" "', argument " "1"" of type '" "OpenBabel::OBConformerData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConformerData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBConformerData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBConformerData) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBConformerData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBConformerData" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_SetDimension) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    std::vector<unsigned short > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConformerData_SetDimension(self,vd);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_SetDimension" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTunsigned_short_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConformerData_SetDimension" "', argument " "2"" of type '" "std::vector<unsigned short >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConformerData_SetDimension" "', argument " "2"" of type '" "std::vector<unsigned short >""'");
      } else {
        arg2 = *(reinterpret_cast< std::vector<unsigned short > * >(argp2));
      }
    }
    (arg1)->SetDimension(arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_SetEnergies) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    std::vector<double > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    std::vector<double > *v2 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConformerData_SetEnergies(self,ve);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_SetEnergies" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    {
      if (SWIG_ConvertPtr(ST(1),(void **) &v2, 
          SWIGTYPE_p_std__vectorTdouble_t,1) != -1){
        arg2 = *v2;
      } else if (SvROK(ST(1))) {
        AV *av = (AV *)SvRV(ST(1));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 2 of OBConformerData_SetEnergies. "
          "Expected an array of ""double");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvNIOK(*tv)) {
            (&arg2)->push_back((double)SwigSvToNumber(*tv));
          } else {
            SWIG_croak("Type error in argument 2 of "
              "OBConformerData_SetEnergies. "
              "Expected an array of ""double");
          }
        }
      } else {
        SWIG_croak("Type error in argument 2 of OBConformerData_SetEnergies. "
          "Expected an array of ""double");
      }
    }
    (arg1)->SetEnergies(arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_SetForces) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    SwigValueWrapper<std::vector<std::vector<OpenBabel::vector3 > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConformerData_SetForces(self,vf);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_SetForces" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__vectorTOpenBabel__vector3_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConformerData_SetForces" "', argument " "2"" of type '" "std::vector<std::vector<OpenBabel::vector3 > >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConformerData_SetForces" "', argument " "2"" of type '" "std::vector<std::vector<OpenBabel::vector3 > >""'");
      } else {
        arg2 = *(reinterpret_cast< std::vector<std::vector<OpenBabel::vector3 > > * >(argp2));
      }
    }
    (arg1)->SetForces(arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_SetVelocities) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    SwigValueWrapper<std::vector<std::vector<OpenBabel::vector3 > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConformerData_SetVelocities(self,vv);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_SetVelocities" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__vectorTOpenBabel__vector3_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConformerData_SetVelocities" "', argument " "2"" of type '" "std::vector<std::vector<OpenBabel::vector3 > >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConformerData_SetVelocities" "', argument " "2"" of type '" "std::vector<std::vector<OpenBabel::vector3 > >""'");
      } else {
        arg2 = *(reinterpret_cast< std::vector<std::vector<OpenBabel::vector3 > > * >(argp2));
      }
    }
    (arg1)->SetVelocities(arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_SetDisplacements) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    SwigValueWrapper<std::vector<std::vector<OpenBabel::vector3 > > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConformerData_SetDisplacements(self,vd);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_SetDisplacements" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__vectorTOpenBabel__vector3_t_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConformerData_SetDisplacements" "', argument " "2"" of type '" "std::vector<std::vector<OpenBabel::vector3 > >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConformerData_SetDisplacements" "', argument " "2"" of type '" "std::vector<std::vector<OpenBabel::vector3 > >""'");
      } else {
        arg2 = *(reinterpret_cast< std::vector<std::vector<OpenBabel::vector3 > > * >(argp2));
      }
    }
    (arg1)->SetDisplacements(arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_SetData) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    std::vector<std::string > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConformerData_SetData(self,vdat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_SetData" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__string_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConformerData_SetData" "', argument " "2"" of type '" "std::vector<std::string >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConformerData_SetData" "', argument " "2"" of type '" "std::vector<std::string >""'");
      } else {
        arg2 = *(reinterpret_cast< std::vector<std::string > * >(argp2));
      }
    }
    (arg1)->SetData(arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_GetDimension) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    std::vector<unsigned short > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConformerData_GetDimension(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_GetDimension" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    result = (arg1)->GetDimension();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<unsigned short >(static_cast< const std::vector<unsigned short >& >(result))), SWIGTYPE_p_std__vectorTunsigned_short_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_GetEnergies) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    std::vector<double > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConformerData_GetEnergies(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_GetEnergies" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    result = (arg1)->GetEnergies();
    {
      size_t len = (&result)->size();
      SV **svs = new SV*[len];
      for (size_t i=0; i<len; i++) {
        svs[i] = sv_newmortal();
        sv_setnv(svs[i], result[i]);
      }
      AV *myav = av_make(len, svs);
      delete[] svs;
      ST(argvi) = newRV_noinc((SV*) myav);
      sv_2mortal(ST(argvi));
      argvi++;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_GetForces) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    SwigValueWrapper<std::vector<std::vector<OpenBabel::vector3 > > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConformerData_GetForces(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_GetForces" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    result = (arg1)->GetForces();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<std::vector<OpenBabel::vector3 > >(static_cast< const std::vector<std::vector<OpenBabel::vector3 > >& >(result))), SWIGTYPE_p_std__vectorTstd__vectorTOpenBabel__vector3_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_GetVelocities) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    SwigValueWrapper<std::vector<std::vector<OpenBabel::vector3 > > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConformerData_GetVelocities(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_GetVelocities" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    result = (arg1)->GetVelocities();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<std::vector<OpenBabel::vector3 > >(static_cast< const std::vector<std::vector<OpenBabel::vector3 > >& >(result))), SWIGTYPE_p_std__vectorTstd__vectorTOpenBabel__vector3_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_GetDisplacements) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    SwigValueWrapper<std::vector<std::vector<OpenBabel::vector3 > > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConformerData_GetDisplacements(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_GetDisplacements" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    result = (arg1)->GetDisplacements();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<std::vector<OpenBabel::vector3 > >(static_cast< const std::vector<std::vector<OpenBabel::vector3 > >& >(result))), SWIGTYPE_p_std__vectorTstd__vectorTOpenBabel__vector3_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConformerData_GetData) {
  {
    OpenBabel::OBConformerData *arg1 = (OpenBabel::OBConformerData *) 0 ;
    std::vector<std::string > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConformerData_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConformerData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConformerData_GetData" "', argument " "1"" of type '" "OpenBabel::OBConformerData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConformerData * >(argp1);
    result = (arg1)->GetData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<std::string >(static_cast< const std::vector<std::string >& >(result))), SWIGTYPE_p_std__vectorTstd__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSymmetryData__SWIG_0) {
  {
    OpenBabel::OBSymmetryData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBSymmetryData();");
    }
    result = (OpenBabel::OBSymmetryData *)new OpenBabel::OBSymmetryData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSymmetryData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSymmetryData__SWIG_1) {
  {
    OpenBabel::OBSymmetryData *arg1 = 0 ;
    OpenBabel::OBSymmetryData *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBSymmetryData(OpenBabel::OBSymmetryData const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBSymmetryData,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBSymmetryData" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBSymmetryData" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSymmetryData * >(argp1);
    result = (OpenBabel::OBSymmetryData *)new OpenBabel::OBSymmetryData((OpenBabel::OBSymmetryData const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSymmetryData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSymmetryData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSymmetryData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBSymmetryData__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBSymmetryData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBSymmetryData'");
  XSRETURN(0);
}


XS(_wrap_OBSymmetryData_Clone) {
  {
    OpenBabel::OBSymmetryData *arg1 = (OpenBabel::OBSymmetryData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSymmetryData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSymmetryData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSymmetryData_Clone" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSymmetryData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSymmetryData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBSymmetryData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBSymmetryData) {
  {
    OpenBabel::OBSymmetryData *arg1 = (OpenBabel::OBSymmetryData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBSymmetryData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSymmetryData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBSymmetryData" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSymmetryData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSymmetryData_SetData__SWIG_0) {
  {
    OpenBabel::OBSymmetryData *arg1 = (OpenBabel::OBSymmetryData *) 0 ;
    std::string arg2 ;
    std::string arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBSymmetryData_SetData(self,pg,sg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSymmetryData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSymmetryData_SetData" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSymmetryData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBSymmetryData_SetData" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBSymmetryData_SetData" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    (arg1)->SetData(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSymmetryData_SetData__SWIG_1) {
  {
    OpenBabel::OBSymmetryData *arg1 = (OpenBabel::OBSymmetryData *) 0 ;
    std::string arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSymmetryData_SetData(self,pg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSymmetryData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSymmetryData_SetData" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSymmetryData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBSymmetryData_SetData" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    (arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSymmetryData_SetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSymmetryData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSymmetryData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSymmetryData_SetData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSymmetryData_SetData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBSymmetryData_SetData'");
  XSRETURN(0);
}


XS(_wrap_OBSymmetryData_SetPointGroup) {
  {
    OpenBabel::OBSymmetryData *arg1 = (OpenBabel::OBSymmetryData *) 0 ;
    std::string arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSymmetryData_SetPointGroup(self,pg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSymmetryData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSymmetryData_SetPointGroup" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSymmetryData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBSymmetryData_SetPointGroup" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    (arg1)->SetPointGroup(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSymmetryData_SetSpaceGroup) {
  {
    OpenBabel::OBSymmetryData *arg1 = (OpenBabel::OBSymmetryData *) 0 ;
    std::string arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSymmetryData_SetSpaceGroup(self,sg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSymmetryData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSymmetryData_SetSpaceGroup" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSymmetryData * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBSymmetryData_SetSpaceGroup" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    (arg1)->SetSpaceGroup(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSymmetryData_GetPointGroup) {
  {
    OpenBabel::OBSymmetryData *arg1 = (OpenBabel::OBSymmetryData *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSymmetryData_GetPointGroup(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSymmetryData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSymmetryData_GetPointGroup" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSymmetryData * >(argp1);
    result = (arg1)->GetPointGroup();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSymmetryData_GetSpaceGroup) {
  {
    OpenBabel::OBSymmetryData *arg1 = (OpenBabel::OBSymmetryData *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSymmetryData_GetSpaceGroup(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSymmetryData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSymmetryData_GetSpaceGroup" "', argument " "1"" of type '" "OpenBabel::OBSymmetryData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSymmetryData * >(argp1);
    result = (arg1)->GetSpaceGroup();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBTorsion__SWIG_2) {
  {
    OpenBabel::OBTorsion *arg1 = 0 ;
    OpenBabel::OBTorsion *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBTorsion(OpenBabel::OBTorsion const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBTorsion,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBTorsion" "', argument " "1"" of type '" "OpenBabel::OBTorsion const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBTorsion" "', argument " "1"" of type '" "OpenBabel::OBTorsion const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    result = (OpenBabel::OBTorsion *)new OpenBabel::OBTorsion((OpenBabel::OBTorsion const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBTorsion, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBTorsion) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTorsion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBTorsion__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBTorsion'");
  XSRETURN(0);
}


XS(_wrap_delete_OBTorsion) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBTorsion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBTorsion" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_Clear) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsion_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_Clear" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    (arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_Empty) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsion_Empty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_Empty" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    result = (bool)(arg1)->Empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_AddTorsion__SWIG_0) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg4 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg5 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: OBTorsion_AddTorsion(self,a,b,c,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_AddTorsion" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTorsion_AddTorsion" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBTorsion_AddTorsion" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBTorsion_AddTorsion" "', argument " "4"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::OBAtom * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OBTorsion_AddTorsion" "', argument " "5"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg5 = reinterpret_cast< OpenBabel::OBAtom * >(argp5);
    result = (bool)(arg1)->AddTorsion(arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_AddTorsion__SWIG_1) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    OpenBabel::quad<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTorsion_AddTorsion(self,atoms);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_AddTorsion" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__quadTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTorsion_AddTorsion" "', argument " "2"" of type '" "OpenBabel::quad<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBTorsion_AddTorsion" "', argument " "2"" of type '" "OpenBabel::quad<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::quad<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > * >(argp2);
    result = (bool)(arg1)->AddTorsion(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_AddTorsion) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTorsion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__quadTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTorsion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBTorsion_AddTorsion__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBTorsion_AddTorsion__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBTorsion_AddTorsion'");
  XSRETURN(0);
}


XS(_wrap_OBTorsion_SetAngle__SWIG_0) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    double arg2 ;
    unsigned int arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBTorsion_SetAngle(self,radians,index);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_SetAngle" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBTorsion_SetAngle" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBTorsion_SetAngle" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    result = (bool)(arg1)->SetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_SetAngle__SWIG_1) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    double arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTorsion_SetAngle(self,radians);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_SetAngle" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBTorsion_SetAngle" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    result = (bool)(arg1)->SetAngle(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_SetAngle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTorsion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTorsion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBTorsion_SetAngle__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBTorsion_SetAngle__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBTorsion_SetAngle'");
  XSRETURN(0);
}


XS(_wrap_OBTorsion_SetData) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTorsion_SetData(self,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_SetData" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTorsion_SetData" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(arg1)->SetData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_GetAngle__SWIG_0) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    double *arg2 = 0 ;
    unsigned int arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBTorsion_GetAngle(self,radians,index);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_double,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTorsion_GetAngle" "', argument " "2"" of type '" "double &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBTorsion_GetAngle" "', argument " "2"" of type '" "double &""'"); 
    }
    arg2 = reinterpret_cast< double * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBTorsion_GetAngle" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    result = (bool)(arg1)->GetAngle(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_GetAngle__SWIG_1) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    double *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTorsion_GetAngle(self,radians);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_double,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTorsion_GetAngle" "', argument " "2"" of type '" "double &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBTorsion_GetAngle" "', argument " "2"" of type '" "double &""'"); 
    }
    arg2 = reinterpret_cast< double * >(argp2);
    result = (bool)(arg1)->GetAngle(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_GetAngle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTorsion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBTorsion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBTorsion_GetAngle__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBTorsion_GetAngle__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBTorsion_GetAngle'");
  XSRETURN(0);
}


XS(_wrap_OBTorsion_GetBondIdx) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsion_GetBondIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_GetBondIdx" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    result = (unsigned int)(arg1)->GetBondIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_GetSize) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsion_GetSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_GetSize" "', argument " "1"" of type '" "OpenBabel::OBTorsion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    result = (unsigned int)((OpenBabel::OBTorsion const *)arg1)->GetSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_GetBC) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    SwigValueWrapper<std::pair<OpenBabel::OBAtom *,OpenBabel::OBAtom * > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsion_GetBC(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_GetBC" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    result = (arg1)->GetBC();
    ST(argvi) = SWIG_NewPointerObj((new std::pair<OpenBabel::OBAtom *,OpenBabel::OBAtom * >(static_cast< const std::pair<OpenBabel::OBAtom *,OpenBabel::OBAtom * >& >(result))), SWIGTYPE_p_std__pairTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_GetADs) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::triple<OpenBabel::OBAtom *,OpenBabel::OBAtom *,double > > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsion_GetADs(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_GetADs" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    result = (arg1)->GetADs();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::triple<OpenBabel::OBAtom *,OpenBabel::OBAtom *,double > >(static_cast< const std::vector<OpenBabel::triple<OpenBabel::OBAtom *,OpenBabel::OBAtom *,double > >& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_double_t_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsion_IsProtonRotor) {
  {
    OpenBabel::OBTorsion *arg1 = (OpenBabel::OBTorsion *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsion_IsProtonRotor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsion_IsProtonRotor" "', argument " "1"" of type '" "OpenBabel::OBTorsion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsion * >(argp1);
    result = (bool)(arg1)->IsProtonRotor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsionData_Clone) {
  {
    OpenBabel::OBTorsionData *arg1 = (OpenBabel::OBTorsionData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTorsionData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsionData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsionData_Clone" "', argument " "1"" of type '" "OpenBabel::OBTorsionData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsionData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTorsionData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBTorsionData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsionData_Clear) {
  {
    OpenBabel::OBTorsionData *arg1 = (OpenBabel::OBTorsionData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsionData_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsionData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsionData_Clear" "', argument " "1"" of type '" "OpenBabel::OBTorsionData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsionData * >(argp1);
    (arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsionData_GetData) {
  {
    OpenBabel::OBTorsionData *arg1 = (OpenBabel::OBTorsionData *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBTorsion > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsionData_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsionData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsionData_GetData" "', argument " "1"" of type '" "OpenBabel::OBTorsionData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsionData * >(argp1);
    result = ((OpenBabel::OBTorsionData const *)arg1)->GetData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBTorsion >(static_cast< const std::vector<OpenBabel::OBTorsion >& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBTorsion_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsionData_GetSize) {
  {
    OpenBabel::OBTorsionData *arg1 = (OpenBabel::OBTorsionData *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBTorsionData_GetSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsionData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsionData_GetSize" "', argument " "1"" of type '" "OpenBabel::OBTorsionData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsionData * >(argp1);
    result = (unsigned int)((OpenBabel::OBTorsionData const *)arg1)->GetSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsionData_SetData) {
  {
    OpenBabel::OBTorsionData *arg1 = (OpenBabel::OBTorsionData *) 0 ;
    OpenBabel::OBTorsion *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTorsionData_SetData(self,torsion);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsionData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsionData_SetData" "', argument " "1"" of type '" "OpenBabel::OBTorsionData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsionData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBTorsion,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTorsionData_SetData" "', argument " "2"" of type '" "OpenBabel::OBTorsion &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBTorsionData_SetData" "', argument " "2"" of type '" "OpenBabel::OBTorsion &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBTorsion * >(argp2);
    (arg1)->SetData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBTorsionData_FillTorsionArray) {
  {
    OpenBabel::OBTorsionData *arg1 = (OpenBabel::OBTorsionData *) 0 ;
    std::vector<std::vector<unsigned int > > *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBTorsionData_FillTorsionArray(self,torsions);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsionData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBTorsionData_FillTorsionArray" "', argument " "1"" of type '" "OpenBabel::OBTorsionData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsionData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__vectorTunsigned_int_t_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBTorsionData_FillTorsionArray" "', argument " "2"" of type '" "std::vector<std::vector<unsigned int > > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBTorsionData_FillTorsionArray" "', argument " "2"" of type '" "std::vector<std::vector<unsigned int > > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<std::vector<unsigned int > > * >(argp2);
    result = (bool)(arg1)->FillTorsionArray(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBTorsionData) {
  {
    OpenBabel::OBTorsionData *arg1 = (OpenBabel::OBTorsionData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBTorsionData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBTorsionData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBTorsionData" "', argument " "1"" of type '" "OpenBabel::OBTorsionData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBTorsionData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAngle__SWIG_2) {
  {
    OpenBabel::OBAngle *arg1 = 0 ;
    OpenBabel::OBAngle *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBAngle(OpenBabel::OBAngle const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBAngle,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBAngle" "', argument " "1"" of type '" "OpenBabel::OBAngle const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBAngle" "', argument " "1"" of type '" "OpenBabel::OBAngle const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngle * >(argp1);
    result = (OpenBabel::OBAngle *)new OpenBabel::OBAngle((OpenBabel::OBAngle const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAngle, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAngle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAngle, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBAngle__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBAngle'");
  XSRETURN(0);
}


XS(_wrap_delete_OBAngle) {
  {
    OpenBabel::OBAngle *arg1 = (OpenBabel::OBAngle *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngle, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBAngle" "', argument " "1"" of type '" "OpenBabel::OBAngle *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngle * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngle___eq__) {
  {
    OpenBabel::OBAngle *arg1 = (OpenBabel::OBAngle *) 0 ;
    OpenBabel::OBAngle *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAngle___eq__(self,OpenBabel::OBAngle const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngle, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngle___eq__" "', argument " "1"" of type '" "OpenBabel::OBAngle *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngle * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBAngle,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAngle___eq__" "', argument " "2"" of type '" "OpenBabel::OBAngle const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAngle___eq__" "', argument " "2"" of type '" "OpenBabel::OBAngle const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAngle * >(argp2);
    result = (bool)(arg1)->operator ==((OpenBabel::OBAngle const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngle_Clear) {
  {
    OpenBabel::OBAngle *arg1 = (OpenBabel::OBAngle *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAngle_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngle, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngle_Clear" "', argument " "1"" of type '" "OpenBabel::OBAngle *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngle * >(argp1);
    (arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngle_GetAngle) {
  {
    OpenBabel::OBAngle *arg1 = (OpenBabel::OBAngle *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAngle_GetAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngle, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngle_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBAngle const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngle * >(argp1);
    result = (double)((OpenBabel::OBAngle const *)arg1)->GetAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngle_SetAngle) {
  {
    OpenBabel::OBAngle *arg1 = (OpenBabel::OBAngle *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAngle_SetAngle(self,angle);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngle, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngle_SetAngle" "', argument " "1"" of type '" "OpenBabel::OBAngle *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngle * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAngle_SetAngle" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (arg1)->SetAngle(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngle_SetAtoms__SWIG_0) {
  {
    OpenBabel::OBAngle *arg1 = (OpenBabel::OBAngle *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg4 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBAngle_SetAtoms(self,vertex,a,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngle, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngle_SetAtoms" "', argument " "1"" of type '" "OpenBabel::OBAngle *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngle * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAngle_SetAtoms" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBAngle_SetAtoms" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBAngle_SetAtoms" "', argument " "4"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::OBAtom * >(argp4);
    (arg1)->SetAtoms(arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngle_SetAtoms__SWIG_1) {
  {
    OpenBabel::OBAngle *arg1 = (OpenBabel::OBAngle *) 0 ;
    OpenBabel::triple<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAngle_SetAtoms(self,atoms);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngle, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngle_SetAtoms" "', argument " "1"" of type '" "OpenBabel::OBAngle *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngle * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAngle_SetAtoms" "', argument " "2"" of type '" "OpenBabel::triple<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAngle_SetAtoms" "', argument " "2"" of type '" "OpenBabel::triple<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::triple<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > * >(argp2);
    (arg1)->SetAtoms(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngle_SetAtoms) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAngle, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAngle, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAngle_SetAtoms__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAngle_SetAtoms__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAngle_SetAtoms'");
  XSRETURN(0);
}


XS(_wrap_OBAngleData_Clone) {
  {
    OpenBabel::OBAngleData *arg1 = (OpenBabel::OBAngleData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAngleData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngleData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngleData_Clone" "', argument " "1"" of type '" "OpenBabel::OBAngleData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngleData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAngleData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBAngleData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngleData_Clear) {
  {
    OpenBabel::OBAngleData *arg1 = (OpenBabel::OBAngleData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAngleData_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngleData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngleData_Clear" "', argument " "1"" of type '" "OpenBabel::OBAngleData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngleData * >(argp1);
    (arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngleData_FillAngleArray) {
  {
    OpenBabel::OBAngleData *arg1 = (OpenBabel::OBAngleData *) 0 ;
    int **arg2 = (int **) 0 ;
    unsigned int *arg3 = 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAngleData_FillAngleArray(self,angles,size);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngleData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngleData_FillAngleArray" "', argument " "1"" of type '" "OpenBabel::OBAngleData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngleData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_p_int, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAngleData_FillAngleArray" "', argument " "2"" of type '" "int **""'"); 
    }
    arg2 = reinterpret_cast< int ** >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_unsigned_int,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBAngleData_FillAngleArray" "', argument " "3"" of type '" "unsigned int &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAngleData_FillAngleArray" "', argument " "3"" of type '" "unsigned int &""'"); 
    }
    arg3 = reinterpret_cast< unsigned int * >(argp3);
    result = (unsigned int)(arg1)->FillAngleArray(arg2,*arg3);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngleData_SetData) {
  {
    OpenBabel::OBAngleData *arg1 = (OpenBabel::OBAngleData *) 0 ;
    OpenBabel::OBAngle *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAngleData_SetData(self,OpenBabel::OBAngle &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngleData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngleData_SetData" "', argument " "1"" of type '" "OpenBabel::OBAngleData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngleData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBAngle,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAngleData_SetData" "', argument " "2"" of type '" "OpenBabel::OBAngle &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAngleData_SetData" "', argument " "2"" of type '" "OpenBabel::OBAngle &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAngle * >(argp2);
    (arg1)->SetData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAngleData_GetSize) {
  {
    OpenBabel::OBAngleData *arg1 = (OpenBabel::OBAngleData *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAngleData_GetSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngleData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAngleData_GetSize" "', argument " "1"" of type '" "OpenBabel::OBAngleData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngleData * >(argp1);
    result = (unsigned int)((OpenBabel::OBAngleData const *)arg1)->GetSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBAngleData) {
  {
    OpenBabel::OBAngleData *arg1 = (OpenBabel::OBAngleData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBAngleData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAngleData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBAngleData" "', argument " "1"" of type '" "OpenBabel::OBAngleData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAngleData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBChiralData_GetAtom4Refs) {
  {
    OpenBabel::OBChiralData *arg1 = (OpenBabel::OBChiralData *) 0 ;
    OpenBabel::atomreftype arg2 ;
    std::vector<unsigned int > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBChiralData_GetAtom4Refs(self,t);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBChiralData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBChiralData_GetAtom4Refs" "', argument " "1"" of type '" "OpenBabel::OBChiralData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBChiralData * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBChiralData_GetAtom4Refs" "', argument " "2"" of type '" "OpenBabel::atomreftype""'");
    } 
    arg2 = static_cast< OpenBabel::atomreftype >(val2);
    result = ((OpenBabel::OBChiralData const *)arg1)->GetAtom4Refs(arg2);
    ST(argvi) = SWIG_NewPointerObj((new std::vector<unsigned int >(static_cast< const std::vector<unsigned int >& >(result))), SWIGTYPE_p_std__vectorTunsigned_int_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBChiralData_GetAtomRef) {
  {
    OpenBabel::OBChiralData *arg1 = (OpenBabel::OBChiralData *) 0 ;
    int arg2 ;
    OpenBabel::atomreftype arg3 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBChiralData_GetAtomRef(self,a,t);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBChiralData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBChiralData_GetAtomRef" "', argument " "1"" of type '" "OpenBabel::OBChiralData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBChiralData * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBChiralData_GetAtomRef" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBChiralData_GetAtomRef" "', argument " "3"" of type '" "OpenBabel::atomreftype""'");
    } 
    arg3 = static_cast< OpenBabel::atomreftype >(val3);
    result = (unsigned int)(arg1)->GetAtomRef(arg2,arg3);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBChiralData__SWIG_0) {
  {
    OpenBabel::OBChiralData *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBChiralData();");
    }
    result = (OpenBabel::OBChiralData *)new OpenBabel::OBChiralData();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBChiralData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBChiralData__SWIG_1) {
  {
    OpenBabel::OBChiralData *arg1 = 0 ;
    OpenBabel::OBChiralData *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBChiralData(src);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBChiralData,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBChiralData" "', argument " "1"" of type '" "OpenBabel::OBChiralData const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBChiralData" "', argument " "1"" of type '" "OpenBabel::OBChiralData const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBChiralData * >(argp1);
    result = (OpenBabel::OBChiralData *)new OpenBabel::OBChiralData((OpenBabel::OBChiralData const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBChiralData, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBChiralData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBChiralData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBChiralData__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBChiralData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBChiralData'");
  XSRETURN(0);
}


XS(_wrap_OBChiralData_Clone) {
  {
    OpenBabel::OBChiralData *arg1 = (OpenBabel::OBChiralData *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBChiralData_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBChiralData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBChiralData_Clone" "', argument " "1"" of type '" "OpenBabel::OBChiralData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBChiralData * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBChiralData_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBChiralData const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBChiralData) {
  {
    OpenBabel::OBChiralData *arg1 = (OpenBabel::OBChiralData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBChiralData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBChiralData, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBChiralData" "', argument " "1"" of type '" "OpenBabel::OBChiralData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBChiralData * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBChiralData_Clear) {
  {
    OpenBabel::OBChiralData *arg1 = (OpenBabel::OBChiralData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBChiralData_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBChiralData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBChiralData_Clear" "', argument " "1"" of type '" "OpenBabel::OBChiralData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBChiralData * >(argp1);
    (arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBChiralData_SetAtom4Refs) {
  {
    OpenBabel::OBChiralData *arg1 = (OpenBabel::OBChiralData *) 0 ;
    std::vector<unsigned int > arg2 ;
    OpenBabel::atomreftype arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBChiralData_SetAtom4Refs(self,atom4refs,t);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBChiralData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBChiralData_SetAtom4Refs" "', argument " "1"" of type '" "OpenBabel::OBChiralData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBChiralData * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBChiralData_SetAtom4Refs" "', argument " "2"" of type '" "std::vector<unsigned int >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBChiralData_SetAtom4Refs" "', argument " "2"" of type '" "std::vector<unsigned int >""'");
      } else {
        arg2 = *(reinterpret_cast< std::vector<unsigned int > * >(argp2));
      }
    }
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBChiralData_SetAtom4Refs" "', argument " "3"" of type '" "OpenBabel::atomreftype""'");
    } 
    arg3 = static_cast< OpenBabel::atomreftype >(val3);
    result = (bool)(arg1)->SetAtom4Refs(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBChiralData_AddAtomRef) {
  {
    OpenBabel::OBChiralData *arg1 = (OpenBabel::OBChiralData *) 0 ;
    unsigned int arg2 ;
    OpenBabel::atomreftype arg3 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBChiralData_AddAtomRef(self,atomref,t);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBChiralData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBChiralData_AddAtomRef" "', argument " "1"" of type '" "OpenBabel::OBChiralData *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBChiralData * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBChiralData_AddAtomRef" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBChiralData_AddAtomRef" "', argument " "3"" of type '" "OpenBabel::atomreftype""'");
    } 
    arg3 = static_cast< OpenBabel::atomreftype >(val3);
    result = (int)(arg1)->AddAtomRef(arg2,arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBChiralData_GetSize) {
  {
    OpenBabel::OBChiralData *arg1 = (OpenBabel::OBChiralData *) 0 ;
    OpenBabel::atomreftype arg2 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBChiralData_GetSize(self,t);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBChiralData, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBChiralData_GetSize" "', argument " "1"" of type '" "OpenBabel::OBChiralData const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBChiralData * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBChiralData_GetSize" "', argument " "2"" of type '" "OpenBabel::atomreftype""'");
    } 
    arg2 = static_cast< OpenBabel::atomreftype >(val2);
    result = (unsigned int)((OpenBabel::OBChiralData const *)arg1)->GetSize(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSerialNums__SWIG_0) {
  {
    OpenBabel::OBSerialNums *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBSerialNums();");
    }
    result = (OpenBabel::OBSerialNums *)new OpenBabel::OBSerialNums();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSerialNums, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSerialNums__SWIG_1) {
  {
    OpenBabel::OBSerialNums *arg1 = 0 ;
    OpenBabel::OBSerialNums *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBSerialNums(cp);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBSerialNums,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBSerialNums" "', argument " "1"" of type '" "OpenBabel::OBSerialNums const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBSerialNums" "', argument " "1"" of type '" "OpenBabel::OBSerialNums const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSerialNums * >(argp1);
    result = (OpenBabel::OBSerialNums *)new OpenBabel::OBSerialNums((OpenBabel::OBSerialNums const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSerialNums, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSerialNums) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSerialNums, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBSerialNums__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBSerialNums__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBSerialNums'");
  XSRETURN(0);
}


XS(_wrap_OBSerialNums_Clone) {
  {
    OpenBabel::OBSerialNums *arg1 = (OpenBabel::OBSerialNums *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSerialNums_Clone(self,OpenBabel::OBBase *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSerialNums, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSerialNums_Clone" "', argument " "1"" of type '" "OpenBabel::OBSerialNums const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSerialNums * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSerialNums_Clone" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (OpenBabel::OBGenericData *)((OpenBabel::OBSerialNums const *)arg1)->Clone(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSerialNums_GetData) {
  {
    OpenBabel::OBSerialNums *arg1 = (OpenBabel::OBSerialNums *) 0 ;
    std::map<int,OpenBabel::OBAtom * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSerialNums_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSerialNums, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSerialNums_GetData" "', argument " "1"" of type '" "OpenBabel::OBSerialNums *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSerialNums * >(argp1);
    {
      std::map<int,OpenBabel::OBAtom * > &_result_ref = (arg1)->GetData();
      result = (std::map<int,OpenBabel::OBAtom * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapTint_OpenBabel__OBAtom_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSerialNums_SetData) {
  {
    OpenBabel::OBSerialNums *arg1 = (OpenBabel::OBSerialNums *) 0 ;
    std::map<int,OpenBabel::OBAtom * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSerialNums_SetData(self,sm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSerialNums, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSerialNums_SetData" "', argument " "1"" of type '" "OpenBabel::OBSerialNums *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSerialNums * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__mapTint_OpenBabel__OBAtom_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSerialNums_SetData" "', argument " "2"" of type '" "std::map<int,OpenBabel::OBAtom * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSerialNums_SetData" "', argument " "2"" of type '" "std::map<int,OpenBabel::OBAtom * > &""'"); 
    }
    arg2 = reinterpret_cast< std::map<int,OpenBabel::OBAtom * > * >(argp2);
    (arg1)->SetData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBSerialNums) {
  {
    OpenBabel::OBSerialNums *arg1 = (OpenBabel::OBSerialNums *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBSerialNums(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSerialNums, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBSerialNums" "', argument " "1"" of type '" "OpenBabel::OBSerialNums *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSerialNums * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBBase) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBBase(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBBase" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_DoTransformations) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_DoTransformations(self,std::map<std::string,std::string > const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBase_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_ClassDescription) {
  {
    char *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: OBBase_ClassDescription();");
    }
    result = (char *)OpenBabel::OBBase::ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_HasData__SWIG_0) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_HasData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_HasData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBase_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBBase_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->HasData((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_HasData__SWIG_1) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_HasData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_HasData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBase_HasData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(arg1)->HasData((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_HasData__SWIG_2) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_HasData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_HasData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBBase_HasData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(arg1)->HasData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_HasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_HasData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_HasData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_HasData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBBase_HasData'");
  XSRETURN(0);
}


XS(_wrap_OBBase_DeleteData__SWIG_0) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_DeleteData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBBase_DeleteData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_DeleteData__SWIG_1) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_DeleteData(self,OpenBabel::OBGenericData *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBase_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_DeleteData__SWIG_2) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_DeleteData(self,std::vector<OpenBabel::OBGenericData * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBase_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBBase_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (arg1)->DeleteData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_DeleteData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_DeleteData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_DeleteData__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_DeleteData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBBase_DeleteData'");
  XSRETURN(0);
}


XS(_wrap_OBBase_SetData) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_SetData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBase_SetData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_DataSize) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBase_DataSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_DataSize" "', argument " "1"" of type '" "OpenBabel::OBBase const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    result = (unsigned int)((OpenBabel::OBBase const *)arg1)->DataSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_GetData__SWIG_0) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_GetData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_GetData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBBase_GetData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)(arg1)->GetData(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_GetData__SWIG_1) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_GetData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_GetData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBase_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBBase_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_GetData__SWIG_2) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBase_GetData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_GetData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBase_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_GetData__SWIG_3) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBase_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_GetData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > &_result_ref = (arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_GetData__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_GetData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_GetData__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBBase_GetData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBBase_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBBase_BeginData) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBase_BeginData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_BeginData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    result = (arg1)->BeginData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBase_EndData) {
  {
    OpenBabel::OBBase *arg1 = (OpenBabel::OBBase *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBase_EndData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBase_EndData" "', argument " "1"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBase * >(argp1);
    result = (arg1)->EndData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBBase) {
  {
    OpenBabel::OBBase *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBBase();");
    }
    result = (OpenBabel::OBBase *)new OpenBabel::OBBase();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBError__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    std::string *arg4 = 0 ;
    std::string *arg5 = 0 ;
    OpenBabel::obMessageLevel arg6 ;
    OpenBabel::OBError *result = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: new_OBError(method,errorMsg,explanation,possibleCause,suggestedRemedy,OpenBabel::obMessageLevel const);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OBError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_OBError" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_OBError" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      arg5 = ptr;
    }
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_OBError" "', argument " "6"" of type '" "OpenBabel::obMessageLevel""'");
    } 
    arg6 = static_cast< OpenBabel::obMessageLevel >(val6);
    result = (OpenBabel::OBError *)new OpenBabel::OBError((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,arg6);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    if (SWIG_IsNewObj(res5)) delete arg5;
    
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    if (SWIG_IsNewObj(res5)) delete arg5;
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBError__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    std::string *arg4 = 0 ;
    std::string *arg5 = 0 ;
    OpenBabel::OBError *result = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int res5 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_OBError(method,errorMsg,explanation,possibleCause,suggestedRemedy);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OBError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_OBError" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res5 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), &ptr);
      if (!SWIG_IsOK(res5)) {
        SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_OBError" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "5"" of type '" "std::string const &""'"); 
      }
      arg5 = ptr;
    }
    result = (OpenBabel::OBError *)new OpenBabel::OBError((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    if (SWIG_IsNewObj(res5)) delete arg5;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    if (SWIG_IsNewObj(res5)) delete arg5;
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBError__SWIG_2) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    std::string *arg4 = 0 ;
    OpenBabel::OBError *result = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int res4 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_OBError(method,errorMsg,explanation,possibleCause);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OBError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res4 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), &ptr);
      if (!SWIG_IsOK(res4)) {
        SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_OBError" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "4"" of type '" "std::string const &""'"); 
      }
      arg4 = ptr;
    }
    result = (OpenBabel::OBError *)new OpenBabel::OBError((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    if (SWIG_IsNewObj(res4)) delete arg4;
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBError__SWIG_3) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    OpenBabel::OBError *result = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_OBError(method,errorMsg,explanation);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OBError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    result = (OpenBabel::OBError *)new OpenBabel::OBError((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBError__SWIG_4) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBError *result = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_OBError(method,errorMsg);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBError *)new OpenBabel::OBError((std::string const &)*arg1,(std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBError__SWIG_5) {
  {
    std::string *arg1 = 0 ;
    OpenBabel::OBError *result = 0 ;
    int res1 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBError(method);");
    }
    {
      std::string *ptr = (std::string *)0;
      res1 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res1)) {
        SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBError" "', argument " "1"" of type '" "std::string const &""'"); 
      }
      arg1 = ptr;
    }
    result = (OpenBabel::OBError *)new OpenBabel::OBError((std::string const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    if (SWIG_IsNewObj(res1)) delete arg1;
    XSRETURN(argvi);
  fail:
    if (SWIG_IsNewObj(res1)) delete arg1;
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBError__SWIG_6) {
  {
    OpenBabel::OBError *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBError();");
    }
    result = (OpenBabel::OBError *)new OpenBabel::OBError();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBError, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(3), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(4), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBError__SWIG_6); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBError__SWIG_5); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBError__SWIG_4); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBError__SWIG_3); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBError__SWIG_2); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBError__SWIG_1); return;
    case 7:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBError'");
  XSRETURN(0);
}


XS(_wrap_OBError_message) {
  {
    OpenBabel::OBError *arg1 = (OpenBabel::OBError *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBError_message(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBError, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBError_message" "', argument " "1"" of type '" "OpenBabel::OBError const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBError * >(argp1);
    result = ((OpenBabel::OBError const *)arg1)->message();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBError_GetMethod) {
  {
    OpenBabel::OBError *arg1 = (OpenBabel::OBError *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBError_GetMethod(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBError, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBError_GetMethod" "', argument " "1"" of type '" "OpenBabel::OBError *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBError * >(argp1);
    result = (arg1)->GetMethod();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBError_GetError) {
  {
    OpenBabel::OBError *arg1 = (OpenBabel::OBError *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBError_GetError(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBError, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBError_GetError" "', argument " "1"" of type '" "OpenBabel::OBError *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBError * >(argp1);
    result = (arg1)->GetError();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBError_GetExplanation) {
  {
    OpenBabel::OBError *arg1 = (OpenBabel::OBError *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBError_GetExplanation(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBError, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBError_GetExplanation" "', argument " "1"" of type '" "OpenBabel::OBError *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBError * >(argp1);
    result = (arg1)->GetExplanation();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBError_GetPossibleCause) {
  {
    OpenBabel::OBError *arg1 = (OpenBabel::OBError *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBError_GetPossibleCause(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBError, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBError_GetPossibleCause" "', argument " "1"" of type '" "OpenBabel::OBError *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBError * >(argp1);
    result = (arg1)->GetPossibleCause();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBError_GetSuggestedRemedy) {
  {
    OpenBabel::OBError *arg1 = (OpenBabel::OBError *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBError_GetSuggestedRemedy(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBError, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBError_GetSuggestedRemedy" "', argument " "1"" of type '" "OpenBabel::OBError *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBError * >(argp1);
    result = (arg1)->GetSuggestedRemedy();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBError_GetLevel) {
  {
    OpenBabel::OBError *arg1 = (OpenBabel::OBError *) 0 ;
    OpenBabel::obMessageLevel result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBError_GetLevel(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBError, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBError_GetLevel" "', argument " "1"" of type '" "OpenBabel::OBError *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBError * >(argp1);
    result = (OpenBabel::obMessageLevel)(arg1)->GetLevel();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBError) {
  {
    OpenBabel::OBError *arg1 = (OpenBabel::OBError *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBError(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBError, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBError" "', argument " "1"" of type '" "OpenBabel::OBError *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBError * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMessageHandler) {
  {
    OpenBabel::OBMessageHandler *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBMessageHandler();");
    }
    result = (OpenBabel::OBMessageHandler *)new OpenBabel::OBMessageHandler();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMessageHandler, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBMessageHandler) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBMessageHandler(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBMessageHandler" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_ThrowError__SWIG_0) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    OpenBabel::OBError arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMessageHandler_ThrowError(self,err);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_ThrowError" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBError,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMessageHandler_ThrowError" "', argument " "2"" of type '" "OpenBabel::OBError""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMessageHandler_ThrowError" "', argument " "2"" of type '" "OpenBabel::OBError""'");
      } else {
        arg2 = *(reinterpret_cast< OpenBabel::OBError * >(argp2));
      }
    }
    (arg1)->ThrowError(arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_ThrowError__SWIG_1) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    OpenBabel::obMessageLevel arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBMessageHandler_ThrowError(self,method,errorMsg,level);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_ThrowError" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMessageHandler_ThrowError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMessageHandler_ThrowError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMessageHandler_ThrowError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMessageHandler_ThrowError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBMessageHandler_ThrowError" "', argument " "4"" of type '" "OpenBabel::obMessageLevel""'");
    } 
    arg4 = static_cast< OpenBabel::obMessageLevel >(val4);
    (arg1)->ThrowError((std::string const &)*arg2,(std::string const &)*arg3,arg4);
    
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_ThrowError__SWIG_2) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    std::string *arg2 = 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMessageHandler_ThrowError(self,method,errorMsg);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_ThrowError" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMessageHandler_ThrowError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMessageHandler_ThrowError" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMessageHandler_ThrowError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMessageHandler_ThrowError" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->ThrowError((std::string const &)*arg2,(std::string const &)*arg3);
    
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_ThrowError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMessageHandler, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBError, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMessageHandler, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMessageHandler, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMessageHandler_ThrowError__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMessageHandler_ThrowError__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMessageHandler_ThrowError__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMessageHandler_ThrowError'");
  XSRETURN(0);
}


XS(_wrap_OBMessageHandler_GetMessagesOfLevel) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    OpenBabel::obMessageLevel arg2 ;
    std::vector<std::string > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMessageHandler_GetMessagesOfLevel(self,OpenBabel::obMessageLevel const);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetMessagesOfLevel" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMessageHandler_GetMessagesOfLevel" "', argument " "2"" of type '" "OpenBabel::obMessageLevel""'");
    } 
    arg2 = static_cast< OpenBabel::obMessageLevel >(val2);
    result = (arg1)->GetMessagesOfLevel(arg2);
    ST(argvi) = SWIG_NewPointerObj((new std::vector<std::string >(static_cast< const std::vector<std::string >& >(result))), SWIGTYPE_p_std__vectorTstd__string_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_StartLogging) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_StartLogging(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_StartLogging" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    (arg1)->StartLogging();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_StopLogging) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_StopLogging(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_StopLogging" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    (arg1)->StopLogging();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_SetMaxLogEntries) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMessageHandler_SetMaxLogEntries(self,max);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_SetMaxLogEntries" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMessageHandler_SetMaxLogEntries" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetMaxLogEntries(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_GetMaxLogEntries) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_GetMaxLogEntries(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetMaxLogEntries" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (unsigned int)(arg1)->GetMaxLogEntries();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_ClearLog) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_ClearLog(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_ClearLog" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    (arg1)->ClearLog();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_SetOutputLevel) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    OpenBabel::obMessageLevel arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMessageHandler_SetOutputLevel(self,level);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_SetOutputLevel" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMessageHandler_SetOutputLevel" "', argument " "2"" of type '" "OpenBabel::obMessageLevel""'");
    } 
    arg2 = static_cast< OpenBabel::obMessageLevel >(val2);
    (arg1)->SetOutputLevel(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_GetOutputLevel) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    OpenBabel::obMessageLevel result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_GetOutputLevel(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetOutputLevel" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (OpenBabel::obMessageLevel)(arg1)->GetOutputLevel();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_SetOutputStream) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    std::ostream *arg2 = (std::ostream *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMessageHandler_SetOutputStream(self,os);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_SetOutputStream" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__ostream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMessageHandler_SetOutputStream" "', argument " "2"" of type '" "std::ostream *""'"); 
    }
    arg2 = reinterpret_cast< std::ostream * >(argp2);
    (arg1)->SetOutputStream(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_GetOutputStream) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    std::ostream *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_GetOutputStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetOutputStream" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (std::ostream *)(arg1)->GetOutputStream();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_StartErrorWrap) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_StartErrorWrap(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_StartErrorWrap" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (bool)(arg1)->StartErrorWrap();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_StopErrorWrap) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_StopErrorWrap(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_StopErrorWrap" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (bool)(arg1)->StopErrorWrap();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_GetErrorMessageCount) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_GetErrorMessageCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetErrorMessageCount" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (unsigned int)(arg1)->GetErrorMessageCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_GetWarningMessageCount) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_GetWarningMessageCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetWarningMessageCount" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (unsigned int)(arg1)->GetWarningMessageCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_GetInfoMessageCount) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_GetInfoMessageCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetInfoMessageCount" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (unsigned int)(arg1)->GetInfoMessageCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_GetAuditMessageCount) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_GetAuditMessageCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetAuditMessageCount" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (unsigned int)(arg1)->GetAuditMessageCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_GetDebugMessageCount) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_GetDebugMessageCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetDebugMessageCount" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (unsigned int)(arg1)->GetDebugMessageCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMessageHandler_GetMessageSummary) {
  {
    OpenBabel::OBMessageHandler *arg1 = (OpenBabel::OBMessageHandler *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMessageHandler_GetMessageSummary(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMessageHandler, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMessageHandler_GetMessageSummary" "', argument " "1"" of type '" "OpenBabel::OBMessageHandler *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMessageHandler * >(argp1);
    result = (arg1)->GetMessageSummary();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_obLogBuf) {
  {
    OpenBabel::obLogBuf *arg1 = (OpenBabel::obLogBuf *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_obLogBuf(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__obLogBuf, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_obLogBuf" "', argument " "1"" of type '" "OpenBabel::obLogBuf *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::obLogBuf * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_obLogBuf) {
  {
    OpenBabel::obLogBuf *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_obLogBuf();");
    }
    result = (OpenBabel::obLogBuf *)new OpenBabel::obLogBuf();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__obLogBuf, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_ReadMolecule) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBConversion *arg3 = (OpenBabel::OBConversion *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBFormat_ReadMolecule(self,OpenBabel::OBBase *,OpenBabel::OBConversion *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_ReadMolecule" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFormat_ReadMolecule" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBFormat_ReadMolecule" "', argument " "3"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBConversion * >(argp3);
    result = (bool)(arg1)->ReadMolecule(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_ReadChemObject) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    OpenBabel::OBConversion *arg2 = (OpenBabel::OBConversion *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBFormat_ReadChemObject(self,OpenBabel::OBConversion *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_ReadChemObject" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFormat_ReadChemObject" "', argument " "2"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBConversion * >(argp2);
    result = (bool)(arg1)->ReadChemObject(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_WriteMolecule) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    OpenBabel::OBConversion *arg3 = (OpenBabel::OBConversion *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBFormat_WriteMolecule(self,OpenBabel::OBBase *,OpenBabel::OBConversion *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_WriteMolecule" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFormat_WriteMolecule" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBFormat_WriteMolecule" "', argument " "3"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBConversion * >(argp3);
    result = (bool)(arg1)->WriteMolecule(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_WriteChemObject) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    OpenBabel::OBConversion *arg2 = (OpenBabel::OBConversion *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBFormat_WriteChemObject(self,OpenBabel::OBConversion *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_WriteChemObject" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFormat_WriteChemObject" "', argument " "2"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBConversion * >(argp2);
    result = (bool)(arg1)->WriteChemObject(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_Description) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFormat_Description(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_Description" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    result = (char *)(arg1)->Description();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_TargetClassDescription) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFormat_TargetClassDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_TargetClassDescription" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    result = (char *)(arg1)->TargetClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_GetType) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    std::type_info *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFormat_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_GetType" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    {
      std::type_info const &_result_ref = (arg1)->GetType();
      result = (std::type_info *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__type_info, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_SpecificationURL) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFormat_SpecificationURL(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_SpecificationURL" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    result = (char *)(arg1)->SpecificationURL();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_GetMIMEType) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFormat_GetMIMEType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_GetMIMEType" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    result = (char *)(arg1)->GetMIMEType();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_Flags) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFormat_Flags(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_Flags" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    result = (unsigned int)(arg1)->Flags();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_SkipObjects) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    int arg2 ;
    OpenBabel::OBConversion *arg3 = (OpenBabel::OBConversion *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBFormat_SkipObjects(self,int,OpenBabel::OBConversion *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_SkipObjects" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBFormat_SkipObjects" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBFormat_SkipObjects" "', argument " "3"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBConversion * >(argp3);
    result = (int)(arg1)->SkipObjects(arg2,arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFormat_MakeNewInstance) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    OpenBabel::OBFormat *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFormat_MakeNewInstance(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFormat_MakeNewInstance" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    result = (OpenBabel::OBFormat *)(arg1)->MakeNewInstance();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFormat, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBFormat) {
  {
    OpenBabel::OBFormat *arg1 = (OpenBabel::OBFormat *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBFormat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFormat, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBFormat" "', argument " "1"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFormat * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CharPtrLess___call__) {
  {
    OpenBabel::CharPtrLess *arg1 = (OpenBabel::CharPtrLess *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: CharPtrLess___call__(self,p1,p2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__CharPtrLess, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CharPtrLess___call__" "', argument " "1"" of type '" "OpenBabel::CharPtrLess const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::CharPtrLess * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CharPtrLess___call__" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CharPtrLess___call__" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (bool)((OpenBabel::CharPtrLess const *)arg1)->operator ()((char const *)arg2,(char const *)arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_new_CharPtrLess) {
  {
    OpenBabel::CharPtrLess *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_CharPtrLess();");
    }
    result = (OpenBabel::CharPtrLess *)new OpenBabel::CharPtrLess();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__CharPtrLess, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_CharPtrLess) {
  {
    OpenBabel::CharPtrLess *arg1 = (OpenBabel::CharPtrLess *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_CharPtrLess(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__CharPtrLess, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CharPtrLess" "', argument " "1"" of type '" "OpenBabel::CharPtrLess *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::CharPtrLess * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBConversion__SWIG_0) {
  {
    std::istream *arg1 = (std::istream *) 0 ;
    std::ostream *arg2 = (std::ostream *) 0 ;
    OpenBabel::OBConversion *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_OBConversion(is,os);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__istream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBConversion" "', argument " "1"" of type '" "std::istream *""'"); 
    }
    arg1 = reinterpret_cast< std::istream * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__ostream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBConversion" "', argument " "2"" of type '" "std::ostream *""'"); 
    }
    arg2 = reinterpret_cast< std::ostream * >(argp2);
    result = (OpenBabel::OBConversion *)new OpenBabel::OBConversion(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBConversion, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBConversion__SWIG_1) {
  {
    std::istream *arg1 = (std::istream *) 0 ;
    OpenBabel::OBConversion *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBConversion(is);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_std__istream, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBConversion" "', argument " "1"" of type '" "std::istream *""'"); 
    }
    arg1 = reinterpret_cast< std::istream * >(argp1);
    result = (OpenBabel::OBConversion *)new OpenBabel::OBConversion(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBConversion, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBConversion__SWIG_2) {
  {
    OpenBabel::OBConversion *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBConversion();");
    }
    result = (OpenBabel::OBConversion *)new OpenBabel::OBConversion();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBConversion, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBConversion__SWIG_3) {
  {
    OpenBabel::OBConversion *arg1 = 0 ;
    OpenBabel::OBConversion *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBConversion(o);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBConversion,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBConversion" "', argument " "1"" of type '" "OpenBabel::OBConversion const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBConversion" "', argument " "1"" of type '" "OpenBabel::OBConversion const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (OpenBabel::OBConversion *)new OpenBabel::OBConversion((OpenBabel::OBConversion const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBConversion, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBConversion) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__istream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__istream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBConversion__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBConversion__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBConversion__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBConversion__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBConversion'");
  XSRETURN(0);
}


XS(_wrap_delete_OBConversion) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBConversion(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBConversion" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_RegisterFormat__SWIG_0) {
  {
    char *arg1 = (char *) 0 ;
    OpenBabel::OBFormat *arg2 = (OpenBabel::OBFormat *) 0 ;
    char *arg3 = (char *) 0 ;
    int result;
    int res1 ;
    char *buf1 = 0 ;
    int alloc1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_RegisterFormat(ID,pFormat,MIME);");
    }
    res1 = SWIG_AsCharPtrAndSize(ST(0), &buf1, NULL, &alloc1);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_RegisterFormat" "', argument " "1"" of type '" "char const *""'");
    }
    arg1 = reinterpret_cast< char * >(buf1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_RegisterFormat" "', argument " "2"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBFormat * >(argp2);
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBConversion_RegisterFormat" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (int)OpenBabel::OBConversion::RegisterFormat((char const *)arg1,arg2,(char const *)arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_RegisterFormat__SWIG_1) {
  {
    char *arg1 = (char *) 0 ;
    OpenBabel::OBFormat *arg2 = (OpenBabel::OBFormat *) 0 ;
    int result;
    int res1 ;
    char *buf1 = 0 ;
    int alloc1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_RegisterFormat(ID,pFormat);");
    }
    res1 = SWIG_AsCharPtrAndSize(ST(0), &buf1, NULL, &alloc1);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_RegisterFormat" "', argument " "1"" of type '" "char const *""'");
    }
    arg1 = reinterpret_cast< char * >(buf1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_RegisterFormat" "', argument " "2"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBFormat * >(argp2);
    result = (int)OpenBabel::OBConversion::RegisterFormat((char const *)arg1,arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    
    XSRETURN(argvi);
  fail:
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_RegisterFormat) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsCharPtrAndSize(ST(0), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBFormat, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsCharPtrAndSize(ST(0), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBFormat, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_RegisterFormat__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_RegisterFormat__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_RegisterFormat'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_FindFormat) {
  {
    char *arg1 = (char *) 0 ;
    OpenBabel::OBFormat *result = 0 ;
    int res1 ;
    char *buf1 = 0 ;
    int alloc1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_FindFormat(ID);");
    }
    res1 = SWIG_AsCharPtrAndSize(ST(0), &buf1, NULL, &alloc1);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_FindFormat" "', argument " "1"" of type '" "char const *""'");
    }
    arg1 = reinterpret_cast< char * >(buf1);
    result = (OpenBabel::OBFormat *)OpenBabel::OBConversion::FindFormat((char const *)arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFormat, 0 | SWIG_SHADOW); argvi++ ;
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    XSRETURN(argvi);
  fail:
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_FormatFromExt) {
  {
    char *arg1 = (char *) 0 ;
    OpenBabel::OBFormat *result = 0 ;
    int res1 ;
    char *buf1 = 0 ;
    int alloc1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_FormatFromExt(filename);");
    }
    res1 = SWIG_AsCharPtrAndSize(ST(0), &buf1, NULL, &alloc1);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_FormatFromExt" "', argument " "1"" of type '" "char const *""'");
    }
    arg1 = reinterpret_cast< char * >(buf1);
    result = (OpenBabel::OBFormat *)OpenBabel::OBConversion::FormatFromExt((char const *)arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFormat, 0 | SWIG_SHADOW); argvi++ ;
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    XSRETURN(argvi);
  fail:
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_FormatFromMIME) {
  {
    char *arg1 = (char *) 0 ;
    OpenBabel::OBFormat *result = 0 ;
    int res1 ;
    char *buf1 = 0 ;
    int alloc1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_FormatFromMIME(MIME);");
    }
    res1 = SWIG_AsCharPtrAndSize(ST(0), &buf1, NULL, &alloc1);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_FormatFromMIME" "', argument " "1"" of type '" "char const *""'");
    }
    arg1 = reinterpret_cast< char * >(buf1);
    result = (OpenBabel::OBFormat *)OpenBabel::OBConversion::FormatFromMIME((char const *)arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFormat, 0 | SWIG_SHADOW); argvi++ ;
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    XSRETURN(argvi);
  fail:
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetNextFormat) {
  {
    OpenBabel::Formatpos *arg1 = 0 ;
    char **arg2 = 0 ;
    OpenBabel::OBFormat **arg3 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_GetNextFormat(itr,str,pFormat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__FMapType__iterator,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetNextFormat" "', argument " "1"" of type '" "OpenBabel::Formatpos &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConversion_GetNextFormat" "', argument " "1"" of type '" "OpenBabel::Formatpos &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::Formatpos * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_GetNextFormat" "', argument " "2"" of type '" "char const *&""'");
    }
    arg2 = &buf2;
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_p_OpenBabel__OBFormat,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBConversion_GetNextFormat" "', argument " "3"" of type '" "OpenBabel::OBFormat *&""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConversion_GetNextFormat" "', argument " "3"" of type '" "OpenBabel::OBFormat *&""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBFormat ** >(argp3);
    result = (bool)OpenBabel::OBConversion::GetNextFormat(*arg1,(char const *&)*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Description) {
  {
    char *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: OBConversion_Description();");
    }
    result = (char *)OpenBabel::OBConversion::Description();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetInStream) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    std::istream *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetInStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetInStream" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (std::istream *)((OpenBabel::OBConversion const *)arg1)->GetInStream();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__istream, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetOutStream) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    std::ostream *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetOutStream(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetOutStream" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (std::ostream *)((OpenBabel::OBConversion const *)arg1)->GetOutStream();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__ostream, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetInStream) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    std::istream *arg2 = (std::istream *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_SetInStream(self,pIn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetInStream" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__istream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetInStream" "', argument " "2"" of type '" "std::istream *""'"); 
    }
    arg2 = reinterpret_cast< std::istream * >(argp2);
    (arg1)->SetInStream(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetOutStream) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    std::ostream *arg2 = (std::ostream *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_SetOutStream(self,pOut);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetOutStream" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__ostream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetOutStream" "', argument " "2"" of type '" "std::ostream *""'"); 
    }
    arg2 = reinterpret_cast< std::ostream * >(argp2);
    (arg1)->SetOutStream(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetInAndOutFormats__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_SetInAndOutFormats(self,inID,outID);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetInAndOutFormats" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetInAndOutFormats" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBConversion_SetInAndOutFormats" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (bool)(arg1)->SetInAndOutFormats((char const *)arg2,(char const *)arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetInAndOutFormats__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBFormat *arg2 = (OpenBabel::OBFormat *) 0 ;
    OpenBabel::OBFormat *arg3 = (OpenBabel::OBFormat *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_SetInAndOutFormats(self,pIn,pOut);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetInAndOutFormats" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetInAndOutFormats" "', argument " "2"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBFormat * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBConversion_SetInAndOutFormats" "', argument " "3"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBFormat * >(argp3);
    result = (bool)(arg1)->SetInAndOutFormats(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetInAndOutFormats) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBFormat, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBFormat, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_SetInAndOutFormats__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_SetInAndOutFormats__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_SetInAndOutFormats'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_SetInFormat__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_SetInFormat(self,inID);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetInFormat" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetInFormat" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(arg1)->SetInFormat((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetInFormat__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBFormat *arg2 = (OpenBabel::OBFormat *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_SetInFormat(self,pIn);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetInFormat" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetInFormat" "', argument " "2"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBFormat * >(argp2);
    result = (bool)(arg1)->SetInFormat(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetInFormat) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBFormat, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_SetInFormat__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_SetInFormat__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_SetInFormat'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_SetOutFormat__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_SetOutFormat(self,outID);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetOutFormat" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetOutFormat" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(arg1)->SetOutFormat((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetOutFormat__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBFormat *arg2 = (OpenBabel::OBFormat *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_SetOutFormat(self,pOut);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetOutFormat" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetOutFormat" "', argument " "2"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBFormat * >(argp2);
    result = (bool)(arg1)->SetOutFormat(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetOutFormat) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBFormat, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_SetOutFormat__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_SetOutFormat__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_SetOutFormat'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_GetInFormat) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBFormat *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetInFormat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetInFormat" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (OpenBabel::OBFormat *)((OpenBabel::OBConversion const *)arg1)->GetInFormat();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFormat, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetOutFormat) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBFormat *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetOutFormat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetOutFormat" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (OpenBabel::OBFormat *)((OpenBabel::OBConversion const *)arg1)->GetOutFormat();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFormat, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetInFilename) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetInFilename(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetInFilename" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = ((OpenBabel::OBConversion const *)arg1)->GetInFilename();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetInPos) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    std::streampos result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetInPos(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetInPos" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = ((OpenBabel::OBConversion const *)arg1)->GetInPos();
    ST(argvi) = SWIG_NewPointerObj((new std::streampos(static_cast< const std::streampos& >(result))), SWIGTYPE_p_std__streampos, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetInLen) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    size_t result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetInLen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetInLen" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = ((OpenBabel::OBConversion const *)arg1)->GetInLen();
    ST(argvi) = SWIG_From_size_t  SWIG_PERL_CALL_ARGS_1(static_cast< size_t >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetTitle) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetTitle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetTitle" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (char *)((OpenBabel::OBConversion const *)arg1)->GetTitle();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetAuxConv) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBConversion *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetAuxConv(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetAuxConv" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (OpenBabel::OBConversion *)((OpenBabel::OBConversion const *)arg1)->GetAuxConv();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBConversion, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetAuxConv) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBConversion *arg2 = (OpenBabel::OBConversion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_SetAuxConv(self,pConv);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetAuxConv" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetAuxConv" "', argument " "2"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBConversion * >(argp2);
    (arg1)->SetAuxConv(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_IsOption__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBConversion::Option_type arg3 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_IsOption(self,opt,opttyp);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_IsOption" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_IsOption" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBConversion_IsOption" "', argument " "3"" of type '" "OpenBabel::OBConversion::Option_type""'");
    } 
    arg3 = static_cast< OpenBabel::OBConversion::Option_type >(val3);
    result = (char *)(arg1)->IsOption((char const *)arg2,arg3);
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_IsOption__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *arg2 = (char *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_IsOption(self,opt);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_IsOption" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_IsOption" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (char *)(arg1)->IsOption((char const *)arg2);
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_IsOption) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_IsOption__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_IsOption__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_IsOption'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_GetOptions) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBConversion::Option_type arg2 ;
    std::map<std::string,std::string > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_GetOptions(self,opttyp);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetOptions" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBConversion_GetOptions" "', argument " "2"" of type '" "OpenBabel::OBConversion::Option_type""'");
    } 
    arg2 = static_cast< OpenBabel::OBConversion::Option_type >(val2);
    result = (std::map<std::string,std::string > *)(arg1)->GetOptions(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_AddOption__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBConversion::Option_type arg3 ;
    char *arg4 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int res4 ;
    char *buf4 = 0 ;
    int alloc4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBConversion_AddOption(self,opt,opttyp,txt);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_AddOption" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_AddOption" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBConversion_AddOption" "', argument " "3"" of type '" "OpenBabel::OBConversion::Option_type""'");
    } 
    arg3 = static_cast< OpenBabel::OBConversion::Option_type >(val3);
    res4 = SWIG_AsCharPtrAndSize(ST(3), &buf4, NULL, &alloc4);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBConversion_AddOption" "', argument " "4"" of type '" "char const *""'");
    }
    arg4 = reinterpret_cast< char * >(buf4);
    (arg1)->AddOption((char const *)arg2,arg3,(char const *)arg4);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_AddOption__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBConversion::Option_type arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_AddOption(self,opt,opttyp);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_AddOption" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_AddOption" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBConversion_AddOption" "', argument " "3"" of type '" "OpenBabel::OBConversion::Option_type""'");
    } 
    arg3 = static_cast< OpenBabel::OBConversion::Option_type >(val3);
    (arg1)->AddOption((char const *)arg2,arg3);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_AddOption) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(3), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_AddOption__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_AddOption__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_AddOption'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_RemoveOption) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBConversion::Option_type arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_RemoveOption(self,opt,optype);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_RemoveOption" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_RemoveOption" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBConversion_RemoveOption" "', argument " "3"" of type '" "OpenBabel::OBConversion::Option_type""'");
    } 
    arg3 = static_cast< OpenBabel::OBConversion::Option_type >(val3);
    result = (bool)(arg1)->RemoveOption((char const *)arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetOptions) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBConversion::Option_type arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_SetOptions(self,options,opttyp);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetOptions" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_SetOptions" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBConversion_SetOptions" "', argument " "3"" of type '" "OpenBabel::OBConversion::Option_type""'");
    } 
    arg3 = static_cast< OpenBabel::OBConversion::Option_type >(val3);
    (arg1)->SetOptions((char const *)arg2,arg3);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_RegisterOptionParam__SWIG_0) {
  {
    std::string arg1 ;
    OpenBabel::OBFormat *arg2 = (OpenBabel::OBFormat *) 0 ;
    int arg3 ;
    OpenBabel::OBConversion::Option_type arg4 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBConversion_RegisterOptionParam(name,pFormat,numberParams,typ);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBConversion_RegisterOptionParam" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_RegisterOptionParam" "', argument " "2"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBFormat * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBConversion_RegisterOptionParam" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBConversion_RegisterOptionParam" "', argument " "4"" of type '" "OpenBabel::OBConversion::Option_type""'");
    } 
    arg4 = static_cast< OpenBabel::OBConversion::Option_type >(val4);
    OpenBabel::OBConversion::RegisterOptionParam(arg1,arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_RegisterOptionParam__SWIG_1) {
  {
    std::string arg1 ;
    OpenBabel::OBFormat *arg2 = (OpenBabel::OBFormat *) 0 ;
    int arg3 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_RegisterOptionParam(name,pFormat,numberParams);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBConversion_RegisterOptionParam" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_RegisterOptionParam" "', argument " "2"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBFormat * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBConversion_RegisterOptionParam" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    OpenBabel::OBConversion::RegisterOptionParam(arg1,arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_RegisterOptionParam__SWIG_2) {
  {
    std::string arg1 ;
    OpenBabel::OBFormat *arg2 = (OpenBabel::OBFormat *) 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_RegisterOptionParam(name,pFormat);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBConversion_RegisterOptionParam" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBFormat, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_RegisterOptionParam" "', argument " "2"" of type '" "OpenBabel::OBFormat *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBFormat * >(argp2);
    OpenBabel::OBConversion::RegisterOptionParam(arg1,arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_RegisterOptionParam) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBFormat, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBFormat, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBFormat, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_RegisterOptionParam__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_RegisterOptionParam__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_RegisterOptionParam__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_RegisterOptionParam'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_GetOptionParams) {
  {
    std::string arg1 ;
    OpenBabel::OBConversion::Option_type arg2 ;
    int result;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_GetOptionParams(name,typ);");
    }
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(0), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBConversion_GetOptionParams" "', argument " "1"" of type '" "std::string""'"); 
      }
      arg1 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBConversion_GetOptionParams" "', argument " "2"" of type '" "OpenBabel::OBConversion::Option_type""'");
    } 
    arg2 = static_cast< OpenBabel::OBConversion::Option_type >(val2);
    result = (int)OpenBabel::OBConversion::GetOptionParams(arg1,arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Convert__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    std::istream *arg2 = (std::istream *) 0 ;
    std::ostream *arg3 = (std::ostream *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_Convert(self,is,os);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_Convert" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__istream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_Convert" "', argument " "2"" of type '" "std::istream *""'"); 
    }
    arg2 = reinterpret_cast< std::istream * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_std__ostream, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBConversion_Convert" "', argument " "3"" of type '" "std::ostream *""'"); 
    }
    arg3 = reinterpret_cast< std::ostream * >(argp3);
    result = (int)(arg1)->Convert(arg2,arg3);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Convert__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_Convert(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_Convert" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (int)(arg1)->Convert();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Convert) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__istream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_Convert__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_Convert__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_Convert'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_FullConvert) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    std::vector<std::string > *arg2 = 0 ;
    std::string *arg3 = 0 ;
    std::vector<std::string > *arg4 = 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBConversion_FullConvert(self,FileList,OutputFileName,OutputFileList);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_FullConvert" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__string_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_FullConvert" "', argument " "2"" of type '" "std::vector<std::string > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConversion_FullConvert" "', argument " "2"" of type '" "std::vector<std::string > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<std::string > * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBConversion_FullConvert" "', argument " "3"" of type '" "std::string &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConversion_FullConvert" "', argument " "3"" of type '" "std::string &""'"); 
    }
    arg3 = reinterpret_cast< std::string * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_std__vectorTstd__string_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBConversion_FullConvert" "', argument " "4"" of type '" "std::vector<std::string > &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConversion_FullConvert" "', argument " "4"" of type '" "std::vector<std::string > &""'"); 
    }
    arg4 = reinterpret_cast< std::vector<std::string > * >(argp4);
    result = (int)(arg1)->FullConvert(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_AddChemObject) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_AddChemObject(self,pOb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_AddChemObject" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_AddChemObject" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (bool)(arg1)->AddChemObject(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetChemObject) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetChemObject(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetChemObject" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (OpenBabel::OBBase *)(arg1)->GetChemObject();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_IsLast) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_IsLast(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_IsLast" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (bool)(arg1)->IsLast();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_IsFirstInput) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_IsFirstInput(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_IsFirstInput" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (bool)(arg1)->IsFirstInput();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_GetOutputIndex) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_GetOutputIndex(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_GetOutputIndex" "', argument " "1"" of type '" "OpenBabel::OBConversion const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    result = (int)((OpenBabel::OBConversion const *)arg1)->GetOutputIndex();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetOutputIndex) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_SetOutputIndex(self,indx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetOutputIndex" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBConversion_SetOutputIndex" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetOutputIndex(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetMoreFilesToCome) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_SetMoreFilesToCome(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetMoreFilesToCome" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    (arg1)->SetMoreFilesToCome();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetOneObjectOnly__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_SetOneObjectOnly(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetOneObjectOnly" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBConversion_SetOneObjectOnly" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetOneObjectOnly(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetOneObjectOnly__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_SetOneObjectOnly(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_SetOneObjectOnly" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    (arg1)->SetOneObjectOnly();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_SetOneObjectOnly) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_SetOneObjectOnly__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_SetOneObjectOnly__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_SetOneObjectOnly'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_GetDefaultFormat) {
  {
    OpenBabel::OBFormat *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: OBConversion_GetDefaultFormat();");
    }
    result = (OpenBabel::OBFormat *)OpenBabel::OBConversion::GetDefaultFormat();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFormat, 0 | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Write__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::ostream *arg3 = (std::ostream *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_Write(self,pOb,pout);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_Write" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_Write" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_std__ostream, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBConversion_Write" "', argument " "3"" of type '" "std::ostream *""'"); 
    }
    arg3 = reinterpret_cast< std::ostream * >(argp3);
    result = (bool)(arg1)->Write(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Write__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_Write(self,pOb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_Write" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_Write" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (bool)(arg1)->Write(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Write) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_Write__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_Write__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_Write'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_WriteString__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    bool arg3 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_WriteString(self,pOb,trimWhitespace);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_WriteString" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_WriteString" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBConversion_WriteString" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (arg1)->WriteString(arg2,arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_WriteString__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_WriteString(self,pOb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_WriteString" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_WriteString" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (arg1)->WriteString(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_WriteString) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_WriteString__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_WriteString__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_WriteString'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_WriteFile) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::string arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_WriteFile(self,pOb,filePath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_WriteFile" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_WriteFile" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBConversion_WriteFile" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = (bool)(arg1)->WriteFile(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_CloseOutFile) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBConversion_CloseOutFile(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_CloseOutFile" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    (arg1)->CloseOutFile();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Read__SWIG_0) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::istream *arg3 = (std::istream *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_Read(self,pOb,pin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_Read" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_Read" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_std__istream, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBConversion_Read" "', argument " "3"" of type '" "std::istream *""'"); 
    }
    arg3 = reinterpret_cast< std::istream * >(argp3);
    result = (bool)(arg1)->Read(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Read__SWIG_1) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_Read(self,pOb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_Read" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_Read" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    result = (bool)(arg1)->Read(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_Read) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBConversion, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__istream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_Read__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBConversion_Read__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBConversion_Read'");
  XSRETURN(0);
}


XS(_wrap_OBConversion_ReadString) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::string arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_ReadString(self,pOb,input);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_ReadString" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_ReadString" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBConversion_ReadString" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = (bool)(arg1)->ReadString(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_ReadFile) {
  {
    OpenBabel::OBConversion *arg1 = (OpenBabel::OBConversion *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::string arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBConversion_ReadFile(self,pOb,filePath);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBConversion, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_ReadFile" "', argument " "1"" of type '" "OpenBabel::OBConversion *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBConversion * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_ReadFile" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBConversion_ReadFile" "', argument " "3"" of type '" "std::string""'"); 
      }
      arg3 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    result = (bool)(arg1)->ReadFile(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_BatchFileName) {
  {
    std::string *arg1 = 0 ;
    std::string *arg2 = 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_BatchFileName(BaseName,InFile);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_BatchFileName" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConversion_BatchFileName" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBConversion_BatchFileName" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConversion_BatchFileName" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    result = OpenBabel::OBConversion::BatchFileName(*arg1,*arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBConversion_IncrementedFileName) {
  {
    std::string *arg1 = 0 ;
    int arg2 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBConversion_IncrementedFileName(BaseName,Count);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBConversion_IncrementedFileName" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBConversion_IncrementedFileName" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBConversion_IncrementedFileName" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = OpenBabel::OBConversion::IncrementedFileName(*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidue__SWIG_0) {
  {
    OpenBabel::OBResidue *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBResidue();");
    }
    result = (OpenBabel::OBResidue *)new OpenBabel::OBResidue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidue__SWIG_1) {
  {
    OpenBabel::OBResidue *arg1 = 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBResidue(OpenBabel::OBResidue const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBResidue,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBResidue" "', argument " "1"" of type '" "OpenBabel::OBResidue const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBResidue" "', argument " "1"" of type '" "OpenBabel::OBResidue const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (OpenBabel::OBResidue *)new OpenBabel::OBResidue((OpenBabel::OBResidue const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidue) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidue, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidue__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidue__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBResidue'");
  XSRETURN(0);
}


XS(_wrap_delete_OBResidue) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBResidue" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_AddAtom) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_AddAtom(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_AddAtom" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_AddAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (arg1)->AddAtom(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_InsertAtom) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_InsertAtom(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_InsertAtom" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_InsertAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (arg1)->InsertAtom(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_RemoveAtom) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_RemoveAtom(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_RemoveAtom" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_RemoveAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (arg1)->RemoveAtom(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_Clear) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_Clear" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    (arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_SetName) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_SetName(self,resname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_SetName" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidue_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (arg1)->SetName((std::string const &)*arg2);
    
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_SetNum) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_SetNum(self,resnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_SetNum" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidue_SetNum" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_SetChain) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_SetChain(self,chain);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_SetChain" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidue_SetChain" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    (arg1)->SetChain(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_SetChainNum) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_SetChainNum(self,chainnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_SetChainNum" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidue_SetChainNum" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetChainNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_SetIdx) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidue_SetIdx" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_SetAtomID) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidue_SetAtomID(self,atom,id);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_SetAtomID" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_SetAtomID" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBResidue_SetAtomID" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidue_SetAtomID" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    (arg1)->SetAtomID(arg2,(std::string const &)*arg3);
    
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_SetHetAtom) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidue_SetHetAtom(self,atom,hetatm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_SetHetAtom" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_SetHetAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBResidue_SetHetAtom" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (arg1)->SetHetAtom(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_SetSerialNum) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    unsigned int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidue_SetSerialNum(self,atom,sernum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_SetSerialNum" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_SetSerialNum" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBResidue_SetSerialNum" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    (arg1)->SetSerialNum(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetName) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetName" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = ((OpenBabel::OBResidue const *)arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetNum) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_GetNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetNum" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (unsigned int)((OpenBabel::OBResidue const *)arg1)->GetNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetNumAtoms) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_GetNumAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetNumAtoms" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (unsigned int)((OpenBabel::OBResidue const *)arg1)->GetNumAtoms();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetChain) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    char result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_GetChain(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetChain" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (char)((OpenBabel::OBResidue const *)arg1)->GetChain();
    ST(argvi) = SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetChainNum) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_GetChainNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetChainNum" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (unsigned int)((OpenBabel::OBResidue const *)arg1)->GetChainNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetIdx) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (unsigned int)((OpenBabel::OBResidue const *)arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetResKey) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_GetResKey(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetResKey" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (unsigned int)((OpenBabel::OBResidue const *)arg1)->GetResKey();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetAtoms) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBAtom * > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_GetAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetAtoms" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = ((OpenBabel::OBResidue const *)arg1)->GetAtoms();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBAtom * >(static_cast< const std::vector<OpenBabel::OBAtom * >& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetBonds__SWIG_0) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    bool arg2 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_GetBonds(self,exterior);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetBonds" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidue_GetBonds" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = ((OpenBabel::OBResidue const *)arg1)->GetBonds(arg2);
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >(static_cast< const std::vector<OpenBabel::OBBond * >& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetBonds__SWIG_1) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_GetBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetBonds" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = ((OpenBabel::OBResidue const *)arg1)->GetBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >(static_cast< const std::vector<OpenBabel::OBBond * >& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetBonds) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidue, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidue, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidue_GetBonds__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidue_GetBonds__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidue_GetBonds'");
  XSRETURN(0);
}


XS(_wrap_OBResidue_GetAtomID) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_GetAtomID(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetAtomID" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_GetAtomID" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = ((OpenBabel::OBResidue const *)arg1)->GetAtomID(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetSerialNum) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_GetSerialNum(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetSerialNum" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_GetSerialNum" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (unsigned int)((OpenBabel::OBResidue const *)arg1)->GetSerialNum(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetAminoAcidProperty) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_GetAminoAcidProperty(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetAminoAcidProperty" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidue_GetAminoAcidProperty" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)((OpenBabel::OBResidue const *)arg1)->GetAminoAcidProperty(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetAtomProperty) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    int arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidue_GetAtomProperty(self,OpenBabel::OBAtom *,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetAtomProperty" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_GetAtomProperty" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBResidue_GetAtomProperty" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (bool)((OpenBabel::OBResidue const *)arg1)->GetAtomProperty(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_GetResidueProperty) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_GetResidueProperty(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_GetResidueProperty" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidue_GetResidueProperty" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)((OpenBabel::OBResidue const *)arg1)->GetResidueProperty(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_IsHetAtom) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_IsHetAtom(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_IsHetAtom" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_IsHetAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)((OpenBabel::OBResidue const *)arg1)->IsHetAtom(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_IsResidueType) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_IsResidueType(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_IsResidueType" "', argument " "1"" of type '" "OpenBabel::OBResidue const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidue_IsResidueType" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)((OpenBabel::OBResidue const *)arg1)->IsResidueType(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_BeginAtoms) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBAtom * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_BeginAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_BeginAtoms" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (arg1)->BeginAtoms();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBAtomIterator(static_cast< const OpenBabel::OBAtomIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_EndAtoms) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBAtom * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidue_EndAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_EndAtoms" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (arg1)->EndAtoms();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBAtomIterator(static_cast< const OpenBabel::OBAtomIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_BeginAtom) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    std::vector<OpenBabel::OBAtom * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_BeginAtom(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_BeginAtom" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_BeginAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidue_BeginAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBAtom * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(arg1)->BeginAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidue_NextAtom) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    std::vector<OpenBabel::OBAtom * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidue_NextAtom(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidue_NextAtom" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidue_NextAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidue_NextAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBAtom * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(arg1)->NextAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__a_set) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBInternalCoord__a_set(self,_a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__a_set" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBInternalCoord__a_set" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    if (arg1) (arg1)->_a = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__a_get) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBInternalCoord__a_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__a_get" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    result = (OpenBabel::OBAtom *) ((arg1)->_a);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__b_set) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBInternalCoord__b_set(self,_b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__b_set" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBInternalCoord__b_set" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    if (arg1) (arg1)->_b = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__b_get) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBInternalCoord__b_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__b_get" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    result = (OpenBabel::OBAtom *) ((arg1)->_b);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__c_set) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBInternalCoord__c_set(self,_c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__c_set" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBInternalCoord__c_set" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    if (arg1) (arg1)->_c = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__c_get) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBInternalCoord__c_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__c_get" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    result = (OpenBabel::OBAtom *) ((arg1)->_c);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__dst_set) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBInternalCoord__dst_set(self,_dst);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__dst_set" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBInternalCoord__dst_set" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    if (arg1) (arg1)->_dst = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__dst_get) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBInternalCoord__dst_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__dst_get" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    result = (double) ((arg1)->_dst);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__ang_set) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBInternalCoord__ang_set(self,_ang);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__ang_set" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBInternalCoord__ang_set" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    if (arg1) (arg1)->_ang = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__ang_get) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBInternalCoord__ang_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__ang_get" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    result = (double) ((arg1)->_ang);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__tor_set) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBInternalCoord__tor_set(self,_tor);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__tor_set" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBInternalCoord__tor_set" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    if (arg1) (arg1)->_tor = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBInternalCoord__tor_get) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBInternalCoord__tor_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBInternalCoord__tor_get" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    result = (double) ((arg1)->_tor);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBInternalCoord__SWIG_0) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    double arg4 ;
    double arg5 ;
    double arg6 ;
    OpenBabel::OBInternalCoord *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    double val5 ;
    int ecode5 = 0 ;
    double val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: new_OBInternalCoord(a,b,c,dst,ang,tor);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBInternalCoord" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OBInternalCoord" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_OBInternalCoord" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    ecode5 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_OBInternalCoord" "', argument " "5"" of type '" "double""'");
    } 
    arg5 = static_cast< double >(val5);
    ecode6 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_OBInternalCoord" "', argument " "6"" of type '" "double""'");
    } 
    arg6 = static_cast< double >(val6);
    result = (OpenBabel::OBInternalCoord *)new OpenBabel::OBInternalCoord(arg1,arg2,arg3,arg4,arg5,arg6);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBInternalCoord, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBInternalCoord__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    double arg4 ;
    double arg5 ;
    OpenBabel::OBInternalCoord *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    double val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: new_OBInternalCoord(a,b,c,dst,ang);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBInternalCoord" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OBInternalCoord" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_OBInternalCoord" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    ecode5 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_OBInternalCoord" "', argument " "5"" of type '" "double""'");
    } 
    arg5 = static_cast< double >(val5);
    result = (OpenBabel::OBInternalCoord *)new OpenBabel::OBInternalCoord(arg1,arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBInternalCoord, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBInternalCoord__SWIG_2) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    double arg4 ;
    OpenBabel::OBInternalCoord *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_OBInternalCoord(a,b,c,dst);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBInternalCoord" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OBInternalCoord" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_OBInternalCoord" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    result = (OpenBabel::OBInternalCoord *)new OpenBabel::OBInternalCoord(arg1,arg2,arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBInternalCoord, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBInternalCoord__SWIG_3) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBInternalCoord *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_OBInternalCoord(a,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBInternalCoord" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_OBInternalCoord" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    result = (OpenBabel::OBInternalCoord *)new OpenBabel::OBInternalCoord(arg1,arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBInternalCoord, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBInternalCoord__SWIG_4) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBInternalCoord *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_OBInternalCoord(a,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBInternalCoord" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBInternalCoord *)new OpenBabel::OBInternalCoord(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBInternalCoord, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBInternalCoord__SWIG_5) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBInternalCoord *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBInternalCoord(a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (OpenBabel::OBInternalCoord *)new OpenBabel::OBInternalCoord(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBInternalCoord, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBInternalCoord__SWIG_6) {
  {
    OpenBabel::OBInternalCoord *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBInternalCoord();");
    }
    result = (OpenBabel::OBInternalCoord *)new OpenBabel::OBInternalCoord();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBInternalCoord, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBInternalCoord) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_6;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 6;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_6:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_7;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 7;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_7:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBInternalCoord__SWIG_6); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBInternalCoord__SWIG_5); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBInternalCoord__SWIG_4); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBInternalCoord__SWIG_3); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBInternalCoord__SWIG_2); return;
    case 6:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBInternalCoord__SWIG_1); return;
    case 7:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBInternalCoord__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBInternalCoord'");
  XSRETURN(0);
}


XS(_wrap_delete_OBInternalCoord) {
  {
    OpenBabel::OBInternalCoord *arg1 = (OpenBabel::OBInternalCoord *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBInternalCoord(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBInternalCoord, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBInternalCoord *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBInternalCoord * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_Visit_set) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_Visit_set(self,Visit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_Visit_set" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_Visit_set" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    if (arg1) (arg1)->Visit = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_Visit_get) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_Visit_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_Visit_get" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool) ((arg1)->Visit);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtom) {
  {
    OpenBabel::OBAtom *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBAtom();");
    }
    result = (OpenBabel::OBAtom *)new OpenBabel::OBAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBAtom) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBAtom" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_Clear) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_Clear" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetIdx) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetHyb) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetHyb(self,hyb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetHyb" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetHyb" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetHyb(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetAtomicNum) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetAtomicNum(self,atomicnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetAtomicNum" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetAtomicNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetIsotope) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetIsotope(self,iso);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetIsotope" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetIsotope" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetIsotope(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetImplicitValence) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetImplicitValence(self,val);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetImplicitValence" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetImplicitValence(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IncrementImplicitValence) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IncrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IncrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->IncrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_DecrementImplicitValence) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_DecrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_DecrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->DecrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetFormalCharge) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetFormalCharge(self,fcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetFormalCharge" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetFormalCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetSpinMultiplicity) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    short arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetSpinMultiplicity(self,spin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetSpinMultiplicity" "', argument " "2"" of type '" "short""'");
    } 
    arg2 = static_cast< short >(val2);
    (arg1)->SetSpinMultiplicity(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetType__SWIG_0) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetType" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_SetType" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->SetType(arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetType__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetType" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtom_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    (arg1)->SetType(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_SetType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_SetType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtom_SetType'");
  XSRETURN(0);
}


XS(_wrap_OBAtom_SetPartialCharge) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetPartialCharge(self,pcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetPartialCharge" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (arg1)->SetPartialCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetVector__SWIG_0) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetVector(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetVector" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtom_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    (arg1)->SetVector(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetVector__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBAtom_SetVector(self,x,y,z);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetVector" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetVector" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBAtom_SetVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBAtom_SetVector" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    (arg1)->SetVector(arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetCoordPtr) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double **arg2 = (double **) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetCoordPtr(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_SetCoordPtr" "', argument " "2"" of type '" "double **""'"); 
    }
    arg2 = reinterpret_cast< double ** >(argp2);
    (arg1)->SetCoordPtr(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetVector__SWIG_2) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_SetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetVector" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->SetVector();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_SetVector__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_SetVector__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_SetVector__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtom_SetVector'");
  XSRETURN(0);
}


XS(_wrap_OBAtom_SetResidue) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBResidue *arg2 = (OpenBabel::OBResidue *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetResidue(self,res);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetResidue" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_SetResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    (arg1)->SetResidue(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetParent) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetParent(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetParent" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetAromatic) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_SetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetAromatic" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->SetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_UnsetAromatic) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_UnsetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_UnsetAromatic" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->UnsetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetClockwiseStereo) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_SetClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->SetClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetAntiClockwiseStereo) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_SetAntiClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetAntiClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->SetAntiClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetPositiveStereo) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_SetPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->SetPositiveStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetNegativeStereo) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_SetNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->SetNegativeStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_UnsetStereo) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_UnsetStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_UnsetStereo" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->UnsetStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetInRing) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_SetInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetInRing" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->SetInRing();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetChiral) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_SetChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetChiral" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->SetChiral();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_ClearCoordPtr) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_ClearCoordPtr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_ClearCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->ClearCoordPtr();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetFormalCharge) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetFormalCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (int)((OpenBabel::OBAtom const *)arg1)->GetFormalCharge();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetAtomicNum) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetAtomicNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->GetAtomicNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetIsotope) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned short result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetIsotope(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetIsotope" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned short)((OpenBabel::OBAtom const *)arg1)->GetIsotope();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetSpinMultiplicity) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetSpinMultiplicity(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (int)((OpenBabel::OBAtom const *)arg1)->GetSpinMultiplicity();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetAtomicMass) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetAtomicMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetAtomicMass" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)((OpenBabel::OBAtom const *)arg1)->GetAtomicMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetExactMass) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetExactMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetExactMass" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)((OpenBabel::OBAtom const *)arg1)->GetExactMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetIdx) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetCoordinateIdx) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetCoordinateIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetCoordinateIdx" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->GetCoordinateIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetCIdx) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetCIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetCIdx" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->GetCIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetValence) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetValence" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->GetValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetHyb) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetHyb(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetHyb" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->GetHyb();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetImplicitValence) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->GetImplicitValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetHvyValence) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetHvyValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetHvyValence" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->GetHvyValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetHeteroValence) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetHeteroValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetHeteroValence" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->GetHeteroValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetType) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetType" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (char *)(arg1)->GetType();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetX) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetX(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetX" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)(arg1)->GetX();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_x) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_x(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_x" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)(arg1)->x();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetY) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetY(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetY" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)(arg1)->GetY();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_y) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_y(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_y" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)(arg1)->y();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetZ) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetZ(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetZ" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)(arg1)->GetZ();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_z) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_z(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_z" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)(arg1)->z();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetCoordinate) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetCoordinate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetCoordinate" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double *)(arg1)->GetCoordinate();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetVector) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::vector3 *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetVector" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    {
      OpenBabel::vector3 &_result_ref = (arg1)->GetVector();
      result = (OpenBabel::vector3 *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetPartialCharge) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetPartialCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)(arg1)->GetPartialCharge();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetResidue) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetResidue" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (OpenBabel::OBResidue *)(arg1)->GetResidue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetParent) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetParent" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (OpenBabel::OBMol *)(arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetNewBondVector) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAtom_GetNewBondVector(self,v,length);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetNewBondVector" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtom_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBAtom_GetNewBondVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    result = (bool)(arg1)->GetNewBondVector(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_GetBond(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_GetBond" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBBond *)(arg1)->GetBond(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetNextAtom) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_GetNextAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetNextAtom" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (OpenBabel::OBAtom *)(arg1)->GetNextAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_BeginBonds) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_BeginBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_BeginBonds" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (arg1)->BeginBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_EndBonds) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_EndBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_EndBonds" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (arg1)->EndBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_BeginBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_BeginBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_BeginBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtom_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(arg1)->BeginBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_NextBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_NextBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_NextBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtom_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(arg1)->NextBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_BeginNbrAtom) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_BeginNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_BeginNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtom_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(arg1)->BeginNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_NextNbrAtom) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_NextNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_NextNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtom_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(arg1)->NextNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetDistance__SWIG_0) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_GetDistance(self,index);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_GetDistance" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetDistance__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_GetDistance(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_GetDistance" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (double)(arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetDistance) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_GetDistance__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_GetDistance__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtom_GetDistance'");
  XSRETURN(0);
}


XS(_wrap_OBAtom_GetAngle__SWIG_0) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int arg2 ;
    int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAtom_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_GetAngle" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBAtom_GetAngle" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (double)(arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetAngle__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAtom_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_GetAngle" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBAtom_GetAngle" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    result = (double)(arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_GetAngle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_GetAngle__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_GetAngle__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtom_GetAngle'");
  XSRETURN(0);
}


XS(_wrap_OBAtom_NewResidue) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_NewResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_NewResidue" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->NewResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_DeleteResidue) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_DeleteResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_DeleteResidue" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->DeleteResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_AddBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_AddBond(self,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_AddBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_AddBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    (arg1)->AddBond(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_InsertBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *arg3 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAtom_InsertBond(self,i,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_InsertBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtom_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBAtom_InsertBond" "', argument " "3"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBond * >(argp3);
    (arg1)->InsertBond(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_DeleteBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_DeleteBond(self,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_DeleteBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_DeleteBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(arg1)->DeleteBond(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_ClearBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_ClearBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_ClearBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->ClearBond();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_CountFreeOxygens) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_CountFreeOxygens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_CountFreeOxygens" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->CountFreeOxygens();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_ImplicitHydrogenCount) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_ImplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_ImplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->ImplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_ExplicitHydrogenCount__SWIG_0) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool arg2 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_ExplicitHydrogenCount(self,ExcludeIsotopes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_ExplicitHydrogenCount" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->ExplicitHydrogenCount(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_ExplicitHydrogenCount__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_ExplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->ExplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_ExplicitHydrogenCount) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_ExplicitHydrogenCount__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_ExplicitHydrogenCount__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtom_ExplicitHydrogenCount'");
  XSRETURN(0);
}


XS(_wrap_OBAtom_MemberOfRingCount) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_MemberOfRingCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_MemberOfRingCount" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->MemberOfRingCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_MemberOfRingSize) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_MemberOfRingSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_MemberOfRingSize" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->MemberOfRingSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_CountRingBonds) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_CountRingBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_CountRingBonds" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->CountRingBonds();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SmallestBondAngle) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_SmallestBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SmallestBondAngle" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)(arg1)->SmallestBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_AverageBondAngle) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_AverageBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_AverageBondAngle" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (double)(arg1)->AverageBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_BOSum) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_BOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_BOSum" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->BOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_KBOSum) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_KBOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_KBOSum" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (unsigned int)((OpenBabel::OBAtom const *)arg1)->KBOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HtoMethyl) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HtoMethyl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HtoMethyl" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HtoMethyl();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_SetHybAndGeom) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_SetHybAndGeom(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_SetHybAndGeom" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_SetHybAndGeom" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(arg1)->SetHybAndGeom(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_ForceNoH) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_ForceNoH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_ForceNoH" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    (arg1)->ForceNoH();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasNoHForced) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HasNoHForced(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasNoHForced" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HasNoHForced();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasResidue) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HasResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasResidue" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HasResidue();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsHydrogen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsHydrogen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsCarbon) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsCarbon(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsCarbon" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsCarbon();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsNitrogen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsNitrogen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsOxygen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsSulfur) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsSulfur(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsSulfur" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsSulfur();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsPhosphorus) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsPhosphorus(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsPhosphorus" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsPhosphorus();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsAromatic) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)((OpenBabel::OBAtom const *)arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsInRing) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)((OpenBabel::OBAtom const *)arg1)->IsInRing();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsInRingSize) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_IsInRingSize(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsInRingSize" "', argument " "1"" of type '" "OpenBabel::OBAtom const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_IsInRingSize" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)((OpenBabel::OBAtom const *)arg1)->IsInRingSize(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsHeteroatom) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsHeteroatom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsHeteroatom" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsHeteroatom();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsNotCorH) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsNotCorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsNotCorH" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsNotCorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsConnected) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_IsConnected(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsConnected" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_IsConnected" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->IsConnected(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsOneThree) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_IsOneThree(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsOneThree" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_IsOneThree" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->IsOneThree(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsOneFour) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_IsOneFour(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsOneFour" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_IsOneFour" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->IsOneFour(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsCarboxylOxygen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsCarboxylOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsCarboxylOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsCarboxylOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsPhosphateOxygen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsPhosphateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsPhosphateOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsPhosphateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsSulfateOxygen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsSulfateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsSulfateOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsSulfateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsNitroOxygen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsNitroOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsNitroOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsNitroOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsAmideNitrogen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsAmideNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsAmideNitrogen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsAmideNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsPolarHydrogen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsNonPolarHydrogen) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsNonPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsNonPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsNonPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsAromaticNOxide) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsAromaticNOxide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsAromaticNOxide" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsAromaticNOxide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsChiral) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsChiral" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsChiral();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsAxial) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsAxial(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsAxial" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsAxial();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsClockwise) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsClockwise" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsAntiClockwise) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsAntiClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsAntiClockwise" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsAntiClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsPositiveStereo) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsPositiveStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsNegativeStereo) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsNegativeStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasChiralitySpecified) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HasChiralitySpecified(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasChiralitySpecified" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HasChiralitySpecified();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasChiralVolume) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HasChiralVolume(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasChiralVolume" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HasChiralVolume();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsHbondAcceptor) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsHbondAcceptor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsHbondAcceptor" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsHbondAcceptor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsHbondDonor) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsHbondDonor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsHbondDonor" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsHbondDonor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_IsHbondDonorH) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_IsHbondDonorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_IsHbondDonorH" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->IsHbondDonorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasAlphaBetaUnsat__SWIG_0) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_HasAlphaBetaUnsat(self,includePandS);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_HasAlphaBetaUnsat" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)(arg1)->HasAlphaBetaUnsat(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasAlphaBetaUnsat__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HasAlphaBetaUnsat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HasAlphaBetaUnsat();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasAlphaBetaUnsat) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_HasAlphaBetaUnsat__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtom_HasAlphaBetaUnsat__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtom_HasAlphaBetaUnsat'");
  XSRETURN(0);
}


XS(_wrap_OBAtom_HasBondOfOrder) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_HasBondOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasBondOfOrder" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_HasBondOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(arg1)->HasBondOfOrder(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_CountBondsOfOrder) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    unsigned int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_CountBondsOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_CountBondsOfOrder" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtom_CountBondsOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (int)(arg1)->CountBondsOfOrder(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasNonSingleBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HasNonSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasNonSingleBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HasNonSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasSingleBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HasSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasSingleBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HasSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasDoubleBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HasDoubleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasDoubleBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HasDoubleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_HasAromaticBond) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtom_HasAromaticBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_HasAromaticBond" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (bool)(arg1)->HasAromaticBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtom_MatchesSMARTS) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtom_MatchesSMARTS(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtom_MatchesSMARTS" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtom_MatchesSMARTS" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(arg1)->MatchesSMARTS((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_Visit_set) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBond_Visit_set(self,Visit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_Visit_set" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBBond_Visit_set" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    if (arg1) (arg1)->Visit = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_Visit_get) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_Visit_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_Visit_get" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool) ((arg1)->Visit);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBBond) {
  {
    OpenBabel::OBBond *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBBond();");
    }
    result = (OpenBabel::OBBond *)new OpenBabel::OBBond();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBBond) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBBond" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetIdx) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBond_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBBond_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetBO) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBond_SetBO(self,order);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetBO" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBBond_SetBO" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetBO(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetBondOrder) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBond_SetBondOrder(self,order);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetBondOrder" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBBond_SetBondOrder" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetBondOrder(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetBegin) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBond_SetBegin(self,begin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetBegin" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBond_SetBegin" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (arg1)->SetBegin(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetEnd) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBond_SetEnd(self,end);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetEnd" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBond_SetEnd" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (arg1)->SetEnd(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetParent) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBond_SetParent(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetParent" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBond_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetLength) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    double arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBBond_SetLength(self,fixed,length);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetLength" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBond_SetLength" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBBond_SetLength" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    (arg1)->SetLength(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_Set) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    int arg2 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg4 = (OpenBabel::OBAtom *) 0 ;
    int arg5 ;
    int arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: OBBond_Set(self,index,begin,end,order,flags);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_Set" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBBond_Set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBBond_Set" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBBond_Set" "', argument " "4"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::OBAtom * >(argp4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OBBond_Set" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "OBBond_Set" "', argument " "6"" of type '" "int""'");
    } 
    arg6 = static_cast< int >(val6);
    (arg1)->Set(arg2,arg3,arg4,arg5,arg6);
    
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetKSingle) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetKSingle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetKSingle" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetKSingle();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetKDouble) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetKDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetKDouble" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetKDouble();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetKTriple) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetKTriple(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetKTriple" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetKTriple();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetAromatic) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetAromatic" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetHash) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetHash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetHash" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetHash();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetWedge) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetWedge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetWedge" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetWedge();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetUp) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetUp" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetUp();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetDown) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetDown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetDown" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetDown();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetInRing) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetInRing" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetInRing();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_SetClosure) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_SetClosure(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_SetClosure" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->SetClosure();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_UnsetHash) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_UnsetHash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_UnsetHash" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->UnsetHash();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_UnsetWedge) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_UnsetWedge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_UnsetWedge" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->UnsetWedge();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_UnsetUp) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_UnsetUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_UnsetUp" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->UnsetUp();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_UnsetDown) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_UnsetDown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_UnsetDown" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->UnsetDown();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_UnsetAromatic) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_UnsetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_UnsetAromatic" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->UnsetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_UnsetKekule) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_UnsetKekule(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_UnsetKekule" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    (arg1)->UnsetKekule();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetIdx) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (unsigned int)((OpenBabel::OBBond const *)arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetBO) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetBO(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetBO" "', argument " "1"" of type '" "OpenBabel::OBBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (unsigned int)((OpenBabel::OBBond const *)arg1)->GetBO();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetBondOrder) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetBondOrder(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetBondOrder" "', argument " "1"" of type '" "OpenBabel::OBBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (unsigned int)((OpenBabel::OBBond const *)arg1)->GetBondOrder();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetFlags) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetFlags(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetFlags" "', argument " "1"" of type '" "OpenBabel::OBBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (unsigned int)((OpenBabel::OBBond const *)arg1)->GetFlags();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetBeginAtomIdx) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetBeginAtomIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetBeginAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (unsigned int)((OpenBabel::OBBond const *)arg1)->GetBeginAtomIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetEndAtomIdx) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetEndAtomIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetEndAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (unsigned int)((OpenBabel::OBBond const *)arg1)->GetEndAtomIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetBeginAtom) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetBeginAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetBeginAtom" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (OpenBabel::OBAtom *)(arg1)->GetBeginAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetEndAtom) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetEndAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetEndAtom" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (OpenBabel::OBAtom *)(arg1)->GetEndAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetNbrAtom) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBond_GetNbrAtom(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBond_GetNbrAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBAtom *)(arg1)->GetNbrAtom(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetParent) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetParent" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (OpenBabel::OBMol *)(arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetEquibLength) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetEquibLength(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetEquibLength" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (double)(arg1)->GetEquibLength();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetLength) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_GetLength(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetLength" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (double)(arg1)->GetLength();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_GetNbrAtomIdx) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBBond_GetNbrAtomIdx(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_GetNbrAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBBond_GetNbrAtomIdx" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (int)(arg1)->GetNbrAtomIdx(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsAromatic) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)((OpenBabel::OBBond const *)arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsInRing) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBBond const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)((OpenBabel::OBBond const *)arg1)->IsInRing();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsRotor) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsRotor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsRotor" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsRotor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsAmide) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsAmide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsAmide" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsAmide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsPrimaryAmide) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsPrimaryAmide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsPrimaryAmide" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsPrimaryAmide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsSecondaryAmide) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsSecondaryAmide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsSecondaryAmide" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsSecondaryAmide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsEster) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsEster(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsEster" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsEster();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsCarbonyl) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsCarbonyl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsCarbonyl" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsCarbonyl();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsSingle) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsSingle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsSingle" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsSingle();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsDouble) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsDouble" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsDouble();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsTriple) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsTriple(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsTriple" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsTriple();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsKSingle) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsKSingle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsKSingle" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsKSingle();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsKDouble) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsKDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsKDouble" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsKDouble();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsKTriple) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsKTriple(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsKTriple" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsKTriple();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsClosure) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsClosure(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsClosure" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsClosure();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsUp) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsUp" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsUp();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsDown) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsDown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsDown" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsDown();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsWedge) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsWedge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsWedge" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsWedge();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsHash) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsHash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsHash" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsHash();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBBond_IsDoubleBondGeometry) {
  {
    OpenBabel::OBBond *arg1 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBBond_IsDoubleBondGeometry(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBBond_IsDoubleBondGeometry" "', argument " "1"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBBond * >(argp1);
    result = (bool)(arg1)->IsDoubleBondGeometry();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMol__SWIG_0) {
  {
    OpenBabel::OBMol *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBMol();");
    }
    result = (OpenBabel::OBMol *)new OpenBabel::OBMol();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMol__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMol(OpenBabel::OBMol const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMol" "', argument " "1"" of type '" "OpenBabel::OBMol const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBMol" "', argument " "1"" of type '" "OpenBabel::OBMol const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBMol *)new OpenBabel::OBMol((OpenBabel::OBMol const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMol) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMol__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMol__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBMol'");
  XSRETURN(0);
}


XS(_wrap_delete_OBMol) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBMol(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBMol" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_ReserveAtoms) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_ReserveAtoms(self,natoms);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_ReserveAtoms" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_ReserveAtoms" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->ReserveAtoms(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_CreateAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_CreateAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_CreateAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBAtom *)(arg1)->CreateAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_CreateBond) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_CreateBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_CreateBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBBond *)(arg1)->CreateBond();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_CreateResidue) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_CreateResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_CreateResidue" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBResidue *)(arg1)->CreateResidue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DestroyAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DestroyAtom(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DestroyAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_DestroyAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (arg1)->DestroyAtom(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DestroyBond) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DestroyBond(self,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DestroyBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_DestroyBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    (arg1)->DestroyBond(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DestroyResidue) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBResidue *arg2 = (OpenBabel::OBResidue *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DestroyResidue(self,OpenBabel::OBResidue *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DestroyResidue" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_DestroyResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    (arg1)->DestroyResidue(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_AddAtom(self,OpenBabel::OBAtom &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBAtom,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_AddAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_AddAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->AddAtom(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddBond__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    int arg6 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: OBMol_AddBond(self,int,int,int,flags,insertpos);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_AddBond" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_AddBond" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBMol_AddBond" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OBMol_AddBond" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "OBMol_AddBond" "', argument " "6"" of type '" "int""'");
    } 
    arg6 = static_cast< int >(val6);
    result = (bool)(arg1)->AddBond(arg2,arg3,arg4,arg5,arg6);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddBond__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: OBMol_AddBond(self,int,int,int,flags);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_AddBond" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_AddBond" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBMol_AddBond" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OBMol_AddBond" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    result = (bool)(arg1)->AddBond(arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddBond__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBMol_AddBond(self,int,int,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_AddBond" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_AddBond" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBMol_AddBond" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (bool)(arg1)->AddBond(arg2,arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddBond__SWIG_3) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBBond *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_AddBond(self,OpenBabel::OBBond &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBBond,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_AddBond" "', argument " "2"" of type '" "OpenBabel::OBBond &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_AddBond" "', argument " "2"" of type '" "OpenBabel::OBBond &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(arg1)->AddBond(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddBond) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBond, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 6) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_AddBond__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_AddBond__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_AddBond__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_AddBond__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_AddBond'");
  XSRETURN(0);
}


XS(_wrap_OBMol_AddResidue) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBResidue *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_AddResidue(self,OpenBabel::OBResidue &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddResidue" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBResidue,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_AddResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_AddResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    result = (bool)(arg1)->AddResidue(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_InsertAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_InsertAtom(self,OpenBabel::OBAtom &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_InsertAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBAtom,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_InsertAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_InsertAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->InsertAtom(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DeleteAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DeleteAtom(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DeleteAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_DeleteAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->DeleteAtom(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DeleteBond) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DeleteBond(self,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DeleteBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_DeleteBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(arg1)->DeleteBond(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DeleteResidue) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBResidue *arg2 = (OpenBabel::OBResidue *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DeleteResidue(self,OpenBabel::OBResidue *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DeleteResidue" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_DeleteResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    result = (bool)(arg1)->DeleteResidue(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NewAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NewAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NewAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBAtom *)(arg1)->NewAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NewBond) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NewBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NewBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBBond *)(arg1)->NewBond();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NewResidue) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NewResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NewResidue" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBResidue *)(arg1)->NewResidue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_BeginModify) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_BeginModify(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_BeginModify" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->BeginModify();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_EndModify__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_EndModify(self,nukePerceivedData);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_EndModify" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_EndModify" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->EndModify(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_EndModify__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_EndModify(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_EndModify" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->EndModify();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_EndModify) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_EndModify__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_EndModify__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_EndModify'");
  XSRETURN(0);
}


XS(_wrap_OBMol_GetMod) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetMod(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetMod" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (int)(arg1)->GetMod();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_IncrementMod) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_IncrementMod(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_IncrementMod" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->IncrementMod();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DecrementMod) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_DecrementMod(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DecrementMod" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->DecrementMod();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetFlags) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetFlags(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetFlags" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (int)(arg1)->GetFlags();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetTitle) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetTitle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetTitle" "', argument " "1"" of type '" "OpenBabel::OBMol const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (char *)((OpenBabel::OBMol const *)arg1)->GetTitle();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NumAtoms) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NumAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NumAtoms" "', argument " "1"" of type '" "OpenBabel::OBMol const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (unsigned int)((OpenBabel::OBMol const *)arg1)->NumAtoms();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NumBonds) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NumBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NumBonds" "', argument " "1"" of type '" "OpenBabel::OBMol const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (unsigned int)((OpenBabel::OBMol const *)arg1)->NumBonds();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NumHvyAtoms) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NumHvyAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NumHvyAtoms" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (unsigned int)(arg1)->NumHvyAtoms();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NumResidues) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NumResidues(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NumResidues" "', argument " "1"" of type '" "OpenBabel::OBMol const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (unsigned int)((OpenBabel::OBMol const *)arg1)->NumResidues();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NumRotors) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NumRotors(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NumRotors" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (unsigned int)(arg1)->NumRotors();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_GetAtom(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_GetAtom" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (OpenBabel::OBAtom *)(arg1)->GetAtom(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetFirstAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetFirstAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetFirstAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBAtom *)(arg1)->GetFirstAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetBond__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_GetBond(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_GetBond" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (OpenBabel::OBBond *)(arg1)->GetBond(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetBond__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    int arg3 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMol_GetBond(self,int,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_GetBond" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_GetBond" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (OpenBabel::OBBond *)(arg1)->GetBond(arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetBond__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMol_GetBond(self,bgn,end);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_GetBond" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMol_GetBond" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    result = (OpenBabel::OBBond *)(arg1)->GetBond(arg2,arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetBond) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_GetBond__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_GetBond__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_GetBond__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_GetBond'");
  XSRETURN(0);
}


XS(_wrap_OBMol_GetResidue) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_GetResidue(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetResidue" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_GetResidue" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (OpenBabel::OBResidue *)(arg1)->GetResidue(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetInternalCoord) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBInternalCoord * > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetInternalCoord(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (arg1)->GetInternalCoord();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBInternalCoord * >(static_cast< const std::vector<OpenBabel::OBInternalCoord * >& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBInternalCoord_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetTorsion__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    int arg3 ;
    int arg4 ;
    int arg5 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: OBMol_GetTorsion(self,int,int,int,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetTorsion" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_GetTorsion" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_GetTorsion" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBMol_GetTorsion" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OBMol_GetTorsion" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    result = (double)(arg1)->GetTorsion(arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetTorsion__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg4 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg5 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: OBMol_GetTorsion(self,a,b,c,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetTorsion" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_GetTorsion" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMol_GetTorsion" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBMol_GetTorsion" "', argument " "4"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::OBAtom * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OBMol_GetTorsion" "', argument " "5"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg5 = reinterpret_cast< OpenBabel::OBAtom * >(argp5);
    result = (double)(arg1)->GetTorsion(arg2,arg3,arg4,arg5);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetTorsion) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(4), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 5) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_GetTorsion__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_GetTorsion__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_GetTorsion'");
  XSRETURN(0);
}


XS(_wrap_OBMol_GetAngle) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg4 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBMol_GetAngle(self,a,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_GetAngle" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMol_GetAngle" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBMol_GetAngle" "', argument " "4"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::OBAtom * >(argp4);
    result = (double)(arg1)->GetAngle(arg2,arg3,arg4);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetFormula) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetFormula(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetFormula" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (arg1)->GetFormula();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetSpacedFormula__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    char *arg3 = (char *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMol_GetSpacedFormula(self,ones,sp);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetSpacedFormula" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_GetSpacedFormula" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMol_GetSpacedFormula" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (arg1)->GetSpacedFormula(arg2,(char const *)arg3);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetSpacedFormula__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_GetSpacedFormula(self,ones);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetSpacedFormula" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_GetSpacedFormula" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->GetSpacedFormula(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetSpacedFormula__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetSpacedFormula(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetSpacedFormula" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (arg1)->GetSpacedFormula();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetSpacedFormula) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_GetSpacedFormula__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_GetSpacedFormula__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_GetSpacedFormula__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_GetSpacedFormula'");
  XSRETURN(0);
}


XS(_wrap_OBMol_GetEnergy) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetEnergy(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetEnergy" "', argument " "1"" of type '" "OpenBabel::OBMol const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (double)((OpenBabel::OBMol const *)arg1)->GetEnergy();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetMolWt) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetMolWt(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetMolWt" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (double)(arg1)->GetMolWt();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetExactMass) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetExactMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetExactMass" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (double)(arg1)->GetExactMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetTotalCharge) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetTotalCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetTotalCharge" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (int)(arg1)->GetTotalCharge();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetTotalSpinMultiplicity) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetTotalSpinMultiplicity(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetTotalSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (unsigned int)(arg1)->GetTotalSpinMultiplicity();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetDimension) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    unsigned short result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetDimension(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetDimension" "', argument " "1"" of type '" "OpenBabel::OBMol const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (unsigned short)((OpenBabel::OBMol const *)arg1)->GetDimension();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetCoordinates) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetCoordinates(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetCoordinates" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (double *)(arg1)->GetCoordinates();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetSSSR) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBRing * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetSSSR(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetSSSR" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    {
      std::vector<OpenBabel::OBRing * > &_result_ref = (arg1)->GetSSSR();
      result = (std::vector<OpenBabel::OBRing * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBRing_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AutomaticFormalCharge) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_AutomaticFormalCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AutomaticFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->AutomaticFormalCharge();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AutomaticPartialCharge) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_AutomaticPartialCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AutomaticPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->AutomaticPartialCharge();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetTitle__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetTitle(self,title);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetTitle" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_SetTitle" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (arg1)->SetTitle((char const *)arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetTitle__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetTitle(self,title);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetTitle" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_SetTitle" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_SetTitle" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    (arg1)->SetTitle(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetTitle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_SetTitle__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_SetTitle__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_SetTitle'");
  XSRETURN(0);
}


XS(_wrap_OBMol_SetFormula) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::string arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetFormula(self,molFormula);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetFormula" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res) || !ptr) {
        SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "OBMol_SetFormula" "', argument " "2"" of type '" "std::string""'"); 
      }
      arg2 = *ptr;
      if (SWIG_IsNewObj(res)) delete ptr;
    }
    (arg1)->SetFormula(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetEnergy) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetEnergy(self,energy);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetEnergy" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_SetEnergy" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (arg1)->SetEnergy(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetDimension) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    unsigned short arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetDimension(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetDimension" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_SetDimension" "', argument " "2"" of type '" "unsigned short""'");
    } 
    arg2 = static_cast< unsigned short >(val2);
    (arg1)->SetDimension(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetTotalCharge) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetTotalCharge(self,charge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetTotalCharge" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_SetTotalCharge" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetTotalCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetTotalSpinMultiplicity) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetTotalSpinMultiplicity(self,spin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetTotalSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_SetTotalSpinMultiplicity" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (arg1)->SetTotalSpinMultiplicity(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetInternalCoord) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBInternalCoord * > > arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetInternalCoord(self,int_coord);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    {
      res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBInternalCoord_p_t,  0 );
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_SetInternalCoord" "', argument " "2"" of type '" "std::vector<OpenBabel::OBInternalCoord * >""'"); 
      }  
      if (!argp2) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_SetInternalCoord" "', argument " "2"" of type '" "std::vector<OpenBabel::OBInternalCoord * >""'");
      } else {
        arg2 = *(reinterpret_cast< std::vector<OpenBabel::OBInternalCoord * > * >(argp2));
      }
    }
    (arg1)->SetInternalCoord(arg2);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetAutomaticFormalCharge) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetAutomaticFormalCharge(self,val);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetAutomaticFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_SetAutomaticFormalCharge" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetAutomaticFormalCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetAutomaticPartialCharge) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetAutomaticPartialCharge(self,val);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetAutomaticPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_SetAutomaticPartialCharge" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    (arg1)->SetAutomaticPartialCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetAromaticPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetAromaticPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetAromaticPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetAromaticPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetSSSRPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetSSSRPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetSSSRPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetSSSRPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetRingAtomsAndBondsPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetRingAtomsAndBondsPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetRingAtomsAndBondsPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetRingAtomsAndBondsPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetAtomTypesPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetAtomTypesPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetAtomTypesPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetAtomTypesPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetChainsPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetChainsPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetChainsPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetChainsPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetChiralityPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetChiralityPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetChiralityPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetChiralityPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetPartialChargesPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetPartialChargesPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetPartialChargesPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetPartialChargesPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetHybridizationPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetHybridizationPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetHybridizationPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetHybridizationPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetImplicitValencePerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetImplicitValencePerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetImplicitValencePerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetImplicitValencePerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetKekulePerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetKekulePerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetKekulePerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetKekulePerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetClosureBondsPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetClosureBondsPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetClosureBondsPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetClosureBondsPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetHydrogensAdded) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetHydrogensAdded(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetHydrogensAdded" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetHydrogensAdded();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetCorrectedForPH) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetCorrectedForPH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetCorrectedForPH" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetCorrectedForPH();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetAromaticCorrected) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetAromaticCorrected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetAromaticCorrected" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetAromaticCorrected();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetSpinMultiplicityAssigned) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_SetSpinMultiplicityAssigned(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetSpinMultiplicityAssigned" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->SetSpinMultiplicityAssigned();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetFlags) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetFlags(self,flags);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetFlags" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_SetFlags" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetFlags(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_UnsetAromaticPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_UnsetAromaticPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_UnsetAromaticPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->UnsetAromaticPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_UnsetPartialChargesPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_UnsetPartialChargesPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_UnsetPartialChargesPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->UnsetPartialChargesPerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_UnsetImplicitValencePerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_UnsetImplicitValencePerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_UnsetImplicitValencePerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->UnsetImplicitValencePerceived();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_UnsetFlag) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_UnsetFlag(self,flag);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_UnsetFlag" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_UnsetFlag" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->UnsetFlag(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DoTransformations) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DoTransformations(self,pOptions);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_ClassDescription) {
  {
    char *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: OBMol_ClassDescription();");
    }
    result = (char *)OpenBabel::OBMol::ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Clear) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Clear" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->Clear();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_RenumberAtoms) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBAtom * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_RenumberAtoms(self,std::vector<OpenBabel::OBAtom * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_RenumberAtoms" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_RenumberAtoms" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_RenumberAtoms" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBAtom * > * >(argp2);
    (arg1)->RenumberAtoms(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_ToInertialFrame__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    double *arg3 = (double *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMol_ToInertialFrame(self,conf,rmat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_ToInertialFrame" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_ToInertialFrame" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMol_ToInertialFrame" "', argument " "3"" of type '" "double *""'"); 
    }
    arg3 = reinterpret_cast< double * >(argp3);
    (arg1)->ToInertialFrame(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_ToInertialFrame__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_ToInertialFrame(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_ToInertialFrame" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->ToInertialFrame();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_ToInertialFrame) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_ToInertialFrame__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_ToInertialFrame__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_ToInertialFrame'");
  XSRETURN(0);
}


XS(_wrap_OBMol_Translate__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_Translate(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Translate" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_Translate" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_Translate" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    (arg1)->Translate((OpenBabel::vector3 const &)*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Translate__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMol_Translate(self,v,conf);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Translate" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_Translate" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_Translate" "', argument " "2"" of type '" "OpenBabel::vector3 const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_Translate" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    (arg1)->Translate((OpenBabel::vector3 const &)*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Translate) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_Translate__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_Translate__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_Translate'");
  XSRETURN(0);
}


XS(_wrap_OBMol_Rotate__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double (*arg2)[3] ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_Rotate(self,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Rotate" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_a_3__double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_Rotate" "', argument " "2"" of type '" "double const [3][3]""'"); 
    } 
    arg2 = reinterpret_cast< double (*)[3] >(argp2);
    (arg1)->Rotate((double const (*)[3])arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Rotate__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double *arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_Rotate(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Rotate" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_Rotate" "', argument " "2"" of type '" "double const [9]""'"); 
    } 
    arg2 = reinterpret_cast< double * >(argp2);
    (arg1)->Rotate((double const (*))arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Rotate__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double *arg2 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMol_Rotate(self,m,nconf);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Rotate" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_Rotate" "', argument " "2"" of type '" "double const [9]""'"); 
    } 
    arg2 = reinterpret_cast< double * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_Rotate" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    (arg1)->Rotate((double const (*))arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Rotate) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_a_3__double, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_double, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_Rotate__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_Rotate__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_Rotate__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_Rotate'");
  XSRETURN(0);
}


XS(_wrap_OBMol_Center__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_Center(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Center" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->Center();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Kekulize) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_Kekulize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Kekulize" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->Kekulize();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_PerceiveKekuleBonds) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_PerceiveKekuleBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_PerceiveKekuleBonds" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->PerceiveKekuleBonds();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NewPerceiveKekuleBonds) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NewPerceiveKekuleBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NewPerceiveKekuleBonds" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->NewPerceiveKekuleBonds();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DeleteHydrogen) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DeleteHydrogen(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DeleteHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_DeleteHydrogen" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->DeleteHydrogen(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DeleteHydrogens__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_DeleteHydrogens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DeleteHydrogens" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->DeleteHydrogens();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DeleteHydrogens__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DeleteHydrogens(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DeleteHydrogens" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_DeleteHydrogens" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->DeleteHydrogens(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DeleteHydrogens) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_DeleteHydrogens__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_DeleteHydrogens__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_DeleteHydrogens'");
  XSRETURN(0);
}


XS(_wrap_OBMol_DeleteNonPolarHydrogens) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_DeleteNonPolarHydrogens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DeleteNonPolarHydrogens" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->DeleteNonPolarHydrogens();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddHydrogens__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool arg2 ;
    bool arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMol_AddHydrogens(self,polaronly,correctForPH);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddHydrogens" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_AddHydrogens" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_AddHydrogens" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->AddHydrogens(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddHydrogens__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_AddHydrogens(self,polaronly);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddHydrogens" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_AddHydrogens" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)(arg1)->AddHydrogens(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddHydrogens__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_AddHydrogens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddHydrogens" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->AddHydrogens();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddHydrogens__SWIG_3) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_AddHydrogens(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddHydrogens" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_AddHydrogens" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->AddHydrogens(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddHydrogens) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_AddHydrogens__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_AddHydrogens__SWIG_3); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_AddHydrogens__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_AddHydrogens__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_AddHydrogens'");
  XSRETURN(0);
}


XS(_wrap_OBMol_AddPolarHydrogens) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_AddPolarHydrogens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddPolarHydrogens" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->AddPolarHydrogens();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_StripSalts) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_StripSalts(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_StripSalts" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->StripSalts();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_ConvertDativeBonds) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_ConvertDativeBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_ConvertDativeBonds" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->ConvertDativeBonds();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_CorrectForPH) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_CorrectForPH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_CorrectForPH" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->CorrectForPH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AssignSpinMultiplicity) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_AssignSpinMultiplicity(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AssignSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->AssignSpinMultiplicity();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Center__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    OpenBabel::vector3 result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_Center(self,nconf);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Center" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_Center" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->Center(arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::vector3(static_cast< const OpenBabel::vector3& >(result))), SWIGTYPE_p_OpenBabel__vector3, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Center) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_Center__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_Center__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_Center'");
  XSRETURN(0);
}


XS(_wrap_OBMol_SetTorsion) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg4 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg5 = (OpenBabel::OBAtom *) 0 ;
    double arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    double val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: OBMol_SetTorsion(self,OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom *,double);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetTorsion" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_SetTorsion" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMol_SetTorsion" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBMol_SetTorsion" "', argument " "4"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::OBAtom * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OBMol_SetTorsion" "', argument " "5"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg5 = reinterpret_cast< OpenBabel::OBAtom * >(argp5);
    ecode6 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "OBMol_SetTorsion" "', argument " "6"" of type '" "double""'");
    } 
    arg6 = static_cast< double >(val6);
    (arg1)->SetTorsion(arg2,arg3,arg4,arg5,arg6);
    
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_FindSSSR) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_FindSSSR(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_FindSSSR" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->FindSSSR();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_FindRingAtomsAndBonds) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_FindRingAtomsAndBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_FindRingAtomsAndBonds" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->FindRingAtomsAndBonds();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_FindChiralCenters) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_FindChiralCenters(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_FindChiralCenters" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->FindChiralCenters();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_FindChildren__SWIG_0) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<int > *arg2 = 0 ;
    int arg3 ;
    int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBMol_FindChildren(self,std::vector<int > &,int,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_FindChildren" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTint_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_FindChildren" "', argument " "2"" of type '" "std::vector<int > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_FindChildren" "', argument " "2"" of type '" "std::vector<int > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<int > * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_FindChildren" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBMol_FindChildren" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    (arg1)->FindChildren(*arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_FindChildren__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBAtom * > *arg2 = 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg4 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBMol_FindChildren(self,std::vector<OpenBabel::OBAtom * > &,OpenBabel::OBAtom *,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_FindChildren" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_FindChildren" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_FindChildren" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBAtom * > * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMol_FindChildren" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBMol_FindChildren" "', argument " "4"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::OBAtom * >(argp4);
    (arg1)->FindChildren(*arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_FindChildren) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTint_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(3), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_FindChildren__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMol_FindChildren__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMol_FindChildren'");
  XSRETURN(0);
}


XS(_wrap_OBMol_FindLargestFragment) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBBitVec *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_FindLargestFragment(self,OpenBabel::OBBitVec &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_FindLargestFragment" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBBitVec,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_FindLargestFragment" "', argument " "2"" of type '" "OpenBabel::OBBitVec &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_FindLargestFragment" "', argument " "2"" of type '" "OpenBabel::OBBitVec &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBitVec * >(argp2);
    (arg1)->FindLargestFragment(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_ContigFragList) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<std::vector<int > > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_ContigFragList(self,std::vector<std::vector<int > > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_ContigFragList" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__vectorTint_t_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_ContigFragList" "', argument " "2"" of type '" "std::vector<std::vector<int > > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_ContigFragList" "', argument " "2"" of type '" "std::vector<std::vector<int > > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<std::vector<int > > * >(argp2);
    (arg1)->ContigFragList(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Align) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::vector3 *arg4 = 0 ;
    OpenBabel::vector3 *arg5 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    void *argp5 = 0 ;
    int res5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: OBMol_Align(self,OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::vector3 &,OpenBabel::vector3 &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Align" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_Align" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMol_Align" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBMol_Align" "', argument " "4"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_Align" "', argument " "4"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::vector3 * >(argp4);
    res5 = SWIG_ConvertPtr(ST(4), &argp5, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "OBMol_Align" "', argument " "5"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_Align" "', argument " "5"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg5 = reinterpret_cast< OpenBabel::vector3 * >(argp5);
    (arg1)->Align(arg2,arg3,*arg4,*arg5);
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_ConnectTheDots) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_ConnectTheDots(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_ConnectTheDots" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->ConnectTheDots();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_PerceiveBondOrders) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_PerceiveBondOrders(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_PerceiveBondOrders" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->PerceiveBondOrders();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_FindTorsions) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_FindTorsions(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_FindTorsions" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    (arg1)->FindTorsions();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetGTDVector) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<int > *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_GetGTDVector(self,std::vector<int > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetGTDVector" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTint_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_GetGTDVector" "', argument " "2"" of type '" "std::vector<int > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_GetGTDVector" "', argument " "2"" of type '" "std::vector<int > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<int > * >(argp2);
    result = (bool)(arg1)->GetGTDVector(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetGIVector) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<unsigned int > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_GetGIVector(self,std::vector<unsigned int > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetGIVector" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_GetGIVector" "', argument " "2"" of type '" "std::vector<unsigned int > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_GetGIVector" "', argument " "2"" of type '" "std::vector<unsigned int > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<unsigned int > * >(argp2);
    (arg1)->GetGIVector(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetGIDVector) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<unsigned int > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_GetGIDVector(self,std::vector<unsigned int > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetGIDVector" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_GetGIDVector" "', argument " "2"" of type '" "std::vector<unsigned int > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_GetGIDVector" "', argument " "2"" of type '" "std::vector<unsigned int > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<unsigned int > * >(argp2);
    (arg1)->GetGIDVector(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Has2D) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_Has2D(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Has2D" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->Has2D();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Has3D) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_Has3D(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Has3D" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->Has3D();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasNonZeroCoords) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasNonZeroCoords(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasNonZeroCoords" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasNonZeroCoords();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasAromaticPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasAromaticPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasAromaticPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasAromaticPerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasSSSRPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasSSSRPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasSSSRPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasSSSRPerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasRingAtomsAndBondsPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasRingAtomsAndBondsPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasRingAtomsAndBondsPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasRingAtomsAndBondsPerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasAtomTypesPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasAtomTypesPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasAtomTypesPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasAtomTypesPerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasChiralityPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasChiralityPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasChiralityPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasChiralityPerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasPartialChargesPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasPartialChargesPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasPartialChargesPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasPartialChargesPerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasHybridizationPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasHybridizationPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasHybridizationPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasHybridizationPerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasImplicitValencePerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasImplicitValencePerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasImplicitValencePerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasImplicitValencePerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasKekulePerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasKekulePerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasKekulePerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasKekulePerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasClosureBondsPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasClosureBondsPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasClosureBondsPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasClosureBondsPerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasChainsPerceived) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasChainsPerceived(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasChainsPerceived" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasChainsPerceived();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasHydrogensAdded) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasHydrogensAdded(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasHydrogensAdded" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasHydrogensAdded();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasAromaticCorrected) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasAromaticCorrected(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasAromaticCorrected" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasAromaticCorrected();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_IsCorrectedForPH) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_IsCorrectedForPH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_IsCorrectedForPH" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->IsCorrectedForPH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_HasSpinMultiplicityAssigned) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_HasSpinMultiplicityAssigned(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_HasSpinMultiplicityAssigned" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->HasSpinMultiplicityAssigned();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_IsChiral) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_IsChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_IsChiral" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->IsChiral();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_Empty) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_Empty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_Empty" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (bool)(arg1)->Empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NumConformers) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_NumConformers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NumConformers" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (int)(arg1)->NumConformers();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetConformers) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<double * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetConformers(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetConformers" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTdouble_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_SetConformers" "', argument " "2"" of type '" "std::vector<double * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_SetConformers" "', argument " "2"" of type '" "std::vector<double * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<double * > * >(argp2);
    (arg1)->SetConformers(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_AddConformer) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double *arg2 = (double *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_AddConformer(self,f);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_AddConformer" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_AddConformer" "', argument " "2"" of type '" "double *""'"); 
    }
    arg2 = reinterpret_cast< double * >(argp2);
    (arg1)->AddConformer(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_SetConformer) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_SetConformer(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_SetConformer" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_SetConformer" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->SetConformer(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_CopyConformer) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    double *arg2 = (double *) 0 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMol_CopyConformer(self,double *,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_CopyConformer" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_CopyConformer" "', argument " "2"" of type '" "double *""'"); 
    }
    arg2 = reinterpret_cast< double * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMol_CopyConformer" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    (arg1)->CopyConformer(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_DeleteConformer) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_DeleteConformer(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_DeleteConformer" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_DeleteConformer" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->DeleteConformer(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetConformer) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    int arg2 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_GetConformer(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetConformer" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMol_GetConformer" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double *)(arg1)->GetConformer(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_BeginConformer) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<double * >::iterator *arg2 = 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_BeginConformer(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_BeginConformer" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTdouble_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_BeginConformer" "', argument " "2"" of type '" "std::vector<double * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_BeginConformer" "', argument " "2"" of type '" "std::vector<double * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<double * >::iterator * >(argp2);
    result = (double *)(arg1)->BeginConformer(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NextConformer) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<double * >::iterator *arg2 = 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_NextConformer(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NextConformer" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTdouble_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_NextConformer" "', argument " "2"" of type '" "std::vector<double * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_NextConformer" "', argument " "2"" of type '" "std::vector<double * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<double * >::iterator * >(argp2);
    result = (double *)(arg1)->NextConformer(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_GetConformers) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<double * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_GetConformers(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_GetConformers" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    {
      std::vector<double * > &_result_ref = (arg1)->GetConformers();
      result = (std::vector<double * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTdouble_p_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_BeginAtoms) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBAtom * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_BeginAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_BeginAtoms" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (arg1)->BeginAtoms();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBAtomIterator(static_cast< const OpenBabel::OBAtomIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_EndAtoms) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBAtom * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_EndAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_EndAtoms" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (arg1)->EndAtoms();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBAtomIterator(static_cast< const OpenBabel::OBAtomIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_BeginBonds) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_BeginBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_BeginBonds" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (arg1)->BeginBonds();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBBondIterator(static_cast< const OpenBabel::OBBondIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_EndBonds) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_EndBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_EndBonds" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (arg1)->EndBonds();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBBondIterator(static_cast< const OpenBabel::OBBondIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_BeginResidues) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBResidue * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_BeginResidues(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_BeginResidues" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (arg1)->BeginResidues();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBResidueIterator(static_cast< const OpenBabel::OBResidueIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_EndResidues) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBResidue * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMol_EndResidues(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_EndResidues" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (arg1)->EndResidues();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBResidueIterator(static_cast< const OpenBabel::OBResidueIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_BeginAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBAtom * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_BeginAtom(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_BeginAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_BeginAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_BeginAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBAtom * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(arg1)->BeginAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NextAtom) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBAtom * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_NextAtom(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NextAtom" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_NextAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_NextAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBAtom * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(arg1)->NextAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_BeginBond) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_BeginBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_BeginBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(arg1)->BeginBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NextBond) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_NextBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NextBond" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(arg1)->NextBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_BeginResidue) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBResidue * >::iterator *arg2 = 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_BeginResidue(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_BeginResidue" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_BeginResidue" "', argument " "2"" of type '" "std::vector<OpenBabel::OBResidue * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_BeginResidue" "', argument " "2"" of type '" "std::vector<OpenBabel::OBResidue * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBResidue * >::iterator * >(argp2);
    result = (OpenBabel::OBResidue *)(arg1)->BeginResidue(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NextResidue) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBResidue * >::iterator *arg2 = 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_NextResidue(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NextResidue" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_NextResidue" "', argument " "2"" of type '" "std::vector<OpenBabel::OBResidue * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_NextResidue" "', argument " "2"" of type '" "std::vector<OpenBabel::OBResidue * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBResidue * >::iterator * >(argp2);
    result = (OpenBabel::OBResidue *)(arg1)->NextResidue(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_BeginInternalCoord) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBInternalCoord * >::iterator *arg2 = 0 ;
    OpenBabel::OBInternalCoord *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_BeginInternalCoord(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_BeginInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBInternalCoord_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_BeginInternalCoord" "', argument " "2"" of type '" "std::vector<OpenBabel::OBInternalCoord * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_BeginInternalCoord" "', argument " "2"" of type '" "std::vector<OpenBabel::OBInternalCoord * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBInternalCoord * >::iterator * >(argp2);
    result = (OpenBabel::OBInternalCoord *)(arg1)->BeginInternalCoord(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMol_NextInternalCoord) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    std::vector<OpenBabel::OBInternalCoord * >::iterator *arg2 = 0 ;
    OpenBabel::OBInternalCoord *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMol_NextInternalCoord(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMol_NextInternalCoord" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBInternalCoord_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMol_NextInternalCoord" "', argument " "2"" of type '" "std::vector<OpenBabel::OBInternalCoord * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMol_NextInternalCoord" "', argument " "2"" of type '" "std::vector<OpenBabel::OBInternalCoord * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBInternalCoord * >::iterator * >(argp2);
    result = (OpenBabel::OBInternalCoord *)(arg1)->NextInternalCoord(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBInternalCoord, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_tokenize__SWIG_0) {
  {
    std::vector<std::string > *arg1 = 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: tokenize(std::vector<std::string > &,buf,delimstr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTstd__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tokenize" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tokenize" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (bool)OpenBabel::tokenize(*arg1,(char const *)arg2,(char const *)arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_tokenize__SWIG_1) {
  {
    std::vector<std::string > *arg1 = 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: tokenize(std::vector<std::string > &,buf);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTstd__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tokenize" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)OpenBabel::tokenize(*arg1,(char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_tokenize__SWIG_2) {
  {
    std::vector<std::string > *arg1 = 0 ;
    std::string *arg2 = 0 ;
    char *arg3 = (char *) 0 ;
    int arg4 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: tokenize(std::vector<std::string > &,std::string &,delimstr,limit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTstd__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tokenize" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tokenize" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tokenize" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "tokenize" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (bool)OpenBabel::tokenize(*arg1,*arg2,(char const *)arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    
    XSRETURN(argvi);
  fail:
    
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    
    SWIG_croak_null();
  }
}


XS(_wrap_tokenize__SWIG_3) {
  {
    std::vector<std::string > *arg1 = 0 ;
    std::string *arg2 = 0 ;
    char *arg3 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 ;
    char *buf3 = 0 ;
    int alloc3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: tokenize(std::vector<std::string > &,std::string &,delimstr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTstd__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tokenize" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tokenize" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    res3 = SWIG_AsCharPtrAndSize(ST(2), &buf3, NULL, &alloc3);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "tokenize" "', argument " "3"" of type '" "char const *""'");
    }
    arg3 = reinterpret_cast< char * >(buf3);
    result = (bool)OpenBabel::tokenize(*arg1,*arg2,(char const *)arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    XSRETURN(argvi);
  fail:
    
    
    if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
    SWIG_croak_null();
  }
}


XS(_wrap_tokenize__SWIG_4) {
  {
    std::vector<std::string > *arg1 = 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: tokenize(std::vector<std::string > &,std::string &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTstd__string_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tokenize" "', argument " "1"" of type '" "std::vector<std::string > &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<std::string > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tokenize" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tokenize" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    result = (bool)OpenBabel::tokenize(*arg1,*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_tokenize) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__vectorTstd__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__vectorTstd__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__vectorTstd__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__vectorTstd__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__vectorTstd__string_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(2), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_5;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 5;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_5:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tokenize__SWIG_4); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tokenize__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tokenize__SWIG_3); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tokenize__SWIG_0); return;
    case 5:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_tokenize__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'tokenize'");
  XSRETURN(0);
}


XS(_wrap_ThrowError__SWIG_0) {
  {
    char *arg1 = (char *) 0 ;
    int res1 ;
    char *buf1 = 0 ;
    int alloc1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ThrowError(str);");
    }
    res1 = SWIG_AsCharPtrAndSize(ST(0), &buf1, NULL, &alloc1);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThrowError" "', argument " "1"" of type '" "char *""'");
    }
    arg1 = reinterpret_cast< char * >(buf1);
    OpenBabel::ThrowError(arg1);
    
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    XSRETURN(argvi);
  fail:
    if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
    SWIG_croak_null();
  }
}


XS(_wrap_ThrowError__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: ThrowError(str);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ThrowError" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ThrowError" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    OpenBabel::ThrowError(*arg1);
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_ThrowError) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        int res = SWIG_AsCharPtrAndSize(ST(0), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ThrowError__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_ThrowError__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'ThrowError'");
  XSRETURN(0);
}


XS(_wrap_CartesianToInternal) {
  {
    std::vector<OpenBabel::OBInternalCoord * > *arg1 = 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CartesianToInternal(std::vector<OpenBabel::OBInternalCoord * > &,OpenBabel::OBMol &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTOpenBabel__OBInternalCoord_p_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CartesianToInternal" "', argument " "1"" of type '" "std::vector<OpenBabel::OBInternalCoord * > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CartesianToInternal" "', argument " "1"" of type '" "std::vector<OpenBabel::OBInternalCoord * > &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBInternalCoord * > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CartesianToInternal" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CartesianToInternal" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    OpenBabel::CartesianToInternal(*arg1,*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_InternalToCartesian) {
  {
    std::vector<OpenBabel::OBInternalCoord * > *arg1 = 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: InternalToCartesian(std::vector<OpenBabel::OBInternalCoord * > &,OpenBabel::OBMol &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTOpenBabel__OBInternalCoord_p_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InternalToCartesian" "', argument " "1"" of type '" "std::vector<OpenBabel::OBInternalCoord * > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InternalToCartesian" "', argument " "1"" of type '" "std::vector<OpenBabel::OBInternalCoord * > &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<OpenBabel::OBInternalCoord * > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "InternalToCartesian" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InternalToCartesian" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    OpenBabel::InternalToCartesian(*arg1,*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_NewExtension) {
  {
    std::string *arg1 = 0 ;
    char *arg2 = (char *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: NewExtension(std::string &,char *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NewExtension" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NewExtension" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NewExtension" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = OpenBabel::NewExtension(*arg1,arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_get_rmat) {
  {
    double *arg1 = (double *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
    int arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: get_rmat(double *,double *,double *,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "get_rmat" "', argument " "1"" of type '" "double *""'"); 
    }
    arg1 = reinterpret_cast< double * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "get_rmat" "', argument " "2"" of type '" "double *""'"); 
    }
    arg2 = reinterpret_cast< double * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "get_rmat" "', argument " "3"" of type '" "double *""'"); 
    }
    arg3 = reinterpret_cast< double * >(argp3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "get_rmat" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    OpenBabel::get_rmat(arg1,arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_ob_make_rmat) {
  {
    double (*arg1)[3] ;
    double *arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: ob_make_rmat(mat,rmat);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_a_3__double, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ob_make_rmat" "', argument " "1"" of type '" "double [3][3]""'"); 
    } 
    arg1 = reinterpret_cast< double (*)[3] >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ob_make_rmat" "', argument " "2"" of type '" "double [9]""'"); 
    } 
    arg2 = reinterpret_cast< double * >(argp2);
    OpenBabel::ob_make_rmat((double (*)[3])arg1,arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_qtrfit) {
  {
    double *arg1 = (double *) 0 ;
    double *arg2 = (double *) 0 ;
    int arg3 ;
    double (*arg4)[3] ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: qtrfit(r,f,size,u);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "qtrfit" "', argument " "1"" of type '" "double *""'"); 
    }
    arg1 = reinterpret_cast< double * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "qtrfit" "', argument " "2"" of type '" "double *""'"); 
    }
    arg2 = reinterpret_cast< double * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "qtrfit" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_a_3__double, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "qtrfit" "', argument " "4"" of type '" "double [3][3]""'"); 
    } 
    arg4 = reinterpret_cast< double (*)[3] >(argp4);
    OpenBabel::qtrfit(arg1,arg2,arg3,(double (*)[3])arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_superimpose) {
  {
    double *arg1 = (double *) 0 ;
    double *arg2 = (double *) 0 ;
    int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: superimpose(double *,double *,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "superimpose" "', argument " "1"" of type '" "double *""'"); 
    }
    arg1 = reinterpret_cast< double * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "superimpose" "', argument " "2"" of type '" "double *""'"); 
    }
    arg2 = reinterpret_cast< double * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "superimpose" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (double)OpenBabel::superimpose(arg1,arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRTree) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBRTree *arg2 = (OpenBabel::OBRTree *) 0 ;
    OpenBabel::OBRTree *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_OBRTree(OpenBabel::OBAtom *,OpenBabel::OBRTree *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBRTree" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBRTree, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBRTree" "', argument " "2"" of type '" "OpenBabel::OBRTree *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBRTree * >(argp2);
    result = (OpenBabel::OBRTree *)new OpenBabel::OBRTree(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRTree, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBRTree) {
  {
    OpenBabel::OBRTree *arg1 = (OpenBabel::OBRTree *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBRTree(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRTree, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBRTree" "', argument " "1"" of type '" "OpenBabel::OBRTree *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRTree * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRTree_GetAtomIdx) {
  {
    OpenBabel::OBRTree *arg1 = (OpenBabel::OBRTree *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRTree_GetAtomIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRTree, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRTree_GetAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBRTree *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRTree * >(argp1);
    result = (int)(arg1)->GetAtomIdx();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRTree_PathToRoot) {
  {
    OpenBabel::OBRTree *arg1 = (OpenBabel::OBRTree *) 0 ;
    std::vector<OpenBabel::OBAtom * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRTree_PathToRoot(self,std::vector<OpenBabel::OBAtom * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRTree, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRTree_PathToRoot" "', argument " "1"" of type '" "OpenBabel::OBRTree *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRTree * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRTree_PathToRoot" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBRTree_PathToRoot" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBAtom * > * >(argp2);
    (arg1)->PathToRoot(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing__path_set) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    std::vector<int > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    std::vector<int > temp2 ;
    std::vector<int > *v2 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRing__path_set(self,_path);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing__path_set" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    {
      if (SWIG_ConvertPtr(ST(1),(void **) &v2, 
          SWIGTYPE_p_std__vectorTint_t,1) != -1) {
        arg2 = v2;
      } else if (SvROK(ST(1))) {
        AV *av = (AV *)SvRV(ST(1));
        if (SvTYPE(av) != SVt_PVAV)
        SWIG_croak("Type error in argument 2 of OBRing__path_set. "
          "Expected an array of ""int");
        SV **tv;
        I32 len = av_len(av) + 1;
        for (int i=0; i<len; i++) {
          tv = av_fetch(av, i, 0);
          if (SvIOK(*tv)) {
            temp2.push_back((int)SvIVX(*tv));
          } else {
            SWIG_croak("Type error in argument 2 of "
              "OBRing__path_set. "
              "Expected an array of ""int");
          }
        }
        arg2 = &temp2;
      } else {
        SWIG_croak("Type error in argument 2 of OBRing__path_set. "
          "Expected an array of ""int");
      }
    }
    if (arg1) (arg1)->_path = *arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing__path_get) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    std::vector<int > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRing__path_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing__path_get" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    {
      std::vector<int > const &_result_ref =  ((arg1)->_path);
      result = (std::vector<int > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTint_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing__pathset_set) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    OpenBabel::OBBitVec *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRing__pathset_set(self,_pathset);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing__pathset_set" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBBitVec,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRing__pathset_set" "', argument " "2"" of type '" "OpenBabel::OBBitVec const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBRing__pathset_set" "', argument " "2"" of type '" "OpenBabel::OBBitVec const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBitVec * >(argp2);
    if (arg1) (arg1)->_pathset = *arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing__pathset_get) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    OpenBabel::OBBitVec *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRing__pathset_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing__pathset_get" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    {
      OpenBabel::OBBitVec const &_result_ref =  ((arg1)->_pathset);
      result = (OpenBabel::OBBitVec *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBitVec, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing_findCenterAndNormal) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    OpenBabel::vector3 *arg3 = 0 ;
    OpenBabel::vector3 *arg4 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBRing_findCenterAndNormal(self,center,norm1,norm2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing_findCenterAndNormal" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRing_findCenterAndNormal" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBRing_findCenterAndNormal" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBRing_findCenterAndNormal" "', argument " "3"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBRing_findCenterAndNormal" "', argument " "3"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::vector3 * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBRing_findCenterAndNormal" "', argument " "4"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBRing_findCenterAndNormal" "', argument " "4"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::vector3 * >(argp4);
    result = (bool)(arg1)->findCenterAndNormal(*arg2,*arg3,*arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRing__SWIG_0) {
  {
    OpenBabel::OBRing *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBRing();");
    }
    result = (OpenBabel::OBRing *)new OpenBabel::OBRing();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRing, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRing__SWIG_1) {
  {
    std::vector<int > *arg1 = 0 ;
    int arg2 ;
    OpenBabel::OBRing *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_OBRing(std::vector<int > &,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTint_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBRing" "', argument " "1"" of type '" "std::vector<int > &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBRing" "', argument " "1"" of type '" "std::vector<int > &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<int > * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_OBRing" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (OpenBabel::OBRing *)new OpenBabel::OBRing(*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRing, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRing__SWIG_2) {
  {
    OpenBabel::OBRing *arg1 = 0 ;
    OpenBabel::OBRing *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBRing(src);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBRing,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBRing" "', argument " "1"" of type '" "OpenBabel::OBRing const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBRing" "', argument " "1"" of type '" "OpenBabel::OBRing const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    result = (OpenBabel::OBRing *)new OpenBabel::OBRing((OpenBabel::OBRing const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRing, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRing) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBRing, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__vectorTint_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBRing__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBRing__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBRing__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBRing'");
  XSRETURN(0);
}


XS(_wrap_OBRing_Size) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRing_Size(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing_Size" "', argument " "1"" of type '" "OpenBabel::OBRing const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    result = (int)((OpenBabel::OBRing const *)arg1)->Size();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing_PathSize) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRing_PathSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing_PathSize" "', argument " "1"" of type '" "OpenBabel::OBRing const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    result = (int)((OpenBabel::OBRing const *)arg1)->PathSize();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing_IsMember__SWIG_0) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRing_IsMember(self,a);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing_IsMember" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRing_IsMember" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(arg1)->IsMember(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing_IsMember__SWIG_1) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRing_IsMember(self,b);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing_IsMember" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRing_IsMember" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(arg1)->IsMember(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing_IsMember) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBRing, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBRing, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBond, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBRing_IsMember__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBRing_IsMember__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBRing_IsMember'");
  XSRETURN(0);
}


XS(_wrap_OBRing_IsAromatic) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRing_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    result = (bool)(arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing_IsInRing) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRing_IsInRing(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBRing_IsInRing" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(arg1)->IsInRing(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing_SetParent) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRing_SetParent(self,m);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing_SetParent" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRing_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRing_GetParent) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRing_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRing_GetParent" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    result = (OpenBabel::OBMol *)(arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBRing) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBRing" "', argument " "1"" of type '" "OpenBabel::OBRing *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_CompareRingSize) {
  {
    OpenBabel::OBRing *arg1 = (OpenBabel::OBRing *) 0 ;
    OpenBabel::OBRing *arg2 = (OpenBabel::OBRing *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: CompareRingSize(OpenBabel::OBRing const *,OpenBabel::OBRing const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CompareRingSize" "', argument " "1"" of type '" "OpenBabel::OBRing const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRing * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBRing, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CompareRingSize" "', argument " "2"" of type '" "OpenBabel::OBRing const *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBRing * >(argp2);
    result = (bool)OpenBabel::CompareRingSize((OpenBabel::OBRing const *)arg1,(OpenBabel::OBRing const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBRingSearch) {
  {
    OpenBabel::OBRingSearch *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBRingSearch();");
    }
    result = (OpenBabel::OBRingSearch *)new OpenBabel::OBRingSearch();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBRingSearch, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBRingSearch) {
  {
    OpenBabel::OBRingSearch *arg1 = (OpenBabel::OBRingSearch *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBRingSearch(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingSearch, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBRingSearch" "', argument " "1"" of type '" "OpenBabel::OBRingSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingSearch * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingSearch_SortRings) {
  {
    OpenBabel::OBRingSearch *arg1 = (OpenBabel::OBRingSearch *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRingSearch_SortRings(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingSearch_SortRings" "', argument " "1"" of type '" "OpenBabel::OBRingSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingSearch * >(argp1);
    (arg1)->SortRings();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingSearch_RemoveRedundant) {
  {
    OpenBabel::OBRingSearch *arg1 = (OpenBabel::OBRingSearch *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBRingSearch_RemoveRedundant(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingSearch_RemoveRedundant" "', argument " "1"" of type '" "OpenBabel::OBRingSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingSearch * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBRingSearch_RemoveRedundant" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (arg1)->RemoveRedundant(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingSearch_AddRingFromClosure) {
  {
    OpenBabel::OBRingSearch *arg1 = (OpenBabel::OBRingSearch *) 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    OpenBabel::OBBond *arg3 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBRingSearch_AddRingFromClosure(self,OpenBabel::OBMol &,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingSearch_AddRingFromClosure" "', argument " "1"" of type '" "OpenBabel::OBRingSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingSearch * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRingSearch_AddRingFromClosure" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBRingSearch_AddRingFromClosure" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBRingSearch_AddRingFromClosure" "', argument " "3"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBond * >(argp3);
    (arg1)->AddRingFromClosure(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingSearch_WriteRings) {
  {
    OpenBabel::OBRingSearch *arg1 = (OpenBabel::OBRingSearch *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRingSearch_WriteRings(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingSearch_WriteRings" "', argument " "1"" of type '" "OpenBabel::OBRingSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingSearch * >(argp1);
    (arg1)->WriteRings();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingSearch_SaveUniqueRing) {
  {
    OpenBabel::OBRingSearch *arg1 = (OpenBabel::OBRingSearch *) 0 ;
    std::deque<int > *arg2 = 0 ;
    std::deque<int > *arg3 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBRingSearch_SaveUniqueRing(self,std::deque<int > &,std::deque<int > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingSearch_SaveUniqueRing" "', argument " "1"" of type '" "OpenBabel::OBRingSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingSearch * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__dequeTint_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBRingSearch_SaveUniqueRing" "', argument " "2"" of type '" "std::deque<int > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBRingSearch_SaveUniqueRing" "', argument " "2"" of type '" "std::deque<int > &""'"); 
    }
    arg2 = reinterpret_cast< std::deque<int > * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__dequeTint_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBRingSearch_SaveUniqueRing" "', argument " "3"" of type '" "std::deque<int > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBRingSearch_SaveUniqueRing" "', argument " "3"" of type '" "std::deque<int > &""'"); 
    }
    arg3 = reinterpret_cast< std::deque<int > * >(argp3);
    result = (bool)(arg1)->SaveUniqueRing(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingSearch_BeginRings) {
  {
    OpenBabel::OBRingSearch *arg1 = (OpenBabel::OBRingSearch *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBRing * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRingSearch_BeginRings(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingSearch_BeginRings" "', argument " "1"" of type '" "OpenBabel::OBRingSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingSearch * >(argp1);
    result = (arg1)->BeginRings();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBRing * >::iterator(static_cast< const std::vector<OpenBabel::OBRing * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBRing_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBRingSearch_EndRings) {
  {
    OpenBabel::OBRingSearch *arg1 = (OpenBabel::OBRingSearch *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBRing * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBRingSearch_EndRings(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBRingSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBRingSearch_EndRings" "', argument " "1"" of type '" "OpenBabel::OBRingSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBRingSearch * >(argp1);
    result = (arg1)->EndRings();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBRing * >::iterator(static_cast< const std::vector<OpenBabel::OBRing * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBRing_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSmartsPattern__SWIG_0) {
  {
    OpenBabel::OBSmartsPattern *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBSmartsPattern();");
    }
    result = (OpenBabel::OBSmartsPattern *)new OpenBabel::OBSmartsPattern();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSmartsPattern, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBSmartsPattern) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBSmartsPattern(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBSmartsPattern" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSmartsPattern__SWIG_1) {
  {
    OpenBabel::OBSmartsPattern *arg1 = 0 ;
    OpenBabel::OBSmartsPattern *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBSmartsPattern(cp);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBSmartsPattern,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBSmartsPattern" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBSmartsPattern" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    result = (OpenBabel::OBSmartsPattern *)new OpenBabel::OBSmartsPattern((OpenBabel::OBSmartsPattern const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSmartsPattern, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSmartsPattern) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBSmartsPattern__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBSmartsPattern__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBSmartsPattern'");
  XSRETURN(0);
}


XS(_wrap_OBSmartsPattern_NumMatches) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_NumMatches(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_NumMatches" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    result = (unsigned int)((OpenBabel::OBSmartsPattern const *)arg1)->NumMatches();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_NumAtoms) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_NumAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_NumAtoms" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    result = (unsigned int)((OpenBabel::OBSmartsPattern const *)arg1)->NumAtoms();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_NumBonds) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_NumBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_NumBonds" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    result = (unsigned int)((OpenBabel::OBSmartsPattern const *)arg1)->NumBonds();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_GetAtomicNum) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSmartsPattern_GetAtomicNum(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBSmartsPattern_GetAtomicNum" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (int)(arg1)->GetAtomicNum(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_GetBond) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    int *arg2 = 0 ;
    int *arg3 = 0 ;
    int *arg4 = 0 ;
    int arg5 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 5) || (items > 5)) {
      SWIG_croak("Usage: OBSmartsPattern_GetBond(self,int &,int &,int &,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_GetBond" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_GetBond" "', argument " "2"" of type '" "int &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_GetBond" "', argument " "2"" of type '" "int &""'"); 
    }
    arg2 = reinterpret_cast< int * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_int,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBSmartsPattern_GetBond" "', argument " "3"" of type '" "int &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_GetBond" "', argument " "3"" of type '" "int &""'"); 
    }
    arg3 = reinterpret_cast< int * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4, SWIGTYPE_p_int,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBSmartsPattern_GetBond" "', argument " "4"" of type '" "int &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_GetBond" "', argument " "4"" of type '" "int &""'"); 
    }
    arg4 = reinterpret_cast< int * >(argp4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OBSmartsPattern_GetBond" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    (arg1)->GetBond(*arg2,*arg3,*arg4,arg5);
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_GetCharge) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSmartsPattern_GetCharge(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_GetCharge" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBSmartsPattern_GetCharge" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (int)(arg1)->GetCharge(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_GetSMARTS__SWIG_0) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    std::string *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_GetSMARTS(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_GetSMARTS" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    {
      std::string const &_result_ref = ((OpenBabel::OBSmartsPattern const *)arg1)->GetSMARTS();
      result = (std::string *) &_result_ref;
    }
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(*result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_GetSMARTS__SWIG_1) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    std::string *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_GetSMARTS(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_GetSMARTS" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    {
      std::string &_result_ref = (arg1)->GetSMARTS();
      result = (std::string *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__string, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_GetSMARTS) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_GetSMARTS__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_GetSMARTS__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBSmartsPattern_GetSMARTS'");
  XSRETURN(0);
}


XS(_wrap_OBSmartsPattern_GetVectorBinding) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSmartsPattern_GetVectorBinding(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_GetVectorBinding" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBSmartsPattern_GetVectorBinding" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (int)((OpenBabel::OBSmartsPattern const *)arg1)->GetVectorBinding(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_Empty) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_Empty(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_Empty" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    result = (bool)((OpenBabel::OBSmartsPattern const *)arg1)->Empty();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_IsValid) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_IsValid(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_IsValid" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    result = (bool)((OpenBabel::OBSmartsPattern const *)arg1)->IsValid();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_Init__SWIG_0) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSmartsPattern_Init(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_Init" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_Init" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(arg1)->Init((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_Init__SWIG_1) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSmartsPattern_Init(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_Init" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_Init" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_Init" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(arg1)->Init((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_Init) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_Init__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_Init__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBSmartsPattern_Init'");
  XSRETURN(0);
}


XS(_wrap_OBSmartsPattern_WriteMapList) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    std::ostream *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSmartsPattern_WriteMapList(self,std::ostream &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_WriteMapList" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__ostream,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_WriteMapList" "', argument " "2"" of type '" "std::ostream &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_WriteMapList" "', argument " "2"" of type '" "std::ostream &""'"); 
    }
    arg2 = reinterpret_cast< std::ostream * >(argp2);
    (arg1)->WriteMapList(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_Match__SWIG_0) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    bool arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBSmartsPattern_Match(self,mol,single);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_Match" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_Match" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_Match" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBSmartsPattern_Match" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    result = (bool)(arg1)->Match(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_Match__SWIG_1) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSmartsPattern_Match(self,mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_Match" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_Match" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_Match" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    result = (bool)(arg1)->Match(*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_Match) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_Match__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_Match__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBSmartsPattern_Match'");
  XSRETURN(0);
}


XS(_wrap_OBSmartsPattern_RestrictedMatch__SWIG_0) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    std::vector<std::pair<int,int > > *arg3 = 0 ;
    bool arg4 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBSmartsPattern_RestrictedMatch(self,mol,pairs,single);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorTstd__pairTint_int_t_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "3"" of type '" "std::vector<std::pair<int,int > > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "3"" of type '" "std::vector<std::pair<int,int > > &""'"); 
    }
    arg3 = reinterpret_cast< std::vector<std::pair<int,int > > * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->RestrictedMatch(*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_RestrictedMatch__SWIG_1) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    std::vector<std::pair<int,int > > *arg3 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBSmartsPattern_RestrictedMatch(self,mol,pairs);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorTstd__pairTint_int_t_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "3"" of type '" "std::vector<std::pair<int,int > > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "3"" of type '" "std::vector<std::pair<int,int > > &""'"); 
    }
    arg3 = reinterpret_cast< std::vector<std::pair<int,int > > * >(argp3);
    result = (bool)(arg1)->RestrictedMatch(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_RestrictedMatch__SWIG_2) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    OpenBabel::OBBitVec *arg3 = 0 ;
    bool arg4 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    bool val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBSmartsPattern_RestrictedMatch(self,mol,bv,single);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__OBBitVec,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "3"" of type '" "OpenBabel::OBBitVec &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "3"" of type '" "OpenBabel::OBBitVec &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBitVec * >(argp3);
    ecode4 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
    result = (bool)(arg1)->RestrictedMatch(*arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_RestrictedMatch__SWIG_3) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    OpenBabel::OBMol *arg2 = 0 ;
    OpenBabel::OBBitVec *arg3 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBSmartsPattern_RestrictedMatch(self,mol,bv);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "2"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_OpenBabel__OBBitVec,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "3"" of type '" "OpenBabel::OBBitVec &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSmartsPattern_RestrictedMatch" "', argument " "3"" of type '" "OpenBabel::OBBitVec &""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBitVec * >(argp3);
    result = (bool)(arg1)->RestrictedMatch(*arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_RestrictedMatch) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorTstd__pairTint_int_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBBitVec, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBBitVec, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorTstd__pairTint_int_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_RestrictedMatch__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_RestrictedMatch__SWIG_3); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_RestrictedMatch__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSmartsPattern_RestrictedMatch__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBSmartsPattern_RestrictedMatch'");
  XSRETURN(0);
}


XS(_wrap_OBSmartsPattern_GetMapList) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    std::vector<std::vector<int > > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_GetMapList(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_GetMapList" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    {
      std::vector<std::vector<int > > &_result_ref = (arg1)->GetMapList();
      result = (std::vector<std::vector<int > > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_GetUMapList) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    std::vector<std::vector<int > > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_GetUMapList(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_GetUMapList" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    {
      std::vector<std::vector<int > > &_result_ref = (arg1)->GetUMapList();
      result = (std::vector<std::vector<int > > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_BeginMList) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    SwigValueWrapper<std::vector<std::vector<int > >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_BeginMList(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_BeginMList" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    result = (arg1)->BeginMList();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<std::vector<int > >::iterator(static_cast< const std::vector<std::vector<int > >::iterator& >(result))), SWIGTYPE_p_std__vectorTstd__vectorTint_t_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSmartsPattern_EndMList) {
  {
    OpenBabel::OBSmartsPattern *arg1 = (OpenBabel::OBSmartsPattern *) 0 ;
    SwigValueWrapper<std::vector<std::vector<int > >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBSmartsPattern_EndMList(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSmartsPattern, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSmartsPattern_EndMList" "', argument " "1"" of type '" "OpenBabel::OBSmartsPattern *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSmartsPattern * >(argp1);
    result = (arg1)->EndMList();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<std::vector<int > >::iterator(static_cast< const std::vector<std::vector<int > >::iterator& >(result))), SWIGTYPE_p_std__vectorTstd__vectorTint_t_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBSSMatch) {
  {
    OpenBabel::OBMol *arg1 = 0 ;
    OpenBabel::Pattern *arg2 = (OpenBabel::Pattern *) 0 ;
    OpenBabel::OBSSMatch *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_OBSSMatch(OpenBabel::OBMol &,OpenBabel::Pattern *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBSSMatch" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBSSMatch" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__Pattern, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_OBSSMatch" "', argument " "2"" of type '" "OpenBabel::Pattern *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::Pattern * >(argp2);
    result = (OpenBabel::OBSSMatch *)new OpenBabel::OBSSMatch(*arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBSSMatch, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBSSMatch) {
  {
    OpenBabel::OBSSMatch *arg1 = (OpenBabel::OBSSMatch *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBSSMatch(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSSMatch, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBSSMatch" "', argument " "1"" of type '" "OpenBabel::OBSSMatch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSSMatch * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSSMatch_Match__SWIG_0) {
  {
    OpenBabel::OBSSMatch *arg1 = (OpenBabel::OBSSMatch *) 0 ;
    std::vector<std::vector<int > > *arg2 = 0 ;
    int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBSSMatch_Match(self,v,bidx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSSMatch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSSMatch_Match" "', argument " "1"" of type '" "OpenBabel::OBSSMatch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSSMatch * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__vectorTint_t_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSSMatch_Match" "', argument " "2"" of type '" "std::vector<std::vector<int > > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSSMatch_Match" "', argument " "2"" of type '" "std::vector<std::vector<int > > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<std::vector<int > > * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBSSMatch_Match" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    (arg1)->Match(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSSMatch_Match__SWIG_1) {
  {
    OpenBabel::OBSSMatch *arg1 = (OpenBabel::OBSSMatch *) 0 ;
    std::vector<std::vector<int > > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBSSMatch_Match(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBSSMatch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBSSMatch_Match" "', argument " "1"" of type '" "OpenBabel::OBSSMatch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBSSMatch * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__vectorTint_t_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBSSMatch_Match" "', argument " "2"" of type '" "std::vector<std::vector<int > > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBSSMatch_Match" "', argument " "2"" of type '" "std::vector<std::vector<int > > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<std::vector<int > > * >(argp2);
    (arg1)->Match(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBSSMatch_Match) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSSMatch, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBSSMatch, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSSMatch_Match__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBSSMatch_Match__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBSSMatch_Match'");
  XSRETURN(0);
}


XS(_wrap_SmartsLexReplace) {
  {
    std::string *arg1 = 0 ;
    std::vector<std::pair<std::string,std::string > > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: SmartsLexReplace(std::string &,std::vector<std::pair<std::string,std::string > > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SmartsLexReplace" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SmartsLexReplace" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTstd__pairTstd__string_std__string_t_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SmartsLexReplace" "', argument " "2"" of type '" "std::vector<std::pair<std::string,std::string > > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SmartsLexReplace" "', argument " "2"" of type '" "std::vector<std::pair<std::string,std::string > > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<std::pair<std::string,std::string > > * >(argp2);
    OpenBabel::SmartsLexReplace(*arg1,*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_SetBit) {
  {
    OpenBabel::OBFingerprint *arg1 = (OpenBabel::OBFingerprint *) 0 ;
    std::vector<unsigned int > *arg2 = 0 ;
    unsigned int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBFingerprint_SetBit(self,vec,n);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFingerprint, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_SetBit" "', argument " "1"" of type '" "OpenBabel::OBFingerprint *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFingerprint * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFingerprint_SetBit" "', argument " "2"" of type '" "std::vector<unsigned int > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_SetBit" "', argument " "2"" of type '" "std::vector<unsigned int > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<unsigned int > * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBFingerprint_SetBit" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    (arg1)->SetBit(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_Fold) {
  {
    OpenBabel::OBFingerprint *arg1 = (OpenBabel::OBFingerprint *) 0 ;
    std::vector<unsigned int > *arg2 = 0 ;
    unsigned int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBFingerprint_Fold(self,vec,nbits);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFingerprint, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_Fold" "', argument " "1"" of type '" "OpenBabel::OBFingerprint *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFingerprint * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFingerprint_Fold" "', argument " "2"" of type '" "std::vector<unsigned int > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_Fold" "', argument " "2"" of type '" "std::vector<unsigned int > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<unsigned int > * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBFingerprint_Fold" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    (arg1)->Fold(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_GetFingerprint__SWIG_0) {
  {
    OpenBabel::OBFingerprint *arg1 = (OpenBabel::OBFingerprint *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::vector<unsigned int > *arg3 = 0 ;
    int arg4 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBFingerprint_GetFingerprint(self,pOb,fp,nbits);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFingerprint, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_GetFingerprint" "', argument " "1"" of type '" "OpenBabel::OBFingerprint *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFingerprint * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFingerprint_GetFingerprint" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBFingerprint_GetFingerprint" "', argument " "3"" of type '" "std::vector<unsigned int > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_GetFingerprint" "', argument " "3"" of type '" "std::vector<unsigned int > &""'"); 
    }
    arg3 = reinterpret_cast< std::vector<unsigned int > * >(argp3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBFingerprint_GetFingerprint" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (bool)(arg1)->GetFingerprint(arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_GetFingerprint__SWIG_1) {
  {
    OpenBabel::OBFingerprint *arg1 = (OpenBabel::OBFingerprint *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::vector<unsigned int > *arg3 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBFingerprint_GetFingerprint(self,pOb,fp);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFingerprint, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_GetFingerprint" "', argument " "1"" of type '" "OpenBabel::OBFingerprint *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFingerprint * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFingerprint_GetFingerprint" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBFingerprint_GetFingerprint" "', argument " "3"" of type '" "std::vector<unsigned int > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_GetFingerprint" "', argument " "3"" of type '" "std::vector<unsigned int > &""'"); 
    }
    arg3 = reinterpret_cast< std::vector<unsigned int > * >(argp3);
    result = (bool)(arg1)->GetFingerprint(arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_GetFingerprint) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBFingerprint, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorTunsigned_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBFingerprint, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__vectorTunsigned_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBFingerprint_GetFingerprint__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBFingerprint_GetFingerprint__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBFingerprint_GetFingerprint'");
  XSRETURN(0);
}


XS(_wrap_OBFingerprint_Description) {
  {
    OpenBabel::OBFingerprint *arg1 = (OpenBabel::OBFingerprint *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFingerprint_Description(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFingerprint, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_Description" "', argument " "1"" of type '" "OpenBabel::OBFingerprint *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFingerprint * >(argp1);
    result = (arg1)->Description();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_Flags) {
  {
    OpenBabel::OBFingerprint *arg1 = (OpenBabel::OBFingerprint *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFingerprint_Flags(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFingerprint, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_Flags" "', argument " "1"" of type '" "OpenBabel::OBFingerprint *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFingerprint * >(argp1);
    result = (unsigned int)(arg1)->Flags();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_GetNextFPrt) {
  {
    std::string *arg1 = 0 ;
    OpenBabel::OBFingerprint **arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBFingerprint_GetNextFPrt(id,pFPrt);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_GetNextFPrt" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_GetNextFPrt" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_p_OpenBabel__OBFingerprint,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFingerprint_GetNextFPrt" "', argument " "2"" of type '" "OpenBabel::OBFingerprint *&""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_GetNextFPrt" "', argument " "2"" of type '" "OpenBabel::OBFingerprint *&""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBFingerprint ** >(argp2);
    result = (bool)OpenBabel::OBFingerprint::GetNextFPrt(*arg1,*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_FindFingerprint) {
  {
    std::string *arg1 = 0 ;
    OpenBabel::OBFingerprint *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBFingerprint_FindFingerprint(ID);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_FindFingerprint" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_FindFingerprint" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    result = (OpenBabel::OBFingerprint *)OpenBabel::OBFingerprint::FindFingerprint(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFingerprint, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_Tanimoto__SWIG_0) {
  {
    std::vector<unsigned int > *arg1 = 0 ;
    std::vector<unsigned int > *arg2 = 0 ;
    double result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBFingerprint_Tanimoto(vec1,vec2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_Tanimoto" "', argument " "1"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_Tanimoto" "', argument " "1"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<unsigned int > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFingerprint_Tanimoto" "', argument " "2"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_Tanimoto" "', argument " "2"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<unsigned int > * >(argp2);
    result = (double)OpenBabel::OBFingerprint::Tanimoto((std::vector<unsigned int > const &)*arg1,(std::vector<unsigned int > const &)*arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_Tanimoto__SWIG_1) {
  {
    std::vector<unsigned int > *arg1 = 0 ;
    unsigned int *arg2 = (unsigned int *) 0 ;
    double result;
    void *argp1 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBFingerprint_Tanimoto(vec1,p2);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBFingerprint_Tanimoto" "', argument " "1"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBFingerprint_Tanimoto" "', argument " "1"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    arg1 = reinterpret_cast< std::vector<unsigned int > * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBFingerprint_Tanimoto" "', argument " "2"" of type '" "unsigned int const *""'"); 
    }
    arg2 = reinterpret_cast< unsigned int * >(argp2);
    result = (double)OpenBabel::OBFingerprint::Tanimoto((std::vector<unsigned int > const &)*arg1,(unsigned int const *)arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBFingerprint_Tanimoto) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__vectorTunsigned_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTunsigned_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__vectorTunsigned_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_unsigned_int, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBFingerprint_Tanimoto__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBFingerprint_Tanimoto__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBFingerprint_Tanimoto'");
  XSRETURN(0);
}


XS(_wrap_OBFingerprint_Getbitsperint) {
  {
    unsigned int result;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: OBFingerprint_Getbitsperint();");
    }
    result = (unsigned int)OpenBabel::OBFingerprint::Getbitsperint();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBFingerprint) {
  {
    OpenBabel::OBFingerprint *arg1 = (OpenBabel::OBFingerprint *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBFingerprint(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBFingerprint, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBFingerprint" "', argument " "1"" of type '" "OpenBabel::OBFingerprint *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBFingerprint * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_headerlength_set) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FptIndexHeader_headerlength_set(self,headerlength);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_headerlength_set" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FptIndexHeader_headerlength_set" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    if (arg1) (arg1)->headerlength = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_headerlength_get) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FptIndexHeader_headerlength_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_headerlength_get" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    result = (unsigned int) ((arg1)->headerlength);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_nEntries_set) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FptIndexHeader_nEntries_set(self,nEntries);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_nEntries_set" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FptIndexHeader_nEntries_set" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    if (arg1) (arg1)->nEntries = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_nEntries_get) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FptIndexHeader_nEntries_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_nEntries_get" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    result = (unsigned int) ((arg1)->nEntries);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_words_set) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FptIndexHeader_words_set(self,words);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_words_set" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FptIndexHeader_words_set" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    if (arg1) (arg1)->words = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_words_get) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FptIndexHeader_words_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_words_get" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    result = (unsigned int) ((arg1)->words);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_fpid_set) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    char *arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    char temp2[16] ;
    int res2 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FptIndexHeader_fpid_set(self,fpid);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_fpid_set" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    res2 = SWIG_AsCharArray(ST(1), temp2, 16);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FptIndexHeader_fpid_set" "', argument " "2"" of type '" "char [16]""'");
    }
    arg2 = reinterpret_cast< char * >(temp2);
    if (arg2) memcpy(arg1->fpid,arg2,16*sizeof(char));
    else memset(arg1->fpid,0,16*sizeof(char));
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_fpid_get) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FptIndexHeader_fpid_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_fpid_get" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    result = (char *)(char *) ((arg1)->fpid);
    {
      size_t size = 16;
      
      while (size && (result[size - 1] == '\0')) --size;
      
      ST(argvi) = SWIG_FromCharPtrAndSize(result, size); argvi++ ;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_datafilename_set) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    char *arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    char temp2[256] ;
    int res2 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FptIndexHeader_datafilename_set(self,datafilename);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_datafilename_set" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    res2 = SWIG_AsCharArray(ST(1), temp2, 256);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FptIndexHeader_datafilename_set" "', argument " "2"" of type '" "char [256]""'");
    }
    arg2 = reinterpret_cast< char * >(temp2);
    if (arg2) memcpy(arg1->datafilename,arg2,256*sizeof(char));
    else memset(arg1->datafilename,0,256*sizeof(char));
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndexHeader_datafilename_get) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FptIndexHeader_datafilename_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndexHeader_datafilename_get" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    result = (char *)(char *) ((arg1)->datafilename);
    {
      size_t size = 256;
      
      while (size && (result[size - 1] == '\0')) --size;
      
      ST(argvi) = SWIG_FromCharPtrAndSize(result, size); argvi++ ;
    }
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FptIndexHeader) {
  {
    OpenBabel::FptIndexHeader *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_FptIndexHeader();");
    }
    result = (OpenBabel::FptIndexHeader *)new OpenBabel::FptIndexHeader();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__FptIndexHeader, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_FptIndexHeader) {
  {
    OpenBabel::FptIndexHeader *arg1 = (OpenBabel::FptIndexHeader *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FptIndexHeader(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndexHeader, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FptIndexHeader" "', argument " "1"" of type '" "OpenBabel::FptIndexHeader *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndex_header_set) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    OpenBabel::FptIndexHeader *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FptIndex_header_set(self,header);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndex_header_set" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__FptIndexHeader,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FptIndex_header_set" "', argument " "2"" of type '" "OpenBabel::FptIndexHeader const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FptIndex_header_set" "', argument " "2"" of type '" "OpenBabel::FptIndexHeader const &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::FptIndexHeader * >(argp2);
    if (arg1) (arg1)->header = *arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndex_header_get) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    OpenBabel::FptIndexHeader *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FptIndex_header_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndex_header_get" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    {
      OpenBabel::FptIndexHeader const &_result_ref =  ((arg1)->header);
      result = (OpenBabel::FptIndexHeader *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndex_fptdata_set) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    std::vector<unsigned int > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FptIndex_fptdata_set(self,fptdata);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndex_fptdata_set" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FptIndex_fptdata_set" "', argument " "2"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FptIndex_fptdata_set" "', argument " "2"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<unsigned int > * >(argp2);
    if (arg1) (arg1)->fptdata = *arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndex_fptdata_get) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    std::vector<unsigned int > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FptIndex_fptdata_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndex_fptdata_get" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    {
      std::vector<unsigned int > const &_result_ref =  ((arg1)->fptdata);
      result = (std::vector<unsigned int > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTunsigned_int_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndex_seekdata_set) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    std::vector<unsigned int > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FptIndex_seekdata_set(self,seekdata);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndex_seekdata_set" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FptIndex_seekdata_set" "', argument " "2"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FptIndex_seekdata_set" "', argument " "2"" of type '" "std::vector<unsigned int > const &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<unsigned int > * >(argp2);
    if (arg1) (arg1)->seekdata = *arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndex_seekdata_get) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    std::vector<unsigned int > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FptIndex_seekdata_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndex_seekdata_get" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    {
      std::vector<unsigned int > const &_result_ref =  ((arg1)->seekdata);
      result = (std::vector<unsigned int > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTunsigned_int_t, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndex_Read) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    std::istream *arg2 = (std::istream *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FptIndex_Read(self,pIndexstream);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndex_Read" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__istream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FptIndex_Read" "', argument " "2"" of type '" "std::istream *""'"); 
    }
    arg2 = reinterpret_cast< std::istream * >(argp2);
    result = (bool)(arg1)->Read(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FptIndex_CheckFP) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    OpenBabel::OBFingerprint *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FptIndex_CheckFP(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FptIndex_CheckFP" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    result = (OpenBabel::OBFingerprint *)(arg1)->CheckFP();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFingerprint, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FptIndex) {
  {
    OpenBabel::FptIndex *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_FptIndex();");
    }
    result = (OpenBabel::FptIndex *)new OpenBabel::FptIndex();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__FptIndex, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_delete_FptIndex) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FptIndex(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FptIndex" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FastSearch_ReadIndex) {
  {
    OpenBabel::FastSearch *arg1 = (OpenBabel::FastSearch *) 0 ;
    std::istream *arg2 = (std::istream *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: FastSearch_ReadIndex(self,pIndexstream);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastSearch_ReadIndex" "', argument " "1"" of type '" "OpenBabel::FastSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearch * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__istream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FastSearch_ReadIndex" "', argument " "2"" of type '" "std::istream *""'"); 
    }
    arg2 = reinterpret_cast< std::istream * >(argp2);
    result = (arg1)->ReadIndex(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_FastSearch) {
  {
    OpenBabel::FastSearch *arg1 = (OpenBabel::FastSearch *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FastSearch(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearch, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FastSearch" "', argument " "1"" of type '" "OpenBabel::FastSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearch * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FastSearch_Find) {
  {
    OpenBabel::FastSearch *arg1 = (OpenBabel::FastSearch *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::vector<unsigned int > *arg3 = 0 ;
    unsigned int arg4 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    unsigned int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: FastSearch_Find(self,pOb,SeekPositions,MaxCandidates);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastSearch_Find" "', argument " "1"" of type '" "OpenBabel::FastSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearch * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FastSearch_Find" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__vectorTunsigned_int_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FastSearch_Find" "', argument " "3"" of type '" "std::vector<unsigned int > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FastSearch_Find" "', argument " "3"" of type '" "std::vector<unsigned int > &""'"); 
    }
    arg3 = reinterpret_cast< std::vector<unsigned int > * >(argp3);
    ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FastSearch_Find" "', argument " "4"" of type '" "unsigned int""'");
    } 
    arg4 = static_cast< unsigned int >(val4);
    result = (bool)(arg1)->Find(arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FastSearch_FindSimilar__SWIG_0) {
  {
    OpenBabel::FastSearch *arg1 = (OpenBabel::FastSearch *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::multimap<double,unsigned int > *arg3 = 0 ;
    double arg4 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: FastSearch_FindSimilar(self,pOb,SeekposMap,MinTani);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastSearch_FindSimilar" "', argument " "1"" of type '" "OpenBabel::FastSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearch * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FastSearch_FindSimilar" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__multimapTdouble_unsigned_int_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FastSearch_FindSimilar" "', argument " "3"" of type '" "std::multimap<double,unsigned int > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FastSearch_FindSimilar" "', argument " "3"" of type '" "std::multimap<double,unsigned int > &""'"); 
    }
    arg3 = reinterpret_cast< std::multimap<double,unsigned int > * >(argp3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FastSearch_FindSimilar" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    result = (bool)(arg1)->FindSimilar(arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FastSearch_FindSimilar__SWIG_1) {
  {
    OpenBabel::FastSearch *arg1 = (OpenBabel::FastSearch *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::multimap<double,unsigned int > *arg3 = 0 ;
    int arg4 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: FastSearch_FindSimilar(self,pOb,SeekposMap,nCandidates);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastSearch_FindSimilar" "', argument " "1"" of type '" "OpenBabel::FastSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearch * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FastSearch_FindSimilar" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__multimapTdouble_unsigned_int_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FastSearch_FindSimilar" "', argument " "3"" of type '" "std::multimap<double,unsigned int > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FastSearch_FindSimilar" "', argument " "3"" of type '" "std::multimap<double,unsigned int > &""'"); 
    }
    arg3 = reinterpret_cast< std::multimap<double,unsigned int > * >(argp3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FastSearch_FindSimilar" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (bool)(arg1)->FindSimilar(arg2,*arg3,arg4);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FastSearch_FindSimilar__SWIG_2) {
  {
    OpenBabel::FastSearch *arg1 = (OpenBabel::FastSearch *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::multimap<double,unsigned int > *arg3 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: FastSearch_FindSimilar(self,pOb,SeekposMap);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastSearch_FindSimilar" "', argument " "1"" of type '" "OpenBabel::FastSearch *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearch * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FastSearch_FindSimilar" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__multimapTdouble_unsigned_int_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FastSearch_FindSimilar" "', argument " "3"" of type '" "std::multimap<double,unsigned int > &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FastSearch_FindSimilar" "', argument " "3"" of type '" "std::multimap<double,unsigned int > &""'"); 
    }
    arg3 = reinterpret_cast< std::multimap<double,unsigned int > * >(argp3);
    result = (bool)(arg1)->FindSimilar(arg2,*arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_FastSearch_FindSimilar) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__FastSearch, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__multimapTdouble_unsigned_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__FastSearch, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__multimapTdouble_unsigned_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__FastSearch, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBBase, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__multimapTdouble_unsigned_int_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_FastSearch_FindSimilar__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_FastSearch_FindSimilar__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_FastSearch_FindSimilar__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'FastSearch_FindSimilar'");
  XSRETURN(0);
}


XS(_wrap_FastSearch_GetFingerprint) {
  {
    OpenBabel::FastSearch *arg1 = (OpenBabel::FastSearch *) 0 ;
    OpenBabel::OBFingerprint *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FastSearch_GetFingerprint(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastSearch_GetFingerprint" "', argument " "1"" of type '" "OpenBabel::FastSearch const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearch * >(argp1);
    result = (OpenBabel::OBFingerprint *)((OpenBabel::FastSearch const *)arg1)->GetFingerprint();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBFingerprint, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FastSearch_GetIndexHeader) {
  {
    OpenBabel::FastSearch *arg1 = (OpenBabel::FastSearch *) 0 ;
    OpenBabel::FptIndexHeader *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: FastSearch_GetIndexHeader(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearch, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastSearch_GetIndexHeader" "', argument " "1"" of type '" "OpenBabel::FastSearch const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearch * >(argp1);
    {
      OpenBabel::FptIndexHeader const &_result_ref = ((OpenBabel::FastSearch const *)arg1)->GetIndexHeader();
      result = (OpenBabel::FptIndexHeader *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__FptIndexHeader, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FastSearch) {
  {
    OpenBabel::FastSearch *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_FastSearch();");
    }
    result = (OpenBabel::FastSearch *)new OpenBabel::FastSearch();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__FastSearch, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_FastSearchIndexer__SWIG_0) {
  {
    std::string *arg1 = 0 ;
    std::ostream *arg2 = (std::ostream *) 0 ;
    std::string *arg3 = 0 ;
    int arg4 ;
    OpenBabel::FastSearchIndexer *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: new_FastSearchIndexer(datafilename,os,fpid,FptBits);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FastSearchIndexer" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FastSearchIndexer" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__ostream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FastSearchIndexer" "', argument " "2"" of type '" "std::ostream *""'"); 
    }
    arg2 = reinterpret_cast< std::ostream * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FastSearchIndexer" "', argument " "3"" of type '" "std::string &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FastSearchIndexer" "', argument " "3"" of type '" "std::string &""'"); 
    }
    arg3 = reinterpret_cast< std::string * >(argp3);
    ecode4 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FastSearchIndexer" "', argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
    result = (OpenBabel::FastSearchIndexer *)new OpenBabel::FastSearchIndexer(*arg1,arg2,*arg3,arg4);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__FastSearchIndexer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FastSearchIndexer__SWIG_1) {
  {
    std::string *arg1 = 0 ;
    std::ostream *arg2 = (std::ostream *) 0 ;
    std::string *arg3 = 0 ;
    OpenBabel::FastSearchIndexer *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: new_FastSearchIndexer(datafilename,os,fpid);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FastSearchIndexer" "', argument " "1"" of type '" "std::string &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FastSearchIndexer" "', argument " "1"" of type '" "std::string &""'"); 
    }
    arg1 = reinterpret_cast< std::string * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__ostream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FastSearchIndexer" "', argument " "2"" of type '" "std::ostream *""'"); 
    }
    arg2 = reinterpret_cast< std::ostream * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FastSearchIndexer" "', argument " "3"" of type '" "std::string &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FastSearchIndexer" "', argument " "3"" of type '" "std::string &""'"); 
    }
    arg3 = reinterpret_cast< std::string * >(argp3);
    result = (OpenBabel::FastSearchIndexer *)new OpenBabel::FastSearchIndexer(*arg1,arg2,*arg3);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__FastSearchIndexer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FastSearchIndexer__SWIG_2) {
  {
    OpenBabel::FptIndex *arg1 = (OpenBabel::FptIndex *) 0 ;
    std::ostream *arg2 = (std::ostream *) 0 ;
    OpenBabel::FastSearchIndexer *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: new_FastSearchIndexer(pindex,os);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FptIndex, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FastSearchIndexer" "', argument " "1"" of type '" "OpenBabel::FptIndex *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FptIndex * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__ostream, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FastSearchIndexer" "', argument " "2"" of type '" "std::ostream *""'"); 
    }
    arg2 = reinterpret_cast< std::ostream * >(argp2);
    result = (OpenBabel::FastSearchIndexer *)new OpenBabel::FastSearchIndexer(arg1,arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__FastSearchIndexer, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_FastSearchIndexer) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__FptIndex, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__ostream, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FastSearchIndexer__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FastSearchIndexer__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_FastSearchIndexer__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'new_FastSearchIndexer'");
  XSRETURN(0);
}


XS(_wrap_delete_FastSearchIndexer) {
  {
    OpenBabel::FastSearchIndexer *arg1 = (OpenBabel::FastSearchIndexer *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_FastSearchIndexer(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearchIndexer, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FastSearchIndexer" "', argument " "1"" of type '" "OpenBabel::FastSearchIndexer *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearchIndexer * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_FastSearchIndexer_Add) {
  {
    OpenBabel::FastSearchIndexer *arg1 = (OpenBabel::FastSearchIndexer *) 0 ;
    OpenBabel::OBBase *arg2 = (OpenBabel::OBBase *) 0 ;
    std::streampos arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: FastSearchIndexer_Add(self,pOb,seekpos);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__FastSearchIndexer, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FastSearchIndexer_Add" "', argument " "1"" of type '" "OpenBabel::FastSearchIndexer *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::FastSearchIndexer * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBase, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FastSearchIndexer_Add" "', argument " "2"" of type '" "OpenBabel::OBBase *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBase * >(argp2);
    {
      res3 = SWIG_ConvertPtr(ST(2), &argp3, SWIGTYPE_p_std__streampos,  0 );
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FastSearchIndexer_Add" "', argument " "3"" of type '" "std::streampos""'"); 
      }  
      if (!argp3) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FastSearchIndexer_Add" "', argument " "3"" of type '" "std::streampos""'");
      } else {
        arg3 = *(reinterpret_cast< std::streampos * >(argp3));
      }
    }
    result = (bool)(arg1)->Add(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomIter__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBMolAtomIter();");
    }
    result = (OpenBabel::OBMolAtomIter *)new OpenBabel::OBMolAtomIter();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomIter__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBMolAtomIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolAtomIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolAtomIter" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBMolAtomIter *)new OpenBabel::OBMolAtomIter(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomIter__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = 0 ;
    OpenBabel::OBMolAtomIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolAtomIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolAtomIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBMolAtomIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBMolAtomIter *)new OpenBabel::OBMolAtomIter(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomIter__SWIG_3) {
  {
    OpenBabel::OBMolAtomIter *arg1 = 0 ;
    OpenBabel::OBMolAtomIter *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolAtomIter(ai);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMolAtomIter,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolAtomIter" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBMolAtomIter" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (OpenBabel::OBMolAtomIter *)new OpenBabel::OBMolAtomIter((OpenBabel::OBMolAtomIter const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomIter) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomIter__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomIter__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomIter__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomIter__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBMolAtomIter'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_good) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_good(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_good" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)((OpenBabel::OBMolAtomIter const *)arg1)->operator bool();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_inc__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBMolAtomIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_inc(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_inc" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    {
      OpenBabel::OBMolAtomIter &_result_ref = (arg1)->operator ++();
      result = (OpenBabel::OBMolAtomIter *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_inc__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    OpenBabel::OBMolAtomIter result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_inc(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_inc" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_inc" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator ++(arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBMolAtomIter(static_cast< const OpenBabel::OBMolAtomIter& >(result))), SWIGTYPE_p_OpenBabel__OBMolAtomIter, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_inc) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_inc__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_inc__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_inc'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_deref) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_deref(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_deref" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (OpenBabel::OBAtom *)((OpenBabel::OBMolAtomIter const *)arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter___ref__) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter___ref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter___ref__" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    {
      OpenBabel::OBAtom &_result_ref = ((OpenBabel::OBMolAtomIter const *)arg1)->operator *();
      result = (OpenBabel::OBAtom *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBMolAtomIter) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBMolAtomIter(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBMolAtomIter" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_Visit_set) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_Visit_set(self,Visit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_Visit_set" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_Visit_set" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    if (arg1) (*arg1)->Visit = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_Visit_get) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_Visit_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_Visit_get" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool) ((*arg1)->Visit);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_Clear) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_Clear" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetIdx) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetHyb) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetHyb(self,hyb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetHyb" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetHyb" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetHyb(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetAtomicNum) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetAtomicNum(self,atomicnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetAtomicNum" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetAtomicNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetIsotope) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetIsotope(self,iso);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetIsotope" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetIsotope" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->SetIsotope(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetImplicitValence) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetImplicitValence(self,val);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetImplicitValence" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetImplicitValence(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IncrementImplicitValence) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IncrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IncrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->IncrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_DecrementImplicitValence) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_DecrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_DecrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->DecrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetFormalCharge) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetFormalCharge(self,fcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetFormalCharge" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetFormalCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetSpinMultiplicity) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    short arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetSpinMultiplicity(self,spin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetSpinMultiplicity" "', argument " "2"" of type '" "short""'");
    } 
    arg2 = static_cast< short >(val2);
    (*arg1)->SetSpinMultiplicity(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetType__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_SetType" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (*arg1)->SetType(arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetType__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    (*arg1)->SetType(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_SetType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_SetType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_SetType'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_SetPartialCharge) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetPartialCharge(self,pcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetPartialCharge" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->SetPartialCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetVector__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetVector(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    (*arg1)->SetVector(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetVector__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBMolAtomIter_SetVector(self,x,y,z);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetVector" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolAtomIter_SetVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBMolAtomIter_SetVector" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    (*arg1)->SetVector(arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetVector__SWIG_2) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_SetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->SetVector();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_SetVector__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_SetVector__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_SetVector__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_SetVector'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_SetCoordPtr) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double **arg2 = (double **) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetCoordPtr(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_SetCoordPtr" "', argument " "2"" of type '" "double **""'"); 
    }
    arg2 = reinterpret_cast< double ** >(argp2);
    (*arg1)->SetCoordPtr(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetResidue) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBResidue *arg2 = (OpenBabel::OBResidue *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetResidue(self,res);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_SetResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    (*arg1)->SetResidue(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetParent) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetParent(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetParent" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (*arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetAromatic) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_SetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->SetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_UnsetAromatic) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_UnsetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_UnsetAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->UnsetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetClockwiseStereo) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_SetClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->SetClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetAntiClockwiseStereo) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_SetAntiClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetAntiClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->SetAntiClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetPositiveStereo) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_SetPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->SetPositiveStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetNegativeStereo) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_SetNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->SetNegativeStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_UnsetStereo) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_UnsetStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_UnsetStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->UnsetStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetInRing) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_SetInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetInRing" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->SetInRing();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetChiral) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_SetChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetChiral" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->SetChiral();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_ClearCoordPtr) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_ClearCoordPtr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_ClearCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->ClearCoordPtr();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetFormalCharge) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetFormalCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (int)(*arg1)->GetFormalCharge();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetAtomicNum) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetAtomicNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetAtomicNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetIsotope) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned short result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetIsotope(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetIsotope" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned short)(*arg1)->GetIsotope();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetSpinMultiplicity) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetSpinMultiplicity(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (int)(*arg1)->GetSpinMultiplicity();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetAtomicMass) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetAtomicMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetAtomicMass" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->GetAtomicMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetExactMass) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetExactMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetExactMass" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->GetExactMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetIdx) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetCoordinateIdx) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetCoordinateIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetCoordinateIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCoordinateIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetCIdx) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetCIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetCIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetValence) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetHyb) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetHyb(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetHyb" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHyb();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetImplicitValence) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetImplicitValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetHvyValence) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetHvyValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetHvyValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHvyValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetHeteroValence) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetHeteroValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetHeteroValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHeteroValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetType) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetType" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (char *)(*arg1)->GetType();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetX) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetX(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetX" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->GetX();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_x) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_x(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_x" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->x();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetY) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetY(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetY" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->GetY();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_y) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_y(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_y" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->y();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetZ) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetZ(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetZ" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->GetZ();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_z) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_z(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_z" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->z();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetCoordinate) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetCoordinate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetCoordinate" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double *)(*arg1)->GetCoordinate();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetVector) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::vector3 *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    {
      OpenBabel::vector3 &_result_ref = (*arg1)->GetVector();
      result = (OpenBabel::vector3 *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetPartialCharge) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetPartialCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->GetPartialCharge();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetResidue) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (OpenBabel::OBResidue *)(*arg1)->GetResidue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetParent) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetParent" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (OpenBabel::OBMol *)(*arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetNewBondVector) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomIter_GetNewBondVector(self,v,length);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetNewBondVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolAtomIter_GetNewBondVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    result = (bool)(*arg1)->GetNewBondVector(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_GetBond(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_GetBond" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->GetBond(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetNextAtom) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetNextAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetNextAtom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (OpenBabel::OBAtom *)(*arg1)->GetNextAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_BeginBonds) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_BeginBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_BeginBonds" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (*arg1)->BeginBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_EndBonds) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_EndBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_EndBonds" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (*arg1)->EndBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_BeginBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_BeginBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_BeginBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->BeginBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_NextBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_NextBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_NextBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->NextBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_BeginNbrAtom) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_BeginNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_BeginNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->BeginNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_NextNbrAtom) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_NextNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_NextNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->NextNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetDistance__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_GetDistance(self,index);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_GetDistance" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetDistance__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_GetDistance(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_GetDistance" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetDistance) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_GetDistance__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_GetDistance__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_GetDistance'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_GetAngle__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_GetAngle" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolAtomIter_GetAngle" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetAngle__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_GetAngle" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMolAtomIter_GetAngle" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetAngle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_GetAngle__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_GetAngle__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_GetAngle'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_NewResidue) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_NewResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_NewResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->NewResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_DeleteResidue) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_DeleteResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_DeleteResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->DeleteResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_AddBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_AddBond(self,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_AddBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_AddBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    (*arg1)->AddBond(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_InsertBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *arg3 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomIter_InsertBond(self,i,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_InsertBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMolAtomIter_InsertBond" "', argument " "3"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBond * >(argp3);
    (*arg1)->InsertBond(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_DeleteBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_DeleteBond(self,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_DeleteBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_DeleteBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(*arg1)->DeleteBond(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_ClearBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_ClearBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_ClearBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->ClearBond();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_CountFreeOxygens) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_CountFreeOxygens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_CountFreeOxygens" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->CountFreeOxygens();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_ImplicitHydrogenCount) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_ImplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_ImplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->ImplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_ExplicitHydrogenCount__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool arg2 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_ExplicitHydrogenCount(self,ExcludeIsotopes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_ExplicitHydrogenCount" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_ExplicitHydrogenCount__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_ExplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_ExplicitHydrogenCount) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_ExplicitHydrogenCount__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_ExplicitHydrogenCount__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_ExplicitHydrogenCount'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_MemberOfRingCount) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_MemberOfRingCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_MemberOfRingCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_MemberOfRingSize) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_MemberOfRingSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_MemberOfRingSize" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_CountRingBonds) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_CountRingBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_CountRingBonds" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->CountRingBonds();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SmallestBondAngle) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_SmallestBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SmallestBondAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->SmallestBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_AverageBondAngle) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_AverageBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_AverageBondAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (double)(*arg1)->AverageBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_BOSum) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_BOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_BOSum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->BOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_KBOSum) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_KBOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_KBOSum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->KBOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HtoMethyl) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HtoMethyl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HtoMethyl" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HtoMethyl();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_SetHybAndGeom) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetHybAndGeom(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetHybAndGeom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_SetHybAndGeom" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->SetHybAndGeom(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_ForceNoH) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_ForceNoH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_ForceNoH" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    (*arg1)->ForceNoH();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasNoHForced) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HasNoHForced(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasNoHForced" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HasNoHForced();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasResidue) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HasResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HasResidue();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsHydrogen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsCarbon) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsCarbon(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsCarbon" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsCarbon();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsNitrogen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsNitrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsOxygen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsSulfur) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsSulfur(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsSulfur" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsSulfur();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsPhosphorus) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsPhosphorus(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsPhosphorus" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphorus();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsAromatic) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsInRing) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsInRing();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsInRingSize) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_IsInRingSize(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsInRingSize" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_IsInRingSize" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->IsInRingSize(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsHeteroatom) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsHeteroatom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsHeteroatom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHeteroatom();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsNotCorH) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsNotCorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsNotCorH" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNotCorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsConnected) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_IsConnected(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsConnected" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_IsConnected" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsConnected(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsOneThree) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_IsOneThree(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsOneThree" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_IsOneThree" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneThree(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsOneFour) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_IsOneFour(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsOneFour" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_IsOneFour" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneFour(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsCarboxylOxygen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsCarboxylOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsCarboxylOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsCarboxylOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsPhosphateOxygen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsPhosphateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsPhosphateOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsSulfateOxygen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsSulfateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsSulfateOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsSulfateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsNitroOxygen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsNitroOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsNitroOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNitroOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsAmideNitrogen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsAmideNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsAmideNitrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAmideNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsPolarHydrogen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsNonPolarHydrogen) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsNonPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsNonPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNonPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsAromaticNOxide) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsAromaticNOxide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsAromaticNOxide" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAromaticNOxide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsChiral) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsChiral" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsChiral();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsAxial) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsAxial(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsAxial" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAxial();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsClockwise) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsClockwise" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsAntiClockwise) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsAntiClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsAntiClockwise" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAntiClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsPositiveStereo) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPositiveStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsNegativeStereo) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNegativeStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasChiralitySpecified) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HasChiralitySpecified(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasChiralitySpecified" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HasChiralitySpecified();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasChiralVolume) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HasChiralVolume(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasChiralVolume" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HasChiralVolume();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsHbondAcceptor) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsHbondAcceptor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsHbondAcceptor" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHbondAcceptor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsHbondDonor) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsHbondDonor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsHbondDonor" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_IsHbondDonorH) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_IsHbondDonorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_IsHbondDonorH" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasAlphaBetaUnsat__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_HasAlphaBetaUnsat(self,includePandS);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_HasAlphaBetaUnsat" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)(*arg1)->HasAlphaBetaUnsat(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasAlphaBetaUnsat__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HasAlphaBetaUnsat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HasAlphaBetaUnsat();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasAlphaBetaUnsat) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_HasAlphaBetaUnsat__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_HasAlphaBetaUnsat__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_HasAlphaBetaUnsat'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_HasBondOfOrder) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_HasBondOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasBondOfOrder" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_HasBondOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasBondOfOrder(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_CountBondsOfOrder) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_CountBondsOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_CountBondsOfOrder" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_CountBondsOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (int)(*arg1)->CountBondsOfOrder(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasNonSingleBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HasNonSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasNonSingleBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HasNonSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasSingleBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HasSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasSingleBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HasSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasDoubleBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HasDoubleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasDoubleBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HasDoubleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasAromaticBond) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_HasAromaticBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasAromaticBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (bool)(*arg1)->HasAromaticBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_MatchesSMARTS) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_MatchesSMARTS(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_MatchesSMARTS" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_MatchesSMARTS" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->MatchesSMARTS((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_DoTransformations) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_DoTransformations(self,std::map<std::string,std::string > const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(*arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_ClassDescription) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_ClassDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_ClassDescription" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (char *)(*arg1)->ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasData__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_HasData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->HasData((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasData__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_HasData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_HasData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->HasData((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasData__SWIG_2) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_HasData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_HasData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_HasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_HasData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_HasData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_HasData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_HasData'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_DeleteData__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_DeleteData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_DeleteData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_DeleteData__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_DeleteData(self,OpenBabel::OBGenericData *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_DeleteData__SWIG_2) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_DeleteData(self,std::vector<OpenBabel::OBGenericData * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (*arg1)->DeleteData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_DeleteData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_DeleteData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_DeleteData__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_DeleteData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_DeleteData'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_SetData) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_SetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_SetData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_DataSize) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_DataSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_DataSize" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->DataSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetData__SWIG_0) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_GetData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomIter_GetData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetData__SWIG_1) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_GetData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetData__SWIG_2) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomIter_GetData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomIter_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetData__SWIG_3) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > &_result_ref = (*arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_GetData__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_GetData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_GetData__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomIter_GetData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomIter_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomIter_BeginData) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_BeginData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_BeginData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (*arg1)->BeginData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomIter_EndData) {
  {
    OpenBabel::OBMolAtomIter *arg1 = (OpenBabel::OBMolAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomIter_EndData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomIter_EndData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomIter * >(argp1);
    result = (*arg1)->EndData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomDFSIter__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBMolAtomDFSIter();");
    }
    result = (OpenBabel::OBMolAtomDFSIter *)new OpenBabel::OBMolAtomDFSIter();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomDFSIter__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBMolAtomDFSIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolAtomDFSIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolAtomDFSIter" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBMolAtomDFSIter *)new OpenBabel::OBMolAtomDFSIter(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomDFSIter__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = 0 ;
    OpenBabel::OBMolAtomDFSIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolAtomDFSIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolAtomDFSIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBMolAtomDFSIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBMolAtomDFSIter *)new OpenBabel::OBMolAtomDFSIter(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomDFSIter__SWIG_3) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = 0 ;
    OpenBabel::OBMolAtomDFSIter *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolAtomDFSIter(ai);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolAtomDFSIter" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBMolAtomDFSIter" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (OpenBabel::OBMolAtomDFSIter *)new OpenBabel::OBMolAtomDFSIter((OpenBabel::OBMolAtomDFSIter const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomDFSIter) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomDFSIter__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomDFSIter__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomDFSIter__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomDFSIter__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBMolAtomDFSIter'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter___plusplus____SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBMolAtomDFSIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter___plusplus__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter___plusplus__" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    {
      OpenBabel::OBMolAtomDFSIter &_result_ref = (arg1)->operator ++();
      result = (OpenBabel::OBMolAtomDFSIter *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter___plusplus____SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    OpenBabel::OBMolAtomDFSIter result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter___plusplus__(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter___plusplus__" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter___plusplus__" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator ++(arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBMolAtomDFSIter(static_cast< const OpenBabel::OBMolAtomDFSIter& >(result))), SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter___plusplus__) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter___plusplus____SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter___plusplus____SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter___plusplus__'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter___deref__) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter___deref__" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (OpenBabel::OBAtom *)((OpenBabel::OBMolAtomDFSIter const *)arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter___ref__) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter___ref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter___ref__" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    {
      OpenBabel::OBAtom &_result_ref = ((OpenBabel::OBMolAtomDFSIter const *)arg1)->operator *();
      result = (OpenBabel::OBAtom *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBMolAtomDFSIter) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBMolAtomDFSIter(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBMolAtomDFSIter" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_Visit_set) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_Visit_set(self,Visit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_Visit_set" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_Visit_set" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    if (arg1) (*arg1)->Visit = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_Visit_get) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_Visit_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_Visit_get" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool) ((*arg1)->Visit);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_Clear) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_Clear" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetIdx) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetHyb) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetHyb(self,hyb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetHyb" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetHyb" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetHyb(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetAtomicNum) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetAtomicNum(self,atomicnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetAtomicNum" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetAtomicNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetIsotope) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetIsotope(self,iso);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetIsotope" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetIsotope" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->SetIsotope(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetImplicitValence) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetImplicitValence(self,val);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetImplicitValence" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetImplicitValence(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IncrementImplicitValence) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IncrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IncrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->IncrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_DecrementImplicitValence) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_DecrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_DecrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->DecrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetFormalCharge) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetFormalCharge(self,fcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetFormalCharge" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetFormalCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetSpinMultiplicity) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    short arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetSpinMultiplicity(self,spin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetSpinMultiplicity" "', argument " "2"" of type '" "short""'");
    } 
    arg2 = static_cast< short >(val2);
    (*arg1)->SetSpinMultiplicity(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetType__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_SetType" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (*arg1)->SetType(arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetType__SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    (*arg1)->SetType(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_SetType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_SetType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter_SetType'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter_SetPartialCharge) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetPartialCharge(self,pcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetPartialCharge" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->SetPartialCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetVector__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetVector(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    (*arg1)->SetVector(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetVector__SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetVector(self,x,y,z);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetVector" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolAtomDFSIter_SetVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBMolAtomDFSIter_SetVector" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    (*arg1)->SetVector(arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetVector__SWIG_2) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->SetVector();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_SetVector__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_SetVector__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_SetVector__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter_SetVector'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter_SetCoordPtr) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double **arg2 = (double **) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetCoordPtr(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_SetCoordPtr" "', argument " "2"" of type '" "double **""'"); 
    }
    arg2 = reinterpret_cast< double ** >(argp2);
    (*arg1)->SetCoordPtr(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetResidue) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBResidue *arg2 = (OpenBabel::OBResidue *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetResidue(self,res);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_SetResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    (*arg1)->SetResidue(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetParent) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetParent(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetParent" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (*arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetAromatic) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->SetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_UnsetAromatic) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_UnsetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_UnsetAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->UnsetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetClockwiseStereo) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->SetClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetAntiClockwiseStereo) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetAntiClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetAntiClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->SetAntiClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetPositiveStereo) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->SetPositiveStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetNegativeStereo) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->SetNegativeStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_UnsetStereo) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_UnsetStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_UnsetStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->UnsetStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetInRing) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetInRing" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->SetInRing();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetChiral) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetChiral" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->SetChiral();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_ClearCoordPtr) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_ClearCoordPtr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_ClearCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->ClearCoordPtr();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetFormalCharge) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetFormalCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (int)(*arg1)->GetFormalCharge();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetAtomicNum) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetAtomicNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetAtomicNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetIsotope) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned short result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetIsotope(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetIsotope" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned short)(*arg1)->GetIsotope();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetSpinMultiplicity) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetSpinMultiplicity(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (int)(*arg1)->GetSpinMultiplicity();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetAtomicMass) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetAtomicMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetAtomicMass" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->GetAtomicMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetExactMass) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetExactMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetExactMass" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->GetExactMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetIdx) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetCoordinateIdx) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetCoordinateIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetCoordinateIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCoordinateIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetCIdx) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetCIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetCIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetValence) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetHyb) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetHyb(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetHyb" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHyb();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetImplicitValence) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetImplicitValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetHvyValence) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetHvyValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetHvyValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHvyValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetHeteroValence) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetHeteroValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetHeteroValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHeteroValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetType) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetType" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (char *)(*arg1)->GetType();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetX) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetX(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetX" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->GetX();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_x) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_x(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_x" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->x();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetY) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetY(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetY" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->GetY();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_y) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_y(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_y" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->y();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetZ) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetZ(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetZ" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->GetZ();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_z) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_z(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_z" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->z();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetCoordinate) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetCoordinate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetCoordinate" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double *)(*arg1)->GetCoordinate();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetVector) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::vector3 *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    {
      OpenBabel::vector3 &_result_ref = (*arg1)->GetVector();
      result = (OpenBabel::vector3 *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetPartialCharge) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetPartialCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->GetPartialCharge();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetResidue) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (OpenBabel::OBResidue *)(*arg1)->GetResidue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetParent) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetParent" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (OpenBabel::OBMol *)(*arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetNewBondVector) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetNewBondVector(self,v,length);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetNewBondVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolAtomDFSIter_GetNewBondVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    result = (bool)(*arg1)->GetNewBondVector(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetBond(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_GetBond" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->GetBond(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetNextAtom) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetNextAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetNextAtom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (OpenBabel::OBAtom *)(*arg1)->GetNextAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_BeginBonds) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_BeginBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_BeginBonds" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (*arg1)->BeginBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_EndBonds) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_EndBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_EndBonds" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (*arg1)->EndBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_BeginBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_BeginBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_BeginBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->BeginBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_NextBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_NextBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_NextBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->NextBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_BeginNbrAtom) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_BeginNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_BeginNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->BeginNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_NextNbrAtom) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_NextNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_NextNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->NextNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetDistance__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetDistance(self,index);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_GetDistance" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetDistance__SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetDistance(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_GetDistance" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetDistance) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_GetDistance__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_GetDistance__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter_GetDistance'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter_GetAngle__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_GetAngle" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolAtomDFSIter_GetAngle" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetAngle__SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_GetAngle" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMolAtomDFSIter_GetAngle" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetAngle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_GetAngle__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_GetAngle__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter_GetAngle'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter_NewResidue) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_NewResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_NewResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->NewResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_DeleteResidue) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_DeleteResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_DeleteResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->DeleteResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_AddBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_AddBond(self,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_AddBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_AddBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    (*arg1)->AddBond(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_InsertBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *arg3 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_InsertBond(self,i,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_InsertBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMolAtomDFSIter_InsertBond" "', argument " "3"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBond * >(argp3);
    (*arg1)->InsertBond(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_DeleteBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_DeleteBond(self,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_DeleteBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_DeleteBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(*arg1)->DeleteBond(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_ClearBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_ClearBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_ClearBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->ClearBond();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_CountFreeOxygens) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_CountFreeOxygens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_CountFreeOxygens" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->CountFreeOxygens();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_ImplicitHydrogenCount) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_ImplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_ImplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->ImplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_ExplicitHydrogenCount__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool arg2 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_ExplicitHydrogenCount(self,ExcludeIsotopes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_ExplicitHydrogenCount" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_ExplicitHydrogenCount__SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_ExplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_ExplicitHydrogenCount) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_ExplicitHydrogenCount__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_ExplicitHydrogenCount__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter_ExplicitHydrogenCount'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter_MemberOfRingCount) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_MemberOfRingCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_MemberOfRingCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_MemberOfRingSize) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_MemberOfRingSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_MemberOfRingSize" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_CountRingBonds) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_CountRingBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_CountRingBonds" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->CountRingBonds();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SmallestBondAngle) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SmallestBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SmallestBondAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->SmallestBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_AverageBondAngle) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_AverageBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_AverageBondAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (double)(*arg1)->AverageBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_BOSum) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_BOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_BOSum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->BOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_KBOSum) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_KBOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_KBOSum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->KBOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HtoMethyl) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HtoMethyl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HtoMethyl" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HtoMethyl();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_SetHybAndGeom) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetHybAndGeom(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetHybAndGeom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_SetHybAndGeom" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->SetHybAndGeom(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_ForceNoH) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_ForceNoH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_ForceNoH" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    (*arg1)->ForceNoH();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasNoHForced) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasNoHForced(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasNoHForced" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HasNoHForced();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasResidue) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HasResidue();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsHydrogen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsCarbon) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsCarbon(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsCarbon" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsCarbon();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsNitrogen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsNitrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsOxygen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsSulfur) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsSulfur(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsSulfur" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsSulfur();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsPhosphorus) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsPhosphorus(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsPhosphorus" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphorus();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsAromatic) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsInRing) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsInRing();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsInRingSize) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsInRingSize(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsInRingSize" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_IsInRingSize" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->IsInRingSize(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsHeteroatom) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsHeteroatom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsHeteroatom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsHeteroatom();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsNotCorH) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsNotCorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsNotCorH" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsNotCorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsConnected) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsConnected(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsConnected" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_IsConnected" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsConnected(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsOneThree) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsOneThree(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsOneThree" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_IsOneThree" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneThree(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsOneFour) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsOneFour(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsOneFour" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_IsOneFour" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneFour(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsCarboxylOxygen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsCarboxylOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsCarboxylOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsCarboxylOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsPhosphateOxygen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsPhosphateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsPhosphateOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsSulfateOxygen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsSulfateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsSulfateOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsSulfateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsNitroOxygen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsNitroOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsNitroOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsNitroOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsAmideNitrogen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsAmideNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsAmideNitrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsAmideNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsPolarHydrogen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsNonPolarHydrogen) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsNonPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsNonPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsNonPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsAromaticNOxide) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsAromaticNOxide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsAromaticNOxide" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsAromaticNOxide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsChiral) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsChiral" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsChiral();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsAxial) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsAxial(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsAxial" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsAxial();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsClockwise) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsClockwise" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsAntiClockwise) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsAntiClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsAntiClockwise" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsAntiClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsPositiveStereo) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsPositiveStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsNegativeStereo) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsNegativeStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasChiralitySpecified) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasChiralitySpecified(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasChiralitySpecified" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HasChiralitySpecified();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasChiralVolume) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasChiralVolume(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasChiralVolume" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HasChiralVolume();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsHbondAcceptor) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsHbondAcceptor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsHbondAcceptor" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsHbondAcceptor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsHbondDonor) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsHbondDonor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsHbondDonor" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_IsHbondDonorH) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_IsHbondDonorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_IsHbondDonorH" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasAlphaBetaUnsat__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasAlphaBetaUnsat(self,includePandS);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_HasAlphaBetaUnsat" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)(*arg1)->HasAlphaBetaUnsat(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasAlphaBetaUnsat__SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasAlphaBetaUnsat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HasAlphaBetaUnsat();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasAlphaBetaUnsat) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_HasAlphaBetaUnsat__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_HasAlphaBetaUnsat__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter_HasAlphaBetaUnsat'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter_HasBondOfOrder) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasBondOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasBondOfOrder" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_HasBondOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasBondOfOrder(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_CountBondsOfOrder) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_CountBondsOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_CountBondsOfOrder" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_CountBondsOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (int)(*arg1)->CountBondsOfOrder(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasNonSingleBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasNonSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasNonSingleBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HasNonSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasSingleBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasSingleBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HasSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasDoubleBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasDoubleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasDoubleBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HasDoubleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasAromaticBond) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasAromaticBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasAromaticBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (bool)(*arg1)->HasAromaticBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_MatchesSMARTS) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_MatchesSMARTS(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_MatchesSMARTS" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_MatchesSMARTS" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->MatchesSMARTS((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_DoTransformations) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_DoTransformations(self,std::map<std::string,std::string > const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(*arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_ClassDescription) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_ClassDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_ClassDescription" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (char *)(*arg1)->ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasData__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->HasData((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasData__SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_HasData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->HasData((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasData__SWIG_2) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_HasData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_HasData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_HasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_HasData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_HasData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_HasData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter_HasData'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter_DeleteData__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_DeleteData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_DeleteData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_DeleteData__SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_DeleteData(self,OpenBabel::OBGenericData *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_DeleteData__SWIG_2) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_DeleteData(self,std::vector<OpenBabel::OBGenericData * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (*arg1)->DeleteData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_DeleteData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_DeleteData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_DeleteData__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_DeleteData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter_DeleteData'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter_SetData) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_SetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_SetData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_DataSize) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_DataSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_DataSize" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (unsigned int)(*arg1)->DataSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetData__SWIG_0) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomDFSIter_GetData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetData__SWIG_1) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomDFSIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetData__SWIG_2) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomDFSIter_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetData__SWIG_3) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > &_result_ref = (*arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_GetData__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_GetData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_GetData__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomDFSIter_GetData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomDFSIter_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomDFSIter_BeginData) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_BeginData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_BeginData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (*arg1)->BeginData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomDFSIter_EndData) {
  {
    OpenBabel::OBMolAtomDFSIter *arg1 = (OpenBabel::OBMolAtomDFSIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomDFSIter_EndData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomDFSIter_EndData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomDFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomDFSIter * >(argp1);
    result = (*arg1)->EndData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomBFSIter__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBMolAtomBFSIter();");
    }
    result = (OpenBabel::OBMolAtomBFSIter *)new OpenBabel::OBMolAtomBFSIter();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomBFSIter__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBMolAtomBFSIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolAtomBFSIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolAtomBFSIter" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBMolAtomBFSIter *)new OpenBabel::OBMolAtomBFSIter(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomBFSIter__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = 0 ;
    OpenBabel::OBMolAtomBFSIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolAtomBFSIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolAtomBFSIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBMolAtomBFSIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBMolAtomBFSIter *)new OpenBabel::OBMolAtomBFSIter(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomBFSIter__SWIG_3) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = 0 ;
    OpenBabel::OBMolAtomBFSIter *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolAtomBFSIter(ai);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolAtomBFSIter" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBMolAtomBFSIter" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (OpenBabel::OBMolAtomBFSIter *)new OpenBabel::OBMolAtomBFSIter((OpenBabel::OBMolAtomBFSIter const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolAtomBFSIter) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomBFSIter__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomBFSIter__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomBFSIter__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolAtomBFSIter__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBMolAtomBFSIter'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter___plusplus____SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBMolAtomBFSIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter___plusplus__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter___plusplus__" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    {
      OpenBabel::OBMolAtomBFSIter &_result_ref = (arg1)->operator ++();
      result = (OpenBabel::OBMolAtomBFSIter *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter___plusplus____SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    OpenBabel::OBMolAtomBFSIter result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter___plusplus__(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter___plusplus__" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter___plusplus__" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator ++(arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBMolAtomBFSIter(static_cast< const OpenBabel::OBMolAtomBFSIter& >(result))), SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter___plusplus__) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter___plusplus____SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter___plusplus____SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter___plusplus__'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter___deref__) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter___deref__" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (OpenBabel::OBAtom *)((OpenBabel::OBMolAtomBFSIter const *)arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter___ref__) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter___ref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter___ref__" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    {
      OpenBabel::OBAtom &_result_ref = ((OpenBabel::OBMolAtomBFSIter const *)arg1)->operator *();
      result = (OpenBabel::OBAtom *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBMolAtomBFSIter) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBMolAtomBFSIter(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBMolAtomBFSIter" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_Visit_set) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_Visit_set(self,Visit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_Visit_set" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_Visit_set" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    if (arg1) (*arg1)->Visit = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_Visit_get) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_Visit_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_Visit_get" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool) ((*arg1)->Visit);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_Clear) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_Clear" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetIdx) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetHyb) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetHyb(self,hyb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetHyb" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetHyb" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetHyb(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetAtomicNum) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetAtomicNum(self,atomicnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetAtomicNum" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetAtomicNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetIsotope) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetIsotope(self,iso);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetIsotope" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetIsotope" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->SetIsotope(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetImplicitValence) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetImplicitValence(self,val);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetImplicitValence" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetImplicitValence(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IncrementImplicitValence) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IncrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IncrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->IncrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_DecrementImplicitValence) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_DecrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_DecrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->DecrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetFormalCharge) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetFormalCharge(self,fcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetFormalCharge" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetFormalCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetSpinMultiplicity) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    short arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetSpinMultiplicity(self,spin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetSpinMultiplicity" "', argument " "2"" of type '" "short""'");
    } 
    arg2 = static_cast< short >(val2);
    (*arg1)->SetSpinMultiplicity(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetType__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_SetType" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (*arg1)->SetType(arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetType__SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    (*arg1)->SetType(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_SetType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_SetType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter_SetType'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter_SetPartialCharge) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetPartialCharge(self,pcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetPartialCharge" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->SetPartialCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetVector__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetVector(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    (*arg1)->SetVector(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetVector__SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetVector(self,x,y,z);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetVector" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolAtomBFSIter_SetVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBMolAtomBFSIter_SetVector" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    (*arg1)->SetVector(arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetVector__SWIG_2) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->SetVector();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_SetVector__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_SetVector__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_SetVector__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter_SetVector'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter_SetCoordPtr) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double **arg2 = (double **) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetCoordPtr(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_SetCoordPtr" "', argument " "2"" of type '" "double **""'"); 
    }
    arg2 = reinterpret_cast< double ** >(argp2);
    (*arg1)->SetCoordPtr(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetResidue) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBResidue *arg2 = (OpenBabel::OBResidue *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetResidue(self,res);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_SetResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    (*arg1)->SetResidue(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetParent) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetParent(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetParent" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (*arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetAromatic) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->SetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_UnsetAromatic) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_UnsetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_UnsetAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->UnsetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetClockwiseStereo) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->SetClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetAntiClockwiseStereo) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetAntiClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetAntiClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->SetAntiClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetPositiveStereo) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->SetPositiveStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetNegativeStereo) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->SetNegativeStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_UnsetStereo) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_UnsetStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_UnsetStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->UnsetStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetInRing) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetInRing" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->SetInRing();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetChiral) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetChiral" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->SetChiral();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_ClearCoordPtr) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_ClearCoordPtr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_ClearCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->ClearCoordPtr();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetFormalCharge) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetFormalCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (int)(*arg1)->GetFormalCharge();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetAtomicNum) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetAtomicNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetAtomicNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetIsotope) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned short result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetIsotope(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetIsotope" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned short)(*arg1)->GetIsotope();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetSpinMultiplicity) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetSpinMultiplicity(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (int)(*arg1)->GetSpinMultiplicity();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetAtomicMass) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetAtomicMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetAtomicMass" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->GetAtomicMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetExactMass) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetExactMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetExactMass" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->GetExactMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetIdx) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetCoordinateIdx) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetCoordinateIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetCoordinateIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCoordinateIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetCIdx) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetCIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetCIdx" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetValence) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetHyb) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetHyb(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetHyb" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHyb();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetImplicitValence) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetImplicitValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetHvyValence) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetHvyValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetHvyValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHvyValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetHeteroValence) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetHeteroValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetHeteroValence" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHeteroValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetType) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetType" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (char *)(*arg1)->GetType();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetX) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetX(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetX" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->GetX();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_x) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_x(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_x" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->x();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetY) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetY(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetY" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->GetY();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_y) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_y(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_y" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->y();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetZ) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetZ(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetZ" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->GetZ();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_z) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_z(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_z" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->z();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetCoordinate) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetCoordinate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetCoordinate" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double *)(*arg1)->GetCoordinate();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetVector) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::vector3 *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    {
      OpenBabel::vector3 &_result_ref = (*arg1)->GetVector();
      result = (OpenBabel::vector3 *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetPartialCharge) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetPartialCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->GetPartialCharge();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetResidue) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (OpenBabel::OBResidue *)(*arg1)->GetResidue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetParent) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetParent" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (OpenBabel::OBMol *)(*arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetNewBondVector) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetNewBondVector(self,v,length);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetNewBondVector" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolAtomBFSIter_GetNewBondVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    result = (bool)(*arg1)->GetNewBondVector(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetBond(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_GetBond" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->GetBond(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetNextAtom) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetNextAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetNextAtom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (OpenBabel::OBAtom *)(*arg1)->GetNextAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_BeginBonds) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_BeginBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_BeginBonds" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (*arg1)->BeginBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_EndBonds) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_EndBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_EndBonds" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (*arg1)->EndBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_BeginBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_BeginBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_BeginBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->BeginBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_NextBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_NextBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_NextBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->NextBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_BeginNbrAtom) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_BeginNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_BeginNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->BeginNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_NextNbrAtom) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_NextNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_NextNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->NextNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetDistance__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetDistance(self,index);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_GetDistance" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetDistance__SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetDistance(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_GetDistance" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetDistance) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_GetDistance__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_GetDistance__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter_GetDistance'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter_GetAngle__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_GetAngle" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolAtomBFSIter_GetAngle" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetAngle__SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_GetAngle" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMolAtomBFSIter_GetAngle" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetAngle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_GetAngle__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_GetAngle__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter_GetAngle'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter_NewResidue) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_NewResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_NewResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->NewResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_DeleteResidue) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_DeleteResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_DeleteResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->DeleteResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_AddBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_AddBond(self,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_AddBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_AddBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    (*arg1)->AddBond(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_InsertBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *arg3 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_InsertBond(self,i,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_InsertBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMolAtomBFSIter_InsertBond" "', argument " "3"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBond * >(argp3);
    (*arg1)->InsertBond(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_DeleteBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_DeleteBond(self,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_DeleteBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_DeleteBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(*arg1)->DeleteBond(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_ClearBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_ClearBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_ClearBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->ClearBond();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_CountFreeOxygens) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_CountFreeOxygens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_CountFreeOxygens" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->CountFreeOxygens();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_ImplicitHydrogenCount) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_ImplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_ImplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->ImplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_ExplicitHydrogenCount__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool arg2 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_ExplicitHydrogenCount(self,ExcludeIsotopes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_ExplicitHydrogenCount" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_ExplicitHydrogenCount__SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_ExplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_ExplicitHydrogenCount) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_ExplicitHydrogenCount__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_ExplicitHydrogenCount__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter_ExplicitHydrogenCount'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter_MemberOfRingCount) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_MemberOfRingCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_MemberOfRingCount" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_MemberOfRingSize) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_MemberOfRingSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_MemberOfRingSize" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_CountRingBonds) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_CountRingBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_CountRingBonds" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->CountRingBonds();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SmallestBondAngle) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SmallestBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SmallestBondAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->SmallestBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_AverageBondAngle) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_AverageBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_AverageBondAngle" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (double)(*arg1)->AverageBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_BOSum) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_BOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_BOSum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->BOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_KBOSum) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_KBOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_KBOSum" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->KBOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HtoMethyl) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HtoMethyl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HtoMethyl" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HtoMethyl();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_SetHybAndGeom) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetHybAndGeom(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetHybAndGeom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_SetHybAndGeom" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->SetHybAndGeom(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_ForceNoH) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_ForceNoH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_ForceNoH" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    (*arg1)->ForceNoH();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasNoHForced) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasNoHForced(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasNoHForced" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HasNoHForced();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasResidue) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasResidue" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HasResidue();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsHydrogen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsCarbon) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsCarbon(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsCarbon" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsCarbon();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsNitrogen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsNitrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsOxygen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsSulfur) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsSulfur(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsSulfur" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsSulfur();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsPhosphorus) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsPhosphorus(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsPhosphorus" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphorus();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsAromatic) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsInRing) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsInRing();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsInRingSize) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsInRingSize(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsInRingSize" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_IsInRingSize" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->IsInRingSize(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsHeteroatom) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsHeteroatom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsHeteroatom" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsHeteroatom();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsNotCorH) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsNotCorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsNotCorH" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsNotCorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsConnected) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsConnected(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsConnected" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_IsConnected" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsConnected(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsOneThree) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsOneThree(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsOneThree" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_IsOneThree" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneThree(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsOneFour) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsOneFour(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsOneFour" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_IsOneFour" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneFour(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsCarboxylOxygen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsCarboxylOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsCarboxylOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsCarboxylOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsPhosphateOxygen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsPhosphateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsPhosphateOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsSulfateOxygen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsSulfateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsSulfateOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsSulfateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsNitroOxygen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsNitroOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsNitroOxygen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsNitroOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsAmideNitrogen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsAmideNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsAmideNitrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsAmideNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsPolarHydrogen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsNonPolarHydrogen) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsNonPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsNonPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsNonPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsAromaticNOxide) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsAromaticNOxide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsAromaticNOxide" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsAromaticNOxide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsChiral) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsChiral" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsChiral();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsAxial) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsAxial(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsAxial" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsAxial();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsClockwise) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsClockwise" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsAntiClockwise) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsAntiClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsAntiClockwise" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsAntiClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsPositiveStereo) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsPositiveStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsNegativeStereo) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsNegativeStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasChiralitySpecified) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasChiralitySpecified(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasChiralitySpecified" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HasChiralitySpecified();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasChiralVolume) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasChiralVolume(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasChiralVolume" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HasChiralVolume();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsHbondAcceptor) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsHbondAcceptor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsHbondAcceptor" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsHbondAcceptor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsHbondDonor) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsHbondDonor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsHbondDonor" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_IsHbondDonorH) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_IsHbondDonorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_IsHbondDonorH" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasAlphaBetaUnsat__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasAlphaBetaUnsat(self,includePandS);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_HasAlphaBetaUnsat" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)(*arg1)->HasAlphaBetaUnsat(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasAlphaBetaUnsat__SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasAlphaBetaUnsat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HasAlphaBetaUnsat();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasAlphaBetaUnsat) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_HasAlphaBetaUnsat__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_HasAlphaBetaUnsat__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter_HasAlphaBetaUnsat'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter_HasBondOfOrder) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasBondOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasBondOfOrder" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_HasBondOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasBondOfOrder(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_CountBondsOfOrder) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_CountBondsOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_CountBondsOfOrder" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_CountBondsOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (int)(*arg1)->CountBondsOfOrder(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasNonSingleBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasNonSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasNonSingleBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HasNonSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasSingleBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasSingleBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HasSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasDoubleBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasDoubleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasDoubleBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HasDoubleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasAromaticBond) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasAromaticBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasAromaticBond" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (bool)(*arg1)->HasAromaticBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_MatchesSMARTS) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_MatchesSMARTS(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_MatchesSMARTS" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_MatchesSMARTS" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->MatchesSMARTS((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_DoTransformations) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_DoTransformations(self,std::map<std::string,std::string > const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(*arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_ClassDescription) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_ClassDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_ClassDescription" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (char *)(*arg1)->ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasData__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->HasData((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasData__SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_HasData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->HasData((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasData__SWIG_2) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_HasData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_HasData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_HasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_HasData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_HasData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_HasData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter_HasData'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter_DeleteData__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_DeleteData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_DeleteData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_DeleteData__SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_DeleteData(self,OpenBabel::OBGenericData *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_DeleteData__SWIG_2) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_DeleteData(self,std::vector<OpenBabel::OBGenericData * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (*arg1)->DeleteData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_DeleteData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_DeleteData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_DeleteData__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_DeleteData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter_DeleteData'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter_SetData) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_SetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_SetData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_DataSize) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_DataSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_DataSize" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (unsigned int)(*arg1)->DataSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetData__SWIG_0) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolAtomBFSIter_GetData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetData__SWIG_1) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolAtomBFSIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetData__SWIG_2) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolAtomBFSIter_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetData__SWIG_3) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > &_result_ref = (*arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_GetData__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_GetData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_GetData__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolAtomBFSIter_GetData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolAtomBFSIter_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBMolAtomBFSIter_BeginData) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_BeginData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_BeginData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (*arg1)->BeginData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolAtomBFSIter_EndData) {
  {
    OpenBabel::OBMolAtomBFSIter *arg1 = (OpenBabel::OBMolAtomBFSIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolAtomBFSIter_EndData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolAtomBFSIter_EndData" "', argument " "1"" of type '" "OpenBabel::OBMolAtomBFSIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolAtomBFSIter * >(argp1);
    result = (*arg1)->EndData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolBondIter__SWIG_0) {
  {
    OpenBabel::OBMolBondIter *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBMolBondIter();");
    }
    result = (OpenBabel::OBMolBondIter *)new OpenBabel::OBMolBondIter();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolBondIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolBondIter__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBMolBondIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolBondIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolBondIter" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBMolBondIter *)new OpenBabel::OBMolBondIter(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolBondIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolBondIter__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = 0 ;
    OpenBabel::OBMolBondIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolBondIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolBondIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBMolBondIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBMolBondIter *)new OpenBabel::OBMolBondIter(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolBondIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolBondIter__SWIG_3) {
  {
    OpenBabel::OBMolBondIter *arg1 = 0 ;
    OpenBabel::OBMolBondIter *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBMolBondIter(bi);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMolBondIter,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBMolBondIter" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBMolBondIter" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (OpenBabel::OBMolBondIter *)new OpenBabel::OBMolBondIter((OpenBabel::OBMolBondIter const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolBondIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBMolBondIter) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolBondIter__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolBondIter__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolBondIter__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBMolBondIter__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBMolBondIter'");
  XSRETURN(0);
}


XS(_wrap_OBMolBondIter_good) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_good(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_good" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)((OpenBabel::OBMolBondIter const *)arg1)->operator bool();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_inc__SWIG_0) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBMolBondIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_inc(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_inc" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    {
      OpenBabel::OBMolBondIter &_result_ref = (arg1)->operator ++();
      result = (OpenBabel::OBMolBondIter *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_inc__SWIG_1) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    int arg2 ;
    OpenBabel::OBMolBondIter result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_inc(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_inc" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolBondIter_inc" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator ++(arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBMolBondIter(static_cast< const OpenBabel::OBMolBondIter& >(result))), SWIGTYPE_p_OpenBabel__OBMolBondIter, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_inc) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_inc__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_inc__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolBondIter_inc'");
  XSRETURN(0);
}


XS(_wrap_OBMolBondIter_deref) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_deref(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_deref" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (OpenBabel::OBBond *)((OpenBabel::OBMolBondIter const *)arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter___ref__) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter___ref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter___ref__" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    {
      OpenBabel::OBBond &_result_ref = ((OpenBabel::OBMolBondIter const *)arg1)->operator *();
      result = (OpenBabel::OBBond *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBMolBondIter) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBMolBondIter(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBMolBondIter" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_Visit_set) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_Visit_set(self,Visit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_Visit_set" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolBondIter_Visit_set" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    if (arg1) (*arg1)->Visit = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_Visit_get) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_Visit_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_Visit_get" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool) ((*arg1)->Visit);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetIdx) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolBondIter_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetBO) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_SetBO(self,order);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetBO" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolBondIter_SetBO" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetBO(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetBondOrder) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_SetBondOrder(self,order);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetBondOrder" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolBondIter_SetBondOrder" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetBondOrder(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetBegin) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_SetBegin(self,begin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetBegin" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_SetBegin" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (*arg1)->SetBegin(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetEnd) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_SetEnd(self,end);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetEnd" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_SetEnd" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (*arg1)->SetEnd(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetParent) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_SetParent(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetParent" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (*arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetLength) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    double arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBMolBondIter_SetLength(self,fixed,length);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetLength" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_SetLength" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBMolBondIter_SetLength" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    (*arg1)->SetLength(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_Set) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    int arg2 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg4 = (OpenBabel::OBAtom *) 0 ;
    int arg5 ;
    int arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: OBMolBondIter_Set(self,index,begin,end,order,flags);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_Set" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolBondIter_Set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBMolBondIter_Set" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBMolBondIter_Set" "', argument " "4"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::OBAtom * >(argp4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OBMolBondIter_Set" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "OBMolBondIter_Set" "', argument " "6"" of type '" "int""'");
    } 
    arg6 = static_cast< int >(val6);
    (*arg1)->Set(arg2,arg3,arg4,arg5,arg6);
    
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetKSingle) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetKSingle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetKSingle" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetKSingle();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetKDouble) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetKDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetKDouble" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetKDouble();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetKTriple) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetKTriple(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetKTriple" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetKTriple();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetAromatic) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetHash) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetHash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetHash" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetHash();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetWedge) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetWedge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetWedge" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetWedge();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetUp) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetUp" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetUp();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetDown) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetDown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetDown" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetDown();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetInRing) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetInRing" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetInRing();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_SetClosure) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_SetClosure(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetClosure" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->SetClosure();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_UnsetHash) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_UnsetHash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_UnsetHash" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->UnsetHash();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_UnsetWedge) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_UnsetWedge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_UnsetWedge" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->UnsetWedge();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_UnsetUp) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_UnsetUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_UnsetUp" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->UnsetUp();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_UnsetDown) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_UnsetDown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_UnsetDown" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->UnsetDown();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_UnsetAromatic) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_UnsetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_UnsetAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->UnsetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_UnsetKekule) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_UnsetKekule(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_UnsetKekule" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    (*arg1)->UnsetKekule();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetIdx) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetBO) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetBO(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetBO" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetBO();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetBondOrder) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetBondOrder(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetBondOrder" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetBondOrder();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetFlags) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetFlags(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetFlags" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetFlags();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetBeginAtomIdx) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetBeginAtomIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetBeginAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetBeginAtomIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetEndAtomIdx) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetEndAtomIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetEndAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetEndAtomIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetBeginAtom) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetBeginAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetBeginAtom" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (OpenBabel::OBAtom *)(*arg1)->GetBeginAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetEndAtom) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetEndAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetEndAtom" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (OpenBabel::OBAtom *)(*arg1)->GetEndAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetNbrAtom) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_GetNbrAtom(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_GetNbrAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->GetNbrAtom(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetParent) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetParent" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (OpenBabel::OBMol *)(*arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetEquibLength) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetEquibLength(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetEquibLength" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (double)(*arg1)->GetEquibLength();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetLength) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetLength(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetLength" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (double)(*arg1)->GetLength();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetNbrAtomIdx) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_GetNbrAtomIdx(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetNbrAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_GetNbrAtomIdx" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (int)(*arg1)->GetNbrAtomIdx(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsAromatic) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsInRing) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsInRing();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsRotor) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsRotor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsRotor" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsRotor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsAmide) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsAmide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsAmide" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsAmide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsPrimaryAmide) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsPrimaryAmide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsPrimaryAmide" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsPrimaryAmide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsSecondaryAmide) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsSecondaryAmide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsSecondaryAmide" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsSecondaryAmide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsEster) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsEster(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsEster" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsEster();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsCarbonyl) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsCarbonyl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsCarbonyl" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsCarbonyl();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsSingle) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsSingle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsSingle" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsSingle();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsDouble) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsDouble" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsDouble();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsTriple) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsTriple(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsTriple" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsTriple();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsKSingle) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsKSingle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsKSingle" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsKSingle();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsKDouble) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsKDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsKDouble" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsKDouble();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsKTriple) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsKTriple(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsKTriple" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsKTriple();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsClosure) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsClosure(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsClosure" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsClosure();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsUp) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsUp" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsUp();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsDown) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsDown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsDown" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsDown();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsWedge) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsWedge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsWedge" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsWedge();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsHash) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsHash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsHash" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsHash();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_IsDoubleBondGeometry) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_IsDoubleBondGeometry(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_IsDoubleBondGeometry" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (bool)(*arg1)->IsDoubleBondGeometry();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_DoTransformations) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_DoTransformations(self,std::map<std::string,std::string > const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(*arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_ClassDescription) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_ClassDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_ClassDescription" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (char *)(*arg1)->ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_HasData__SWIG_0) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_HasData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolBondIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->HasData((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_HasData__SWIG_1) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_HasData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_HasData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->HasData((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_HasData__SWIG_2) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_HasData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolBondIter_HasData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_HasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_HasData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_HasData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_HasData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolBondIter_HasData'");
  XSRETURN(0);
}


XS(_wrap_OBMolBondIter_DeleteData__SWIG_0) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_DeleteData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolBondIter_DeleteData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_DeleteData__SWIG_1) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_DeleteData(self,OpenBabel::OBGenericData *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_DeleteData__SWIG_2) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_DeleteData(self,std::vector<OpenBabel::OBGenericData * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolBondIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (*arg1)->DeleteData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_DeleteData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_DeleteData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_DeleteData__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_DeleteData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolBondIter_DeleteData'");
  XSRETURN(0);
}


XS(_wrap_OBMolBondIter_SetData) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_SetData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_SetData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_DataSize) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_DataSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_DataSize" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (unsigned int)(*arg1)->DataSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetData__SWIG_0) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_GetData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBMolBondIter_GetData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetData__SWIG_1) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_GetData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBMolBondIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetData__SWIG_2) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBMolBondIter_GetData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBMolBondIter_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetData__SWIG_3) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > &_result_ref = (*arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMolBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_GetData__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_GetData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_GetData__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBMolBondIter_GetData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBMolBondIter_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBMolBondIter_BeginData) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_BeginData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_BeginData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (*arg1)->BeginData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBMolBondIter_EndData) {
  {
    OpenBabel::OBMolBondIter *arg1 = (OpenBabel::OBMolBondIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBMolBondIter_EndData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMolBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBMolBondIter_EndData" "', argument " "1"" of type '" "OpenBabel::OBMolBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMolBondIter * >(argp1);
    result = (*arg1)->EndData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomAtomIter__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBAtomAtomIter();");
    }
    result = (OpenBabel::OBAtomAtomIter *)new OpenBabel::OBAtomAtomIter();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomAtomIter__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtomAtomIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBAtomAtomIter(atm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBAtomAtomIter" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (OpenBabel::OBAtomAtomIter *)new OpenBabel::OBAtomAtomIter(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomAtomIter__SWIG_2) {
  {
    OpenBabel::OBAtom *arg1 = 0 ;
    OpenBabel::OBAtomAtomIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBAtomAtomIter(atm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBAtom,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBAtomAtomIter" "', argument " "1"" of type '" "OpenBabel::OBAtom &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBAtomAtomIter" "', argument " "1"" of type '" "OpenBabel::OBAtom &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (OpenBabel::OBAtomAtomIter *)new OpenBabel::OBAtomAtomIter(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomAtomIter__SWIG_3) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = 0 ;
    OpenBabel::OBAtomAtomIter *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBAtomAtomIter(ai);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBAtomAtomIter,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBAtomAtomIter" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBAtomAtomIter" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (OpenBabel::OBAtomAtomIter *)new OpenBabel::OBAtomAtomIter((OpenBabel::OBAtomAtomIter const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomAtomIter) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBAtomAtomIter__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBAtomAtomIter__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBAtomAtomIter__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBAtomAtomIter__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBAtomAtomIter'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_good) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_good(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_good" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)((OpenBabel::OBAtomAtomIter const *)arg1)->operator bool();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_inc__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtomAtomIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_inc(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_inc" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    {
      OpenBabel::OBAtomAtomIter &_result_ref = (arg1)->operator ++();
      result = (OpenBabel::OBAtomAtomIter *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_inc__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    OpenBabel::OBAtomAtomIter result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_inc(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_inc" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_inc" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator ++(arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBAtomAtomIter(static_cast< const OpenBabel::OBAtomAtomIter& >(result))), SWIGTYPE_p_OpenBabel__OBAtomAtomIter, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_inc) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_inc__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_inc__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_inc'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_deref) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_deref(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_deref" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (OpenBabel::OBAtom *)((OpenBabel::OBAtomAtomIter const *)arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter___ref__) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter___ref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter___ref__" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    {
      OpenBabel::OBAtom &_result_ref = ((OpenBabel::OBAtomAtomIter const *)arg1)->operator *();
      result = (OpenBabel::OBAtom *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBAtomAtomIter) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBAtomAtomIter(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBAtomAtomIter" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_Visit_set) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_Visit_set(self,Visit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_Visit_set" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_Visit_set" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    if (arg1) (*arg1)->Visit = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_Visit_get) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_Visit_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_Visit_get" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool) ((*arg1)->Visit);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_Clear) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_Clear" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetIdx) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetHyb) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetHyb(self,hyb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetHyb" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetHyb" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetHyb(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetAtomicNum) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetAtomicNum(self,atomicnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetAtomicNum" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetAtomicNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetIsotope) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetIsotope(self,iso);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetIsotope" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetIsotope" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->SetIsotope(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetImplicitValence) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetImplicitValence(self,val);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetImplicitValence" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetImplicitValence(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IncrementImplicitValence) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IncrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IncrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->IncrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_DecrementImplicitValence) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_DecrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_DecrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->DecrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetFormalCharge) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetFormalCharge(self,fcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetFormalCharge" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetFormalCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetSpinMultiplicity) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    short arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetSpinMultiplicity(self,spin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetSpinMultiplicity" "', argument " "2"" of type '" "short""'");
    } 
    arg2 = static_cast< short >(val2);
    (*arg1)->SetSpinMultiplicity(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetType__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_SetType" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (*arg1)->SetType(arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetType__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    (*arg1)->SetType(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_SetType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_SetType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_SetType'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_SetPartialCharge) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetPartialCharge(self,pcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetPartialCharge" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->SetPartialCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetVector__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetVector(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    (*arg1)->SetVector(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetVector__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetVector(self,x,y,z);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetVector" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBAtomAtomIter_SetVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBAtomAtomIter_SetVector" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    (*arg1)->SetVector(arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetVector__SWIG_2) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->SetVector();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_SetVector__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_SetVector__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_SetVector__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_SetVector'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_SetCoordPtr) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double **arg2 = (double **) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetCoordPtr(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_SetCoordPtr" "', argument " "2"" of type '" "double **""'"); 
    }
    arg2 = reinterpret_cast< double ** >(argp2);
    (*arg1)->SetCoordPtr(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetResidue) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBResidue *arg2 = (OpenBabel::OBResidue *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetResidue(self,res);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetResidue" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_SetResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    (*arg1)->SetResidue(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetParent) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetParent(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetParent" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (*arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetAromatic) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetAromatic" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->SetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_UnsetAromatic) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_UnsetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_UnsetAromatic" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->UnsetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetClockwiseStereo) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->SetClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetAntiClockwiseStereo) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetAntiClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetAntiClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->SetAntiClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetPositiveStereo) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->SetPositiveStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetNegativeStereo) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->SetNegativeStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_UnsetStereo) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_UnsetStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_UnsetStereo" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->UnsetStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetInRing) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetInRing" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->SetInRing();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetChiral) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetChiral" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->SetChiral();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_ClearCoordPtr) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_ClearCoordPtr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_ClearCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->ClearCoordPtr();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetFormalCharge) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetFormalCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (int)(*arg1)->GetFormalCharge();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetAtomicNum) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetAtomicNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetAtomicNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetIsotope) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned short result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetIsotope(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetIsotope" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned short)(*arg1)->GetIsotope();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetSpinMultiplicity) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetSpinMultiplicity(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (int)(*arg1)->GetSpinMultiplicity();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetAtomicMass) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetAtomicMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetAtomicMass" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->GetAtomicMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetExactMass) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetExactMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetExactMass" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->GetExactMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetIdx) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetCoordinateIdx) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetCoordinateIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetCoordinateIdx" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCoordinateIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetCIdx) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetCIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetCIdx" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetValence) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetValence" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetHyb) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetHyb(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetHyb" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHyb();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetImplicitValence) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetImplicitValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetHvyValence) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetHvyValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetHvyValence" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHvyValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetHeteroValence) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetHeteroValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetHeteroValence" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHeteroValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetType) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetType" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (char *)(*arg1)->GetType();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetX) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetX(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetX" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->GetX();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_x) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_x(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_x" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->x();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetY) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetY(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetY" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->GetY();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_y) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_y(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_y" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->y();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetZ) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetZ(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetZ" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->GetZ();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_z) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_z(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_z" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->z();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetCoordinate) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetCoordinate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetCoordinate" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double *)(*arg1)->GetCoordinate();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetVector) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::vector3 *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetVector" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    {
      OpenBabel::vector3 &_result_ref = (*arg1)->GetVector();
      result = (OpenBabel::vector3 *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetPartialCharge) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetPartialCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->GetPartialCharge();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetResidue) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetResidue" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (OpenBabel::OBResidue *)(*arg1)->GetResidue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetParent) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetParent" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (OpenBabel::OBMol *)(*arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetNewBondVector) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetNewBondVector(self,v,length);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetNewBondVector" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBAtomAtomIter_GetNewBondVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    result = (bool)(*arg1)->GetNewBondVector(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetBond(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_GetBond" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->GetBond(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetNextAtom) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetNextAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetNextAtom" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (OpenBabel::OBAtom *)(*arg1)->GetNextAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_BeginBonds) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_BeginBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_BeginBonds" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (*arg1)->BeginBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_EndBonds) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_EndBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_EndBonds" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (*arg1)->EndBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_BeginBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_BeginBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_BeginBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->BeginBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_NextBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_NextBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_NextBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->NextBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_BeginNbrAtom) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_BeginNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_BeginNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->BeginNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_NextNbrAtom) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_NextNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_NextNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->NextNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetDistance__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetDistance(self,index);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_GetDistance" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetDistance__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetDistance(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_GetDistance" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetDistance) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_GetDistance__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_GetDistance__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_GetDistance'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_GetAngle__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_GetAngle" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBAtomAtomIter_GetAngle" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetAngle__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_GetAngle" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBAtomAtomIter_GetAngle" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetAngle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_GetAngle__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_GetAngle__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_GetAngle'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_NewResidue) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_NewResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_NewResidue" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->NewResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_DeleteResidue) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_DeleteResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_DeleteResidue" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->DeleteResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_AddBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_AddBond(self,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_AddBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_AddBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    (*arg1)->AddBond(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_InsertBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *arg3 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAtomAtomIter_InsertBond(self,i,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_InsertBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBAtomAtomIter_InsertBond" "', argument " "3"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBond * >(argp3);
    (*arg1)->InsertBond(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_DeleteBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_DeleteBond(self,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_DeleteBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_DeleteBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(*arg1)->DeleteBond(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_ClearBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_ClearBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_ClearBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->ClearBond();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_CountFreeOxygens) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_CountFreeOxygens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_CountFreeOxygens" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->CountFreeOxygens();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_ImplicitHydrogenCount) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_ImplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_ImplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->ImplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_ExplicitHydrogenCount__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool arg2 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_ExplicitHydrogenCount(self,ExcludeIsotopes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_ExplicitHydrogenCount" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_ExplicitHydrogenCount__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_ExplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_ExplicitHydrogenCount) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_ExplicitHydrogenCount__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_ExplicitHydrogenCount__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_ExplicitHydrogenCount'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_MemberOfRingCount) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_MemberOfRingCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_MemberOfRingCount" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_MemberOfRingSize) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_MemberOfRingSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_MemberOfRingSize" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_CountRingBonds) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_CountRingBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_CountRingBonds" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->CountRingBonds();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SmallestBondAngle) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_SmallestBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SmallestBondAngle" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->SmallestBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_AverageBondAngle) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_AverageBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_AverageBondAngle" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (double)(*arg1)->AverageBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_BOSum) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_BOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_BOSum" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->BOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_KBOSum) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_KBOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_KBOSum" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->KBOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HtoMethyl) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HtoMethyl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HtoMethyl" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HtoMethyl();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_SetHybAndGeom) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetHybAndGeom(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetHybAndGeom" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_SetHybAndGeom" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->SetHybAndGeom(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_ForceNoH) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_ForceNoH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_ForceNoH" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    (*arg1)->ForceNoH();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasNoHForced) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasNoHForced(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasNoHForced" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HasNoHForced();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasResidue) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasResidue" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HasResidue();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsHydrogen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsHydrogen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsCarbon) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsCarbon(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsCarbon" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsCarbon();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsNitrogen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsNitrogen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsOxygen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsSulfur) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsSulfur(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsSulfur" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsSulfur();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsPhosphorus) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsPhosphorus(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsPhosphorus" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphorus();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsAromatic) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsInRing) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsInRing();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsInRingSize) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsInRingSize(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsInRingSize" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_IsInRingSize" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->IsInRingSize(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsHeteroatom) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsHeteroatom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsHeteroatom" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHeteroatom();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsNotCorH) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsNotCorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsNotCorH" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNotCorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsConnected) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsConnected(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsConnected" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_IsConnected" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsConnected(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsOneThree) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsOneThree(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsOneThree" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_IsOneThree" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneThree(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsOneFour) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsOneFour(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsOneFour" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_IsOneFour" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneFour(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsCarboxylOxygen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsCarboxylOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsCarboxylOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsCarboxylOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsPhosphateOxygen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsPhosphateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsPhosphateOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsSulfateOxygen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsSulfateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsSulfateOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsSulfateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsNitroOxygen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsNitroOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsNitroOxygen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNitroOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsAmideNitrogen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsAmideNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsAmideNitrogen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAmideNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsPolarHydrogen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsNonPolarHydrogen) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsNonPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsNonPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNonPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsAromaticNOxide) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsAromaticNOxide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsAromaticNOxide" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAromaticNOxide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsChiral) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsChiral" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsChiral();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsAxial) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsAxial(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsAxial" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAxial();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsClockwise) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsClockwise" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsAntiClockwise) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsAntiClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsAntiClockwise" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAntiClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsPositiveStereo) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPositiveStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsNegativeStereo) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNegativeStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasChiralitySpecified) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasChiralitySpecified(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasChiralitySpecified" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HasChiralitySpecified();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasChiralVolume) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasChiralVolume(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasChiralVolume" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HasChiralVolume();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsHbondAcceptor) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsHbondAcceptor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsHbondAcceptor" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHbondAcceptor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsHbondDonor) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsHbondDonor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsHbondDonor" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_IsHbondDonorH) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_IsHbondDonorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_IsHbondDonorH" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasAlphaBetaUnsat__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasAlphaBetaUnsat(self,includePandS);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_HasAlphaBetaUnsat" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)(*arg1)->HasAlphaBetaUnsat(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasAlphaBetaUnsat__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasAlphaBetaUnsat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HasAlphaBetaUnsat();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasAlphaBetaUnsat) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_HasAlphaBetaUnsat__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_HasAlphaBetaUnsat__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_HasAlphaBetaUnsat'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_HasBondOfOrder) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasBondOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasBondOfOrder" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_HasBondOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasBondOfOrder(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_CountBondsOfOrder) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_CountBondsOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_CountBondsOfOrder" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_CountBondsOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (int)(*arg1)->CountBondsOfOrder(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasNonSingleBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasNonSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasNonSingleBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HasNonSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasSingleBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasSingleBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HasSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasDoubleBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasDoubleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasDoubleBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HasDoubleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasAromaticBond) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasAromaticBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasAromaticBond" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (bool)(*arg1)->HasAromaticBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_MatchesSMARTS) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_MatchesSMARTS(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_MatchesSMARTS" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_MatchesSMARTS" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->MatchesSMARTS((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_DoTransformations) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_DoTransformations(self,std::map<std::string,std::string > const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(*arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_ClassDescription) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_ClassDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_ClassDescription" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (char *)(*arg1)->ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasData__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->HasData((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasData__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_HasData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->HasData((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasData__SWIG_2) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_HasData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_HasData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_HasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_HasData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_HasData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_HasData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_HasData'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_DeleteData__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_DeleteData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_DeleteData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_DeleteData__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_DeleteData(self,OpenBabel::OBGenericData *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_DeleteData__SWIG_2) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_DeleteData(self,std::vector<OpenBabel::OBGenericData * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (*arg1)->DeleteData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_DeleteData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_DeleteData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_DeleteData__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_DeleteData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_DeleteData'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_SetData) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_SetData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_SetData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_DataSize) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_DataSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_DataSize" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->DataSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetData__SWIG_0) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomAtomIter_GetData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetData__SWIG_1) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomAtomIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetData__SWIG_2) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomAtomIter_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetData__SWIG_3) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > &_result_ref = (*arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_GetData__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_GetData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_GetData__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomAtomIter_GetData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomAtomIter_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBAtomAtomIter_BeginData) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_BeginData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_BeginData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (*arg1)->BeginData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomAtomIter_EndData) {
  {
    OpenBabel::OBAtomAtomIter *arg1 = (OpenBabel::OBAtomAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomAtomIter_EndData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomAtomIter_EndData" "', argument " "1"" of type '" "OpenBabel::OBAtomAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomAtomIter * >(argp1);
    result = (*arg1)->EndData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomBondIter__SWIG_0) {
  {
    OpenBabel::OBAtomBondIter *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBAtomBondIter();");
    }
    result = (OpenBabel::OBAtomBondIter *)new OpenBabel::OBAtomBondIter();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomBondIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomBondIter__SWIG_1) {
  {
    OpenBabel::OBAtom *arg1 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtomBondIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBAtomBondIter(atm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBAtomBondIter" "', argument " "1"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (OpenBabel::OBAtomBondIter *)new OpenBabel::OBAtomBondIter(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomBondIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomBondIter__SWIG_2) {
  {
    OpenBabel::OBAtom *arg1 = 0 ;
    OpenBabel::OBAtomBondIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBAtomBondIter(atm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBAtom,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBAtomBondIter" "', argument " "1"" of type '" "OpenBabel::OBAtom &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBAtomBondIter" "', argument " "1"" of type '" "OpenBabel::OBAtom &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtom * >(argp1);
    result = (OpenBabel::OBAtomBondIter *)new OpenBabel::OBAtomBondIter(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomBondIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomBondIter__SWIG_3) {
  {
    OpenBabel::OBAtomBondIter *arg1 = 0 ;
    OpenBabel::OBAtomBondIter *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBAtomBondIter(bi);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBAtomBondIter,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBAtomBondIter" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBAtomBondIter" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (OpenBabel::OBAtomBondIter *)new OpenBabel::OBAtomBondIter((OpenBabel::OBAtomBondIter const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomBondIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBAtomBondIter) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBAtomBondIter__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBAtomBondIter__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBAtomBondIter__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBAtomBondIter__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBAtomBondIter'");
  XSRETURN(0);
}


XS(_wrap_OBAtomBondIter_good) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_good(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_good" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)((OpenBabel::OBAtomBondIter const *)arg1)->operator bool();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_inc__SWIG_0) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBAtomBondIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_inc(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_inc" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    {
      OpenBabel::OBAtomBondIter &_result_ref = (arg1)->operator ++();
      result = (OpenBabel::OBAtomBondIter *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_inc__SWIG_1) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    int arg2 ;
    OpenBabel::OBAtomBondIter result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_inc(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_inc" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomBondIter_inc" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator ++(arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBAtomBondIter(static_cast< const OpenBabel::OBAtomBondIter& >(result))), SWIGTYPE_p_OpenBabel__OBAtomBondIter, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_inc) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_inc__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_inc__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomBondIter_inc'");
  XSRETURN(0);
}


XS(_wrap_OBAtomBondIter_deref) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_deref(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_deref" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (OpenBabel::OBBond *)((OpenBabel::OBAtomBondIter const *)arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter___ref__) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter___ref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter___ref__" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    {
      OpenBabel::OBBond &_result_ref = ((OpenBabel::OBAtomBondIter const *)arg1)->operator *();
      result = (OpenBabel::OBBond *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBAtomBondIter) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBAtomBondIter(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBAtomBondIter" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_Visit_set) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_Visit_set(self,Visit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_Visit_set" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomBondIter_Visit_set" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    if (arg1) (*arg1)->Visit = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_Visit_get) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_Visit_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_Visit_get" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool) ((*arg1)->Visit);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetIdx) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomBondIter_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetBO) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_SetBO(self,order);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetBO" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomBondIter_SetBO" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetBO(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetBondOrder) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_SetBondOrder(self,order);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetBondOrder" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomBondIter_SetBondOrder" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetBondOrder(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetBegin) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_SetBegin(self,begin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetBegin" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_SetBegin" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (*arg1)->SetBegin(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetEnd) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_SetEnd(self,end);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetEnd" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_SetEnd" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (*arg1)->SetEnd(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetParent) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_SetParent(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetParent" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (*arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetLength) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    double arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBAtomBondIter_SetLength(self,fixed,length);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetLength" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_SetLength" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBAtomBondIter_SetLength" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    (*arg1)->SetLength(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_Set) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    int arg2 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg4 = (OpenBabel::OBAtom *) 0 ;
    int arg5 ;
    int arg6 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    void *argp4 = 0 ;
    int res4 = 0 ;
    int val5 ;
    int ecode5 = 0 ;
    int val6 ;
    int ecode6 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 6) || (items > 6)) {
      SWIG_croak("Usage: OBAtomBondIter_Set(self,index,begin,end,order,flags);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_Set" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomBondIter_Set" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBAtomBondIter_Set" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    res4 = SWIG_ConvertPtr(ST(3), &argp4,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "OBAtomBondIter_Set" "', argument " "4"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg4 = reinterpret_cast< OpenBabel::OBAtom * >(argp4);
    ecode5 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(4), &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "OBAtomBondIter_Set" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
    ecode6 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(5), &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "OBAtomBondIter_Set" "', argument " "6"" of type '" "int""'");
    } 
    arg6 = static_cast< int >(val6);
    (*arg1)->Set(arg2,arg3,arg4,arg5,arg6);
    
    
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetKSingle) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetKSingle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetKSingle" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetKSingle();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetKDouble) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetKDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetKDouble" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetKDouble();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetKTriple) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetKTriple(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetKTriple" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetKTriple();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetAromatic) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetAromatic" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetHash) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetHash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetHash" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetHash();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetWedge) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetWedge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetWedge" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetWedge();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetUp) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetUp" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetUp();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetDown) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetDown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetDown" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetDown();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetInRing) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetInRing" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetInRing();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_SetClosure) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_SetClosure(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetClosure" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->SetClosure();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_UnsetHash) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_UnsetHash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_UnsetHash" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->UnsetHash();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_UnsetWedge) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_UnsetWedge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_UnsetWedge" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->UnsetWedge();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_UnsetUp) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_UnsetUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_UnsetUp" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->UnsetUp();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_UnsetDown) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_UnsetDown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_UnsetDown" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->UnsetDown();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_UnsetAromatic) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_UnsetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_UnsetAromatic" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->UnsetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_UnsetKekule) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_UnsetKekule(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_UnsetKekule" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    (*arg1)->UnsetKekule();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetIdx) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetBO) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetBO(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetBO" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetBO();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetBondOrder) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetBondOrder(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetBondOrder" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetBondOrder();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetFlags) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetFlags(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetFlags" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetFlags();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetBeginAtomIdx) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetBeginAtomIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetBeginAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetBeginAtomIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetEndAtomIdx) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetEndAtomIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetEndAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (unsigned int)(*arg1)->GetEndAtomIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetBeginAtom) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetBeginAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetBeginAtom" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (OpenBabel::OBAtom *)(*arg1)->GetBeginAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetEndAtom) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetEndAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetEndAtom" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (OpenBabel::OBAtom *)(*arg1)->GetEndAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetNbrAtom) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_GetNbrAtom(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_GetNbrAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->GetNbrAtom(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetParent) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetParent" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (OpenBabel::OBMol *)(*arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetEquibLength) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetEquibLength(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetEquibLength" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (double)(*arg1)->GetEquibLength();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetLength) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetLength(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetLength" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (double)(*arg1)->GetLength();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetNbrAtomIdx) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_GetNbrAtomIdx(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetNbrAtomIdx" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_GetNbrAtomIdx" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (int)(*arg1)->GetNbrAtomIdx(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsAromatic) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsInRing) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsInRing();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsRotor) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsRotor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsRotor" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsRotor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsAmide) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsAmide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsAmide" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsAmide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsPrimaryAmide) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsPrimaryAmide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsPrimaryAmide" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsPrimaryAmide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsSecondaryAmide) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsSecondaryAmide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsSecondaryAmide" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsSecondaryAmide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsEster) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsEster(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsEster" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsEster();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsCarbonyl) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsCarbonyl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsCarbonyl" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsCarbonyl();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsSingle) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsSingle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsSingle" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsSingle();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsDouble) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsDouble" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsDouble();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsTriple) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsTriple(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsTriple" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsTriple();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsKSingle) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsKSingle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsKSingle" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsKSingle();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsKDouble) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsKDouble(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsKDouble" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsKDouble();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsKTriple) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsKTriple(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsKTriple" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsKTriple();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsClosure) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsClosure(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsClosure" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsClosure();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsUp) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsUp(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsUp" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsUp();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsDown) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsDown(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsDown" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsDown();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsWedge) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsWedge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsWedge" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsWedge();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsHash) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsHash(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsHash" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsHash();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_IsDoubleBondGeometry) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_IsDoubleBondGeometry(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_IsDoubleBondGeometry" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (bool)(*arg1)->IsDoubleBondGeometry();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_DoTransformations) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_DoTransformations(self,std::map<std::string,std::string > const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(*arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_ClassDescription) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_ClassDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_ClassDescription" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (char *)(*arg1)->ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_HasData__SWIG_0) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_HasData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomBondIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->HasData((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_HasData__SWIG_1) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_HasData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_HasData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->HasData((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_HasData__SWIG_2) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_HasData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomBondIter_HasData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_HasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_HasData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_HasData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_HasData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomBondIter_HasData'");
  XSRETURN(0);
}


XS(_wrap_OBAtomBondIter_DeleteData__SWIG_0) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_DeleteData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomBondIter_DeleteData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_DeleteData__SWIG_1) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_DeleteData(self,OpenBabel::OBGenericData *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_DeleteData__SWIG_2) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_DeleteData(self,std::vector<OpenBabel::OBGenericData * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomBondIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (*arg1)->DeleteData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_DeleteData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_DeleteData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_DeleteData__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_DeleteData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomBondIter_DeleteData'");
  XSRETURN(0);
}


XS(_wrap_OBAtomBondIter_SetData) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_SetData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_SetData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_DataSize) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_DataSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_DataSize" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (unsigned int)(*arg1)->DataSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetData__SWIG_0) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_GetData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBAtomBondIter_GetData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetData__SWIG_1) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_GetData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBAtomBondIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetData__SWIG_2) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBAtomBondIter_GetData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBAtomBondIter_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetData__SWIG_3) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > &_result_ref = (*arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_GetData__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_GetData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_GetData__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBAtomBondIter_GetData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBAtomBondIter_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBAtomBondIter_BeginData) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_BeginData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_BeginData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (*arg1)->BeginData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBAtomBondIter_EndData) {
  {
    OpenBabel::OBAtomBondIter *arg1 = (OpenBabel::OBAtomBondIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBAtomBondIter_EndData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBAtomBondIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBAtomBondIter_EndData" "', argument " "1"" of type '" "OpenBabel::OBAtomBondIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBAtomBondIter * >(argp1);
    result = (*arg1)->EndData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueIter__SWIG_0) {
  {
    OpenBabel::OBResidueIter *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBResidueIter();");
    }
    result = (OpenBabel::OBResidueIter *)new OpenBabel::OBResidueIter();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueIter__SWIG_1) {
  {
    OpenBabel::OBMol *arg1 = (OpenBabel::OBMol *) 0 ;
    OpenBabel::OBResidueIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBResidueIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBResidueIter" "', argument " "1"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBResidueIter *)new OpenBabel::OBResidueIter(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueIter__SWIG_2) {
  {
    OpenBabel::OBMol *arg1 = 0 ;
    OpenBabel::OBResidueIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBResidueIter(mol);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBMol,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBResidueIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBResidueIter" "', argument " "1"" of type '" "OpenBabel::OBMol &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBMol * >(argp1);
    result = (OpenBabel::OBResidueIter *)new OpenBabel::OBResidueIter(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueIter__SWIG_3) {
  {
    OpenBabel::OBResidueIter *arg1 = 0 ;
    OpenBabel::OBResidueIter *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBResidueIter(ri);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBResidueIter,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBResidueIter" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBResidueIter" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (OpenBabel::OBResidueIter *)new OpenBabel::OBResidueIter((OpenBabel::OBResidueIter const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueIter) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBMol, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidueIter__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidueIter__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidueIter__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidueIter__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBResidueIter'");
  XSRETURN(0);
}


XS(_wrap_OBResidueIter_good) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_good(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_good" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (bool)((OpenBabel::OBResidueIter const *)arg1)->operator bool();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_inc__SWIG_0) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBResidueIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_inc(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_inc" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    {
      OpenBabel::OBResidueIter &_result_ref = (arg1)->operator ++();
      result = (OpenBabel::OBResidueIter *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueIter, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_inc__SWIG_1) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    int arg2 ;
    OpenBabel::OBResidueIter result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_inc(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_inc" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_inc" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator ++(arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBResidueIter(static_cast< const OpenBabel::OBResidueIter& >(result))), SWIGTYPE_p_OpenBabel__OBResidueIter, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_inc) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_inc__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_inc__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueIter_inc'");
  XSRETURN(0);
}


XS(_wrap_OBResidueIter___deref__) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter___deref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter___deref__" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (OpenBabel::OBResidue *)((OpenBabel::OBResidueIter const *)arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter___ref__) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter___ref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter___ref__" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    {
      OpenBabel::OBResidue &_result_ref = ((OpenBabel::OBResidueIter const *)arg1)->operator *();
      result = (OpenBabel::OBResidue *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBResidueIter) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBResidueIter(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBResidueIter" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_AddAtom) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_AddAtom(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_AddAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_AddAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (*arg1)->AddAtom(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_InsertAtom) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_InsertAtom(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_InsertAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_InsertAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (*arg1)->InsertAtom(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_RemoveAtom) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_RemoveAtom(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_RemoveAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_RemoveAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    (*arg1)->RemoveAtom(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_Clear) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_Clear" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    (*arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_SetName) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_SetName(self,resname);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_SetName" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueIter_SetName" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    (*arg1)->SetName((std::string const &)*arg2);
    
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_SetNum) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_SetNum(self,resnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_SetNum" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_SetNum" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->SetNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_SetChain) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    char arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    char val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_SetChain(self,chain);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_SetChain" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_char SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_SetChain" "', argument " "2"" of type '" "char""'");
    } 
    arg2 = static_cast< char >(val2);
    (*arg1)->SetChain(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_SetChainNum) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_SetChainNum(self,chainnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_SetChainNum" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_SetChainNum" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->SetChainNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_SetIdx) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_SetIdx" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_SetAtomID) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    std::string *arg3 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int res3 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueIter_SetAtomID(self,atom,id);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_SetAtomID" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_SetAtomID" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    {
      std::string *ptr = (std::string *)0;
      res3 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(2), &ptr);
      if (!SWIG_IsOK(res3)) {
        SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBResidueIter_SetAtomID" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueIter_SetAtomID" "', argument " "3"" of type '" "std::string const &""'"); 
      }
      arg3 = ptr;
    }
    (*arg1)->SetAtomID(arg2,(std::string const &)*arg3);
    
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    XSRETURN(argvi);
  fail:
    
    
    if (SWIG_IsNewObj(res3)) delete arg3;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_SetHetAtom) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    bool val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueIter_SetHetAtom(self,atom,hetatm);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_SetHetAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_SetHetAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    ecode3 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBResidueIter_SetHetAtom" "', argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
    (*arg1)->SetHetAtom(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_SetSerialNum) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    unsigned int arg3 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    unsigned int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueIter_SetSerialNum(self,atom,sernum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_SetSerialNum" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_SetSerialNum" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBResidueIter_SetSerialNum" "', argument " "3"" of type '" "unsigned int""'");
    } 
    arg3 = static_cast< unsigned int >(val3);
    (*arg1)->SetSerialNum(arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetName) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetName(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetName" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (*arg1)->GetName();
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetNum) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetNum" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (unsigned int)(*arg1)->GetNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetNumAtoms) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetNumAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetNumAtoms" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (unsigned int)(*arg1)->GetNumAtoms();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetChain) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    char result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetChain(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetChain" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (char)(*arg1)->GetChain();
    ST(argvi) = SWIG_From_char  SWIG_PERL_CALL_ARGS_1(static_cast< char >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetChainNum) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetChainNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetChainNum" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (unsigned int)(*arg1)->GetChainNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetIdx) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (unsigned int)(*arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetResKey) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetResKey(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetResKey" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (unsigned int)(*arg1)->GetResKey();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetAtoms) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBAtom * > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetAtoms" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (*arg1)->GetAtoms();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBAtom * >(static_cast< const std::vector<OpenBabel::OBAtom * >& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetBonds__SWIG_0) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    bool arg2 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_GetBonds(self,exterior);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetBonds" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_GetBonds" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (*arg1)->GetBonds(arg2);
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >(static_cast< const std::vector<OpenBabel::OBBond * >& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetBonds__SWIG_1) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * > > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetBonds" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (*arg1)->GetBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >(static_cast< const std::vector<OpenBabel::OBBond * >& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetBonds) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_GetBonds__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_GetBonds__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueIter_GetBonds'");
  XSRETURN(0);
}


XS(_wrap_OBResidueIter_GetAtomID) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    std::string result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_GetAtomID(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetAtomID" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_GetAtomID" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (*arg1)->GetAtomID(arg2);
    ST(argvi) = SWIG_From_std_string  SWIG_PERL_CALL_ARGS_1(static_cast< std::string >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetSerialNum) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_GetSerialNum(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetSerialNum" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_GetSerialNum" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (unsigned int)(*arg1)->GetSerialNum(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetAminoAcidProperty) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_GetAminoAcidProperty(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetAminoAcidProperty" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_GetAminoAcidProperty" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->GetAminoAcidProperty(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetAtomProperty) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    int arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueIter_GetAtomProperty(self,OpenBabel::OBAtom *,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetAtomProperty" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_GetAtomProperty" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBResidueIter_GetAtomProperty" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (bool)(*arg1)->GetAtomProperty(arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetResidueProperty) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_GetResidueProperty(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetResidueProperty" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_GetResidueProperty" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->GetResidueProperty(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_IsHetAtom) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_IsHetAtom(self,atom);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_IsHetAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_IsHetAtom" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsHetAtom(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_IsResidueType) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_IsResidueType(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_IsResidueType" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_IsResidueType" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->IsResidueType(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_BeginAtoms) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBAtom * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_BeginAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_BeginAtoms" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (*arg1)->BeginAtoms();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBAtomIterator(static_cast< const OpenBabel::OBAtomIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_EndAtoms) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBAtom * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_EndAtoms(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_EndAtoms" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (*arg1)->EndAtoms();
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBAtomIterator(static_cast< const OpenBabel::OBAtomIterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_BeginAtom) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    std::vector<OpenBabel::OBAtom * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_BeginAtom(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_BeginAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_BeginAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueIter_BeginAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBAtom * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->BeginAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_NextAtom) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    std::vector<OpenBabel::OBAtom * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_NextAtom(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_NextAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBAtom_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_NextAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueIter_NextAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBAtom * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBAtom * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->NextAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_DoTransformations) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_DoTransformations(self,std::map<std::string,std::string > const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(*arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_ClassDescription) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_ClassDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_ClassDescription" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (char *)(*arg1)->ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_HasData__SWIG_0) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_HasData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->HasData((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_HasData__SWIG_1) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_HasData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_HasData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->HasData((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_HasData__SWIG_2) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_HasData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_HasData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_HasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_HasData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_HasData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_HasData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueIter_HasData'");
  XSRETURN(0);
}


XS(_wrap_OBResidueIter_DeleteData__SWIG_0) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_DeleteData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_DeleteData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_DeleteData__SWIG_1) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_DeleteData(self,OpenBabel::OBGenericData *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_DeleteData__SWIG_2) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_DeleteData(self,std::vector<OpenBabel::OBGenericData * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (*arg1)->DeleteData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_DeleteData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_DeleteData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_DeleteData__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_DeleteData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueIter_DeleteData'");
  XSRETURN(0);
}


XS(_wrap_OBResidueIter_SetData) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_SetData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_SetData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_DataSize) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_DataSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_DataSize" "', argument " "1"" of type '" "OpenBabel::OBResidueIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (unsigned int)(*arg1)->DataSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetData__SWIG_0) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_GetData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueIter_GetData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetData__SWIG_1) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_GetData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetData__SWIG_2) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueIter_GetData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueIter_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetData__SWIG_3) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > &_result_ref = (*arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_GetData__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_GetData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_GetData__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueIter_GetData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueIter_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBResidueIter_BeginData) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_BeginData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_BeginData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (*arg1)->BeginData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueIter_EndData) {
  {
    OpenBabel::OBResidueIter *arg1 = (OpenBabel::OBResidueIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueIter_EndData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueIter_EndData" "', argument " "1"" of type '" "OpenBabel::OBResidueIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueIter * >(argp1);
    result = (*arg1)->EndData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueAtomIter__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *result = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 0) || (items > 0)) {
      SWIG_croak("Usage: new_OBResidueAtomIter();");
    }
    result = (OpenBabel::OBResidueAtomIter *)new OpenBabel::OBResidueAtomIter();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    XSRETURN(argvi);
  fail:
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueAtomIter__SWIG_1) {
  {
    OpenBabel::OBResidue *arg1 = (OpenBabel::OBResidue *) 0 ;
    OpenBabel::OBResidueAtomIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBResidueAtomIter(res);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBResidueAtomIter" "', argument " "1"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (OpenBabel::OBResidueAtomIter *)new OpenBabel::OBResidueAtomIter(arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueAtomIter__SWIG_2) {
  {
    OpenBabel::OBResidue *arg1 = 0 ;
    OpenBabel::OBResidueAtomIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBResidueAtomIter(res);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBResidue,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBResidueAtomIter" "', argument " "1"" of type '" "OpenBabel::OBResidue &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBResidueAtomIter" "', argument " "1"" of type '" "OpenBabel::OBResidue &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidue * >(argp1);
    result = (OpenBabel::OBResidueAtomIter *)new OpenBabel::OBResidueAtomIter(*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueAtomIter__SWIG_3) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = 0 ;
    OpenBabel::OBResidueAtomIter *result = 0 ;
    void *argp1 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: new_OBResidueAtomIter(ri);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1, SWIGTYPE_p_OpenBabel__OBResidueAtomIter,  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OBResidueAtomIter" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const &""'"); 
    }
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OBResidueAtomIter" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const &""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (OpenBabel::OBResidueAtomIter *)new OpenBabel::OBResidueAtomIter((OpenBabel::OBResidueAtomIter const &)*arg1);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueAtomIter, SWIG_OWNER | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_new_OBResidueAtomIter) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 0) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidue, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidue, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidueAtomIter__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidueAtomIter__SWIG_1); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidueAtomIter__SWIG_2); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_new_OBResidueAtomIter__SWIG_3); return;
    }
  }
  
  croak("No matching function for overloaded 'new_OBResidueAtomIter'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_good) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_good(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_good" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)((OpenBabel::OBResidueAtomIter const *)arg1)->operator bool();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_inc__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBResidueAtomIter *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_inc(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_inc" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    {
      OpenBabel::OBResidueAtomIter &_result_ref = (arg1)->operator ++();
      result = (OpenBabel::OBResidueAtomIter *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_inc__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    OpenBabel::OBResidueAtomIter result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_inc(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_inc" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_inc" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (arg1)->operator ++(arg2);
    ST(argvi) = SWIG_NewPointerObj((new OpenBabel::OBResidueAtomIter(static_cast< const OpenBabel::OBResidueAtomIter& >(result))), SWIGTYPE_p_OpenBabel__OBResidueAtomIter, SWIG_POINTER_OWN | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_inc) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_inc__SWIG_0); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_inc__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_inc'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_deref) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_deref(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_deref" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (OpenBabel::OBAtom *)((OpenBabel::OBResidueAtomIter const *)arg1)->operator ->();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter___ref__) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter___ref__(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter___ref__" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    {
      OpenBabel::OBAtom &_result_ref = ((OpenBabel::OBResidueAtomIter const *)arg1)->operator *();
      result = (OpenBabel::OBAtom *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_delete_OBResidueAtomIter) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: delete_OBResidueAtomIter(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, SWIG_POINTER_DISOWN |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OBResidueAtomIter" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    delete arg1;
    
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_Visit_set) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_Visit_set(self,Visit);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_Visit_set" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_Visit_set" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    if (arg1) (*arg1)->Visit = arg2;
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_Visit_get) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_Visit_get(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_Visit_get" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool) ((*arg1)->Visit);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_Clear) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_Clear(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_Clear" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->Clear();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetIdx) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetIdx(self,idx);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetIdx" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetIdx" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetIdx(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetHyb) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetHyb(self,hyb);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetHyb" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetHyb" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetHyb(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetAtomicNum) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetAtomicNum(self,atomicnum);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetAtomicNum" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetAtomicNum(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetIsotope) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetIsotope(self,iso);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetIsotope" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetIsotope" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->SetIsotope(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetImplicitValence) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetImplicitValence(self,val);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetImplicitValence" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetImplicitValence(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IncrementImplicitValence) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IncrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IncrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->IncrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_DecrementImplicitValence) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_DecrementImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_DecrementImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->DecrementImplicitValence();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetFormalCharge) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetFormalCharge(self,fcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetFormalCharge" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    (*arg1)->SetFormalCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetSpinMultiplicity) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    short arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    short val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetSpinMultiplicity(self,spin);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_short SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetSpinMultiplicity" "', argument " "2"" of type '" "short""'");
    } 
    arg2 = static_cast< short >(val2);
    (*arg1)->SetSpinMultiplicity(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetType__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_SetType" "', argument " "2"" of type '" "char *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    (*arg1)->SetType(arg2);
    
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetType__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::string *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetType(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetType" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__string,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_SetType" "', argument " "2"" of type '" "std::string &""'"); 
    }
    arg2 = reinterpret_cast< std::string * >(argp2);
    (*arg1)->SetType(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetType) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__string, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_SetType__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_SetType__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_SetType'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_SetPartialCharge) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetPartialCharge(self,pcharge);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetPartialCharge" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    (*arg1)->SetPartialCharge(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetVector__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetVector(self,v);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_SetVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    (*arg1)->SetVector(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetVector__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double arg2 ;
    double arg3 ;
    double arg4 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    double val2 ;
    int ecode2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    double val4 ;
    int ecode4 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 4) || (items > 4)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetVector(self,x,y,z);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetVector" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBResidueAtomIter_SetVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    ecode4 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "OBResidueAtomIter_SetVector" "', argument " "4"" of type '" "double""'");
    } 
    arg4 = static_cast< double >(val4);
    (*arg1)->SetVector(arg2,arg3,arg4);
    
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetVector__SWIG_2) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetVector" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->SetVector();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetVector) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__vector3, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 4) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(3), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_SetVector__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_SetVector__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_SetVector__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_SetVector'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_SetCoordPtr) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double **arg2 = (double **) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetCoordPtr(self,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_p_double, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_SetCoordPtr" "', argument " "2"" of type '" "double **""'"); 
    }
    arg2 = reinterpret_cast< double ** >(argp2);
    (*arg1)->SetCoordPtr(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetResidue) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBResidue *arg2 = (OpenBabel::OBResidue *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetResidue(self,res);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetResidue" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBResidue, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_SetResidue" "', argument " "2"" of type '" "OpenBabel::OBResidue *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBResidue * >(argp2);
    (*arg1)->SetResidue(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetParent) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBMol *arg2 = (OpenBabel::OBMol *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetParent(self,ptr);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetParent" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBMol, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_SetParent" "', argument " "2"" of type '" "OpenBabel::OBMol *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBMol * >(argp2);
    (*arg1)->SetParent(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetAromatic) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetAromatic" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->SetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_UnsetAromatic) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_UnsetAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_UnsetAromatic" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->UnsetAromatic();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetClockwiseStereo) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->SetClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetAntiClockwiseStereo) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetAntiClockwiseStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetAntiClockwiseStereo" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->SetAntiClockwiseStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetPositiveStereo) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->SetPositiveStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetNegativeStereo) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->SetNegativeStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_UnsetStereo) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_UnsetStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_UnsetStereo" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->UnsetStereo();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetInRing) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetInRing" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->SetInRing();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetChiral) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetChiral" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->SetChiral();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_ClearCoordPtr) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_ClearCoordPtr(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_ClearCoordPtr" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->ClearCoordPtr();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetFormalCharge) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetFormalCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetFormalCharge" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (int)(*arg1)->GetFormalCharge();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetAtomicNum) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetAtomicNum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetAtomicNum" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetAtomicNum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetIsotope) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned short result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetIsotope(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetIsotope" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned short)(*arg1)->GetIsotope();
    ST(argvi) = SWIG_From_unsigned_SS_short  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned short >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetSpinMultiplicity) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetSpinMultiplicity(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetSpinMultiplicity" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (int)(*arg1)->GetSpinMultiplicity();
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetAtomicMass) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetAtomicMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetAtomicMass" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->GetAtomicMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetExactMass) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetExactMass(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetExactMass" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->GetExactMass();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetIdx) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetIdx" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetCoordinateIdx) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetCoordinateIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetCoordinateIdx" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCoordinateIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetCIdx) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetCIdx(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetCIdx" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetCIdx();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetValence) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetValence" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetHyb) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetHyb(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetHyb" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHyb();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetImplicitValence) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetImplicitValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetImplicitValence" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetImplicitValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetHvyValence) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetHvyValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetHvyValence" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHvyValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetHeteroValence) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetHeteroValence(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetHeteroValence" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->GetHeteroValence();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetType) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetType(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetType" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (char *)(*arg1)->GetType();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetX) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetX(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetX" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->GetX();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_x) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_x(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_x" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->x();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetY) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetY(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetY" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->GetY();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_y) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_y(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_y" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->y();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetZ) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetZ(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetZ" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->GetZ();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_z) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_z(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_z" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->z();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetCoordinate) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetCoordinate(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetCoordinate" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double *)(*arg1)->GetCoordinate();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetVector) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::vector3 *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetVector(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetVector" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    {
      OpenBabel::vector3 &_result_ref = (*arg1)->GetVector();
      result = (OpenBabel::vector3 *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__vector3, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetPartialCharge) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetPartialCharge(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetPartialCharge" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->GetPartialCharge();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetResidue) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBResidue *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetResidue" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (OpenBabel::OBResidue *)(*arg1)->GetResidue();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBResidue, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetParent) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBMol *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetParent(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetParent" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (OpenBabel::OBMol *)(*arg1)->GetParent();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBMol, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetNewBondVector) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::vector3 *arg2 = 0 ;
    double arg3 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    double val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetNewBondVector(self,v,length);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetNewBondVector" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_OpenBabel__vector3,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_GetNewBondVector" "', argument " "2"" of type '" "OpenBabel::vector3 &""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::vector3 * >(argp2);
    ecode3 = SWIG_AsVal_double SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBResidueAtomIter_GetNewBondVector" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
    result = (bool)(*arg1)->GetNewBondVector(*arg2,arg3);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetBond(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_GetBond" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->GetBond(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetNextAtom) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetNextAtom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetNextAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (OpenBabel::OBAtom *)(*arg1)->GetNextAtom();
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_BeginBonds) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_BeginBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_BeginBonds" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (*arg1)->BeginBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_EndBonds) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBBond * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_EndBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_EndBonds" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (*arg1)->EndBonds();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBBond * >::iterator(static_cast< const std::vector<OpenBabel::OBBond * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_BeginBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_BeginBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_BeginBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_BeginBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->BeginBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_NextBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_NextBond(self,i);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_NextBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_NextBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBBond *)(*arg1)->NextBond(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBond, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_BeginNbrAtom) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_BeginNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_BeginNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_BeginNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->BeginNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_NextNbrAtom) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBAtom *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_NextNbrAtom(self,std::vector<OpenBabel::OBBond * >::iterator &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_NextNbrAtom" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_NextNbrAtom" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    result = (OpenBabel::OBAtom *)(*arg1)->NextNbrAtom(*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBAtom, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetDistance__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetDistance(self,index);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_GetDistance" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetDistance__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetDistance(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetDistance" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_GetDistance" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (double)(*arg1)->GetDistance(arg2);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetDistance) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_GetDistance__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_GetDistance__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_GetDistance'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_GetAngle__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    int arg3 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int val3 ;
    int ecode3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_GetAngle" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    ecode3 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "OBResidueAtomIter_GetAngle" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetAngle__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    OpenBabel::OBAtom *arg3 = (OpenBabel::OBAtom *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetAngle(self,b,c);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetAngle" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_GetAngle" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBResidueAtomIter_GetAngle" "', argument " "3"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBAtom * >(argp3);
    result = (double)(*arg1)->GetAngle(arg2,arg3);
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetAngle) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(2), &vptr, SWIGTYPE_p_OpenBabel__OBAtom, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 3) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(2), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_GetAngle__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_GetAngle__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_GetAngle'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_NewResidue) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_NewResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_NewResidue" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->NewResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_DeleteResidue) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_DeleteResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_DeleteResidue" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->DeleteResidue();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_AddBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_AddBond(self,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_AddBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_AddBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    (*arg1)->AddBond(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_InsertBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::vector<OpenBabel::OBBond * >::iterator *arg2 = 0 ;
    OpenBabel::OBBond *arg3 = (OpenBabel::OBBond *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    void *argp3 = 0 ;
    int res3 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 3) || (items > 3)) {
      SWIG_croak("Usage: OBResidueAtomIter_InsertBond(self,i,bond);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_InsertBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBBond_p_t__iterator,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_InsertBond" "', argument " "2"" of type '" "std::vector<OpenBabel::OBBond * >::iterator &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBBond * >::iterator * >(argp2);
    res3 = SWIG_ConvertPtr(ST(2), &argp3,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "OBResidueAtomIter_InsertBond" "', argument " "3"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg3 = reinterpret_cast< OpenBabel::OBBond * >(argp3);
    (*arg1)->InsertBond(*arg2,arg3);
    
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_DeleteBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBBond *arg2 = (OpenBabel::OBBond *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_DeleteBond(self,OpenBabel::OBBond *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_DeleteBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBBond, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_DeleteBond" "', argument " "2"" of type '" "OpenBabel::OBBond *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBBond * >(argp2);
    result = (bool)(*arg1)->DeleteBond(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_ClearBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_ClearBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_ClearBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->ClearBond();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_CountFreeOxygens) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_CountFreeOxygens(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_CountFreeOxygens" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->CountFreeOxygens();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_ImplicitHydrogenCount) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_ImplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_ImplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->ImplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_ExplicitHydrogenCount__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool arg2 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_ExplicitHydrogenCount(self,ExcludeIsotopes);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_ExplicitHydrogenCount" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount(arg2);
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_ExplicitHydrogenCount__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_ExplicitHydrogenCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_ExplicitHydrogenCount" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->ExplicitHydrogenCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_ExplicitHydrogenCount) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_ExplicitHydrogenCount__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_ExplicitHydrogenCount__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_ExplicitHydrogenCount'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_MemberOfRingCount) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_MemberOfRingCount(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_MemberOfRingCount" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingCount();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_MemberOfRingSize) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_MemberOfRingSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_MemberOfRingSize" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->MemberOfRingSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_CountRingBonds) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_CountRingBonds(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_CountRingBonds" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->CountRingBonds();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SmallestBondAngle) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_SmallestBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SmallestBondAngle" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->SmallestBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_AverageBondAngle) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    double result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_AverageBondAngle(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_AverageBondAngle" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (double)(*arg1)->AverageBondAngle();
    ST(argvi) = SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_BOSum) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_BOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_BOSum" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->BOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_KBOSum) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_KBOSum(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_KBOSum" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->KBOSum();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HtoMethyl) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HtoMethyl(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HtoMethyl" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HtoMethyl();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_SetHybAndGeom) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetHybAndGeom(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetHybAndGeom" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_SetHybAndGeom" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->SetHybAndGeom(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_ForceNoH) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_ForceNoH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_ForceNoH" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    (*arg1)->ForceNoH();
    
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasNoHForced) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasNoHForced(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasNoHForced" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HasNoHForced();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasResidue) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasResidue(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasResidue" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HasResidue();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsHydrogen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsHydrogen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsCarbon) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsCarbon(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsCarbon" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsCarbon();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsNitrogen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsNitrogen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsOxygen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsOxygen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsSulfur) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsSulfur(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsSulfur" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsSulfur();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsPhosphorus) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsPhosphorus(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsPhosphorus" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphorus();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsAromatic) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsAromatic(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsAromatic" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAromatic();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsInRing) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsInRing(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsInRing" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsInRing();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsInRingSize) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsInRingSize(self,int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsInRingSize" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_IsInRingSize" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
    result = (bool)(*arg1)->IsInRingSize(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsHeteroatom) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsHeteroatom(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsHeteroatom" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHeteroatom();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsNotCorH) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsNotCorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsNotCorH" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNotCorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsConnected) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsConnected(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsConnected" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_IsConnected" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsConnected(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsOneThree) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsOneThree(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsOneThree" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_IsOneThree" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneThree(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsOneFour) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBAtom *arg2 = (OpenBabel::OBAtom *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsOneFour(self,OpenBabel::OBAtom *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsOneFour" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBAtom, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_IsOneFour" "', argument " "2"" of type '" "OpenBabel::OBAtom *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBAtom * >(argp2);
    result = (bool)(*arg1)->IsOneFour(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsCarboxylOxygen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsCarboxylOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsCarboxylOxygen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsCarboxylOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsPhosphateOxygen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsPhosphateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsPhosphateOxygen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPhosphateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsSulfateOxygen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsSulfateOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsSulfateOxygen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsSulfateOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsNitroOxygen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsNitroOxygen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsNitroOxygen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNitroOxygen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsAmideNitrogen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsAmideNitrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsAmideNitrogen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAmideNitrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsPolarHydrogen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsNonPolarHydrogen) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsNonPolarHydrogen(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsNonPolarHydrogen" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNonPolarHydrogen();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsAromaticNOxide) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsAromaticNOxide(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsAromaticNOxide" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAromaticNOxide();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsChiral) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsChiral(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsChiral" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsChiral();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsAxial) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsAxial(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsAxial" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAxial();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsClockwise) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsClockwise" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsAntiClockwise) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsAntiClockwise(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsAntiClockwise" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsAntiClockwise();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsPositiveStereo) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsPositiveStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsPositiveStereo" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsPositiveStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsNegativeStereo) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsNegativeStereo(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsNegativeStereo" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsNegativeStereo();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasChiralitySpecified) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasChiralitySpecified(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasChiralitySpecified" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HasChiralitySpecified();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasChiralVolume) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasChiralVolume(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasChiralVolume" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HasChiralVolume();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsHbondAcceptor) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsHbondAcceptor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsHbondAcceptor" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHbondAcceptor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsHbondDonor) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsHbondDonor(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsHbondDonor" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonor();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_IsHbondDonorH) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_IsHbondDonorH(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_IsHbondDonorH" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->IsHbondDonorH();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasAlphaBetaUnsat__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    bool val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasAlphaBetaUnsat(self,includePandS);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_HasAlphaBetaUnsat" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
    result = (bool)(*arg1)->HasAlphaBetaUnsat(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasAlphaBetaUnsat__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasAlphaBetaUnsat(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasAlphaBetaUnsat" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HasAlphaBetaUnsat();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasAlphaBetaUnsat) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_bool SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_HasAlphaBetaUnsat__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_HasAlphaBetaUnsat__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_HasAlphaBetaUnsat'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_HasBondOfOrder) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasBondOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasBondOfOrder" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_HasBondOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasBondOfOrder(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_CountBondsOfOrder) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int arg2 ;
    int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_CountBondsOfOrder(self,unsigned int);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_CountBondsOfOrder" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_CountBondsOfOrder" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (int)(*arg1)->CountBondsOfOrder(arg2);
    ST(argvi) = SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasNonSingleBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasNonSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasNonSingleBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HasNonSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasSingleBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasSingleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasSingleBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HasSingleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasDoubleBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasDoubleBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasDoubleBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HasDoubleBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasAromaticBond) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasAromaticBond(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasAromaticBond" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (bool)(*arg1)->HasAromaticBond();
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_MatchesSMARTS) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_MatchesSMARTS(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_MatchesSMARTS" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_MatchesSMARTS" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->MatchesSMARTS((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_DoTransformations) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::map<std::string,std::string > *arg2 = (std::map<std::string,std::string > *) 0 ;
    OpenBabel::OBBase *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_DoTransformations(self,std::map<std::string,std::string > const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_DoTransformations" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_std__mapTstd__string_std__string_t, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_DoTransformations" "', argument " "2"" of type '" "std::map<std::string,std::string > const *""'"); 
    }
    arg2 = reinterpret_cast< std::map<std::string,std::string > * >(argp2);
    result = (OpenBabel::OBBase *)(*arg1)->DoTransformations((std::map<std::string,std::string > const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBBase, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_ClassDescription) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    char *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_ClassDescription(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_ClassDescription" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (char *)(*arg1)->ClassDescription();
    ST(argvi) = SWIG_FromCharPtr((const char *)result); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasData__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::string *arg2 = 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_HasData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (bool)(*arg1)->HasData((std::string const &)*arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasData__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_HasData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (bool)(*arg1)->HasData((char const *)arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasData__SWIG_2) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int arg2 ;
    bool result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_HasData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_HasData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_HasData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (bool)(*arg1)->HasData(arg2);
    ST(argvi) = SWIG_From_bool  SWIG_PERL_CALL_ARGS_1(static_cast< bool >(result)); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_HasData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_HasData__SWIG_2); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_HasData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_HasData__SWIG_1); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_HasData'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_DeleteData__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int arg2 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_DeleteData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_DeleteData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_DeleteData__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_DeleteData(self,OpenBabel::OBGenericData *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_DeleteData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->DeleteData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_DeleteData__SWIG_2) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *arg2 = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_DeleteData(self,std::vector<OpenBabel::OBGenericData * > &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_DeleteData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_DeleteData" "', argument " "2"" of type '" "std::vector<OpenBabel::OBGenericData * > &""'"); 
    }
    arg2 = reinterpret_cast< std::vector<OpenBabel::OBGenericData * > * >(argp2);
    (*arg1)->DeleteData(*arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_DeleteData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_OpenBabel__OBGenericData, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(1), &vptr, SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_DeleteData__SWIG_1); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_DeleteData__SWIG_2); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_DeleteData__SWIG_0); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_DeleteData'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_SetData) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    OpenBabel::OBGenericData *arg2 = (OpenBabel::OBGenericData *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    void *argp2 = 0 ;
    int res2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_SetData(self,d);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_SetData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_ConvertPtr(ST(1), &argp2,SWIGTYPE_p_OpenBabel__OBGenericData, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_SetData" "', argument " "2"" of type '" "OpenBabel::OBGenericData *""'"); 
    }
    arg2 = reinterpret_cast< OpenBabel::OBGenericData * >(argp2);
    (*arg1)->SetData(arg2);
    
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_DataSize) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_DataSize(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_DataSize" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter const *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (unsigned int)(*arg1)->DataSize();
    ST(argvi) = SWIG_From_unsigned_SS_int  SWIG_PERL_CALL_ARGS_1(static_cast< unsigned int >(result)); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetData__SWIG_0) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    unsigned int arg2 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    unsigned int val2 ;
    int ecode2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetData(self,type);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OBResidueAtomIter_GetData" "', argument " "2"" of type '" "unsigned int""'");
    } 
    arg2 = static_cast< unsigned int >(val2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData(arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    
    XSRETURN(argvi);
  fail:
    
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetData__SWIG_1) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::string *arg2 = 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 = SWIG_OLDOBJ ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetData(self,std::string const &);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    {
      std::string *ptr = (std::string *)0;
      res2 = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), &ptr);
      if (!SWIG_IsOK(res2)) {
        SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      if (!ptr) {
        SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OBResidueAtomIter_GetData" "', argument " "2"" of type '" "std::string const &""'"); 
      }
      arg2 = ptr;
    }
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((std::string const &)*arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    XSRETURN(argvi);
  fail:
    
    if (SWIG_IsNewObj(res2)) delete arg2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetData__SWIG_2) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    char *arg2 = (char *) 0 ;
    OpenBabel::OBGenericData *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int res2 ;
    char *buf2 = 0 ;
    int alloc2 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 2) || (items > 2)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetData(self,char const *);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    res2 = SWIG_AsCharPtrAndSize(ST(1), &buf2, NULL, &alloc2);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OBResidueAtomIter_GetData" "', argument " "2"" of type '" "char const *""'");
    }
    arg2 = reinterpret_cast< char * >(buf2);
    result = (OpenBabel::OBGenericData *)(*arg1)->GetData((char const *)arg2);
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_OpenBabel__OBGenericData, 0 | SWIG_SHADOW); argvi++ ;
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    XSRETURN(argvi);
  fail:
    
    if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetData__SWIG_3) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    std::vector<OpenBabel::OBGenericData * > *result = 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_GetData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_GetData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    {
      std::vector<OpenBabel::OBGenericData * > &_result_ref = (*arg1)->GetData();
      result = (std::vector<OpenBabel::OBGenericData * > *) &_result_ref;
    }
    ST(argvi) = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, 0 | SWIG_SHADOW); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_GetData) {
  dXSARGS;
  
  {
    unsigned long _index = 0;
    SWIG_TypeRank _rank = 0; 
    if (items == 1) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 1;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_1:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        {
          int res = SWIG_AsVal_unsigned_SS_int SWIG_PERL_CALL_ARGS_2(ST(1), NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_2;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 2;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_2:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsPtr_std_string SWIG_PERL_CALL_ARGS_2(ST(1), (std::string**)(0));
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 3;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_3:
    
    if (items == 2) {
      SWIG_TypeRank _ranki = 0;
      SWIG_TypeRank _rankm = 0;
      SWIG_TypeRank _pi = 1;
      int _v = 0;
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(ST(0), &vptr, SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      {
        int res = SWIG_AsCharPtrAndSize(ST(1), 0, NULL, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_4;
      _ranki += _v*_pi;
      _rankm += _pi;
      _pi *= SWIG_MAXCASTRANK;
      if (!_index || (_ranki < _rank)) {
        _rank = _ranki; _index = 4;
        if (_rank == _rankm) goto dispatch;
      }
    }
  check_4:
    
  dispatch:
    switch(_index) {
    case 1:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_GetData__SWIG_3); return;
    case 2:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_GetData__SWIG_0); return;
    case 3:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_GetData__SWIG_1); return;
    case 4:
      ++PL_markstack_ptr; SWIG_CALLXS(_wrap_OBResidueAtomIter_GetData__SWIG_2); return;
    }
  }
  
  croak("No matching function for overloaded 'OBResidueAtomIter_GetData'");
  XSRETURN(0);
}


XS(_wrap_OBResidueAtomIter_BeginData) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_BeginData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_BeginData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (*arg1)->BeginData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}


XS(_wrap_OBResidueAtomIter_EndData) {
  {
    OpenBabel::OBResidueAtomIter *arg1 = (OpenBabel::OBResidueAtomIter *) 0 ;
    SwigValueWrapper<std::vector<OpenBabel::OBGenericData * >::iterator > result;
    void *argp1 = 0 ;
    int res1 = 0 ;
    int argvi = 0;
    dXSARGS;
    
    if ((items < 1) || (items > 1)) {
      SWIG_croak("Usage: OBResidueAtomIter_EndData(self);");
    }
    res1 = SWIG_ConvertPtr(ST(0), &argp1,SWIGTYPE_p_OpenBabel__OBResidueAtomIter, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OBResidueAtomIter_EndData" "', argument " "1"" of type '" "OpenBabel::OBResidueAtomIter *""'"); 
    }
    arg1 = reinterpret_cast< OpenBabel::OBResidueAtomIter * >(argp1);
    result = (*arg1)->EndData();
    ST(argvi) = SWIG_NewPointerObj((new std::vector<OpenBabel::OBGenericData * >::iterator(static_cast< const std::vector<OpenBabel::OBGenericData * >::iterator& >(result))), SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, SWIG_POINTER_OWN | 0); argvi++ ;
    
    XSRETURN(argvi);
  fail:
    
    SWIG_croak_null();
  }
}



/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_OpenBabel__OBAtomTyperTo_p_OpenBabel__OBGlobalDataBase(void *x) {
    return (void *)((OpenBabel::OBGlobalDataBase *)  ((OpenBabel::OBAtomTyper *) x));
}
static void *_p_OpenBabel__OBAromaticTyperTo_p_OpenBabel__OBGlobalDataBase(void *x) {
    return (void *)((OpenBabel::OBGlobalDataBase *)  ((OpenBabel::OBAromaticTyper *) x));
}
static void *_p_OpenBabel__OBResidueDataTo_p_OpenBabel__OBGlobalDataBase(void *x) {
    return (void *)((OpenBabel::OBGlobalDataBase *)  ((OpenBabel::OBResidueData *) x));
}
static void *_p_OpenBabel__OBIsotopeTableTo_p_OpenBabel__OBGlobalDataBase(void *x) {
    return (void *)((OpenBabel::OBGlobalDataBase *)  ((OpenBabel::OBIsotopeTable *) x));
}
static void *_p_OpenBabel__OBTypeTableTo_p_OpenBabel__OBGlobalDataBase(void *x) {
    return (void *)((OpenBabel::OBGlobalDataBase *)  ((OpenBabel::OBTypeTable *) x));
}
static void *_p_OpenBabel__OBElementTableTo_p_OpenBabel__OBGlobalDataBase(void *x) {
    return (void *)((OpenBabel::OBGlobalDataBase *)  ((OpenBabel::OBElementTable *) x));
}
static void *_p_OpenBabel__OBMolTo_p_OpenBabel__OBBase(void *x) {
    return (void *)((OpenBabel::OBBase *)  ((OpenBabel::OBMol *) x));
}
static void *_p_OpenBabel__OBResidueTo_p_OpenBabel__OBBase(void *x) {
    return (void *)((OpenBabel::OBBase *)  ((OpenBabel::OBResidue *) x));
}
static void *_p_OpenBabel__OBBondTo_p_OpenBabel__OBBase(void *x) {
    return (void *)((OpenBabel::OBBase *)  ((OpenBabel::OBBond *) x));
}
static void *_p_OpenBabel__OBAtomTo_p_OpenBabel__OBBase(void *x) {
    return (void *)((OpenBabel::OBBase *)  ((OpenBabel::OBAtom *) x));
}
static void *_p_OpenBabel__OBSymmetryDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBSymmetryData *) x));
}
static void *_p_OpenBabel__OBConformerDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBConformerData *) x));
}
static void *_p_OpenBabel__OBPairDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBPairData *) x));
}
static void *_p_OpenBabel__OBSetDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBSetData *) x));
}
static void *_p_OpenBabel__OBVirtualBondTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBVirtualBond *) x));
}
static void *_p_OpenBabel__OBSerialNumsTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBSerialNums *) x));
}
static void *_p_OpenBabel__OBRingDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBRingData *) x));
}
static void *_p_OpenBabel__OBUnitCellTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBUnitCell *) x));
}
static void *_p_OpenBabel__OBExternalBondDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBExternalBondData *) x));
}
static void *_p_OpenBabel__OBTorsionDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBTorsionData *) x));
}
static void *_p_OpenBabel__OBAngleDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBAngleData *) x));
}
static void *_p_OpenBabel__OBChiralDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBChiralData *) x));
}
static void *_p_OpenBabel__OBCommentDataTo_p_OpenBabel__OBGenericData(void *x) {
    return (void *)((OpenBabel::OBGenericData *)  ((OpenBabel::OBCommentData *) x));
}
static swig_type_info _swigt__p_OpenBabel__CharPtrLess = {"_p_OpenBabel__CharPtrLess", "OpenBabel::CharPtrLess *", 0, 0, (void*)"Chemistry::OpenBabel::CharPtrLess", 0};
static swig_type_info _swigt__p_OpenBabel__DoubleType = {"_p_OpenBabel__DoubleType", "OpenBabel::DoubleType *", 0, 0, (void*)"Chemistry::OpenBabel::DoubleType", 0};
static swig_type_info _swigt__p_OpenBabel__FMapType__iterator = {"_p_OpenBabel__FMapType__iterator", "OpenBabel::FMapType::iterator *|OpenBabel::Formatpos *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__FastSearch = {"_p_OpenBabel__FastSearch", "OpenBabel::FastSearch *", 0, 0, (void*)"Chemistry::OpenBabel::FastSearch", 0};
static swig_type_info _swigt__p_OpenBabel__FastSearchIndexer = {"_p_OpenBabel__FastSearchIndexer", "OpenBabel::FastSearchIndexer *", 0, 0, (void*)"Chemistry::OpenBabel::FastSearchIndexer", 0};
static swig_type_info _swigt__p_OpenBabel__FptIndex = {"_p_OpenBabel__FptIndex", "OpenBabel::FptIndex *", 0, 0, (void*)"Chemistry::OpenBabel::FptIndex", 0};
static swig_type_info _swigt__p_OpenBabel__FptIndexHeader = {"_p_OpenBabel__FptIndexHeader", "OpenBabel::FptIndexHeader *", 0, 0, (void*)"Chemistry::OpenBabel::FptIndexHeader", 0};
static swig_type_info _swigt__p_OpenBabel__OBAngle = {"_p_OpenBabel__OBAngle", "OpenBabel::OBAngle *", 0, 0, (void*)"Chemistry::OpenBabel::OBAngle", 0};
static swig_type_info _swigt__p_OpenBabel__OBAngleData = {"_p_OpenBabel__OBAngleData", "OpenBabel::OBAngleData *", 0, 0, (void*)"Chemistry::OpenBabel::OBAngleData", 0};
static swig_type_info _swigt__p_OpenBabel__OBAromaticTyper = {"_p_OpenBabel__OBAromaticTyper", "OpenBabel::OBAromaticTyper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__OBAtom = {"_p_OpenBabel__OBAtom", "OpenBabel::OBAtom *", 0, 0, (void*)"Chemistry::OpenBabel::OBAtom", 0};
static swig_type_info _swigt__p_OpenBabel__OBAtomAtomIter = {"_p_OpenBabel__OBAtomAtomIter", "OpenBabel::OBAtomAtomIter *", 0, 0, (void*)"Chemistry::OpenBabel::OBAtomAtomIter", 0};
static swig_type_info _swigt__p_OpenBabel__OBAtomBondIter = {"_p_OpenBabel__OBAtomBondIter", "OpenBabel::OBAtomBondIter *", 0, 0, (void*)"Chemistry::OpenBabel::OBAtomBondIter", 0};
static swig_type_info _swigt__p_OpenBabel__OBAtomTyper = {"_p_OpenBabel__OBAtomTyper", "OpenBabel::OBAtomTyper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__OBBase = {"_p_OpenBabel__OBBase", "OpenBabel::OBBase *", 0, 0, (void*)"Chemistry::OpenBabel::OBBase", 0};
static swig_type_info _swigt__p_OpenBabel__OBBitVec = {"_p_OpenBabel__OBBitVec", "OpenBabel::OBBitVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__OBBond = {"_p_OpenBabel__OBBond", "OpenBabel::OBBond *", 0, 0, (void*)"Chemistry::OpenBabel::OBBond", 0};
static swig_type_info _swigt__p_OpenBabel__OBChainsParser = {"_p_OpenBabel__OBChainsParser", "OpenBabel::OBChainsParser *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__OBChiralData = {"_p_OpenBabel__OBChiralData", "OpenBabel::OBChiralData *", 0, 0, (void*)"Chemistry::OpenBabel::OBChiralData", 0};
static swig_type_info _swigt__p_OpenBabel__OBCommentData = {"_p_OpenBabel__OBCommentData", "OpenBabel::OBCommentData *", 0, 0, (void*)"Chemistry::OpenBabel::OBCommentData", 0};
static swig_type_info _swigt__p_OpenBabel__OBConformerData = {"_p_OpenBabel__OBConformerData", "OpenBabel::OBConformerData *", 0, 0, (void*)"Chemistry::OpenBabel::OBConformerData", 0};
static swig_type_info _swigt__p_OpenBabel__OBConversion = {"_p_OpenBabel__OBConversion", "OpenBabel::OBConversion *", 0, 0, (void*)"Chemistry::OpenBabel::OBConversion", 0};
static swig_type_info _swigt__p_OpenBabel__OBElement = {"_p_OpenBabel__OBElement", "OpenBabel::OBElement *", 0, 0, (void*)"Chemistry::OpenBabel::OBElement", 0};
static swig_type_info _swigt__p_OpenBabel__OBElementTable = {"_p_OpenBabel__OBElementTable", "OpenBabel::OBElementTable *", 0, 0, (void*)"Chemistry::OpenBabel::OBElementTable", 0};
static swig_type_info _swigt__p_OpenBabel__OBError = {"_p_OpenBabel__OBError", "OpenBabel::OBError *", 0, 0, (void*)"Chemistry::OpenBabel::OBError", 0};
static swig_type_info _swigt__p_OpenBabel__OBExternalBond = {"_p_OpenBabel__OBExternalBond", "OpenBabel::OBExternalBond *", 0, 0, (void*)"Chemistry::OpenBabel::OBExternalBond", 0};
static swig_type_info _swigt__p_OpenBabel__OBExternalBondData = {"_p_OpenBabel__OBExternalBondData", "OpenBabel::OBExternalBondData *", 0, 0, (void*)"Chemistry::OpenBabel::OBExternalBondData", 0};
static swig_type_info _swigt__p_OpenBabel__OBFingerprint = {"_p_OpenBabel__OBFingerprint", "OpenBabel::OBFingerprint *", 0, 0, (void*)"Chemistry::OpenBabel::OBFingerprint", 0};
static swig_type_info _swigt__p_OpenBabel__OBFormat = {"_p_OpenBabel__OBFormat", "OpenBabel::OBFormat *", 0, 0, (void*)"Chemistry::OpenBabel::OBFormat", 0};
static swig_type_info _swigt__p_OpenBabel__OBGenericData = {"_p_OpenBabel__OBGenericData", "OpenBabel::OBGenericData *", 0, 0, (void*)"Chemistry::OpenBabel::OBGenericData", 0};
static swig_type_info _swigt__p_OpenBabel__OBGlobalDataBase = {"_p_OpenBabel__OBGlobalDataBase", "OpenBabel::OBGlobalDataBase *", 0, 0, (void*)"Chemistry::OpenBabel::OBGlobalDataBase", 0};
static swig_type_info _swigt__p_OpenBabel__OBInternalCoord = {"_p_OpenBabel__OBInternalCoord", "OpenBabel::OBInternalCoord *", 0, 0, (void*)"Chemistry::OpenBabel::OBInternalCoord", 0};
static swig_type_info _swigt__p_OpenBabel__OBIsotopeTable = {"_p_OpenBabel__OBIsotopeTable", "OpenBabel::OBIsotopeTable *", 0, 0, (void*)"Chemistry::OpenBabel::OBIsotopeTable", 0};
static swig_type_info _swigt__p_OpenBabel__OBMessageHandler = {"_p_OpenBabel__OBMessageHandler", "OpenBabel::OBMessageHandler *", 0, 0, (void*)"Chemistry::OpenBabel::OBMessageHandler", 0};
static swig_type_info _swigt__p_OpenBabel__OBMol = {"_p_OpenBabel__OBMol", "OpenBabel::OBMol *", 0, 0, (void*)"Chemistry::OpenBabel::OBMol", 0};
static swig_type_info _swigt__p_OpenBabel__OBMolAtomBFSIter = {"_p_OpenBabel__OBMolAtomBFSIter", "OpenBabel::OBMolAtomBFSIter *", 0, 0, (void*)"Chemistry::OpenBabel::OBMolAtomBFSIter", 0};
static swig_type_info _swigt__p_OpenBabel__OBMolAtomDFSIter = {"_p_OpenBabel__OBMolAtomDFSIter", "OpenBabel::OBMolAtomDFSIter *", 0, 0, (void*)"Chemistry::OpenBabel::OBMolAtomDFSIter", 0};
static swig_type_info _swigt__p_OpenBabel__OBMolAtomIter = {"_p_OpenBabel__OBMolAtomIter", "OpenBabel::OBMolAtomIter *", 0, 0, (void*)"Chemistry::OpenBabel::OBMolAtomIter", 0};
static swig_type_info _swigt__p_OpenBabel__OBMolBondIter = {"_p_OpenBabel__OBMolBondIter", "OpenBabel::OBMolBondIter *", 0, 0, (void*)"Chemistry::OpenBabel::OBMolBondIter", 0};
static swig_type_info _swigt__p_OpenBabel__OBPairData = {"_p_OpenBabel__OBPairData", "OpenBabel::OBPairData *", 0, 0, (void*)"Chemistry::OpenBabel::OBPairData", 0};
static swig_type_info _swigt__p_OpenBabel__OBPairTemplateTdouble_t = {"_p_OpenBabel__OBPairTemplateTdouble_t", "OpenBabel::OBPairTemplate<double > *|OpenBabel::OBPairFloatingPoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__OBPairTemplateTint_t = {"_p_OpenBabel__OBPairTemplateTint_t", "OpenBabel::OBPairTemplate<int > *|OpenBabel::OBPairInteger *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__OBRTree = {"_p_OpenBabel__OBRTree", "OpenBabel::OBRTree *", 0, 0, (void*)"Chemistry::OpenBabel::OBRTree", 0};
static swig_type_info _swigt__p_OpenBabel__OBRandom = {"_p_OpenBabel__OBRandom", "OpenBabel::OBRandom *", 0, 0, (void*)"Chemistry::OpenBabel::OBRandom", 0};
static swig_type_info _swigt__p_OpenBabel__OBResidue = {"_p_OpenBabel__OBResidue", "OpenBabel::OBResidue *", 0, 0, (void*)"Chemistry::OpenBabel::OBResidue", 0};
static swig_type_info _swigt__p_OpenBabel__OBResidueAtomIter = {"_p_OpenBabel__OBResidueAtomIter", "OpenBabel::OBResidueAtomIter *", 0, 0, (void*)"Chemistry::OpenBabel::OBResidueAtomIter", 0};
static swig_type_info _swigt__p_OpenBabel__OBResidueData = {"_p_OpenBabel__OBResidueData", "OpenBabel::OBResidueData *", 0, 0, (void*)"Chemistry::OpenBabel::OBResidueData", 0};
static swig_type_info _swigt__p_OpenBabel__OBResidueIter = {"_p_OpenBabel__OBResidueIter", "OpenBabel::OBResidueIter *", 0, 0, (void*)"Chemistry::OpenBabel::OBResidueIter", 0};
static swig_type_info _swigt__p_OpenBabel__OBRing = {"_p_OpenBabel__OBRing", "OpenBabel::OBRing *", 0, 0, (void*)"Chemistry::OpenBabel::OBRing", 0};
static swig_type_info _swigt__p_OpenBabel__OBRingData = {"_p_OpenBabel__OBRingData", "OpenBabel::OBRingData *", 0, 0, (void*)"Chemistry::OpenBabel::OBRingData", 0};
static swig_type_info _swigt__p_OpenBabel__OBRingSearch = {"_p_OpenBabel__OBRingSearch", "OpenBabel::OBRingSearch *", 0, 0, (void*)"Chemistry::OpenBabel::OBRingSearch", 0};
static swig_type_info _swigt__p_OpenBabel__OBSSMatch = {"_p_OpenBabel__OBSSMatch", "OpenBabel::OBSSMatch *", 0, 0, (void*)"Chemistry::OpenBabel::OBSSMatch", 0};
static swig_type_info _swigt__p_OpenBabel__OBSerialNums = {"_p_OpenBabel__OBSerialNums", "OpenBabel::OBSerialNums *", 0, 0, (void*)"Chemistry::OpenBabel::OBSerialNums", 0};
static swig_type_info _swigt__p_OpenBabel__OBSetData = {"_p_OpenBabel__OBSetData", "OpenBabel::OBSetData *", 0, 0, (void*)"Chemistry::OpenBabel::OBSetData", 0};
static swig_type_info _swigt__p_OpenBabel__OBSmartsPattern = {"_p_OpenBabel__OBSmartsPattern", "OpenBabel::OBSmartsPattern *", 0, 0, (void*)"Chemistry::OpenBabel::OBSmartsPattern", 0};
static swig_type_info _swigt__p_OpenBabel__OBSqrtTbl = {"_p_OpenBabel__OBSqrtTbl", "OpenBabel::OBSqrtTbl *", 0, 0, (void*)"Chemistry::OpenBabel::OBSqrtTbl", 0};
static swig_type_info _swigt__p_OpenBabel__OBStopwatch = {"_p_OpenBabel__OBStopwatch", "OpenBabel::OBStopwatch *", 0, 0, (void*)"Chemistry::OpenBabel::OBStopwatch", 0};
static swig_type_info _swigt__p_OpenBabel__OBSymmetryData = {"_p_OpenBabel__OBSymmetryData", "OpenBabel::OBSymmetryData *", 0, 0, (void*)"Chemistry::OpenBabel::OBSymmetryData", 0};
static swig_type_info _swigt__p_OpenBabel__OBTorsion = {"_p_OpenBabel__OBTorsion", "OpenBabel::OBTorsion *", 0, 0, (void*)"Chemistry::OpenBabel::OBTorsion", 0};
static swig_type_info _swigt__p_OpenBabel__OBTorsionData = {"_p_OpenBabel__OBTorsionData", "OpenBabel::OBTorsionData *", 0, 0, (void*)"Chemistry::OpenBabel::OBTorsionData", 0};
static swig_type_info _swigt__p_OpenBabel__OBTypeTable = {"_p_OpenBabel__OBTypeTable", "OpenBabel::OBTypeTable *", 0, 0, (void*)"Chemistry::OpenBabel::OBTypeTable", 0};
static swig_type_info _swigt__p_OpenBabel__OBUnitCell = {"_p_OpenBabel__OBUnitCell", "OpenBabel::OBUnitCell *", 0, 0, (void*)"Chemistry::OpenBabel::OBUnitCell", 0};
static swig_type_info _swigt__p_OpenBabel__OBVirtualBond = {"_p_OpenBabel__OBVirtualBond", "OpenBabel::OBVirtualBond *", 0, 0, (void*)"Chemistry::OpenBabel::OBVirtualBond", 0};
static swig_type_info _swigt__p_OpenBabel__Pattern = {"_p_OpenBabel__Pattern", "OpenBabel::Pattern *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__Template = {"_p_OpenBabel__Template", "OpenBabel::Template *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__matrix3x3 = {"_p_OpenBabel__matrix3x3", "OpenBabel::matrix3x3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__obLogBuf = {"_p_OpenBabel__obLogBuf", "OpenBabel::obLogBuf *", 0, 0, (void*)"Chemistry::OpenBabel::obLogBuf", 0};
static swig_type_info _swigt__p_OpenBabel__quadTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t = {"_p_OpenBabel__quadTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t", "OpenBabel::quad<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t = {"_p_OpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t", "OpenBabel::triple<OpenBabel::OBAtom *,OpenBabel::OBAtom *,OpenBabel::OBAtom * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_OpenBabel__vector3 = {"_p_OpenBabel__vector3", "OpenBabel::vector3 *", 0, 0, (void*)"Chemistry::OpenBabel::vector3", 0};
static swig_type_info _swigt__p_a_3__double = {"_p_a_3__double", "double (*)[3]", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_a_4__char = {"_p_a_4__char", "char (*)[4]", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_OpenBabel__OBFingerprint = {"_p_p_OpenBabel__OBFingerprint", "OpenBabel::OBFingerprint **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_OpenBabel__OBFormat = {"_p_p_OpenBabel__OBFormat", "OpenBabel::OBFormat **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_double = {"_p_p_double", "double **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_int = {"_p_p_int", "int **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__dequeTint_t = {"_p_std__dequeTint_t", "std::deque<int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ifstream = {"_p_std__ifstream", "std::ifstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__istream = {"_p_std__istream", "std::istream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapTchar_const_p_OpenBabel__OBFormat_p_OpenBabel__CharPtrLess_t = {"_p_std__mapTchar_const_p_OpenBabel__OBFormat_p_OpenBabel__CharPtrLess_t", "std::map<char const *,OpenBabel::OBFormat *,OpenBabel::CharPtrLess > *|OpenBabel::FMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapTint_OpenBabel__OBAtom_p_t = {"_p_std__mapTint_OpenBabel__OBAtom_p_t", "std::map<int,OpenBabel::OBAtom * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapTstd__string_std__string_t = {"_p_std__mapTstd__string_std__string_t", "std::map<std::string,std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__multimapTdouble_unsigned_int_t = {"_p_std__multimapTdouble_unsigned_int_t", "std::multimap<double,unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__out_of_range = {"_p_std__out_of_range", "std::out_of_range *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__pairTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t = {"_p_std__pairTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t", "std::pair<OpenBabel::OBAtom *,OpenBabel::OBAtom * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__streampos = {"_p_std__streampos", "std::streampos *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__type_info = {"_p_std__type_info", "std::type_info *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBAtom_p_t = {"_p_std__vectorTOpenBabel__OBAtom_p_t", "std::vector<OpenBabel::OBAtom * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBAtom_p_t__iterator = {"_p_std__vectorTOpenBabel__OBAtom_p_t__iterator", "std::vector<OpenBabel::OBAtom * >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBBond_p_t = {"_p_std__vectorTOpenBabel__OBBond_p_t", "std::vector<OpenBabel::OBBond * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBBond_p_t__iterator = {"_p_std__vectorTOpenBabel__OBBond_p_t__iterator", "std::vector<OpenBabel::OBBond * >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBBond_t = {"_p_std__vectorTOpenBabel__OBBond_t", "std::vector<OpenBabel::OBBond > *", 0, 0, (void*)"Chemistry::OpenBabel::vectorBond", 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBExternalBond_t = {"_p_std__vectorTOpenBabel__OBExternalBond_t", "std::vector<OpenBabel::OBExternalBond > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBGenericData_p_t = {"_p_std__vectorTOpenBabel__OBGenericData_p_t", "std::vector<OpenBabel::OBGenericData * > *", 0, 0, (void*)"Chemistry::OpenBabel::vectorData", 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBGenericData_p_t__iterator = {"_p_std__vectorTOpenBabel__OBGenericData_p_t__iterator", "std::vector<OpenBabel::OBGenericData * >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBInternalCoord_p_t = {"_p_std__vectorTOpenBabel__OBInternalCoord_p_t", "std::vector<OpenBabel::OBInternalCoord * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBInternalCoord_p_t__iterator = {"_p_std__vectorTOpenBabel__OBInternalCoord_p_t__iterator", "std::vector<OpenBabel::OBInternalCoord * >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBMol_t = {"_p_std__vectorTOpenBabel__OBMol_t", "std::vector<OpenBabel::OBMol > *", 0, 0, (void*)"Chemistry::OpenBabel::vectorMol", 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBResidue_p_t__iterator = {"_p_std__vectorTOpenBabel__OBResidue_p_t__iterator", "std::vector<OpenBabel::OBResidue * >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBResidue_t = {"_p_std__vectorTOpenBabel__OBResidue_t", "std::vector<OpenBabel::OBResidue > *", 0, 0, (void*)"Chemistry::OpenBabel::vectorResidue", 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBRing_p_t = {"_p_std__vectorTOpenBabel__OBRing_p_t", "std::vector<OpenBabel::OBRing * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBRing_p_t__iterator = {"_p_std__vectorTOpenBabel__OBRing_p_t__iterator", "std::vector<OpenBabel::OBRing * >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBRing_t = {"_p_std__vectorTOpenBabel__OBRing_t", "std::vector<OpenBabel::OBRing > *", 0, 0, (void*)"Chemistry::OpenBabel::vectorRing", 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__OBTorsion_t = {"_p_std__vectorTOpenBabel__OBTorsion_t", "std::vector<OpenBabel::OBTorsion > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_double_t_t = {"_p_std__vectorTOpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_double_t_t", "std::vector<OpenBabel::triple<OpenBabel::OBAtom *,OpenBabel::OBAtom *,double > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTOpenBabel__vector3_t = {"_p_std__vectorTOpenBabel__vector3_t", "std::vector<OpenBabel::vector3 > *", 0, 0, (void*)"Chemistry::OpenBabel::vVector3", 0};
static swig_type_info _swigt__p_std__vectorTdouble_p_t = {"_p_std__vectorTdouble_p_t", "std::vector<double * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTdouble_p_t__iterator = {"_p_std__vectorTdouble_p_t__iterator", "std::vector<double * >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTdouble_t = {"_p_std__vectorTdouble_t", "std::vector<double > *", 0, 0, (void*)"Chemistry::OpenBabel::vectorDouble", 0};
static swig_type_info _swigt__p_std__vectorTint_t = {"_p_std__vectorTint_t", "std::vector<int > *", 0, 0, (void*)"Chemistry::OpenBabel::vectorInt", 0};
static swig_type_info _swigt__p_std__vectorTstd__pairTint_int_t_t = {"_p_std__vectorTstd__pairTint_int_t_t", "std::vector<std::pair<int,int > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTstd__pairTstd__string_std__string_t_t = {"_p_std__vectorTstd__pairTstd__string_std__string_t_t", "std::vector<std::pair<std::string,std::string > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTstd__string_t = {"_p_std__vectorTstd__string_t", "std::vector<std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTstd__vectorTOpenBabel__vector3_t_t = {"_p_std__vectorTstd__vectorTOpenBabel__vector3_t_t", "std::vector<std::vector<OpenBabel::vector3 > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTstd__vectorTint_t_t = {"_p_std__vectorTstd__vectorTint_t_t", "std::vector<std::vector<int > > *", 0, 0, (void*)"Chemistry::OpenBabel::vvInt", 0};
static swig_type_info _swigt__p_std__vectorTstd__vectorTint_t_t__iterator = {"_p_std__vectorTstd__vectorTint_t_t__iterator", "std::vector<std::vector<int > >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTstd__vectorTunsigned_int_t_t = {"_p_std__vectorTstd__vectorTunsigned_int_t_t", "std::vector<std::vector<unsigned int > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTunsigned_int_t = {"_p_std__vectorTunsigned_int_t", "std::vector<unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorTunsigned_short_t = {"_p_std__vectorTunsigned_short_t", "std::vector<unsigned short > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_OpenBabel__CharPtrLess,
  &_swigt__p_OpenBabel__DoubleType,
  &_swigt__p_OpenBabel__FMapType__iterator,
  &_swigt__p_OpenBabel__FastSearch,
  &_swigt__p_OpenBabel__FastSearchIndexer,
  &_swigt__p_OpenBabel__FptIndex,
  &_swigt__p_OpenBabel__FptIndexHeader,
  &_swigt__p_OpenBabel__OBAngle,
  &_swigt__p_OpenBabel__OBAngleData,
  &_swigt__p_OpenBabel__OBAromaticTyper,
  &_swigt__p_OpenBabel__OBAtom,
  &_swigt__p_OpenBabel__OBAtomAtomIter,
  &_swigt__p_OpenBabel__OBAtomBondIter,
  &_swigt__p_OpenBabel__OBAtomTyper,
  &_swigt__p_OpenBabel__OBBase,
  &_swigt__p_OpenBabel__OBBitVec,
  &_swigt__p_OpenBabel__OBBond,
  &_swigt__p_OpenBabel__OBChainsParser,
  &_swigt__p_OpenBabel__OBChiralData,
  &_swigt__p_OpenBabel__OBCommentData,
  &_swigt__p_OpenBabel__OBConformerData,
  &_swigt__p_OpenBabel__OBConversion,
  &_swigt__p_OpenBabel__OBElement,
  &_swigt__p_OpenBabel__OBElementTable,
  &_swigt__p_OpenBabel__OBError,
  &_swigt__p_OpenBabel__OBExternalBond,
  &_swigt__p_OpenBabel__OBExternalBondData,
  &_swigt__p_OpenBabel__OBFingerprint,
  &_swigt__p_OpenBabel__OBFormat,
  &_swigt__p_OpenBabel__OBGenericData,
  &_swigt__p_OpenBabel__OBGlobalDataBase,
  &_swigt__p_OpenBabel__OBInternalCoord,
  &_swigt__p_OpenBabel__OBIsotopeTable,
  &_swigt__p_OpenBabel__OBMessageHandler,
  &_swigt__p_OpenBabel__OBMol,
  &_swigt__p_OpenBabel__OBMolAtomBFSIter,
  &_swigt__p_OpenBabel__OBMolAtomDFSIter,
  &_swigt__p_OpenBabel__OBMolAtomIter,
  &_swigt__p_OpenBabel__OBMolBondIter,
  &_swigt__p_OpenBabel__OBPairData,
  &_swigt__p_OpenBabel__OBPairTemplateTdouble_t,
  &_swigt__p_OpenBabel__OBPairTemplateTint_t,
  &_swigt__p_OpenBabel__OBRTree,
  &_swigt__p_OpenBabel__OBRandom,
  &_swigt__p_OpenBabel__OBResidue,
  &_swigt__p_OpenBabel__OBResidueAtomIter,
  &_swigt__p_OpenBabel__OBResidueData,
  &_swigt__p_OpenBabel__OBResidueIter,
  &_swigt__p_OpenBabel__OBRing,
  &_swigt__p_OpenBabel__OBRingData,
  &_swigt__p_OpenBabel__OBRingSearch,
  &_swigt__p_OpenBabel__OBSSMatch,
  &_swigt__p_OpenBabel__OBSerialNums,
  &_swigt__p_OpenBabel__OBSetData,
  &_swigt__p_OpenBabel__OBSmartsPattern,
  &_swigt__p_OpenBabel__OBSqrtTbl,
  &_swigt__p_OpenBabel__OBStopwatch,
  &_swigt__p_OpenBabel__OBSymmetryData,
  &_swigt__p_OpenBabel__OBTorsion,
  &_swigt__p_OpenBabel__OBTorsionData,
  &_swigt__p_OpenBabel__OBTypeTable,
  &_swigt__p_OpenBabel__OBUnitCell,
  &_swigt__p_OpenBabel__OBVirtualBond,
  &_swigt__p_OpenBabel__Pattern,
  &_swigt__p_OpenBabel__Template,
  &_swigt__p_OpenBabel__matrix3x3,
  &_swigt__p_OpenBabel__obLogBuf,
  &_swigt__p_OpenBabel__quadTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t,
  &_swigt__p_OpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t,
  &_swigt__p_OpenBabel__vector3,
  &_swigt__p_a_3__double,
  &_swigt__p_a_4__char,
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_int,
  &_swigt__p_p_OpenBabel__OBFingerprint,
  &_swigt__p_p_OpenBabel__OBFormat,
  &_swigt__p_p_double,
  &_swigt__p_p_int,
  &_swigt__p_std__dequeTint_t,
  &_swigt__p_std__ifstream,
  &_swigt__p_std__istream,
  &_swigt__p_std__mapTchar_const_p_OpenBabel__OBFormat_p_OpenBabel__CharPtrLess_t,
  &_swigt__p_std__mapTint_OpenBabel__OBAtom_p_t,
  &_swigt__p_std__mapTstd__string_std__string_t,
  &_swigt__p_std__multimapTdouble_unsigned_int_t,
  &_swigt__p_std__ostream,
  &_swigt__p_std__out_of_range,
  &_swigt__p_std__pairTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t,
  &_swigt__p_std__streampos,
  &_swigt__p_std__string,
  &_swigt__p_std__type_info,
  &_swigt__p_std__vectorTOpenBabel__OBAtom_p_t,
  &_swigt__p_std__vectorTOpenBabel__OBAtom_p_t__iterator,
  &_swigt__p_std__vectorTOpenBabel__OBBond_p_t,
  &_swigt__p_std__vectorTOpenBabel__OBBond_p_t__iterator,
  &_swigt__p_std__vectorTOpenBabel__OBBond_t,
  &_swigt__p_std__vectorTOpenBabel__OBExternalBond_t,
  &_swigt__p_std__vectorTOpenBabel__OBGenericData_p_t,
  &_swigt__p_std__vectorTOpenBabel__OBGenericData_p_t__iterator,
  &_swigt__p_std__vectorTOpenBabel__OBInternalCoord_p_t,
  &_swigt__p_std__vectorTOpenBabel__OBInternalCoord_p_t__iterator,
  &_swigt__p_std__vectorTOpenBabel__OBMol_t,
  &_swigt__p_std__vectorTOpenBabel__OBResidue_p_t__iterator,
  &_swigt__p_std__vectorTOpenBabel__OBResidue_t,
  &_swigt__p_std__vectorTOpenBabel__OBRing_p_t,
  &_swigt__p_std__vectorTOpenBabel__OBRing_p_t__iterator,
  &_swigt__p_std__vectorTOpenBabel__OBRing_t,
  &_swigt__p_std__vectorTOpenBabel__OBTorsion_t,
  &_swigt__p_std__vectorTOpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_double_t_t,
  &_swigt__p_std__vectorTOpenBabel__vector3_t,
  &_swigt__p_std__vectorTdouble_p_t,
  &_swigt__p_std__vectorTdouble_p_t__iterator,
  &_swigt__p_std__vectorTdouble_t,
  &_swigt__p_std__vectorTint_t,
  &_swigt__p_std__vectorTstd__pairTint_int_t_t,
  &_swigt__p_std__vectorTstd__pairTstd__string_std__string_t_t,
  &_swigt__p_std__vectorTstd__string_t,
  &_swigt__p_std__vectorTstd__vectorTOpenBabel__vector3_t_t,
  &_swigt__p_std__vectorTstd__vectorTint_t_t,
  &_swigt__p_std__vectorTstd__vectorTint_t_t__iterator,
  &_swigt__p_std__vectorTstd__vectorTunsigned_int_t_t,
  &_swigt__p_std__vectorTunsigned_int_t,
  &_swigt__p_std__vectorTunsigned_short_t,
  &_swigt__p_unsigned_int,
};

static swig_cast_info _swigc__p_OpenBabel__CharPtrLess[] = {  {&_swigt__p_OpenBabel__CharPtrLess, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__DoubleType[] = {  {&_swigt__p_OpenBabel__DoubleType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__FMapType__iterator[] = {  {&_swigt__p_OpenBabel__FMapType__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__FastSearch[] = {  {&_swigt__p_OpenBabel__FastSearch, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__FastSearchIndexer[] = {  {&_swigt__p_OpenBabel__FastSearchIndexer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__FptIndex[] = {  {&_swigt__p_OpenBabel__FptIndex, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__FptIndexHeader[] = {  {&_swigt__p_OpenBabel__FptIndexHeader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBAngle[] = {  {&_swigt__p_OpenBabel__OBAngle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBAngleData[] = {  {&_swigt__p_OpenBabel__OBAngleData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBAromaticTyper[] = {  {&_swigt__p_OpenBabel__OBAromaticTyper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBAtom[] = {  {&_swigt__p_OpenBabel__OBAtom, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBAtomAtomIter[] = {  {&_swigt__p_OpenBabel__OBAtomAtomIter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBAtomBondIter[] = {  {&_swigt__p_OpenBabel__OBAtomBondIter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBAtomTyper[] = {  {&_swigt__p_OpenBabel__OBAtomTyper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBBase[] = {  {&_swigt__p_OpenBabel__OBMol, _p_OpenBabel__OBMolTo_p_OpenBabel__OBBase, 0, 0},  {&_swigt__p_OpenBabel__OBResidue, _p_OpenBabel__OBResidueTo_p_OpenBabel__OBBase, 0, 0},  {&_swigt__p_OpenBabel__OBBase, 0, 0, 0},  {&_swigt__p_OpenBabel__OBBond, _p_OpenBabel__OBBondTo_p_OpenBabel__OBBase, 0, 0},  {&_swigt__p_OpenBabel__OBAtom, _p_OpenBabel__OBAtomTo_p_OpenBabel__OBBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBBitVec[] = {  {&_swigt__p_OpenBabel__OBBitVec, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBBond[] = {  {&_swigt__p_OpenBabel__OBBond, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBChainsParser[] = {  {&_swigt__p_OpenBabel__OBChainsParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBChiralData[] = {  {&_swigt__p_OpenBabel__OBChiralData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBCommentData[] = {  {&_swigt__p_OpenBabel__OBCommentData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBConformerData[] = {  {&_swigt__p_OpenBabel__OBConformerData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBConversion[] = {  {&_swigt__p_OpenBabel__OBConversion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBElement[] = {  {&_swigt__p_OpenBabel__OBElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBElementTable[] = {  {&_swigt__p_OpenBabel__OBElementTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBError[] = {  {&_swigt__p_OpenBabel__OBError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBExternalBond[] = {  {&_swigt__p_OpenBabel__OBExternalBond, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBExternalBondData[] = {  {&_swigt__p_OpenBabel__OBExternalBondData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBFingerprint[] = {  {&_swigt__p_OpenBabel__OBFingerprint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBFormat[] = {  {&_swigt__p_OpenBabel__OBFormat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBGenericData[] = {  {&_swigt__p_OpenBabel__OBTorsionData, _p_OpenBabel__OBTorsionDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBPairData, _p_OpenBabel__OBPairDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBAngleData, _p_OpenBabel__OBAngleDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBChiralData, _p_OpenBabel__OBChiralDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBRingData, _p_OpenBabel__OBRingDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBSerialNums, _p_OpenBabel__OBSerialNumsTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBExternalBondData, _p_OpenBabel__OBExternalBondDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBSetData, _p_OpenBabel__OBSetDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBSymmetryData, _p_OpenBabel__OBSymmetryDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBCommentData, _p_OpenBabel__OBCommentDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBVirtualBond, _p_OpenBabel__OBVirtualBondTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBConformerData, _p_OpenBabel__OBConformerDataTo_p_OpenBabel__OBGenericData, 0, 0},  {&_swigt__p_OpenBabel__OBGenericData, 0, 0, 0},  {&_swigt__p_OpenBabel__OBUnitCell, _p_OpenBabel__OBUnitCellTo_p_OpenBabel__OBGenericData, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBGlobalDataBase[] = {  {&_swigt__p_OpenBabel__OBAtomTyper, _p_OpenBabel__OBAtomTyperTo_p_OpenBabel__OBGlobalDataBase, 0, 0},  {&_swigt__p_OpenBabel__OBAromaticTyper, _p_OpenBabel__OBAromaticTyperTo_p_OpenBabel__OBGlobalDataBase, 0, 0},  {&_swigt__p_OpenBabel__OBGlobalDataBase, 0, 0, 0},  {&_swigt__p_OpenBabel__OBResidueData, _p_OpenBabel__OBResidueDataTo_p_OpenBabel__OBGlobalDataBase, 0, 0},  {&_swigt__p_OpenBabel__OBIsotopeTable, _p_OpenBabel__OBIsotopeTableTo_p_OpenBabel__OBGlobalDataBase, 0, 0},  {&_swigt__p_OpenBabel__OBTypeTable, _p_OpenBabel__OBTypeTableTo_p_OpenBabel__OBGlobalDataBase, 0, 0},  {&_swigt__p_OpenBabel__OBElementTable, _p_OpenBabel__OBElementTableTo_p_OpenBabel__OBGlobalDataBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBInternalCoord[] = {  {&_swigt__p_OpenBabel__OBInternalCoord, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBIsotopeTable[] = {  {&_swigt__p_OpenBabel__OBIsotopeTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBMessageHandler[] = {  {&_swigt__p_OpenBabel__OBMessageHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBMol[] = {  {&_swigt__p_OpenBabel__OBMol, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBMolAtomBFSIter[] = {  {&_swigt__p_OpenBabel__OBMolAtomBFSIter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBMolAtomDFSIter[] = {  {&_swigt__p_OpenBabel__OBMolAtomDFSIter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBMolAtomIter[] = {  {&_swigt__p_OpenBabel__OBMolAtomIter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBMolBondIter[] = {  {&_swigt__p_OpenBabel__OBMolBondIter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBPairData[] = {  {&_swigt__p_OpenBabel__OBPairData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBPairTemplateTdouble_t[] = {  {&_swigt__p_OpenBabel__OBPairTemplateTdouble_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBPairTemplateTint_t[] = {  {&_swigt__p_OpenBabel__OBPairTemplateTint_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBRTree[] = {  {&_swigt__p_OpenBabel__OBRTree, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBRandom[] = {  {&_swigt__p_OpenBabel__OBRandom, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBResidue[] = {  {&_swigt__p_OpenBabel__OBResidue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBResidueAtomIter[] = {  {&_swigt__p_OpenBabel__OBResidueAtomIter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBResidueData[] = {  {&_swigt__p_OpenBabel__OBResidueData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBResidueIter[] = {  {&_swigt__p_OpenBabel__OBResidueIter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBRing[] = {  {&_swigt__p_OpenBabel__OBRing, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBRingData[] = {  {&_swigt__p_OpenBabel__OBRingData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBRingSearch[] = {  {&_swigt__p_OpenBabel__OBRingSearch, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBSSMatch[] = {  {&_swigt__p_OpenBabel__OBSSMatch, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBSerialNums[] = {  {&_swigt__p_OpenBabel__OBSerialNums, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBSetData[] = {  {&_swigt__p_OpenBabel__OBSetData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBSmartsPattern[] = {  {&_swigt__p_OpenBabel__OBSmartsPattern, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBSqrtTbl[] = {  {&_swigt__p_OpenBabel__OBSqrtTbl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBStopwatch[] = {  {&_swigt__p_OpenBabel__OBStopwatch, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBSymmetryData[] = {  {&_swigt__p_OpenBabel__OBSymmetryData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBTorsion[] = {  {&_swigt__p_OpenBabel__OBTorsion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBTorsionData[] = {  {&_swigt__p_OpenBabel__OBTorsionData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBTypeTable[] = {  {&_swigt__p_OpenBabel__OBTypeTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBUnitCell[] = {  {&_swigt__p_OpenBabel__OBUnitCell, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__OBVirtualBond[] = {  {&_swigt__p_OpenBabel__OBVirtualBond, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__Pattern[] = {  {&_swigt__p_OpenBabel__Pattern, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__Template[] = {  {&_swigt__p_OpenBabel__Template, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__matrix3x3[] = {  {&_swigt__p_OpenBabel__matrix3x3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__obLogBuf[] = {  {&_swigt__p_OpenBabel__obLogBuf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__quadTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t[] = {  {&_swigt__p_OpenBabel__quadTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t[] = {  {&_swigt__p_OpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_OpenBabel__vector3[] = {  {&_swigt__p_OpenBabel__vector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_a_3__double[] = {  {&_swigt__p_a_3__double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_a_4__char[] = {  {&_swigt__p_a_4__char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_OpenBabel__OBFingerprint[] = {  {&_swigt__p_p_OpenBabel__OBFingerprint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_OpenBabel__OBFormat[] = {  {&_swigt__p_p_OpenBabel__OBFormat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_double[] = {  {&_swigt__p_p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_int[] = {  {&_swigt__p_p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__dequeTint_t[] = {  {&_swigt__p_std__dequeTint_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ifstream[] = {  {&_swigt__p_std__ifstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__istream[] = {  {&_swigt__p_std__istream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapTchar_const_p_OpenBabel__OBFormat_p_OpenBabel__CharPtrLess_t[] = {  {&_swigt__p_std__mapTchar_const_p_OpenBabel__OBFormat_p_OpenBabel__CharPtrLess_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapTint_OpenBabel__OBAtom_p_t[] = {  {&_swigt__p_std__mapTint_OpenBabel__OBAtom_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapTstd__string_std__string_t[] = {  {&_swigt__p_std__mapTstd__string_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__multimapTdouble_unsigned_int_t[] = {  {&_swigt__p_std__multimapTdouble_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__out_of_range[] = {  {&_swigt__p_std__out_of_range, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__pairTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t[] = {  {&_swigt__p_std__pairTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__streampos[] = {  {&_swigt__p_std__streampos, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__type_info[] = {  {&_swigt__p_std__type_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBAtom_p_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBAtom_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBAtom_p_t__iterator[] = {  {&_swigt__p_std__vectorTOpenBabel__OBAtom_p_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBBond_p_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBBond_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBBond_p_t__iterator[] = {  {&_swigt__p_std__vectorTOpenBabel__OBBond_p_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBBond_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBBond_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBExternalBond_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBExternalBond_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBGenericData_p_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBGenericData_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBGenericData_p_t__iterator[] = {  {&_swigt__p_std__vectorTOpenBabel__OBGenericData_p_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBInternalCoord_p_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBInternalCoord_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBInternalCoord_p_t__iterator[] = {  {&_swigt__p_std__vectorTOpenBabel__OBInternalCoord_p_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBMol_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBMol_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBResidue_p_t__iterator[] = {  {&_swigt__p_std__vectorTOpenBabel__OBResidue_p_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBResidue_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBResidue_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBRing_p_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBRing_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBRing_p_t__iterator[] = {  {&_swigt__p_std__vectorTOpenBabel__OBRing_p_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBRing_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBRing_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__OBTorsion_t[] = {  {&_swigt__p_std__vectorTOpenBabel__OBTorsion_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_double_t_t[] = {  {&_swigt__p_std__vectorTOpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTOpenBabel__vector3_t[] = {  {&_swigt__p_std__vectorTOpenBabel__vector3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTdouble_p_t[] = {  {&_swigt__p_std__vectorTdouble_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTdouble_p_t__iterator[] = {  {&_swigt__p_std__vectorTdouble_p_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTdouble_t[] = {  {&_swigt__p_std__vectorTdouble_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTint_t[] = {  {&_swigt__p_std__vectorTint_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__pairTint_int_t_t[] = {  {&_swigt__p_std__vectorTstd__pairTint_int_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__pairTstd__string_std__string_t_t[] = {  {&_swigt__p_std__vectorTstd__pairTstd__string_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__string_t[] = {  {&_swigt__p_std__vectorTstd__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__vectorTOpenBabel__vector3_t_t[] = {  {&_swigt__p_std__vectorTstd__vectorTOpenBabel__vector3_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__vectorTint_t_t[] = {  {&_swigt__p_std__vectorTstd__vectorTint_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__vectorTint_t_t__iterator[] = {  {&_swigt__p_std__vectorTstd__vectorTint_t_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTstd__vectorTunsigned_int_t_t[] = {  {&_swigt__p_std__vectorTstd__vectorTunsigned_int_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTunsigned_int_t[] = {  {&_swigt__p_std__vectorTunsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorTunsigned_short_t[] = {  {&_swigt__p_std__vectorTunsigned_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_OpenBabel__CharPtrLess,
  _swigc__p_OpenBabel__DoubleType,
  _swigc__p_OpenBabel__FMapType__iterator,
  _swigc__p_OpenBabel__FastSearch,
  _swigc__p_OpenBabel__FastSearchIndexer,
  _swigc__p_OpenBabel__FptIndex,
  _swigc__p_OpenBabel__FptIndexHeader,
  _swigc__p_OpenBabel__OBAngle,
  _swigc__p_OpenBabel__OBAngleData,
  _swigc__p_OpenBabel__OBAromaticTyper,
  _swigc__p_OpenBabel__OBAtom,
  _swigc__p_OpenBabel__OBAtomAtomIter,
  _swigc__p_OpenBabel__OBAtomBondIter,
  _swigc__p_OpenBabel__OBAtomTyper,
  _swigc__p_OpenBabel__OBBase,
  _swigc__p_OpenBabel__OBBitVec,
  _swigc__p_OpenBabel__OBBond,
  _swigc__p_OpenBabel__OBChainsParser,
  _swigc__p_OpenBabel__OBChiralData,
  _swigc__p_OpenBabel__OBCommentData,
  _swigc__p_OpenBabel__OBConformerData,
  _swigc__p_OpenBabel__OBConversion,
  _swigc__p_OpenBabel__OBElement,
  _swigc__p_OpenBabel__OBElementTable,
  _swigc__p_OpenBabel__OBError,
  _swigc__p_OpenBabel__OBExternalBond,
  _swigc__p_OpenBabel__OBExternalBondData,
  _swigc__p_OpenBabel__OBFingerprint,
  _swigc__p_OpenBabel__OBFormat,
  _swigc__p_OpenBabel__OBGenericData,
  _swigc__p_OpenBabel__OBGlobalDataBase,
  _swigc__p_OpenBabel__OBInternalCoord,
  _swigc__p_OpenBabel__OBIsotopeTable,
  _swigc__p_OpenBabel__OBMessageHandler,
  _swigc__p_OpenBabel__OBMol,
  _swigc__p_OpenBabel__OBMolAtomBFSIter,
  _swigc__p_OpenBabel__OBMolAtomDFSIter,
  _swigc__p_OpenBabel__OBMolAtomIter,
  _swigc__p_OpenBabel__OBMolBondIter,
  _swigc__p_OpenBabel__OBPairData,
  _swigc__p_OpenBabel__OBPairTemplateTdouble_t,
  _swigc__p_OpenBabel__OBPairTemplateTint_t,
  _swigc__p_OpenBabel__OBRTree,
  _swigc__p_OpenBabel__OBRandom,
  _swigc__p_OpenBabel__OBResidue,
  _swigc__p_OpenBabel__OBResidueAtomIter,
  _swigc__p_OpenBabel__OBResidueData,
  _swigc__p_OpenBabel__OBResidueIter,
  _swigc__p_OpenBabel__OBRing,
  _swigc__p_OpenBabel__OBRingData,
  _swigc__p_OpenBabel__OBRingSearch,
  _swigc__p_OpenBabel__OBSSMatch,
  _swigc__p_OpenBabel__OBSerialNums,
  _swigc__p_OpenBabel__OBSetData,
  _swigc__p_OpenBabel__OBSmartsPattern,
  _swigc__p_OpenBabel__OBSqrtTbl,
  _swigc__p_OpenBabel__OBStopwatch,
  _swigc__p_OpenBabel__OBSymmetryData,
  _swigc__p_OpenBabel__OBTorsion,
  _swigc__p_OpenBabel__OBTorsionData,
  _swigc__p_OpenBabel__OBTypeTable,
  _swigc__p_OpenBabel__OBUnitCell,
  _swigc__p_OpenBabel__OBVirtualBond,
  _swigc__p_OpenBabel__Pattern,
  _swigc__p_OpenBabel__Template,
  _swigc__p_OpenBabel__matrix3x3,
  _swigc__p_OpenBabel__obLogBuf,
  _swigc__p_OpenBabel__quadTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t,
  _swigc__p_OpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t,
  _swigc__p_OpenBabel__vector3,
  _swigc__p_a_3__double,
  _swigc__p_a_4__char,
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_int,
  _swigc__p_p_OpenBabel__OBFingerprint,
  _swigc__p_p_OpenBabel__OBFormat,
  _swigc__p_p_double,
  _swigc__p_p_int,
  _swigc__p_std__dequeTint_t,
  _swigc__p_std__ifstream,
  _swigc__p_std__istream,
  _swigc__p_std__mapTchar_const_p_OpenBabel__OBFormat_p_OpenBabel__CharPtrLess_t,
  _swigc__p_std__mapTint_OpenBabel__OBAtom_p_t,
  _swigc__p_std__mapTstd__string_std__string_t,
  _swigc__p_std__multimapTdouble_unsigned_int_t,
  _swigc__p_std__ostream,
  _swigc__p_std__out_of_range,
  _swigc__p_std__pairTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_t,
  _swigc__p_std__streampos,
  _swigc__p_std__string,
  _swigc__p_std__type_info,
  _swigc__p_std__vectorTOpenBabel__OBAtom_p_t,
  _swigc__p_std__vectorTOpenBabel__OBAtom_p_t__iterator,
  _swigc__p_std__vectorTOpenBabel__OBBond_p_t,
  _swigc__p_std__vectorTOpenBabel__OBBond_p_t__iterator,
  _swigc__p_std__vectorTOpenBabel__OBBond_t,
  _swigc__p_std__vectorTOpenBabel__OBExternalBond_t,
  _swigc__p_std__vectorTOpenBabel__OBGenericData_p_t,
  _swigc__p_std__vectorTOpenBabel__OBGenericData_p_t__iterator,
  _swigc__p_std__vectorTOpenBabel__OBInternalCoord_p_t,
  _swigc__p_std__vectorTOpenBabel__OBInternalCoord_p_t__iterator,
  _swigc__p_std__vectorTOpenBabel__OBMol_t,
  _swigc__p_std__vectorTOpenBabel__OBResidue_p_t__iterator,
  _swigc__p_std__vectorTOpenBabel__OBResidue_t,
  _swigc__p_std__vectorTOpenBabel__OBRing_p_t,
  _swigc__p_std__vectorTOpenBabel__OBRing_p_t__iterator,
  _swigc__p_std__vectorTOpenBabel__OBRing_t,
  _swigc__p_std__vectorTOpenBabel__OBTorsion_t,
  _swigc__p_std__vectorTOpenBabel__tripleTOpenBabel__OBAtom_p_OpenBabel__OBAtom_p_double_t_t,
  _swigc__p_std__vectorTOpenBabel__vector3_t,
  _swigc__p_std__vectorTdouble_p_t,
  _swigc__p_std__vectorTdouble_p_t__iterator,
  _swigc__p_std__vectorTdouble_t,
  _swigc__p_std__vectorTint_t,
  _swigc__p_std__vectorTstd__pairTint_int_t_t,
  _swigc__p_std__vectorTstd__pairTstd__string_std__string_t_t,
  _swigc__p_std__vectorTstd__string_t,
  _swigc__p_std__vectorTstd__vectorTOpenBabel__vector3_t_t,
  _swigc__p_std__vectorTstd__vectorTint_t_t,
  _swigc__p_std__vectorTstd__vectorTint_t_t__iterator,
  _swigc__p_std__vectorTstd__vectorTunsigned_int_t_t,
  _swigc__p_std__vectorTunsigned_int_t,
  _swigc__p_std__vectorTunsigned_short_t,
  _swigc__p_unsigned_int,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_constant_info swig_constants[] = {
{0,0,0,0,0,0}
};
#ifdef __cplusplus
}
#endif
static swig_variable_info swig_variables[] = {
    { "Chemistry::OpenBabelc::VZero", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_VZero_get,&SWIGTYPE_p_OpenBabel__vector3 },
    { "Chemistry::OpenBabelc::VX", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_VX_get,&SWIGTYPE_p_OpenBabel__vector3 },
    { "Chemistry::OpenBabelc::VY", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_VY_get,&SWIGTYPE_p_OpenBabel__vector3 },
    { "Chemistry::OpenBabelc::VZ", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_VZ_get,&SWIGTYPE_p_OpenBabel__vector3 },
    { "Chemistry::OpenBabelc::UndefinedData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_UndefinedData_get,0 },
    { "Chemistry::OpenBabelc::PairData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_PairData_get,0 },
    { "Chemistry::OpenBabelc::EnergyData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_EnergyData_get,0 },
    { "Chemistry::OpenBabelc::CommentData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CommentData_get,0 },
    { "Chemistry::OpenBabelc::ConformerData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ConformerData_get,0 },
    { "Chemistry::OpenBabelc::ExternalBondData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ExternalBondData_get,0 },
    { "Chemistry::OpenBabelc::RotamerList", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_RotamerList_get,0 },
    { "Chemistry::OpenBabelc::VirtualBondData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_VirtualBondData_get,0 },
    { "Chemistry::OpenBabelc::RingData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_RingData_get,0 },
    { "Chemistry::OpenBabelc::TorsionData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_TorsionData_get,0 },
    { "Chemistry::OpenBabelc::AngleData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_AngleData_get,0 },
    { "Chemistry::OpenBabelc::SerialNums", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SerialNums_get,0 },
    { "Chemistry::OpenBabelc::UnitCell", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_UnitCell_get,0 },
    { "Chemistry::OpenBabelc::SpinData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SpinData_get,0 },
    { "Chemistry::OpenBabelc::ChargeData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ChargeData_get,0 },
    { "Chemistry::OpenBabelc::SymmetryData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SymmetryData_get,0 },
    { "Chemistry::OpenBabelc::ChiralData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ChiralData_get,0 },
    { "Chemistry::OpenBabelc::OccupationData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_OccupationData_get,0 },
    { "Chemistry::OpenBabelc::DensityData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_DensityData_get,0 },
    { "Chemistry::OpenBabelc::ElectronicData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ElectronicData_get,0 },
    { "Chemistry::OpenBabelc::VibrationData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_VibrationData_get,0 },
    { "Chemistry::OpenBabelc::RotationData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_RotationData_get,0 },
    { "Chemistry::OpenBabelc::NuclearData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_NuclearData_get,0 },
    { "Chemistry::OpenBabelc::SetData", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SetData_get,0 },
    { "Chemistry::OpenBabelc::CustomData0", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData0_get,0 },
    { "Chemistry::OpenBabelc::CustomData1", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData1_get,0 },
    { "Chemistry::OpenBabelc::CustomData2", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData2_get,0 },
    { "Chemistry::OpenBabelc::CustomData3", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData3_get,0 },
    { "Chemistry::OpenBabelc::CustomData4", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData4_get,0 },
    { "Chemistry::OpenBabelc::CustomData5", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData5_get,0 },
    { "Chemistry::OpenBabelc::CustomData6", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData6_get,0 },
    { "Chemistry::OpenBabelc::CustomData7", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData7_get,0 },
    { "Chemistry::OpenBabelc::CustomData8", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData8_get,0 },
    { "Chemistry::OpenBabelc::CustomData9", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData9_get,0 },
    { "Chemistry::OpenBabelc::CustomData10", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData10_get,0 },
    { "Chemistry::OpenBabelc::CustomData11", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData11_get,0 },
    { "Chemistry::OpenBabelc::CustomData12", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData12_get,0 },
    { "Chemistry::OpenBabelc::CustomData13", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData13_get,0 },
    { "Chemistry::OpenBabelc::CustomData14", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData14_get,0 },
    { "Chemistry::OpenBabelc::CustomData15", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CustomData15_get,0 },
    { "Chemistry::OpenBabelc::obErrorLog", MAGIC_CLASS _wrap_obErrorLog_set, MAGIC_CLASS _wrap_obErrorLog_get,&SWIGTYPE_p_OpenBabel__OBMessageHandler },
    { "Chemistry::OpenBabelc::ACIDIC", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ACIDIC_get,0 },
    { "Chemistry::OpenBabelc::ACYCLIC", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ACYCLIC_get,0 },
    { "Chemistry::OpenBabelc::ALIPHATIC", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ALIPHATIC_get,0 },
    { "Chemistry::OpenBabelc::AROMATIC", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_AROMATIC_get,0 },
    { "Chemistry::OpenBabelc::BASIC", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_BASIC_get,0 },
    { "Chemistry::OpenBabelc::BURIED", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_BURIED_get,0 },
    { "Chemistry::OpenBabelc::CHARGED", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CHARGED_get,0 },
    { "Chemistry::OpenBabelc::CYCLIC", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CYCLIC_get,0 },
    { "Chemistry::OpenBabelc::HYDROPHOBIC", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_HYDROPHOBIC_get,0 },
    { "Chemistry::OpenBabelc::LARGE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_LARGE_get,0 },
    { "Chemistry::OpenBabelc::MEDIUM", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_MEDIUM_get,0 },
    { "Chemistry::OpenBabelc::NEGATIVE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_NEGATIVE_get,0 },
    { "Chemistry::OpenBabelc::NEUTRAL", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_NEUTRAL_get,0 },
    { "Chemistry::OpenBabelc::POLAR", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_POLAR_get,0 },
    { "Chemistry::OpenBabelc::POSITIVE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_POSITIVE_get,0 },
    { "Chemistry::OpenBabelc::SMALL", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SMALL_get,0 },
    { "Chemistry::OpenBabelc::SURFACE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SURFACE_get,0 },
    { "Chemistry::OpenBabelc::ALPHA_CARBON", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ALPHA_CARBON_get,0 },
    { "Chemistry::OpenBabelc::AMINO_BACKBONE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_AMINO_BACKBONE_get,0 },
    { "Chemistry::OpenBabelc::BACKBONE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_BACKBONE_get,0 },
    { "Chemistry::OpenBabelc::CYSTEINE_SULPHUR", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CYSTEINE_SULPHUR_get,0 },
    { "Chemistry::OpenBabelc::LIGAND", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_LIGAND_get,0 },
    { "Chemistry::OpenBabelc::NUCLEIC_BACKBONE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_NUCLEIC_BACKBONE_get,0 },
    { "Chemistry::OpenBabelc::SHAPELY_BACKBONE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SHAPELY_BACKBONE_get,0 },
    { "Chemistry::OpenBabelc::SHAPELY_SPECIAL", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SHAPELY_SPECIAL_get,0 },
    { "Chemistry::OpenBabelc::SIDECHAIN", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SIDECHAIN_get,0 },
    { "Chemistry::OpenBabelc::SUGAR_PHOSPHATE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SUGAR_PHOSPHATE_get,0 },
    { "Chemistry::OpenBabelc::ALA", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ALA_get,0 },
    { "Chemistry::OpenBabelc::GLY", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_GLY_get,0 },
    { "Chemistry::OpenBabelc::LEU", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_LEU_get,0 },
    { "Chemistry::OpenBabelc::SER", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SER_get,0 },
    { "Chemistry::OpenBabelc::VAL", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_VAL_get,0 },
    { "Chemistry::OpenBabelc::LYS", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_LYS_get,0 },
    { "Chemistry::OpenBabelc::ASP", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ASP_get,0 },
    { "Chemistry::OpenBabelc::ILE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ILE_get,0 },
    { "Chemistry::OpenBabelc::ASN", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ASN_get,0 },
    { "Chemistry::OpenBabelc::GLU", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_GLU_get,0 },
    { "Chemistry::OpenBabelc::PRO", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_PRO_get,0 },
    { "Chemistry::OpenBabelc::ARG", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ARG_get,0 },
    { "Chemistry::OpenBabelc::PHE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_PHE_get,0 },
    { "Chemistry::OpenBabelc::GLN", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_GLN_get,0 },
    { "Chemistry::OpenBabelc::TYR", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_TYR_get,0 },
    { "Chemistry::OpenBabelc::HIS", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_HIS_get,0 },
    { "Chemistry::OpenBabelc::CYS", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_CYS_get,0 },
    { "Chemistry::OpenBabelc::MET", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_MET_get,0 },
    { "Chemistry::OpenBabelc::TRP", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_TRP_get,0 },
    { "Chemistry::OpenBabelc::ASX", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ASX_get,0 },
    { "Chemistry::OpenBabelc::GLX", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_GLX_get,0 },
    { "Chemistry::OpenBabelc::PCA", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_PCA_get,0 },
    { "Chemistry::OpenBabelc::HYP", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_HYP_get,0 },
    { "Chemistry::OpenBabelc::A", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_A_get,0 },
    { "Chemistry::OpenBabelc::C", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_C_get,0 },
    { "Chemistry::OpenBabelc::G", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_G_get,0 },
    { "Chemistry::OpenBabelc::T", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_T_get,0 },
    { "Chemistry::OpenBabelc::U", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_U_get,0 },
    { "Chemistry::OpenBabelc::UPLUS", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_UPLUS_get,0 },
    { "Chemistry::OpenBabelc::I", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_I_get,0 },
    { "Chemistry::OpenBabelc::_1MA", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap__1MA_get,0 },
    { "Chemistry::OpenBabelc::_5MC", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap__5MC_get,0 },
    { "Chemistry::OpenBabelc::OMC", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_OMC_get,0 },
    { "Chemistry::OpenBabelc::_1MG", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap__1MG_get,0 },
    { "Chemistry::OpenBabelc::_2MG", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap__2MG_get,0 },
    { "Chemistry::OpenBabelc::M2G", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_M2G_get,0 },
    { "Chemistry::OpenBabelc::_7MG", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap__7MG_get,0 },
    { "Chemistry::OpenBabelc::OMG", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_OMG_get,0 },
    { "Chemistry::OpenBabelc::YG", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_YG_get,0 },
    { "Chemistry::OpenBabelc::H2U", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_H2U_get,0 },
    { "Chemistry::OpenBabelc::_5MU", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap__5MU_get,0 },
    { "Chemistry::OpenBabelc::PSU", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_PSU_get,0 },
    { "Chemistry::OpenBabelc::UNK", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_UNK_get,0 },
    { "Chemistry::OpenBabelc::ACE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ACE_get,0 },
    { "Chemistry::OpenBabelc::FOR", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_FOR_get,0 },
    { "Chemistry::OpenBabelc::HOH", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_HOH_get,0 },
    { "Chemistry::OpenBabelc::DOD", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_DOD_get,0 },
    { "Chemistry::OpenBabelc::SO4", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SO4_get,0 },
    { "Chemistry::OpenBabelc::PO4", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_PO4_get,0 },
    { "Chemistry::OpenBabelc::NAD", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_NAD_get,0 },
    { "Chemistry::OpenBabelc::COA", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_COA_get,0 },
    { "Chemistry::OpenBabelc::NAP", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_NAP_get,0 },
    { "Chemistry::OpenBabelc::NDP", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_NDP_get,0 },
    { "Chemistry::OpenBabelc::AMINO", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_AMINO_get,0 },
    { "Chemistry::OpenBabelc::AMINO_NUCLEO", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_AMINO_NUCLEO_get,0 },
    { "Chemistry::OpenBabelc::COENZYME", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_COENZYME_get,0 },
    { "Chemistry::OpenBabelc::ION", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_ION_get,0 },
    { "Chemistry::OpenBabelc::NUCLEO", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_NUCLEO_get,0 },
    { "Chemistry::OpenBabelc::PROTEIN", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_PROTEIN_get,0 },
    { "Chemistry::OpenBabelc::PURINE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_PURINE_get,0 },
    { "Chemistry::OpenBabelc::PYRIMIDINE", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_PYRIMIDINE_get,0 },
    { "Chemistry::OpenBabelc::SOLVENT", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_SOLVENT_get,0 },
    { "Chemistry::OpenBabelc::WATER", MAGIC_CLASS swig_magic_readonly, MAGIC_CLASS _wrap_WATER_get,0 },
    { "Chemistry::OpenBabelc::Residue", MAGIC_CLASS _wrap_Residue_set, MAGIC_CLASS _wrap_Residue_get,&SWIGTYPE_p_a_4__char },
    { "Chemistry::OpenBabelc::ElemDesc", MAGIC_CLASS _wrap_ElemDesc_set, MAGIC_CLASS _wrap_ElemDesc_get,&SWIGTYPE_p_a_4__char },
    { "Chemistry::OpenBabelc::ResNo", MAGIC_CLASS _wrap_ResNo_set, MAGIC_CLASS _wrap_ResNo_get,0 },
    { "Chemistry::OpenBabelc::ElemNo", MAGIC_CLASS _wrap_ElemNo_set, MAGIC_CLASS _wrap_ElemNo_get,0 },
    { "Chemistry::OpenBabelc::etab", MAGIC_CLASS _wrap_etab_set, MAGIC_CLASS _wrap_etab_get,&SWIGTYPE_p_OpenBabel__OBElementTable },
    { "Chemistry::OpenBabelc::ttab", MAGIC_CLASS _wrap_ttab_set, MAGIC_CLASS _wrap_ttab_get,&SWIGTYPE_p_OpenBabel__OBTypeTable },
    { "Chemistry::OpenBabelc::isotab", MAGIC_CLASS _wrap_isotab_set, MAGIC_CLASS _wrap_isotab_get,&SWIGTYPE_p_OpenBabel__OBIsotopeTable },
    { "Chemistry::OpenBabelc::aromtyper", MAGIC_CLASS _wrap_aromtyper_set, MAGIC_CLASS _wrap_aromtyper_get,&SWIGTYPE_p_OpenBabel__OBAromaticTyper },
    { "Chemistry::OpenBabelc::atomtyper", MAGIC_CLASS _wrap_atomtyper_set, MAGIC_CLASS _wrap_atomtyper_get,&SWIGTYPE_p_OpenBabel__OBAtomTyper },
    { "Chemistry::OpenBabelc::chainsparser", MAGIC_CLASS _wrap_chainsparser_set, MAGIC_CLASS _wrap_chainsparser_get,&SWIGTYPE_p_OpenBabel__OBChainsParser },
    { "Chemistry::OpenBabelc::resdat", MAGIC_CLASS _wrap_resdat_set, MAGIC_CLASS _wrap_resdat_get,&SWIGTYPE_p_OpenBabel__OBResidueData },
{0,0,0,0}
};
static swig_command_info swig_commands[] = {
{"Chemistry::OpenBabelc::new_vectorInt", _wrap_new_vectorInt},
{"Chemistry::OpenBabelc::vectorInt_size", _wrap_vectorInt_size},
{"Chemistry::OpenBabelc::vectorInt_empty", _wrap_vectorInt_empty},
{"Chemistry::OpenBabelc::vectorInt_clear", _wrap_vectorInt_clear},
{"Chemistry::OpenBabelc::vectorInt_push", _wrap_vectorInt_push},
{"Chemistry::OpenBabelc::vectorInt_pop", _wrap_vectorInt_pop},
{"Chemistry::OpenBabelc::vectorInt_get", _wrap_vectorInt_get},
{"Chemistry::OpenBabelc::vectorInt_set", _wrap_vectorInt_set},
{"Chemistry::OpenBabelc::delete_vectorInt", _wrap_delete_vectorInt},
{"Chemistry::OpenBabelc::new_vvInt", _wrap_new_vvInt},
{"Chemistry::OpenBabelc::vvInt_size", _wrap_vvInt_size},
{"Chemistry::OpenBabelc::vvInt_empty", _wrap_vvInt_empty},
{"Chemistry::OpenBabelc::vvInt_clear", _wrap_vvInt_clear},
{"Chemistry::OpenBabelc::vvInt_push", _wrap_vvInt_push},
{"Chemistry::OpenBabelc::vvInt_pop", _wrap_vvInt_pop},
{"Chemistry::OpenBabelc::vvInt_get", _wrap_vvInt_get},
{"Chemistry::OpenBabelc::vvInt_set", _wrap_vvInt_set},
{"Chemistry::OpenBabelc::delete_vvInt", _wrap_delete_vvInt},
{"Chemistry::OpenBabelc::new_vectorDouble", _wrap_new_vectorDouble},
{"Chemistry::OpenBabelc::vectorDouble_size", _wrap_vectorDouble_size},
{"Chemistry::OpenBabelc::vectorDouble_empty", _wrap_vectorDouble_empty},
{"Chemistry::OpenBabelc::vectorDouble_clear", _wrap_vectorDouble_clear},
{"Chemistry::OpenBabelc::vectorDouble_push", _wrap_vectorDouble_push},
{"Chemistry::OpenBabelc::vectorDouble_pop", _wrap_vectorDouble_pop},
{"Chemistry::OpenBabelc::vectorDouble_get", _wrap_vectorDouble_get},
{"Chemistry::OpenBabelc::vectorDouble_set", _wrap_vectorDouble_set},
{"Chemistry::OpenBabelc::delete_vectorDouble", _wrap_delete_vectorDouble},
{"Chemistry::OpenBabelc::new_vVector3", _wrap_new_vVector3},
{"Chemistry::OpenBabelc::vVector3_size", _wrap_vVector3_size},
{"Chemistry::OpenBabelc::vVector3_empty", _wrap_vVector3_empty},
{"Chemistry::OpenBabelc::vVector3_clear", _wrap_vVector3_clear},
{"Chemistry::OpenBabelc::vVector3_push", _wrap_vVector3_push},
{"Chemistry::OpenBabelc::vVector3_pop", _wrap_vVector3_pop},
{"Chemistry::OpenBabelc::vVector3_get", _wrap_vVector3_get},
{"Chemistry::OpenBabelc::vVector3_set", _wrap_vVector3_set},
{"Chemistry::OpenBabelc::delete_vVector3", _wrap_delete_vVector3},
{"Chemistry::OpenBabelc::new_vectorMol", _wrap_new_vectorMol},
{"Chemistry::OpenBabelc::vectorMol_size", _wrap_vectorMol_size},
{"Chemistry::OpenBabelc::vectorMol_empty", _wrap_vectorMol_empty},
{"Chemistry::OpenBabelc::vectorMol_clear", _wrap_vectorMol_clear},
{"Chemistry::OpenBabelc::vectorMol_push", _wrap_vectorMol_push},
{"Chemistry::OpenBabelc::vectorMol_pop", _wrap_vectorMol_pop},
{"Chemistry::OpenBabelc::vectorMol_get", _wrap_vectorMol_get},
{"Chemistry::OpenBabelc::vectorMol_set", _wrap_vectorMol_set},
{"Chemistry::OpenBabelc::delete_vectorMol", _wrap_delete_vectorMol},
{"Chemistry::OpenBabelc::new_vectorBond", _wrap_new_vectorBond},
{"Chemistry::OpenBabelc::vectorBond_size", _wrap_vectorBond_size},
{"Chemistry::OpenBabelc::vectorBond_empty", _wrap_vectorBond_empty},
{"Chemistry::OpenBabelc::vectorBond_clear", _wrap_vectorBond_clear},
{"Chemistry::OpenBabelc::vectorBond_push", _wrap_vectorBond_push},
{"Chemistry::OpenBabelc::vectorBond_pop", _wrap_vectorBond_pop},
{"Chemistry::OpenBabelc::vectorBond_get", _wrap_vectorBond_get},
{"Chemistry::OpenBabelc::vectorBond_set", _wrap_vectorBond_set},
{"Chemistry::OpenBabelc::delete_vectorBond", _wrap_delete_vectorBond},
{"Chemistry::OpenBabelc::new_vectorResidue", _wrap_new_vectorResidue},
{"Chemistry::OpenBabelc::vectorResidue_size", _wrap_vectorResidue_size},
{"Chemistry::OpenBabelc::vectorResidue_empty", _wrap_vectorResidue_empty},
{"Chemistry::OpenBabelc::vectorResidue_clear", _wrap_vectorResidue_clear},
{"Chemistry::OpenBabelc::vectorResidue_push", _wrap_vectorResidue_push},
{"Chemistry::OpenBabelc::vectorResidue_pop", _wrap_vectorResidue_pop},
{"Chemistry::OpenBabelc::vectorResidue_get", _wrap_vectorResidue_get},
{"Chemistry::OpenBabelc::vectorResidue_set", _wrap_vectorResidue_set},
{"Chemistry::OpenBabelc::delete_vectorResidue", _wrap_delete_vectorResidue},
{"Chemistry::OpenBabelc::new_vectorRing", _wrap_new_vectorRing},
{"Chemistry::OpenBabelc::vectorRing_size", _wrap_vectorRing_size},
{"Chemistry::OpenBabelc::vectorRing_empty", _wrap_vectorRing_empty},
{"Chemistry::OpenBabelc::vectorRing_clear", _wrap_vectorRing_clear},
{"Chemistry::OpenBabelc::vectorRing_push", _wrap_vectorRing_push},
{"Chemistry::OpenBabelc::vectorRing_pop", _wrap_vectorRing_pop},
{"Chemistry::OpenBabelc::vectorRing_get", _wrap_vectorRing_get},
{"Chemistry::OpenBabelc::vectorRing_set", _wrap_vectorRing_set},
{"Chemistry::OpenBabelc::delete_vectorRing", _wrap_delete_vectorRing},
{"Chemistry::OpenBabelc::new_vectorData", _wrap_new_vectorData},
{"Chemistry::OpenBabelc::vectorData_size", _wrap_vectorData_size},
{"Chemistry::OpenBabelc::vectorData_empty", _wrap_vectorData_empty},
{"Chemistry::OpenBabelc::vectorData_clear", _wrap_vectorData_clear},
{"Chemistry::OpenBabelc::vectorData_push", _wrap_vectorData_push},
{"Chemistry::OpenBabelc::vectorData_pop", _wrap_vectorData_pop},
{"Chemistry::OpenBabelc::vectorData_get", _wrap_vectorData_get},
{"Chemistry::OpenBabelc::vectorData_set", _wrap_vectorData_set},
{"Chemistry::OpenBabelc::delete_vectorData", _wrap_delete_vectorData},
{"Chemistry::OpenBabelc::new_OBGlobalDataBase", _wrap_new_OBGlobalDataBase},
{"Chemistry::OpenBabelc::delete_OBGlobalDataBase", _wrap_delete_OBGlobalDataBase},
{"Chemistry::OpenBabelc::OBGlobalDataBase_Init", _wrap_OBGlobalDataBase_Init},
{"Chemistry::OpenBabelc::OBGlobalDataBase_GetSize", _wrap_OBGlobalDataBase_GetSize},
{"Chemistry::OpenBabelc::OBGlobalDataBase_SetReadDirectory", _wrap_OBGlobalDataBase_SetReadDirectory},
{"Chemistry::OpenBabelc::OBGlobalDataBase_SetEnvironmentVariable", _wrap_OBGlobalDataBase_SetEnvironmentVariable},
{"Chemistry::OpenBabelc::OBGlobalDataBase_ParseLine", _wrap_OBGlobalDataBase_ParseLine},
{"Chemistry::OpenBabelc::new_OBElement", _wrap_new_OBElement},
{"Chemistry::OpenBabelc::OBElement_GetAtomicNum", _wrap_OBElement_GetAtomicNum},
{"Chemistry::OpenBabelc::OBElement_GetSymbol", _wrap_OBElement_GetSymbol},
{"Chemistry::OpenBabelc::OBElement_GetCovalentRad", _wrap_OBElement_GetCovalentRad},
{"Chemistry::OpenBabelc::OBElement_GetVdwRad", _wrap_OBElement_GetVdwRad},
{"Chemistry::OpenBabelc::OBElement_GetMass", _wrap_OBElement_GetMass},
{"Chemistry::OpenBabelc::OBElement_GetMaxBonds", _wrap_OBElement_GetMaxBonds},
{"Chemistry::OpenBabelc::OBElement_GetElectroNeg", _wrap_OBElement_GetElectroNeg},
{"Chemistry::OpenBabelc::OBElement_GetIonization", _wrap_OBElement_GetIonization},
{"Chemistry::OpenBabelc::OBElement_GetElectronAffinity", _wrap_OBElement_GetElectronAffinity},
{"Chemistry::OpenBabelc::OBElement_GetName", _wrap_OBElement_GetName},
{"Chemistry::OpenBabelc::OBElement_GetRed", _wrap_OBElement_GetRed},
{"Chemistry::OpenBabelc::OBElement_GetGreen", _wrap_OBElement_GetGreen},
{"Chemistry::OpenBabelc::OBElement_GetBlue", _wrap_OBElement_GetBlue},
{"Chemistry::OpenBabelc::delete_OBElement", _wrap_delete_OBElement},
{"Chemistry::OpenBabelc::new_OBElementTable", _wrap_new_OBElementTable},
{"Chemistry::OpenBabelc::delete_OBElementTable", _wrap_delete_OBElementTable},
{"Chemistry::OpenBabelc::OBElementTable_ParseLine", _wrap_OBElementTable_ParseLine},
{"Chemistry::OpenBabelc::OBElementTable_GetNumberOfElements", _wrap_OBElementTable_GetNumberOfElements},
{"Chemistry::OpenBabelc::OBElementTable_GetSize", _wrap_OBElementTable_GetSize},
{"Chemistry::OpenBabelc::OBElementTable_GetAtomicNum", _wrap_OBElementTable_GetAtomicNum},
{"Chemistry::OpenBabelc::OBElementTable_GetSymbol", _wrap_OBElementTable_GetSymbol},
{"Chemistry::OpenBabelc::OBElementTable_GetVdwRad", _wrap_OBElementTable_GetVdwRad},
{"Chemistry::OpenBabelc::OBElementTable_GetCovalentRad", _wrap_OBElementTable_GetCovalentRad},
{"Chemistry::OpenBabelc::OBElementTable_GetMass", _wrap_OBElementTable_GetMass},
{"Chemistry::OpenBabelc::OBElementTable_CorrectedBondRad", _wrap_OBElementTable_CorrectedBondRad},
{"Chemistry::OpenBabelc::OBElementTable_CorrectedVdwRad", _wrap_OBElementTable_CorrectedVdwRad},
{"Chemistry::OpenBabelc::OBElementTable_GetMaxBonds", _wrap_OBElementTable_GetMaxBonds},
{"Chemistry::OpenBabelc::OBElementTable_GetElectroNeg", _wrap_OBElementTable_GetElectroNeg},
{"Chemistry::OpenBabelc::OBElementTable_GetIonization", _wrap_OBElementTable_GetIonization},
{"Chemistry::OpenBabelc::OBElementTable_GetElectronAffinity", _wrap_OBElementTable_GetElectronAffinity},
{"Chemistry::OpenBabelc::OBElementTable_GetRGB", _wrap_OBElementTable_GetRGB},
{"Chemistry::OpenBabelc::OBElementTable_GetName", _wrap_OBElementTable_GetName},
{"Chemistry::OpenBabelc::new_OBIsotopeTable", _wrap_new_OBIsotopeTable},
{"Chemistry::OpenBabelc::delete_OBIsotopeTable", _wrap_delete_OBIsotopeTable},
{"Chemistry::OpenBabelc::OBIsotopeTable_GetSize", _wrap_OBIsotopeTable_GetSize},
{"Chemistry::OpenBabelc::OBIsotopeTable_ParseLine", _wrap_OBIsotopeTable_ParseLine},
{"Chemistry::OpenBabelc::OBIsotopeTable_GetExactMass", _wrap_OBIsotopeTable_GetExactMass},
{"Chemistry::OpenBabelc::new_OBTypeTable", _wrap_new_OBTypeTable},
{"Chemistry::OpenBabelc::delete_OBTypeTable", _wrap_delete_OBTypeTable},
{"Chemistry::OpenBabelc::OBTypeTable_ParseLine", _wrap_OBTypeTable_ParseLine},
{"Chemistry::OpenBabelc::OBTypeTable_GetSize", _wrap_OBTypeTable_GetSize},
{"Chemistry::OpenBabelc::OBTypeTable_SetFromType", _wrap_OBTypeTable_SetFromType},
{"Chemistry::OpenBabelc::OBTypeTable_SetToType", _wrap_OBTypeTable_SetToType},
{"Chemistry::OpenBabelc::OBTypeTable_Translate", _wrap_OBTypeTable_Translate},
{"Chemistry::OpenBabelc::OBTypeTable_GetFromType", _wrap_OBTypeTable_GetFromType},
{"Chemistry::OpenBabelc::OBTypeTable_GetToType", _wrap_OBTypeTable_GetToType},
{"Chemistry::OpenBabelc::new_OBResidueData", _wrap_new_OBResidueData},
{"Chemistry::OpenBabelc::OBResidueData_ParseLine", _wrap_OBResidueData_ParseLine},
{"Chemistry::OpenBabelc::OBResidueData_GetSize", _wrap_OBResidueData_GetSize},
{"Chemistry::OpenBabelc::OBResidueData_SetResName", _wrap_OBResidueData_SetResName},
{"Chemistry::OpenBabelc::OBResidueData_LookupBO", _wrap_OBResidueData_LookupBO},
{"Chemistry::OpenBabelc::OBResidueData_LookupType", _wrap_OBResidueData_LookupType},
{"Chemistry::OpenBabelc::OBResidueData_AssignBonds", _wrap_OBResidueData_AssignBonds},
{"Chemistry::OpenBabelc::delete_OBResidueData", _wrap_delete_OBResidueData},
{"Chemistry::OpenBabelc::OpenDatafile", _wrap_OpenDatafile},
{"Chemistry::OpenBabelc::DoubleType_hi_set", _wrap_DoubleType_hi_set},
{"Chemistry::OpenBabelc::DoubleType_hi_get", _wrap_DoubleType_hi_get},
{"Chemistry::OpenBabelc::DoubleType_lo_set", _wrap_DoubleType_lo_set},
{"Chemistry::OpenBabelc::DoubleType_lo_get", _wrap_DoubleType_lo_get},
{"Chemistry::OpenBabelc::new_DoubleType", _wrap_new_DoubleType},
{"Chemistry::OpenBabelc::delete_DoubleType", _wrap_delete_DoubleType},
{"Chemistry::OpenBabelc::DoubleMultiply", _wrap_DoubleMultiply},
{"Chemistry::OpenBabelc::DoubleAdd", _wrap_DoubleAdd},
{"Chemistry::OpenBabelc::DoubleModulus", _wrap_DoubleModulus},
{"Chemistry::OpenBabelc::new_OBRandom", _wrap_new_OBRandom},
{"Chemistry::OpenBabelc::OBRandom_Seed", _wrap_OBRandom_Seed},
{"Chemistry::OpenBabelc::OBRandom_TimeSeed", _wrap_OBRandom_TimeSeed},
{"Chemistry::OpenBabelc::OBRandom_NextInt", _wrap_OBRandom_NextInt},
{"Chemistry::OpenBabelc::OBRandom_NextFloat", _wrap_OBRandom_NextFloat},
{"Chemistry::OpenBabelc::delete_OBRandom", _wrap_delete_OBRandom},
{"Chemistry::OpenBabelc::OBStopwatch_Start", _wrap_OBStopwatch_Start},
{"Chemistry::OpenBabelc::OBStopwatch_Lap", _wrap_OBStopwatch_Lap},
{"Chemistry::OpenBabelc::OBStopwatch_Elapsed", _wrap_OBStopwatch_Elapsed},
{"Chemistry::OpenBabelc::new_OBStopwatch", _wrap_new_OBStopwatch},
{"Chemistry::OpenBabelc::delete_OBStopwatch", _wrap_delete_OBStopwatch},
{"Chemistry::OpenBabelc::new_OBSqrtTbl", _wrap_new_OBSqrtTbl},
{"Chemistry::OpenBabelc::delete_OBSqrtTbl", _wrap_delete_OBSqrtTbl},
{"Chemistry::OpenBabelc::OBSqrtTbl_Sqrt", _wrap_OBSqrtTbl_Sqrt},
{"Chemistry::OpenBabelc::OBSqrtTbl_Init", _wrap_OBSqrtTbl_Init},
{"Chemistry::OpenBabelc::new_vector3", _wrap_new_vector3},
{"Chemistry::OpenBabelc::vector3_Set", _wrap_vector3_Set},
{"Chemistry::OpenBabelc::vector3_SetX", _wrap_vector3_SetX},
{"Chemistry::OpenBabelc::vector3_SetY", _wrap_vector3_SetY},
{"Chemistry::OpenBabelc::vector3_SetZ", _wrap_vector3_SetZ},
{"Chemistry::OpenBabelc::vector3_Get", _wrap_vector3_Get},
{"Chemistry::OpenBabelc::vector3_AsArray", _wrap_vector3_AsArray},
{"Chemistry::OpenBabelc::vector3_randomUnitVector", _wrap_vector3_randomUnitVector},
{"Chemistry::OpenBabelc::vector3_normalize", _wrap_vector3_normalize},
{"Chemistry::OpenBabelc::vector3_CanBeNormalized", _wrap_vector3_CanBeNormalized},
{"Chemistry::OpenBabelc::vector3_length_2", _wrap_vector3_length_2},
{"Chemistry::OpenBabelc::vector3_length", _wrap_vector3_length},
{"Chemistry::OpenBabelc::vector3_x", _wrap_vector3_x},
{"Chemistry::OpenBabelc::vector3_y", _wrap_vector3_y},
{"Chemistry::OpenBabelc::vector3_z", _wrap_vector3_z},
{"Chemistry::OpenBabelc::vector3___eq__", _wrap_vector3___eq__},
{"Chemistry::OpenBabelc::vector3___ne__", _wrap_vector3___ne__},
{"Chemistry::OpenBabelc::vector3_IsApprox", _wrap_vector3_IsApprox},
{"Chemistry::OpenBabelc::vector3_distSq", _wrap_vector3_distSq},
{"Chemistry::OpenBabelc::vector3_createOrthoVector", _wrap_vector3_createOrthoVector},
{"Chemistry::OpenBabelc::delete_vector3", _wrap_delete_vector3},
{"Chemistry::OpenBabelc::__lshift__", _wrap___lshift__},
{"Chemistry::OpenBabelc::__add__", _wrap___add__},
{"Chemistry::OpenBabelc::__sub__", _wrap___sub__},
{"Chemistry::OpenBabelc::__div__", _wrap___div__},
{"Chemistry::OpenBabelc::__mul__", _wrap___mul__},
{"Chemistry::OpenBabelc::dot", _wrap_dot},
{"Chemistry::OpenBabelc::cross", _wrap_cross},
{"Chemistry::OpenBabelc::vectorAngle", _wrap_vectorAngle},
{"Chemistry::OpenBabelc::CalcTorsionAngle", _wrap_CalcTorsionAngle},
{"Chemistry::OpenBabelc::Point2Plane", _wrap_Point2Plane},
{"Chemistry::OpenBabelc::Trim", _wrap_Trim},
{"Chemistry::OpenBabelc::new_OBGenericData", _wrap_new_OBGenericData},
{"Chemistry::OpenBabelc::OBGenericData_Clone", _wrap_OBGenericData_Clone},
{"Chemistry::OpenBabelc::delete_OBGenericData", _wrap_delete_OBGenericData},
{"Chemistry::OpenBabelc::OBGenericData_SetAttribute", _wrap_OBGenericData_SetAttribute},
{"Chemistry::OpenBabelc::OBGenericData_GetAttribute", _wrap_OBGenericData_GetAttribute},
{"Chemistry::OpenBabelc::OBGenericData_GetDataType", _wrap_OBGenericData_GetDataType},
{"Chemistry::OpenBabelc::OBGenericData_GetValue", _wrap_OBGenericData_GetValue},
{"Chemistry::OpenBabelc::new_OBCommentData", _wrap_new_OBCommentData},
{"Chemistry::OpenBabelc::OBCommentData_Clone", _wrap_OBCommentData_Clone},
{"Chemistry::OpenBabelc::OBCommentData_SetData", _wrap_OBCommentData_SetData},
{"Chemistry::OpenBabelc::OBCommentData_GetData", _wrap_OBCommentData_GetData},
{"Chemistry::OpenBabelc::OBCommentData_GetValue", _wrap_OBCommentData_GetValue},
{"Chemistry::OpenBabelc::delete_OBCommentData", _wrap_delete_OBCommentData},
{"Chemistry::OpenBabelc::new_OBExternalBond", _wrap_new_OBExternalBond},
{"Chemistry::OpenBabelc::delete_OBExternalBond", _wrap_delete_OBExternalBond},
{"Chemistry::OpenBabelc::OBExternalBond_GetIdx", _wrap_OBExternalBond_GetIdx},
{"Chemistry::OpenBabelc::OBExternalBond_GetAtom", _wrap_OBExternalBond_GetAtom},
{"Chemistry::OpenBabelc::OBExternalBond_GetBond", _wrap_OBExternalBond_GetBond},
{"Chemistry::OpenBabelc::OBExternalBond_SetIdx", _wrap_OBExternalBond_SetIdx},
{"Chemistry::OpenBabelc::OBExternalBond_SetAtom", _wrap_OBExternalBond_SetAtom},
{"Chemistry::OpenBabelc::OBExternalBond_SetBond", _wrap_OBExternalBond_SetBond},
{"Chemistry::OpenBabelc::new_OBExternalBondData", _wrap_new_OBExternalBondData},
{"Chemistry::OpenBabelc::OBExternalBondData_Clone", _wrap_OBExternalBondData_Clone},
{"Chemistry::OpenBabelc::OBExternalBondData_SetData", _wrap_OBExternalBondData_SetData},
{"Chemistry::OpenBabelc::OBExternalBondData_GetData", _wrap_OBExternalBondData_GetData},
{"Chemistry::OpenBabelc::delete_OBExternalBondData", _wrap_delete_OBExternalBondData},
{"Chemistry::OpenBabelc::new_OBPairData", _wrap_new_OBPairData},
{"Chemistry::OpenBabelc::OBPairData_Clone", _wrap_OBPairData_Clone},
{"Chemistry::OpenBabelc::OBPairData_SetValue", _wrap_OBPairData_SetValue},
{"Chemistry::OpenBabelc::OBPairData_GetValue", _wrap_OBPairData_GetValue},
{"Chemistry::OpenBabelc::delete_OBPairData", _wrap_delete_OBPairData},
{"Chemistry::OpenBabelc::new_OBSetData", _wrap_new_OBSetData},
{"Chemistry::OpenBabelc::OBSetData_Clone", _wrap_OBSetData_Clone},
{"Chemistry::OpenBabelc::OBSetData_AddData", _wrap_OBSetData_AddData},
{"Chemistry::OpenBabelc::OBSetData_SetData", _wrap_OBSetData_SetData},
{"Chemistry::OpenBabelc::OBSetData_GetData", _wrap_OBSetData_GetData},
{"Chemistry::OpenBabelc::OBSetData_GetBegin", _wrap_OBSetData_GetBegin},
{"Chemistry::OpenBabelc::OBSetData_GetEnd", _wrap_OBSetData_GetEnd},
{"Chemistry::OpenBabelc::OBSetData_DeleteData", _wrap_OBSetData_DeleteData},
{"Chemistry::OpenBabelc::delete_OBSetData", _wrap_delete_OBSetData},
{"Chemistry::OpenBabelc::OBVirtualBond_Clone", _wrap_OBVirtualBond_Clone},
{"Chemistry::OpenBabelc::new_OBVirtualBond", _wrap_new_OBVirtualBond},
{"Chemistry::OpenBabelc::OBVirtualBond_GetBgn", _wrap_OBVirtualBond_GetBgn},
{"Chemistry::OpenBabelc::OBVirtualBond_GetEnd", _wrap_OBVirtualBond_GetEnd},
{"Chemistry::OpenBabelc::OBVirtualBond_GetOrder", _wrap_OBVirtualBond_GetOrder},
{"Chemistry::OpenBabelc::OBVirtualBond_GetStereo", _wrap_OBVirtualBond_GetStereo},
{"Chemistry::OpenBabelc::delete_OBVirtualBond", _wrap_delete_OBVirtualBond},
{"Chemistry::OpenBabelc::new_OBRingData", _wrap_new_OBRingData},
{"Chemistry::OpenBabelc::OBRingData_Clone", _wrap_OBRingData_Clone},
{"Chemistry::OpenBabelc::delete_OBRingData", _wrap_delete_OBRingData},
{"Chemistry::OpenBabelc::OBRingData_SetData", _wrap_OBRingData_SetData},
{"Chemistry::OpenBabelc::OBRingData_PushBack", _wrap_OBRingData_PushBack},
{"Chemistry::OpenBabelc::OBRingData_GetData", _wrap_OBRingData_GetData},
{"Chemistry::OpenBabelc::new_OBUnitCell", _wrap_new_OBUnitCell},
{"Chemistry::OpenBabelc::OBUnitCell_Clone", _wrap_OBUnitCell_Clone},
{"Chemistry::OpenBabelc::delete_OBUnitCell", _wrap_delete_OBUnitCell},
{"Chemistry::OpenBabelc::OBUnitCell_SetData", _wrap_OBUnitCell_SetData},
{"Chemistry::OpenBabelc::OBUnitCell_SetOffset", _wrap_OBUnitCell_SetOffset},
{"Chemistry::OpenBabelc::OBUnitCell_SetSpaceGroup", _wrap_OBUnitCell_SetSpaceGroup},
{"Chemistry::OpenBabelc::OBUnitCell_SetLatticeType", _wrap_OBUnitCell_SetLatticeType},
{"Chemistry::OpenBabelc::OBUnitCell_GetA", _wrap_OBUnitCell_GetA},
{"Chemistry::OpenBabelc::OBUnitCell_GetB", _wrap_OBUnitCell_GetB},
{"Chemistry::OpenBabelc::OBUnitCell_GetC", _wrap_OBUnitCell_GetC},
{"Chemistry::OpenBabelc::OBUnitCell_GetAlpha", _wrap_OBUnitCell_GetAlpha},
{"Chemistry::OpenBabelc::OBUnitCell_GetBeta", _wrap_OBUnitCell_GetBeta},
{"Chemistry::OpenBabelc::OBUnitCell_GetGamma", _wrap_OBUnitCell_GetGamma},
{"Chemistry::OpenBabelc::OBUnitCell_GetOffset", _wrap_OBUnitCell_GetOffset},
{"Chemistry::OpenBabelc::OBUnitCell_GetSpaceGroup", _wrap_OBUnitCell_GetSpaceGroup},
{"Chemistry::OpenBabelc::OBUnitCell_GetLatticeType", _wrap_OBUnitCell_GetLatticeType},
{"Chemistry::OpenBabelc::OBUnitCell_GetCellVectors", _wrap_OBUnitCell_GetCellVectors},
{"Chemistry::OpenBabelc::OBUnitCell_GetCellMatrix", _wrap_OBUnitCell_GetCellMatrix},
{"Chemistry::OpenBabelc::OBUnitCell_GetOrthoMatrix", _wrap_OBUnitCell_GetOrthoMatrix},
{"Chemistry::OpenBabelc::OBUnitCell_GetFractionalMatrix", _wrap_OBUnitCell_GetFractionalMatrix},
{"Chemistry::OpenBabelc::OBUnitCell_GetSpaceGroupNumber", _wrap_OBUnitCell_GetSpaceGroupNumber},
{"Chemistry::OpenBabelc::OBUnitCell_GetCellVolume", _wrap_OBUnitCell_GetCellVolume},
{"Chemistry::OpenBabelc::new_OBConformerData", _wrap_new_OBConformerData},
{"Chemistry::OpenBabelc::OBConformerData_Clone", _wrap_OBConformerData_Clone},
{"Chemistry::OpenBabelc::delete_OBConformerData", _wrap_delete_OBConformerData},
{"Chemistry::OpenBabelc::OBConformerData_SetDimension", _wrap_OBConformerData_SetDimension},
{"Chemistry::OpenBabelc::OBConformerData_SetEnergies", _wrap_OBConformerData_SetEnergies},
{"Chemistry::OpenBabelc::OBConformerData_SetForces", _wrap_OBConformerData_SetForces},
{"Chemistry::OpenBabelc::OBConformerData_SetVelocities", _wrap_OBConformerData_SetVelocities},
{"Chemistry::OpenBabelc::OBConformerData_SetDisplacements", _wrap_OBConformerData_SetDisplacements},
{"Chemistry::OpenBabelc::OBConformerData_SetData", _wrap_OBConformerData_SetData},
{"Chemistry::OpenBabelc::OBConformerData_GetDimension", _wrap_OBConformerData_GetDimension},
{"Chemistry::OpenBabelc::OBConformerData_GetEnergies", _wrap_OBConformerData_GetEnergies},
{"Chemistry::OpenBabelc::OBConformerData_GetForces", _wrap_OBConformerData_GetForces},
{"Chemistry::OpenBabelc::OBConformerData_GetVelocities", _wrap_OBConformerData_GetVelocities},
{"Chemistry::OpenBabelc::OBConformerData_GetDisplacements", _wrap_OBConformerData_GetDisplacements},
{"Chemistry::OpenBabelc::OBConformerData_GetData", _wrap_OBConformerData_GetData},
{"Chemistry::OpenBabelc::new_OBSymmetryData", _wrap_new_OBSymmetryData},
{"Chemistry::OpenBabelc::OBSymmetryData_Clone", _wrap_OBSymmetryData_Clone},
{"Chemistry::OpenBabelc::delete_OBSymmetryData", _wrap_delete_OBSymmetryData},
{"Chemistry::OpenBabelc::OBSymmetryData_SetData", _wrap_OBSymmetryData_SetData},
{"Chemistry::OpenBabelc::OBSymmetryData_SetPointGroup", _wrap_OBSymmetryData_SetPointGroup},
{"Chemistry::OpenBabelc::OBSymmetryData_SetSpaceGroup", _wrap_OBSymmetryData_SetSpaceGroup},
{"Chemistry::OpenBabelc::OBSymmetryData_GetPointGroup", _wrap_OBSymmetryData_GetPointGroup},
{"Chemistry::OpenBabelc::OBSymmetryData_GetSpaceGroup", _wrap_OBSymmetryData_GetSpaceGroup},
{"Chemistry::OpenBabelc::new_OBTorsion", _wrap_new_OBTorsion},
{"Chemistry::OpenBabelc::delete_OBTorsion", _wrap_delete_OBTorsion},
{"Chemistry::OpenBabelc::OBTorsion_Clear", _wrap_OBTorsion_Clear},
{"Chemistry::OpenBabelc::OBTorsion_Empty", _wrap_OBTorsion_Empty},
{"Chemistry::OpenBabelc::OBTorsion_AddTorsion", _wrap_OBTorsion_AddTorsion},
{"Chemistry::OpenBabelc::OBTorsion_SetAngle", _wrap_OBTorsion_SetAngle},
{"Chemistry::OpenBabelc::OBTorsion_SetData", _wrap_OBTorsion_SetData},
{"Chemistry::OpenBabelc::OBTorsion_GetAngle", _wrap_OBTorsion_GetAngle},
{"Chemistry::OpenBabelc::OBTorsion_GetBondIdx", _wrap_OBTorsion_GetBondIdx},
{"Chemistry::OpenBabelc::OBTorsion_GetSize", _wrap_OBTorsion_GetSize},
{"Chemistry::OpenBabelc::OBTorsion_GetBC", _wrap_OBTorsion_GetBC},
{"Chemistry::OpenBabelc::OBTorsion_GetADs", _wrap_OBTorsion_GetADs},
{"Chemistry::OpenBabelc::OBTorsion_IsProtonRotor", _wrap_OBTorsion_IsProtonRotor},
{"Chemistry::OpenBabelc::OBTorsionData_Clone", _wrap_OBTorsionData_Clone},
{"Chemistry::OpenBabelc::OBTorsionData_Clear", _wrap_OBTorsionData_Clear},
{"Chemistry::OpenBabelc::OBTorsionData_GetData", _wrap_OBTorsionData_GetData},
{"Chemistry::OpenBabelc::OBTorsionData_GetSize", _wrap_OBTorsionData_GetSize},
{"Chemistry::OpenBabelc::OBTorsionData_SetData", _wrap_OBTorsionData_SetData},
{"Chemistry::OpenBabelc::OBTorsionData_FillTorsionArray", _wrap_OBTorsionData_FillTorsionArray},
{"Chemistry::OpenBabelc::delete_OBTorsionData", _wrap_delete_OBTorsionData},
{"Chemistry::OpenBabelc::new_OBAngle", _wrap_new_OBAngle},
{"Chemistry::OpenBabelc::delete_OBAngle", _wrap_delete_OBAngle},
{"Chemistry::OpenBabelc::OBAngle___eq__", _wrap_OBAngle___eq__},
{"Chemistry::OpenBabelc::OBAngle_Clear", _wrap_OBAngle_Clear},
{"Chemistry::OpenBabelc::OBAngle_GetAngle", _wrap_OBAngle_GetAngle},
{"Chemistry::OpenBabelc::OBAngle_SetAngle", _wrap_OBAngle_SetAngle},
{"Chemistry::OpenBabelc::OBAngle_SetAtoms", _wrap_OBAngle_SetAtoms},
{"Chemistry::OpenBabelc::OBAngleData_Clone", _wrap_OBAngleData_Clone},
{"Chemistry::OpenBabelc::OBAngleData_Clear", _wrap_OBAngleData_Clear},
{"Chemistry::OpenBabelc::OBAngleData_FillAngleArray", _wrap_OBAngleData_FillAngleArray},
{"Chemistry::OpenBabelc::OBAngleData_SetData", _wrap_OBAngleData_SetData},
{"Chemistry::OpenBabelc::OBAngleData_GetSize", _wrap_OBAngleData_GetSize},
{"Chemistry::OpenBabelc::delete_OBAngleData", _wrap_delete_OBAngleData},
{"Chemistry::OpenBabelc::OBChiralData_GetAtom4Refs", _wrap_OBChiralData_GetAtom4Refs},
{"Chemistry::OpenBabelc::OBChiralData_GetAtomRef", _wrap_OBChiralData_GetAtomRef},
{"Chemistry::OpenBabelc::new_OBChiralData", _wrap_new_OBChiralData},
{"Chemistry::OpenBabelc::OBChiralData_Clone", _wrap_OBChiralData_Clone},
{"Chemistry::OpenBabelc::delete_OBChiralData", _wrap_delete_OBChiralData},
{"Chemistry::OpenBabelc::OBChiralData_Clear", _wrap_OBChiralData_Clear},
{"Chemistry::OpenBabelc::OBChiralData_SetAtom4Refs", _wrap_OBChiralData_SetAtom4Refs},
{"Chemistry::OpenBabelc::OBChiralData_AddAtomRef", _wrap_OBChiralData_AddAtomRef},
{"Chemistry::OpenBabelc::OBChiralData_GetSize", _wrap_OBChiralData_GetSize},
{"Chemistry::OpenBabelc::new_OBSerialNums", _wrap_new_OBSerialNums},
{"Chemistry::OpenBabelc::OBSerialNums_Clone", _wrap_OBSerialNums_Clone},
{"Chemistry::OpenBabelc::OBSerialNums_GetData", _wrap_OBSerialNums_GetData},
{"Chemistry::OpenBabelc::OBSerialNums_SetData", _wrap_OBSerialNums_SetData},
{"Chemistry::OpenBabelc::delete_OBSerialNums", _wrap_delete_OBSerialNums},
{"Chemistry::OpenBabelc::delete_OBBase", _wrap_delete_OBBase},
{"Chemistry::OpenBabelc::OBBase_DoTransformations", _wrap_OBBase_DoTransformations},
{"Chemistry::OpenBabelc::OBBase_ClassDescription", _wrap_OBBase_ClassDescription},
{"Chemistry::OpenBabelc::OBBase_HasData", _wrap_OBBase_HasData},
{"Chemistry::OpenBabelc::OBBase_DeleteData", _wrap_OBBase_DeleteData},
{"Chemistry::OpenBabelc::OBBase_SetData", _wrap_OBBase_SetData},
{"Chemistry::OpenBabelc::OBBase_DataSize", _wrap_OBBase_DataSize},
{"Chemistry::OpenBabelc::OBBase_GetData", _wrap_OBBase_GetData},
{"Chemistry::OpenBabelc::OBBase_BeginData", _wrap_OBBase_BeginData},
{"Chemistry::OpenBabelc::OBBase_EndData", _wrap_OBBase_EndData},
{"Chemistry::OpenBabelc::new_OBBase", _wrap_new_OBBase},
{"Chemistry::OpenBabelc::new_OBError", _wrap_new_OBError},
{"Chemistry::OpenBabelc::OBError_message", _wrap_OBError_message},
{"Chemistry::OpenBabelc::OBError_GetMethod", _wrap_OBError_GetMethod},
{"Chemistry::OpenBabelc::OBError_GetError", _wrap_OBError_GetError},
{"Chemistry::OpenBabelc::OBError_GetExplanation", _wrap_OBError_GetExplanation},
{"Chemistry::OpenBabelc::OBError_GetPossibleCause", _wrap_OBError_GetPossibleCause},
{"Chemistry::OpenBabelc::OBError_GetSuggestedRemedy", _wrap_OBError_GetSuggestedRemedy},
{"Chemistry::OpenBabelc::OBError_GetLevel", _wrap_OBError_GetLevel},
{"Chemistry::OpenBabelc::delete_OBError", _wrap_delete_OBError},
{"Chemistry::OpenBabelc::new_OBMessageHandler", _wrap_new_OBMessageHandler},
{"Chemistry::OpenBabelc::delete_OBMessageHandler", _wrap_delete_OBMessageHandler},
{"Chemistry::OpenBabelc::OBMessageHandler_ThrowError", _wrap_OBMessageHandler_ThrowError},
{"Chemistry::OpenBabelc::OBMessageHandler_GetMessagesOfLevel", _wrap_OBMessageHandler_GetMessagesOfLevel},
{"Chemistry::OpenBabelc::OBMessageHandler_StartLogging", _wrap_OBMessageHandler_StartLogging},
{"Chemistry::OpenBabelc::OBMessageHandler_StopLogging", _wrap_OBMessageHandler_StopLogging},
{"Chemistry::OpenBabelc::OBMessageHandler_SetMaxLogEntries", _wrap_OBMessageHandler_SetMaxLogEntries},
{"Chemistry::OpenBabelc::OBMessageHandler_GetMaxLogEntries", _wrap_OBMessageHandler_GetMaxLogEntries},
{"Chemistry::OpenBabelc::OBMessageHandler_ClearLog", _wrap_OBMessageHandler_ClearLog},
{"Chemistry::OpenBabelc::OBMessageHandler_SetOutputLevel", _wrap_OBMessageHandler_SetOutputLevel},
{"Chemistry::OpenBabelc::OBMessageHandler_GetOutputLevel", _wrap_OBMessageHandler_GetOutputLevel},
{"Chemistry::OpenBabelc::OBMessageHandler_SetOutputStream", _wrap_OBMessageHandler_SetOutputStream},
{"Chemistry::OpenBabelc::OBMessageHandler_GetOutputStream", _wrap_OBMessageHandler_GetOutputStream},
{"Chemistry::OpenBabelc::OBMessageHandler_StartErrorWrap", _wrap_OBMessageHandler_StartErrorWrap},
{"Chemistry::OpenBabelc::OBMessageHandler_StopErrorWrap", _wrap_OBMessageHandler_StopErrorWrap},
{"Chemistry::OpenBabelc::OBMessageHandler_GetErrorMessageCount", _wrap_OBMessageHandler_GetErrorMessageCount},
{"Chemistry::OpenBabelc::OBMessageHandler_GetWarningMessageCount", _wrap_OBMessageHandler_GetWarningMessageCount},
{"Chemistry::OpenBabelc::OBMessageHandler_GetInfoMessageCount", _wrap_OBMessageHandler_GetInfoMessageCount},
{"Chemistry::OpenBabelc::OBMessageHandler_GetAuditMessageCount", _wrap_OBMessageHandler_GetAuditMessageCount},
{"Chemistry::OpenBabelc::OBMessageHandler_GetDebugMessageCount", _wrap_OBMessageHandler_GetDebugMessageCount},
{"Chemistry::OpenBabelc::OBMessageHandler_GetMessageSummary", _wrap_OBMessageHandler_GetMessageSummary},
{"Chemistry::OpenBabelc::delete_obLogBuf", _wrap_delete_obLogBuf},
{"Chemistry::OpenBabelc::new_obLogBuf", _wrap_new_obLogBuf},
{"Chemistry::OpenBabelc::OBFormat_ReadMolecule", _wrap_OBFormat_ReadMolecule},
{"Chemistry::OpenBabelc::OBFormat_ReadChemObject", _wrap_OBFormat_ReadChemObject},
{"Chemistry::OpenBabelc::OBFormat_WriteMolecule", _wrap_OBFormat_WriteMolecule},
{"Chemistry::OpenBabelc::OBFormat_WriteChemObject", _wrap_OBFormat_WriteChemObject},
{"Chemistry::OpenBabelc::OBFormat_Description", _wrap_OBFormat_Description},
{"Chemistry::OpenBabelc::OBFormat_TargetClassDescription", _wrap_OBFormat_TargetClassDescription},
{"Chemistry::OpenBabelc::OBFormat_GetType", _wrap_OBFormat_GetType},
{"Chemistry::OpenBabelc::OBFormat_SpecificationURL", _wrap_OBFormat_SpecificationURL},
{"Chemistry::OpenBabelc::OBFormat_GetMIMEType", _wrap_OBFormat_GetMIMEType},
{"Chemistry::OpenBabelc::OBFormat_Flags", _wrap_OBFormat_Flags},
{"Chemistry::OpenBabelc::OBFormat_SkipObjects", _wrap_OBFormat_SkipObjects},
{"Chemistry::OpenBabelc::OBFormat_MakeNewInstance", _wrap_OBFormat_MakeNewInstance},
{"Chemistry::OpenBabelc::delete_OBFormat", _wrap_delete_OBFormat},
{"Chemistry::OpenBabelc::CharPtrLess___call__", _wrap_CharPtrLess___call__},
{"Chemistry::OpenBabelc::new_CharPtrLess", _wrap_new_CharPtrLess},
{"Chemistry::OpenBabelc::delete_CharPtrLess", _wrap_delete_CharPtrLess},
{"Chemistry::OpenBabelc::new_OBConversion", _wrap_new_OBConversion},
{"Chemistry::OpenBabelc::delete_OBConversion", _wrap_delete_OBConversion},
{"Chemistry::OpenBabelc::OBConversion_RegisterFormat", _wrap_OBConversion_RegisterFormat},
{"Chemistry::OpenBabelc::OBConversion_FindFormat", _wrap_OBConversion_FindFormat},
{"Chemistry::OpenBabelc::OBConversion_FormatFromExt", _wrap_OBConversion_FormatFromExt},
{"Chemistry::OpenBabelc::OBConversion_FormatFromMIME", _wrap_OBConversion_FormatFromMIME},
{"Chemistry::OpenBabelc::OBConversion_GetNextFormat", _wrap_OBConversion_GetNextFormat},
{"Chemistry::OpenBabelc::OBConversion_Description", _wrap_OBConversion_Description},
{"Chemistry::OpenBabelc::OBConversion_GetInStream", _wrap_OBConversion_GetInStream},
{"Chemistry::OpenBabelc::OBConversion_GetOutStream", _wrap_OBConversion_GetOutStream},
{"Chemistry::OpenBabelc::OBConversion_SetInStream", _wrap_OBConversion_SetInStream},
{"Chemistry::OpenBabelc::OBConversion_SetOutStream", _wrap_OBConversion_SetOutStream},
{"Chemistry::OpenBabelc::OBConversion_SetInAndOutFormats", _wrap_OBConversion_SetInAndOutFormats},
{"Chemistry::OpenBabelc::OBConversion_SetInFormat", _wrap_OBConversion_SetInFormat},
{"Chemistry::OpenBabelc::OBConversion_SetOutFormat", _wrap_OBConversion_SetOutFormat},
{"Chemistry::OpenBabelc::OBConversion_GetInFormat", _wrap_OBConversion_GetInFormat},
{"Chemistry::OpenBabelc::OBConversion_GetOutFormat", _wrap_OBConversion_GetOutFormat},
{"Chemistry::OpenBabelc::OBConversion_GetInFilename", _wrap_OBConversion_GetInFilename},
{"Chemistry::OpenBabelc::OBConversion_GetInPos", _wrap_OBConversion_GetInPos},
{"Chemistry::OpenBabelc::OBConversion_GetInLen", _wrap_OBConversion_GetInLen},
{"Chemistry::OpenBabelc::OBConversion_GetTitle", _wrap_OBConversion_GetTitle},
{"Chemistry::OpenBabelc::OBConversion_GetAuxConv", _wrap_OBConversion_GetAuxConv},
{"Chemistry::OpenBabelc::OBConversion_SetAuxConv", _wrap_OBConversion_SetAuxConv},
{"Chemistry::OpenBabelc::OBConversion_IsOption", _wrap_OBConversion_IsOption},
{"Chemistry::OpenBabelc::OBConversion_GetOptions", _wrap_OBConversion_GetOptions},
{"Chemistry::OpenBabelc::OBConversion_AddOption", _wrap_OBConversion_AddOption},
{"Chemistry::OpenBabelc::OBConversion_RemoveOption", _wrap_OBConversion_RemoveOption},
{"Chemistry::OpenBabelc::OBConversion_SetOptions", _wrap_OBConversion_SetOptions},
{"Chemistry::OpenBabelc::OBConversion_RegisterOptionParam", _wrap_OBConversion_RegisterOptionParam},
{"Chemistry::OpenBabelc::OBConversion_GetOptionParams", _wrap_OBConversion_GetOptionParams},
{"Chemistry::OpenBabelc::OBConversion_Convert", _wrap_OBConversion_Convert},
{"Chemistry::OpenBabelc::OBConversion_FullConvert", _wrap_OBConversion_FullConvert},
{"Chemistry::OpenBabelc::OBConversion_AddChemObject", _wrap_OBConversion_AddChemObject},
{"Chemistry::OpenBabelc::OBConversion_GetChemObject", _wrap_OBConversion_GetChemObject},
{"Chemistry::OpenBabelc::OBConversion_IsLast", _wrap_OBConversion_IsLast},
{"Chemistry::OpenBabelc::OBConversion_IsFirstInput", _wrap_OBConversion_IsFirstInput},
{"Chemistry::OpenBabelc::OBConversion_GetOutputIndex", _wrap_OBConversion_GetOutputIndex},
{"Chemistry::OpenBabelc::OBConversion_SetOutputIndex", _wrap_OBConversion_SetOutputIndex},
{"Chemistry::OpenBabelc::OBConversion_SetMoreFilesToCome", _wrap_OBConversion_SetMoreFilesToCome},
{"Chemistry::OpenBabelc::OBConversion_SetOneObjectOnly", _wrap_OBConversion_SetOneObjectOnly},
{"Chemistry::OpenBabelc::OBConversion_GetDefaultFormat", _wrap_OBConversion_GetDefaultFormat},
{"Chemistry::OpenBabelc::OBConversion_Write", _wrap_OBConversion_Write},
{"Chemistry::OpenBabelc::OBConversion_WriteString", _wrap_OBConversion_WriteString},
{"Chemistry::OpenBabelc::OBConversion_WriteFile", _wrap_OBConversion_WriteFile},
{"Chemistry::OpenBabelc::OBConversion_CloseOutFile", _wrap_OBConversion_CloseOutFile},
{"Chemistry::OpenBabelc::OBConversion_Read", _wrap_OBConversion_Read},
{"Chemistry::OpenBabelc::OBConversion_ReadString", _wrap_OBConversion_ReadString},
{"Chemistry::OpenBabelc::OBConversion_ReadFile", _wrap_OBConversion_ReadFile},
{"Chemistry::OpenBabelc::OBConversion_BatchFileName", _wrap_OBConversion_BatchFileName},
{"Chemistry::OpenBabelc::OBConversion_IncrementedFileName", _wrap_OBConversion_IncrementedFileName},
{"Chemistry::OpenBabelc::new_OBResidue", _wrap_new_OBResidue},
{"Chemistry::OpenBabelc::delete_OBResidue", _wrap_delete_OBResidue},
{"Chemistry::OpenBabelc::OBResidue_AddAtom", _wrap_OBResidue_AddAtom},
{"Chemistry::OpenBabelc::OBResidue_InsertAtom", _wrap_OBResidue_InsertAtom},
{"Chemistry::OpenBabelc::OBResidue_RemoveAtom", _wrap_OBResidue_RemoveAtom},
{"Chemistry::OpenBabelc::OBResidue_Clear", _wrap_OBResidue_Clear},
{"Chemistry::OpenBabelc::OBResidue_SetName", _wrap_OBResidue_SetName},
{"Chemistry::OpenBabelc::OBResidue_SetNum", _wrap_OBResidue_SetNum},
{"Chemistry::OpenBabelc::OBResidue_SetChain", _wrap_OBResidue_SetChain},
{"Chemistry::OpenBabelc::OBResidue_SetChainNum", _wrap_OBResidue_SetChainNum},
{"Chemistry::OpenBabelc::OBResidue_SetIdx", _wrap_OBResidue_SetIdx},
{"Chemistry::OpenBabelc::OBResidue_SetAtomID", _wrap_OBResidue_SetAtomID},
{"Chemistry::OpenBabelc::OBResidue_SetHetAtom", _wrap_OBResidue_SetHetAtom},
{"Chemistry::OpenBabelc::OBResidue_SetSerialNum", _wrap_OBResidue_SetSerialNum},
{"Chemistry::OpenBabelc::OBResidue_GetName", _wrap_OBResidue_GetName},
{"Chemistry::OpenBabelc::OBResidue_GetNum", _wrap_OBResidue_GetNum},
{"Chemistry::OpenBabelc::OBResidue_GetNumAtoms", _wrap_OBResidue_GetNumAtoms},
{"Chemistry::OpenBabelc::OBResidue_GetChain", _wrap_OBResidue_GetChain},
{"Chemistry::OpenBabelc::OBResidue_GetChainNum", _wrap_OBResidue_GetChainNum},
{"Chemistry::OpenBabelc::OBResidue_GetIdx", _wrap_OBResidue_GetIdx},
{"Chemistry::OpenBabelc::OBResidue_GetResKey", _wrap_OBResidue_GetResKey},
{"Chemistry::OpenBabelc::OBResidue_GetAtoms", _wrap_OBResidue_GetAtoms},
{"Chemistry::OpenBabelc::OBResidue_GetBonds", _wrap_OBResidue_GetBonds},
{"Chemistry::OpenBabelc::OBResidue_GetAtomID", _wrap_OBResidue_GetAtomID},
{"Chemistry::OpenBabelc::OBResidue_GetSerialNum", _wrap_OBResidue_GetSerialNum},
{"Chemistry::OpenBabelc::OBResidue_GetAminoAcidProperty", _wrap_OBResidue_GetAminoAcidProperty},
{"Chemistry::OpenBabelc::OBResidue_GetAtomProperty", _wrap_OBResidue_GetAtomProperty},
{"Chemistry::OpenBabelc::OBResidue_GetResidueProperty", _wrap_OBResidue_GetResidueProperty},
{"Chemistry::OpenBabelc::OBResidue_IsHetAtom", _wrap_OBResidue_IsHetAtom},
{"Chemistry::OpenBabelc::OBResidue_IsResidueType", _wrap_OBResidue_IsResidueType},
{"Chemistry::OpenBabelc::OBResidue_BeginAtoms", _wrap_OBResidue_BeginAtoms},
{"Chemistry::OpenBabelc::OBResidue_EndAtoms", _wrap_OBResidue_EndAtoms},
{"Chemistry::OpenBabelc::OBResidue_BeginAtom", _wrap_OBResidue_BeginAtom},
{"Chemistry::OpenBabelc::OBResidue_NextAtom", _wrap_OBResidue_NextAtom},
{"Chemistry::OpenBabelc::OBInternalCoord__a_set", _wrap_OBInternalCoord__a_set},
{"Chemistry::OpenBabelc::OBInternalCoord__a_get", _wrap_OBInternalCoord__a_get},
{"Chemistry::OpenBabelc::OBInternalCoord__b_set", _wrap_OBInternalCoord__b_set},
{"Chemistry::OpenBabelc::OBInternalCoord__b_get", _wrap_OBInternalCoord__b_get},
{"Chemistry::OpenBabelc::OBInternalCoord__c_set", _wrap_OBInternalCoord__c_set},
{"Chemistry::OpenBabelc::OBInternalCoord__c_get", _wrap_OBInternalCoord__c_get},
{"Chemistry::OpenBabelc::OBInternalCoord__dst_set", _wrap_OBInternalCoord__dst_set},
{"Chemistry::OpenBabelc::OBInternalCoord__dst_get", _wrap_OBInternalCoord__dst_get},
{"Chemistry::OpenBabelc::OBInternalCoord__ang_set", _wrap_OBInternalCoord__ang_set},
{"Chemistry::OpenBabelc::OBInternalCoord__ang_get", _wrap_OBInternalCoord__ang_get},
{"Chemistry::OpenBabelc::OBInternalCoord__tor_set", _wrap_OBInternalCoord__tor_set},
{"Chemistry::OpenBabelc::OBInternalCoord__tor_get", _wrap_OBInternalCoord__tor_get},
{"Chemistry::OpenBabelc::new_OBInternalCoord", _wrap_new_OBInternalCoord},
{"Chemistry::OpenBabelc::delete_OBInternalCoord", _wrap_delete_OBInternalCoord},
{"Chemistry::OpenBabelc::OBAtom_Visit_set", _wrap_OBAtom_Visit_set},
{"Chemistry::OpenBabelc::OBAtom_Visit_get", _wrap_OBAtom_Visit_get},
{"Chemistry::OpenBabelc::new_OBAtom", _wrap_new_OBAtom},
{"Chemistry::OpenBabelc::delete_OBAtom", _wrap_delete_OBAtom},
{"Chemistry::OpenBabelc::OBAtom_Clear", _wrap_OBAtom_Clear},
{"Chemistry::OpenBabelc::OBAtom_SetIdx", _wrap_OBAtom_SetIdx},
{"Chemistry::OpenBabelc::OBAtom_SetHyb", _wrap_OBAtom_SetHyb},
{"Chemistry::OpenBabelc::OBAtom_SetAtomicNum", _wrap_OBAtom_SetAtomicNum},
{"Chemistry::OpenBabelc::OBAtom_SetIsotope", _wrap_OBAtom_SetIsotope},
{"Chemistry::OpenBabelc::OBAtom_SetImplicitValence", _wrap_OBAtom_SetImplicitValence},
{"Chemistry::OpenBabelc::OBAtom_IncrementImplicitValence", _wrap_OBAtom_IncrementImplicitValence},
{"Chemistry::OpenBabelc::OBAtom_DecrementImplicitValence", _wrap_OBAtom_DecrementImplicitValence},
{"Chemistry::OpenBabelc::OBAtom_SetFormalCharge", _wrap_OBAtom_SetFormalCharge},
{"Chemistry::OpenBabelc::OBAtom_SetSpinMultiplicity", _wrap_OBAtom_SetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBAtom_SetType", _wrap_OBAtom_SetType},
{"Chemistry::OpenBabelc::OBAtom_SetPartialCharge", _wrap_OBAtom_SetPartialCharge},
{"Chemistry::OpenBabelc::OBAtom_SetCoordPtr", _wrap_OBAtom_SetCoordPtr},
{"Chemistry::OpenBabelc::OBAtom_SetVector", _wrap_OBAtom_SetVector},
{"Chemistry::OpenBabelc::OBAtom_SetResidue", _wrap_OBAtom_SetResidue},
{"Chemistry::OpenBabelc::OBAtom_SetParent", _wrap_OBAtom_SetParent},
{"Chemistry::OpenBabelc::OBAtom_SetAromatic", _wrap_OBAtom_SetAromatic},
{"Chemistry::OpenBabelc::OBAtom_UnsetAromatic", _wrap_OBAtom_UnsetAromatic},
{"Chemistry::OpenBabelc::OBAtom_SetClockwiseStereo", _wrap_OBAtom_SetClockwiseStereo},
{"Chemistry::OpenBabelc::OBAtom_SetAntiClockwiseStereo", _wrap_OBAtom_SetAntiClockwiseStereo},
{"Chemistry::OpenBabelc::OBAtom_SetPositiveStereo", _wrap_OBAtom_SetPositiveStereo},
{"Chemistry::OpenBabelc::OBAtom_SetNegativeStereo", _wrap_OBAtom_SetNegativeStereo},
{"Chemistry::OpenBabelc::OBAtom_UnsetStereo", _wrap_OBAtom_UnsetStereo},
{"Chemistry::OpenBabelc::OBAtom_SetInRing", _wrap_OBAtom_SetInRing},
{"Chemistry::OpenBabelc::OBAtom_SetChiral", _wrap_OBAtom_SetChiral},
{"Chemistry::OpenBabelc::OBAtom_ClearCoordPtr", _wrap_OBAtom_ClearCoordPtr},
{"Chemistry::OpenBabelc::OBAtom_GetFormalCharge", _wrap_OBAtom_GetFormalCharge},
{"Chemistry::OpenBabelc::OBAtom_GetAtomicNum", _wrap_OBAtom_GetAtomicNum},
{"Chemistry::OpenBabelc::OBAtom_GetIsotope", _wrap_OBAtom_GetIsotope},
{"Chemistry::OpenBabelc::OBAtom_GetSpinMultiplicity", _wrap_OBAtom_GetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBAtom_GetAtomicMass", _wrap_OBAtom_GetAtomicMass},
{"Chemistry::OpenBabelc::OBAtom_GetExactMass", _wrap_OBAtom_GetExactMass},
{"Chemistry::OpenBabelc::OBAtom_GetIdx", _wrap_OBAtom_GetIdx},
{"Chemistry::OpenBabelc::OBAtom_GetCoordinateIdx", _wrap_OBAtom_GetCoordinateIdx},
{"Chemistry::OpenBabelc::OBAtom_GetCIdx", _wrap_OBAtom_GetCIdx},
{"Chemistry::OpenBabelc::OBAtom_GetValence", _wrap_OBAtom_GetValence},
{"Chemistry::OpenBabelc::OBAtom_GetHyb", _wrap_OBAtom_GetHyb},
{"Chemistry::OpenBabelc::OBAtom_GetImplicitValence", _wrap_OBAtom_GetImplicitValence},
{"Chemistry::OpenBabelc::OBAtom_GetHvyValence", _wrap_OBAtom_GetHvyValence},
{"Chemistry::OpenBabelc::OBAtom_GetHeteroValence", _wrap_OBAtom_GetHeteroValence},
{"Chemistry::OpenBabelc::OBAtom_GetType", _wrap_OBAtom_GetType},
{"Chemistry::OpenBabelc::OBAtom_GetX", _wrap_OBAtom_GetX},
{"Chemistry::OpenBabelc::OBAtom_x", _wrap_OBAtom_x},
{"Chemistry::OpenBabelc::OBAtom_GetY", _wrap_OBAtom_GetY},
{"Chemistry::OpenBabelc::OBAtom_y", _wrap_OBAtom_y},
{"Chemistry::OpenBabelc::OBAtom_GetZ", _wrap_OBAtom_GetZ},
{"Chemistry::OpenBabelc::OBAtom_z", _wrap_OBAtom_z},
{"Chemistry::OpenBabelc::OBAtom_GetCoordinate", _wrap_OBAtom_GetCoordinate},
{"Chemistry::OpenBabelc::OBAtom_GetVector", _wrap_OBAtom_GetVector},
{"Chemistry::OpenBabelc::OBAtom_GetPartialCharge", _wrap_OBAtom_GetPartialCharge},
{"Chemistry::OpenBabelc::OBAtom_GetResidue", _wrap_OBAtom_GetResidue},
{"Chemistry::OpenBabelc::OBAtom_GetParent", _wrap_OBAtom_GetParent},
{"Chemistry::OpenBabelc::OBAtom_GetNewBondVector", _wrap_OBAtom_GetNewBondVector},
{"Chemistry::OpenBabelc::OBAtom_GetBond", _wrap_OBAtom_GetBond},
{"Chemistry::OpenBabelc::OBAtom_GetNextAtom", _wrap_OBAtom_GetNextAtom},
{"Chemistry::OpenBabelc::OBAtom_BeginBonds", _wrap_OBAtom_BeginBonds},
{"Chemistry::OpenBabelc::OBAtom_EndBonds", _wrap_OBAtom_EndBonds},
{"Chemistry::OpenBabelc::OBAtom_BeginBond", _wrap_OBAtom_BeginBond},
{"Chemistry::OpenBabelc::OBAtom_NextBond", _wrap_OBAtom_NextBond},
{"Chemistry::OpenBabelc::OBAtom_BeginNbrAtom", _wrap_OBAtom_BeginNbrAtom},
{"Chemistry::OpenBabelc::OBAtom_NextNbrAtom", _wrap_OBAtom_NextNbrAtom},
{"Chemistry::OpenBabelc::OBAtom_GetDistance", _wrap_OBAtom_GetDistance},
{"Chemistry::OpenBabelc::OBAtom_GetAngle", _wrap_OBAtom_GetAngle},
{"Chemistry::OpenBabelc::OBAtom_NewResidue", _wrap_OBAtom_NewResidue},
{"Chemistry::OpenBabelc::OBAtom_DeleteResidue", _wrap_OBAtom_DeleteResidue},
{"Chemistry::OpenBabelc::OBAtom_AddBond", _wrap_OBAtom_AddBond},
{"Chemistry::OpenBabelc::OBAtom_InsertBond", _wrap_OBAtom_InsertBond},
{"Chemistry::OpenBabelc::OBAtom_DeleteBond", _wrap_OBAtom_DeleteBond},
{"Chemistry::OpenBabelc::OBAtom_ClearBond", _wrap_OBAtom_ClearBond},
{"Chemistry::OpenBabelc::OBAtom_CountFreeOxygens", _wrap_OBAtom_CountFreeOxygens},
{"Chemistry::OpenBabelc::OBAtom_ImplicitHydrogenCount", _wrap_OBAtom_ImplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBAtom_ExplicitHydrogenCount", _wrap_OBAtom_ExplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBAtom_MemberOfRingCount", _wrap_OBAtom_MemberOfRingCount},
{"Chemistry::OpenBabelc::OBAtom_MemberOfRingSize", _wrap_OBAtom_MemberOfRingSize},
{"Chemistry::OpenBabelc::OBAtom_CountRingBonds", _wrap_OBAtom_CountRingBonds},
{"Chemistry::OpenBabelc::OBAtom_SmallestBondAngle", _wrap_OBAtom_SmallestBondAngle},
{"Chemistry::OpenBabelc::OBAtom_AverageBondAngle", _wrap_OBAtom_AverageBondAngle},
{"Chemistry::OpenBabelc::OBAtom_BOSum", _wrap_OBAtom_BOSum},
{"Chemistry::OpenBabelc::OBAtom_KBOSum", _wrap_OBAtom_KBOSum},
{"Chemistry::OpenBabelc::OBAtom_HtoMethyl", _wrap_OBAtom_HtoMethyl},
{"Chemistry::OpenBabelc::OBAtom_SetHybAndGeom", _wrap_OBAtom_SetHybAndGeom},
{"Chemistry::OpenBabelc::OBAtom_ForceNoH", _wrap_OBAtom_ForceNoH},
{"Chemistry::OpenBabelc::OBAtom_HasNoHForced", _wrap_OBAtom_HasNoHForced},
{"Chemistry::OpenBabelc::OBAtom_HasResidue", _wrap_OBAtom_HasResidue},
{"Chemistry::OpenBabelc::OBAtom_IsHydrogen", _wrap_OBAtom_IsHydrogen},
{"Chemistry::OpenBabelc::OBAtom_IsCarbon", _wrap_OBAtom_IsCarbon},
{"Chemistry::OpenBabelc::OBAtom_IsNitrogen", _wrap_OBAtom_IsNitrogen},
{"Chemistry::OpenBabelc::OBAtom_IsOxygen", _wrap_OBAtom_IsOxygen},
{"Chemistry::OpenBabelc::OBAtom_IsSulfur", _wrap_OBAtom_IsSulfur},
{"Chemistry::OpenBabelc::OBAtom_IsPhosphorus", _wrap_OBAtom_IsPhosphorus},
{"Chemistry::OpenBabelc::OBAtom_IsAromatic", _wrap_OBAtom_IsAromatic},
{"Chemistry::OpenBabelc::OBAtom_IsInRing", _wrap_OBAtom_IsInRing},
{"Chemistry::OpenBabelc::OBAtom_IsInRingSize", _wrap_OBAtom_IsInRingSize},
{"Chemistry::OpenBabelc::OBAtom_IsHeteroatom", _wrap_OBAtom_IsHeteroatom},
{"Chemistry::OpenBabelc::OBAtom_IsNotCorH", _wrap_OBAtom_IsNotCorH},
{"Chemistry::OpenBabelc::OBAtom_IsConnected", _wrap_OBAtom_IsConnected},
{"Chemistry::OpenBabelc::OBAtom_IsOneThree", _wrap_OBAtom_IsOneThree},
{"Chemistry::OpenBabelc::OBAtom_IsOneFour", _wrap_OBAtom_IsOneFour},
{"Chemistry::OpenBabelc::OBAtom_IsCarboxylOxygen", _wrap_OBAtom_IsCarboxylOxygen},
{"Chemistry::OpenBabelc::OBAtom_IsPhosphateOxygen", _wrap_OBAtom_IsPhosphateOxygen},
{"Chemistry::OpenBabelc::OBAtom_IsSulfateOxygen", _wrap_OBAtom_IsSulfateOxygen},
{"Chemistry::OpenBabelc::OBAtom_IsNitroOxygen", _wrap_OBAtom_IsNitroOxygen},
{"Chemistry::OpenBabelc::OBAtom_IsAmideNitrogen", _wrap_OBAtom_IsAmideNitrogen},
{"Chemistry::OpenBabelc::OBAtom_IsPolarHydrogen", _wrap_OBAtom_IsPolarHydrogen},
{"Chemistry::OpenBabelc::OBAtom_IsNonPolarHydrogen", _wrap_OBAtom_IsNonPolarHydrogen},
{"Chemistry::OpenBabelc::OBAtom_IsAromaticNOxide", _wrap_OBAtom_IsAromaticNOxide},
{"Chemistry::OpenBabelc::OBAtom_IsChiral", _wrap_OBAtom_IsChiral},
{"Chemistry::OpenBabelc::OBAtom_IsAxial", _wrap_OBAtom_IsAxial},
{"Chemistry::OpenBabelc::OBAtom_IsClockwise", _wrap_OBAtom_IsClockwise},
{"Chemistry::OpenBabelc::OBAtom_IsAntiClockwise", _wrap_OBAtom_IsAntiClockwise},
{"Chemistry::OpenBabelc::OBAtom_IsPositiveStereo", _wrap_OBAtom_IsPositiveStereo},
{"Chemistry::OpenBabelc::OBAtom_IsNegativeStereo", _wrap_OBAtom_IsNegativeStereo},
{"Chemistry::OpenBabelc::OBAtom_HasChiralitySpecified", _wrap_OBAtom_HasChiralitySpecified},
{"Chemistry::OpenBabelc::OBAtom_HasChiralVolume", _wrap_OBAtom_HasChiralVolume},
{"Chemistry::OpenBabelc::OBAtom_IsHbondAcceptor", _wrap_OBAtom_IsHbondAcceptor},
{"Chemistry::OpenBabelc::OBAtom_IsHbondDonor", _wrap_OBAtom_IsHbondDonor},
{"Chemistry::OpenBabelc::OBAtom_IsHbondDonorH", _wrap_OBAtom_IsHbondDonorH},
{"Chemistry::OpenBabelc::OBAtom_HasAlphaBetaUnsat", _wrap_OBAtom_HasAlphaBetaUnsat},
{"Chemistry::OpenBabelc::OBAtom_HasBondOfOrder", _wrap_OBAtom_HasBondOfOrder},
{"Chemistry::OpenBabelc::OBAtom_CountBondsOfOrder", _wrap_OBAtom_CountBondsOfOrder},
{"Chemistry::OpenBabelc::OBAtom_HasNonSingleBond", _wrap_OBAtom_HasNonSingleBond},
{"Chemistry::OpenBabelc::OBAtom_HasSingleBond", _wrap_OBAtom_HasSingleBond},
{"Chemistry::OpenBabelc::OBAtom_HasDoubleBond", _wrap_OBAtom_HasDoubleBond},
{"Chemistry::OpenBabelc::OBAtom_HasAromaticBond", _wrap_OBAtom_HasAromaticBond},
{"Chemistry::OpenBabelc::OBAtom_MatchesSMARTS", _wrap_OBAtom_MatchesSMARTS},
{"Chemistry::OpenBabelc::OBBond_Visit_set", _wrap_OBBond_Visit_set},
{"Chemistry::OpenBabelc::OBBond_Visit_get", _wrap_OBBond_Visit_get},
{"Chemistry::OpenBabelc::new_OBBond", _wrap_new_OBBond},
{"Chemistry::OpenBabelc::delete_OBBond", _wrap_delete_OBBond},
{"Chemistry::OpenBabelc::OBBond_SetIdx", _wrap_OBBond_SetIdx},
{"Chemistry::OpenBabelc::OBBond_SetBO", _wrap_OBBond_SetBO},
{"Chemistry::OpenBabelc::OBBond_SetBondOrder", _wrap_OBBond_SetBondOrder},
{"Chemistry::OpenBabelc::OBBond_SetBegin", _wrap_OBBond_SetBegin},
{"Chemistry::OpenBabelc::OBBond_SetEnd", _wrap_OBBond_SetEnd},
{"Chemistry::OpenBabelc::OBBond_SetParent", _wrap_OBBond_SetParent},
{"Chemistry::OpenBabelc::OBBond_SetLength", _wrap_OBBond_SetLength},
{"Chemistry::OpenBabelc::OBBond_Set", _wrap_OBBond_Set},
{"Chemistry::OpenBabelc::OBBond_SetKSingle", _wrap_OBBond_SetKSingle},
{"Chemistry::OpenBabelc::OBBond_SetKDouble", _wrap_OBBond_SetKDouble},
{"Chemistry::OpenBabelc::OBBond_SetKTriple", _wrap_OBBond_SetKTriple},
{"Chemistry::OpenBabelc::OBBond_SetAromatic", _wrap_OBBond_SetAromatic},
{"Chemistry::OpenBabelc::OBBond_SetHash", _wrap_OBBond_SetHash},
{"Chemistry::OpenBabelc::OBBond_SetWedge", _wrap_OBBond_SetWedge},
{"Chemistry::OpenBabelc::OBBond_SetUp", _wrap_OBBond_SetUp},
{"Chemistry::OpenBabelc::OBBond_SetDown", _wrap_OBBond_SetDown},
{"Chemistry::OpenBabelc::OBBond_SetInRing", _wrap_OBBond_SetInRing},
{"Chemistry::OpenBabelc::OBBond_SetClosure", _wrap_OBBond_SetClosure},
{"Chemistry::OpenBabelc::OBBond_UnsetHash", _wrap_OBBond_UnsetHash},
{"Chemistry::OpenBabelc::OBBond_UnsetWedge", _wrap_OBBond_UnsetWedge},
{"Chemistry::OpenBabelc::OBBond_UnsetUp", _wrap_OBBond_UnsetUp},
{"Chemistry::OpenBabelc::OBBond_UnsetDown", _wrap_OBBond_UnsetDown},
{"Chemistry::OpenBabelc::OBBond_UnsetAromatic", _wrap_OBBond_UnsetAromatic},
{"Chemistry::OpenBabelc::OBBond_UnsetKekule", _wrap_OBBond_UnsetKekule},
{"Chemistry::OpenBabelc::OBBond_GetIdx", _wrap_OBBond_GetIdx},
{"Chemistry::OpenBabelc::OBBond_GetBO", _wrap_OBBond_GetBO},
{"Chemistry::OpenBabelc::OBBond_GetBondOrder", _wrap_OBBond_GetBondOrder},
{"Chemistry::OpenBabelc::OBBond_GetFlags", _wrap_OBBond_GetFlags},
{"Chemistry::OpenBabelc::OBBond_GetBeginAtomIdx", _wrap_OBBond_GetBeginAtomIdx},
{"Chemistry::OpenBabelc::OBBond_GetEndAtomIdx", _wrap_OBBond_GetEndAtomIdx},
{"Chemistry::OpenBabelc::OBBond_GetBeginAtom", _wrap_OBBond_GetBeginAtom},
{"Chemistry::OpenBabelc::OBBond_GetEndAtom", _wrap_OBBond_GetEndAtom},
{"Chemistry::OpenBabelc::OBBond_GetNbrAtom", _wrap_OBBond_GetNbrAtom},
{"Chemistry::OpenBabelc::OBBond_GetParent", _wrap_OBBond_GetParent},
{"Chemistry::OpenBabelc::OBBond_GetEquibLength", _wrap_OBBond_GetEquibLength},
{"Chemistry::OpenBabelc::OBBond_GetLength", _wrap_OBBond_GetLength},
{"Chemistry::OpenBabelc::OBBond_GetNbrAtomIdx", _wrap_OBBond_GetNbrAtomIdx},
{"Chemistry::OpenBabelc::OBBond_IsAromatic", _wrap_OBBond_IsAromatic},
{"Chemistry::OpenBabelc::OBBond_IsInRing", _wrap_OBBond_IsInRing},
{"Chemistry::OpenBabelc::OBBond_IsRotor", _wrap_OBBond_IsRotor},
{"Chemistry::OpenBabelc::OBBond_IsAmide", _wrap_OBBond_IsAmide},
{"Chemistry::OpenBabelc::OBBond_IsPrimaryAmide", _wrap_OBBond_IsPrimaryAmide},
{"Chemistry::OpenBabelc::OBBond_IsSecondaryAmide", _wrap_OBBond_IsSecondaryAmide},
{"Chemistry::OpenBabelc::OBBond_IsEster", _wrap_OBBond_IsEster},
{"Chemistry::OpenBabelc::OBBond_IsCarbonyl", _wrap_OBBond_IsCarbonyl},
{"Chemistry::OpenBabelc::OBBond_IsSingle", _wrap_OBBond_IsSingle},
{"Chemistry::OpenBabelc::OBBond_IsDouble", _wrap_OBBond_IsDouble},
{"Chemistry::OpenBabelc::OBBond_IsTriple", _wrap_OBBond_IsTriple},
{"Chemistry::OpenBabelc::OBBond_IsKSingle", _wrap_OBBond_IsKSingle},
{"Chemistry::OpenBabelc::OBBond_IsKDouble", _wrap_OBBond_IsKDouble},
{"Chemistry::OpenBabelc::OBBond_IsKTriple", _wrap_OBBond_IsKTriple},
{"Chemistry::OpenBabelc::OBBond_IsClosure", _wrap_OBBond_IsClosure},
{"Chemistry::OpenBabelc::OBBond_IsUp", _wrap_OBBond_IsUp},
{"Chemistry::OpenBabelc::OBBond_IsDown", _wrap_OBBond_IsDown},
{"Chemistry::OpenBabelc::OBBond_IsWedge", _wrap_OBBond_IsWedge},
{"Chemistry::OpenBabelc::OBBond_IsHash", _wrap_OBBond_IsHash},
{"Chemistry::OpenBabelc::OBBond_IsDoubleBondGeometry", _wrap_OBBond_IsDoubleBondGeometry},
{"Chemistry::OpenBabelc::new_OBMol", _wrap_new_OBMol},
{"Chemistry::OpenBabelc::delete_OBMol", _wrap_delete_OBMol},
{"Chemistry::OpenBabelc::OBMol_ReserveAtoms", _wrap_OBMol_ReserveAtoms},
{"Chemistry::OpenBabelc::OBMol_CreateAtom", _wrap_OBMol_CreateAtom},
{"Chemistry::OpenBabelc::OBMol_CreateBond", _wrap_OBMol_CreateBond},
{"Chemistry::OpenBabelc::OBMol_CreateResidue", _wrap_OBMol_CreateResidue},
{"Chemistry::OpenBabelc::OBMol_DestroyAtom", _wrap_OBMol_DestroyAtom},
{"Chemistry::OpenBabelc::OBMol_DestroyBond", _wrap_OBMol_DestroyBond},
{"Chemistry::OpenBabelc::OBMol_DestroyResidue", _wrap_OBMol_DestroyResidue},
{"Chemistry::OpenBabelc::OBMol_AddAtom", _wrap_OBMol_AddAtom},
{"Chemistry::OpenBabelc::OBMol_AddBond", _wrap_OBMol_AddBond},
{"Chemistry::OpenBabelc::OBMol_AddResidue", _wrap_OBMol_AddResidue},
{"Chemistry::OpenBabelc::OBMol_InsertAtom", _wrap_OBMol_InsertAtom},
{"Chemistry::OpenBabelc::OBMol_DeleteAtom", _wrap_OBMol_DeleteAtom},
{"Chemistry::OpenBabelc::OBMol_DeleteBond", _wrap_OBMol_DeleteBond},
{"Chemistry::OpenBabelc::OBMol_DeleteResidue", _wrap_OBMol_DeleteResidue},
{"Chemistry::OpenBabelc::OBMol_NewAtom", _wrap_OBMol_NewAtom},
{"Chemistry::OpenBabelc::OBMol_NewBond", _wrap_OBMol_NewBond},
{"Chemistry::OpenBabelc::OBMol_NewResidue", _wrap_OBMol_NewResidue},
{"Chemistry::OpenBabelc::OBMol_BeginModify", _wrap_OBMol_BeginModify},
{"Chemistry::OpenBabelc::OBMol_EndModify", _wrap_OBMol_EndModify},
{"Chemistry::OpenBabelc::OBMol_GetMod", _wrap_OBMol_GetMod},
{"Chemistry::OpenBabelc::OBMol_IncrementMod", _wrap_OBMol_IncrementMod},
{"Chemistry::OpenBabelc::OBMol_DecrementMod", _wrap_OBMol_DecrementMod},
{"Chemistry::OpenBabelc::OBMol_GetFlags", _wrap_OBMol_GetFlags},
{"Chemistry::OpenBabelc::OBMol_GetTitle", _wrap_OBMol_GetTitle},
{"Chemistry::OpenBabelc::OBMol_NumAtoms", _wrap_OBMol_NumAtoms},
{"Chemistry::OpenBabelc::OBMol_NumBonds", _wrap_OBMol_NumBonds},
{"Chemistry::OpenBabelc::OBMol_NumHvyAtoms", _wrap_OBMol_NumHvyAtoms},
{"Chemistry::OpenBabelc::OBMol_NumResidues", _wrap_OBMol_NumResidues},
{"Chemistry::OpenBabelc::OBMol_NumRotors", _wrap_OBMol_NumRotors},
{"Chemistry::OpenBabelc::OBMol_GetAtom", _wrap_OBMol_GetAtom},
{"Chemistry::OpenBabelc::OBMol_GetFirstAtom", _wrap_OBMol_GetFirstAtom},
{"Chemistry::OpenBabelc::OBMol_GetBond", _wrap_OBMol_GetBond},
{"Chemistry::OpenBabelc::OBMol_GetResidue", _wrap_OBMol_GetResidue},
{"Chemistry::OpenBabelc::OBMol_GetInternalCoord", _wrap_OBMol_GetInternalCoord},
{"Chemistry::OpenBabelc::OBMol_GetTorsion", _wrap_OBMol_GetTorsion},
{"Chemistry::OpenBabelc::OBMol_GetAngle", _wrap_OBMol_GetAngle},
{"Chemistry::OpenBabelc::OBMol_GetFormula", _wrap_OBMol_GetFormula},
{"Chemistry::OpenBabelc::OBMol_GetSpacedFormula", _wrap_OBMol_GetSpacedFormula},
{"Chemistry::OpenBabelc::OBMol_GetEnergy", _wrap_OBMol_GetEnergy},
{"Chemistry::OpenBabelc::OBMol_GetMolWt", _wrap_OBMol_GetMolWt},
{"Chemistry::OpenBabelc::OBMol_GetExactMass", _wrap_OBMol_GetExactMass},
{"Chemistry::OpenBabelc::OBMol_GetTotalCharge", _wrap_OBMol_GetTotalCharge},
{"Chemistry::OpenBabelc::OBMol_GetTotalSpinMultiplicity", _wrap_OBMol_GetTotalSpinMultiplicity},
{"Chemistry::OpenBabelc::OBMol_GetDimension", _wrap_OBMol_GetDimension},
{"Chemistry::OpenBabelc::OBMol_GetCoordinates", _wrap_OBMol_GetCoordinates},
{"Chemistry::OpenBabelc::OBMol_GetSSSR", _wrap_OBMol_GetSSSR},
{"Chemistry::OpenBabelc::OBMol_AutomaticFormalCharge", _wrap_OBMol_AutomaticFormalCharge},
{"Chemistry::OpenBabelc::OBMol_AutomaticPartialCharge", _wrap_OBMol_AutomaticPartialCharge},
{"Chemistry::OpenBabelc::OBMol_SetTitle", _wrap_OBMol_SetTitle},
{"Chemistry::OpenBabelc::OBMol_SetFormula", _wrap_OBMol_SetFormula},
{"Chemistry::OpenBabelc::OBMol_SetEnergy", _wrap_OBMol_SetEnergy},
{"Chemistry::OpenBabelc::OBMol_SetDimension", _wrap_OBMol_SetDimension},
{"Chemistry::OpenBabelc::OBMol_SetTotalCharge", _wrap_OBMol_SetTotalCharge},
{"Chemistry::OpenBabelc::OBMol_SetTotalSpinMultiplicity", _wrap_OBMol_SetTotalSpinMultiplicity},
{"Chemistry::OpenBabelc::OBMol_SetInternalCoord", _wrap_OBMol_SetInternalCoord},
{"Chemistry::OpenBabelc::OBMol_SetAutomaticFormalCharge", _wrap_OBMol_SetAutomaticFormalCharge},
{"Chemistry::OpenBabelc::OBMol_SetAutomaticPartialCharge", _wrap_OBMol_SetAutomaticPartialCharge},
{"Chemistry::OpenBabelc::OBMol_SetAromaticPerceived", _wrap_OBMol_SetAromaticPerceived},
{"Chemistry::OpenBabelc::OBMol_SetSSSRPerceived", _wrap_OBMol_SetSSSRPerceived},
{"Chemistry::OpenBabelc::OBMol_SetRingAtomsAndBondsPerceived", _wrap_OBMol_SetRingAtomsAndBondsPerceived},
{"Chemistry::OpenBabelc::OBMol_SetAtomTypesPerceived", _wrap_OBMol_SetAtomTypesPerceived},
{"Chemistry::OpenBabelc::OBMol_SetChainsPerceived", _wrap_OBMol_SetChainsPerceived},
{"Chemistry::OpenBabelc::OBMol_SetChiralityPerceived", _wrap_OBMol_SetChiralityPerceived},
{"Chemistry::OpenBabelc::OBMol_SetPartialChargesPerceived", _wrap_OBMol_SetPartialChargesPerceived},
{"Chemistry::OpenBabelc::OBMol_SetHybridizationPerceived", _wrap_OBMol_SetHybridizationPerceived},
{"Chemistry::OpenBabelc::OBMol_SetImplicitValencePerceived", _wrap_OBMol_SetImplicitValencePerceived},
{"Chemistry::OpenBabelc::OBMol_SetKekulePerceived", _wrap_OBMol_SetKekulePerceived},
{"Chemistry::OpenBabelc::OBMol_SetClosureBondsPerceived", _wrap_OBMol_SetClosureBondsPerceived},
{"Chemistry::OpenBabelc::OBMol_SetHydrogensAdded", _wrap_OBMol_SetHydrogensAdded},
{"Chemistry::OpenBabelc::OBMol_SetCorrectedForPH", _wrap_OBMol_SetCorrectedForPH},
{"Chemistry::OpenBabelc::OBMol_SetAromaticCorrected", _wrap_OBMol_SetAromaticCorrected},
{"Chemistry::OpenBabelc::OBMol_SetSpinMultiplicityAssigned", _wrap_OBMol_SetSpinMultiplicityAssigned},
{"Chemistry::OpenBabelc::OBMol_SetFlags", _wrap_OBMol_SetFlags},
{"Chemistry::OpenBabelc::OBMol_UnsetAromaticPerceived", _wrap_OBMol_UnsetAromaticPerceived},
{"Chemistry::OpenBabelc::OBMol_UnsetPartialChargesPerceived", _wrap_OBMol_UnsetPartialChargesPerceived},
{"Chemistry::OpenBabelc::OBMol_UnsetImplicitValencePerceived", _wrap_OBMol_UnsetImplicitValencePerceived},
{"Chemistry::OpenBabelc::OBMol_UnsetFlag", _wrap_OBMol_UnsetFlag},
{"Chemistry::OpenBabelc::OBMol_DoTransformations", _wrap_OBMol_DoTransformations},
{"Chemistry::OpenBabelc::OBMol_ClassDescription", _wrap_OBMol_ClassDescription},
{"Chemistry::OpenBabelc::OBMol_Clear", _wrap_OBMol_Clear},
{"Chemistry::OpenBabelc::OBMol_RenumberAtoms", _wrap_OBMol_RenumberAtoms},
{"Chemistry::OpenBabelc::OBMol_ToInertialFrame", _wrap_OBMol_ToInertialFrame},
{"Chemistry::OpenBabelc::OBMol_Translate", _wrap_OBMol_Translate},
{"Chemistry::OpenBabelc::OBMol_Rotate", _wrap_OBMol_Rotate},
{"Chemistry::OpenBabelc::OBMol_Kekulize", _wrap_OBMol_Kekulize},
{"Chemistry::OpenBabelc::OBMol_PerceiveKekuleBonds", _wrap_OBMol_PerceiveKekuleBonds},
{"Chemistry::OpenBabelc::OBMol_NewPerceiveKekuleBonds", _wrap_OBMol_NewPerceiveKekuleBonds},
{"Chemistry::OpenBabelc::OBMol_DeleteHydrogen", _wrap_OBMol_DeleteHydrogen},
{"Chemistry::OpenBabelc::OBMol_DeleteHydrogens", _wrap_OBMol_DeleteHydrogens},
{"Chemistry::OpenBabelc::OBMol_DeleteNonPolarHydrogens", _wrap_OBMol_DeleteNonPolarHydrogens},
{"Chemistry::OpenBabelc::OBMol_AddHydrogens", _wrap_OBMol_AddHydrogens},
{"Chemistry::OpenBabelc::OBMol_AddPolarHydrogens", _wrap_OBMol_AddPolarHydrogens},
{"Chemistry::OpenBabelc::OBMol_StripSalts", _wrap_OBMol_StripSalts},
{"Chemistry::OpenBabelc::OBMol_ConvertDativeBonds", _wrap_OBMol_ConvertDativeBonds},
{"Chemistry::OpenBabelc::OBMol_CorrectForPH", _wrap_OBMol_CorrectForPH},
{"Chemistry::OpenBabelc::OBMol_AssignSpinMultiplicity", _wrap_OBMol_AssignSpinMultiplicity},
{"Chemistry::OpenBabelc::OBMol_Center", _wrap_OBMol_Center},
{"Chemistry::OpenBabelc::OBMol_SetTorsion", _wrap_OBMol_SetTorsion},
{"Chemistry::OpenBabelc::OBMol_FindSSSR", _wrap_OBMol_FindSSSR},
{"Chemistry::OpenBabelc::OBMol_FindRingAtomsAndBonds", _wrap_OBMol_FindRingAtomsAndBonds},
{"Chemistry::OpenBabelc::OBMol_FindChiralCenters", _wrap_OBMol_FindChiralCenters},
{"Chemistry::OpenBabelc::OBMol_FindChildren", _wrap_OBMol_FindChildren},
{"Chemistry::OpenBabelc::OBMol_FindLargestFragment", _wrap_OBMol_FindLargestFragment},
{"Chemistry::OpenBabelc::OBMol_ContigFragList", _wrap_OBMol_ContigFragList},
{"Chemistry::OpenBabelc::OBMol_Align", _wrap_OBMol_Align},
{"Chemistry::OpenBabelc::OBMol_ConnectTheDots", _wrap_OBMol_ConnectTheDots},
{"Chemistry::OpenBabelc::OBMol_PerceiveBondOrders", _wrap_OBMol_PerceiveBondOrders},
{"Chemistry::OpenBabelc::OBMol_FindTorsions", _wrap_OBMol_FindTorsions},
{"Chemistry::OpenBabelc::OBMol_GetGTDVector", _wrap_OBMol_GetGTDVector},
{"Chemistry::OpenBabelc::OBMol_GetGIVector", _wrap_OBMol_GetGIVector},
{"Chemistry::OpenBabelc::OBMol_GetGIDVector", _wrap_OBMol_GetGIDVector},
{"Chemistry::OpenBabelc::OBMol_Has2D", _wrap_OBMol_Has2D},
{"Chemistry::OpenBabelc::OBMol_Has3D", _wrap_OBMol_Has3D},
{"Chemistry::OpenBabelc::OBMol_HasNonZeroCoords", _wrap_OBMol_HasNonZeroCoords},
{"Chemistry::OpenBabelc::OBMol_HasAromaticPerceived", _wrap_OBMol_HasAromaticPerceived},
{"Chemistry::OpenBabelc::OBMol_HasSSSRPerceived", _wrap_OBMol_HasSSSRPerceived},
{"Chemistry::OpenBabelc::OBMol_HasRingAtomsAndBondsPerceived", _wrap_OBMol_HasRingAtomsAndBondsPerceived},
{"Chemistry::OpenBabelc::OBMol_HasAtomTypesPerceived", _wrap_OBMol_HasAtomTypesPerceived},
{"Chemistry::OpenBabelc::OBMol_HasChiralityPerceived", _wrap_OBMol_HasChiralityPerceived},
{"Chemistry::OpenBabelc::OBMol_HasPartialChargesPerceived", _wrap_OBMol_HasPartialChargesPerceived},
{"Chemistry::OpenBabelc::OBMol_HasHybridizationPerceived", _wrap_OBMol_HasHybridizationPerceived},
{"Chemistry::OpenBabelc::OBMol_HasImplicitValencePerceived", _wrap_OBMol_HasImplicitValencePerceived},
{"Chemistry::OpenBabelc::OBMol_HasKekulePerceived", _wrap_OBMol_HasKekulePerceived},
{"Chemistry::OpenBabelc::OBMol_HasClosureBondsPerceived", _wrap_OBMol_HasClosureBondsPerceived},
{"Chemistry::OpenBabelc::OBMol_HasChainsPerceived", _wrap_OBMol_HasChainsPerceived},
{"Chemistry::OpenBabelc::OBMol_HasHydrogensAdded", _wrap_OBMol_HasHydrogensAdded},
{"Chemistry::OpenBabelc::OBMol_HasAromaticCorrected", _wrap_OBMol_HasAromaticCorrected},
{"Chemistry::OpenBabelc::OBMol_IsCorrectedForPH", _wrap_OBMol_IsCorrectedForPH},
{"Chemistry::OpenBabelc::OBMol_HasSpinMultiplicityAssigned", _wrap_OBMol_HasSpinMultiplicityAssigned},
{"Chemistry::OpenBabelc::OBMol_IsChiral", _wrap_OBMol_IsChiral},
{"Chemistry::OpenBabelc::OBMol_Empty", _wrap_OBMol_Empty},
{"Chemistry::OpenBabelc::OBMol_NumConformers", _wrap_OBMol_NumConformers},
{"Chemistry::OpenBabelc::OBMol_SetConformers", _wrap_OBMol_SetConformers},
{"Chemistry::OpenBabelc::OBMol_AddConformer", _wrap_OBMol_AddConformer},
{"Chemistry::OpenBabelc::OBMol_SetConformer", _wrap_OBMol_SetConformer},
{"Chemistry::OpenBabelc::OBMol_CopyConformer", _wrap_OBMol_CopyConformer},
{"Chemistry::OpenBabelc::OBMol_DeleteConformer", _wrap_OBMol_DeleteConformer},
{"Chemistry::OpenBabelc::OBMol_GetConformer", _wrap_OBMol_GetConformer},
{"Chemistry::OpenBabelc::OBMol_BeginConformer", _wrap_OBMol_BeginConformer},
{"Chemistry::OpenBabelc::OBMol_NextConformer", _wrap_OBMol_NextConformer},
{"Chemistry::OpenBabelc::OBMol_GetConformers", _wrap_OBMol_GetConformers},
{"Chemistry::OpenBabelc::OBMol_BeginAtoms", _wrap_OBMol_BeginAtoms},
{"Chemistry::OpenBabelc::OBMol_EndAtoms", _wrap_OBMol_EndAtoms},
{"Chemistry::OpenBabelc::OBMol_BeginBonds", _wrap_OBMol_BeginBonds},
{"Chemistry::OpenBabelc::OBMol_EndBonds", _wrap_OBMol_EndBonds},
{"Chemistry::OpenBabelc::OBMol_BeginResidues", _wrap_OBMol_BeginResidues},
{"Chemistry::OpenBabelc::OBMol_EndResidues", _wrap_OBMol_EndResidues},
{"Chemistry::OpenBabelc::OBMol_BeginAtom", _wrap_OBMol_BeginAtom},
{"Chemistry::OpenBabelc::OBMol_NextAtom", _wrap_OBMol_NextAtom},
{"Chemistry::OpenBabelc::OBMol_BeginBond", _wrap_OBMol_BeginBond},
{"Chemistry::OpenBabelc::OBMol_NextBond", _wrap_OBMol_NextBond},
{"Chemistry::OpenBabelc::OBMol_BeginResidue", _wrap_OBMol_BeginResidue},
{"Chemistry::OpenBabelc::OBMol_NextResidue", _wrap_OBMol_NextResidue},
{"Chemistry::OpenBabelc::OBMol_BeginInternalCoord", _wrap_OBMol_BeginInternalCoord},
{"Chemistry::OpenBabelc::OBMol_NextInternalCoord", _wrap_OBMol_NextInternalCoord},
{"Chemistry::OpenBabelc::tokenize", _wrap_tokenize},
{"Chemistry::OpenBabelc::ThrowError", _wrap_ThrowError},
{"Chemistry::OpenBabelc::CartesianToInternal", _wrap_CartesianToInternal},
{"Chemistry::OpenBabelc::InternalToCartesian", _wrap_InternalToCartesian},
{"Chemistry::OpenBabelc::NewExtension", _wrap_NewExtension},
{"Chemistry::OpenBabelc::get_rmat", _wrap_get_rmat},
{"Chemistry::OpenBabelc::ob_make_rmat", _wrap_ob_make_rmat},
{"Chemistry::OpenBabelc::qtrfit", _wrap_qtrfit},
{"Chemistry::OpenBabelc::superimpose", _wrap_superimpose},
{"Chemistry::OpenBabelc::new_OBRTree", _wrap_new_OBRTree},
{"Chemistry::OpenBabelc::delete_OBRTree", _wrap_delete_OBRTree},
{"Chemistry::OpenBabelc::OBRTree_GetAtomIdx", _wrap_OBRTree_GetAtomIdx},
{"Chemistry::OpenBabelc::OBRTree_PathToRoot", _wrap_OBRTree_PathToRoot},
{"Chemistry::OpenBabelc::OBRing__path_set", _wrap_OBRing__path_set},
{"Chemistry::OpenBabelc::OBRing__path_get", _wrap_OBRing__path_get},
{"Chemistry::OpenBabelc::OBRing__pathset_set", _wrap_OBRing__pathset_set},
{"Chemistry::OpenBabelc::OBRing__pathset_get", _wrap_OBRing__pathset_get},
{"Chemistry::OpenBabelc::OBRing_findCenterAndNormal", _wrap_OBRing_findCenterAndNormal},
{"Chemistry::OpenBabelc::new_OBRing", _wrap_new_OBRing},
{"Chemistry::OpenBabelc::OBRing_Size", _wrap_OBRing_Size},
{"Chemistry::OpenBabelc::OBRing_PathSize", _wrap_OBRing_PathSize},
{"Chemistry::OpenBabelc::OBRing_IsMember", _wrap_OBRing_IsMember},
{"Chemistry::OpenBabelc::OBRing_IsAromatic", _wrap_OBRing_IsAromatic},
{"Chemistry::OpenBabelc::OBRing_IsInRing", _wrap_OBRing_IsInRing},
{"Chemistry::OpenBabelc::OBRing_SetParent", _wrap_OBRing_SetParent},
{"Chemistry::OpenBabelc::OBRing_GetParent", _wrap_OBRing_GetParent},
{"Chemistry::OpenBabelc::delete_OBRing", _wrap_delete_OBRing},
{"Chemistry::OpenBabelc::CompareRingSize", _wrap_CompareRingSize},
{"Chemistry::OpenBabelc::new_OBRingSearch", _wrap_new_OBRingSearch},
{"Chemistry::OpenBabelc::delete_OBRingSearch", _wrap_delete_OBRingSearch},
{"Chemistry::OpenBabelc::OBRingSearch_SortRings", _wrap_OBRingSearch_SortRings},
{"Chemistry::OpenBabelc::OBRingSearch_RemoveRedundant", _wrap_OBRingSearch_RemoveRedundant},
{"Chemistry::OpenBabelc::OBRingSearch_AddRingFromClosure", _wrap_OBRingSearch_AddRingFromClosure},
{"Chemistry::OpenBabelc::OBRingSearch_WriteRings", _wrap_OBRingSearch_WriteRings},
{"Chemistry::OpenBabelc::OBRingSearch_SaveUniqueRing", _wrap_OBRingSearch_SaveUniqueRing},
{"Chemistry::OpenBabelc::OBRingSearch_BeginRings", _wrap_OBRingSearch_BeginRings},
{"Chemistry::OpenBabelc::OBRingSearch_EndRings", _wrap_OBRingSearch_EndRings},
{"Chemistry::OpenBabelc::delete_OBSmartsPattern", _wrap_delete_OBSmartsPattern},
{"Chemistry::OpenBabelc::new_OBSmartsPattern", _wrap_new_OBSmartsPattern},
{"Chemistry::OpenBabelc::OBSmartsPattern_NumMatches", _wrap_OBSmartsPattern_NumMatches},
{"Chemistry::OpenBabelc::OBSmartsPattern_NumAtoms", _wrap_OBSmartsPattern_NumAtoms},
{"Chemistry::OpenBabelc::OBSmartsPattern_NumBonds", _wrap_OBSmartsPattern_NumBonds},
{"Chemistry::OpenBabelc::OBSmartsPattern_GetAtomicNum", _wrap_OBSmartsPattern_GetAtomicNum},
{"Chemistry::OpenBabelc::OBSmartsPattern_GetBond", _wrap_OBSmartsPattern_GetBond},
{"Chemistry::OpenBabelc::OBSmartsPattern_GetCharge", _wrap_OBSmartsPattern_GetCharge},
{"Chemistry::OpenBabelc::OBSmartsPattern_GetSMARTS", _wrap_OBSmartsPattern_GetSMARTS},
{"Chemistry::OpenBabelc::OBSmartsPattern_GetVectorBinding", _wrap_OBSmartsPattern_GetVectorBinding},
{"Chemistry::OpenBabelc::OBSmartsPattern_Empty", _wrap_OBSmartsPattern_Empty},
{"Chemistry::OpenBabelc::OBSmartsPattern_IsValid", _wrap_OBSmartsPattern_IsValid},
{"Chemistry::OpenBabelc::OBSmartsPattern_Init", _wrap_OBSmartsPattern_Init},
{"Chemistry::OpenBabelc::OBSmartsPattern_WriteMapList", _wrap_OBSmartsPattern_WriteMapList},
{"Chemistry::OpenBabelc::OBSmartsPattern_Match", _wrap_OBSmartsPattern_Match},
{"Chemistry::OpenBabelc::OBSmartsPattern_RestrictedMatch", _wrap_OBSmartsPattern_RestrictedMatch},
{"Chemistry::OpenBabelc::OBSmartsPattern_GetMapList", _wrap_OBSmartsPattern_GetMapList},
{"Chemistry::OpenBabelc::OBSmartsPattern_GetUMapList", _wrap_OBSmartsPattern_GetUMapList},
{"Chemistry::OpenBabelc::OBSmartsPattern_BeginMList", _wrap_OBSmartsPattern_BeginMList},
{"Chemistry::OpenBabelc::OBSmartsPattern_EndMList", _wrap_OBSmartsPattern_EndMList},
{"Chemistry::OpenBabelc::new_OBSSMatch", _wrap_new_OBSSMatch},
{"Chemistry::OpenBabelc::delete_OBSSMatch", _wrap_delete_OBSSMatch},
{"Chemistry::OpenBabelc::OBSSMatch_Match", _wrap_OBSSMatch_Match},
{"Chemistry::OpenBabelc::SmartsLexReplace", _wrap_SmartsLexReplace},
{"Chemistry::OpenBabelc::OBFingerprint_SetBit", _wrap_OBFingerprint_SetBit},
{"Chemistry::OpenBabelc::OBFingerprint_Fold", _wrap_OBFingerprint_Fold},
{"Chemistry::OpenBabelc::OBFingerprint_GetFingerprint", _wrap_OBFingerprint_GetFingerprint},
{"Chemistry::OpenBabelc::OBFingerprint_Description", _wrap_OBFingerprint_Description},
{"Chemistry::OpenBabelc::OBFingerprint_Flags", _wrap_OBFingerprint_Flags},
{"Chemistry::OpenBabelc::OBFingerprint_GetNextFPrt", _wrap_OBFingerprint_GetNextFPrt},
{"Chemistry::OpenBabelc::OBFingerprint_FindFingerprint", _wrap_OBFingerprint_FindFingerprint},
{"Chemistry::OpenBabelc::OBFingerprint_Tanimoto", _wrap_OBFingerprint_Tanimoto},
{"Chemistry::OpenBabelc::OBFingerprint_Getbitsperint", _wrap_OBFingerprint_Getbitsperint},
{"Chemistry::OpenBabelc::delete_OBFingerprint", _wrap_delete_OBFingerprint},
{"Chemistry::OpenBabelc::FptIndexHeader_headerlength_set", _wrap_FptIndexHeader_headerlength_set},
{"Chemistry::OpenBabelc::FptIndexHeader_headerlength_get", _wrap_FptIndexHeader_headerlength_get},
{"Chemistry::OpenBabelc::FptIndexHeader_nEntries_set", _wrap_FptIndexHeader_nEntries_set},
{"Chemistry::OpenBabelc::FptIndexHeader_nEntries_get", _wrap_FptIndexHeader_nEntries_get},
{"Chemistry::OpenBabelc::FptIndexHeader_words_set", _wrap_FptIndexHeader_words_set},
{"Chemistry::OpenBabelc::FptIndexHeader_words_get", _wrap_FptIndexHeader_words_get},
{"Chemistry::OpenBabelc::FptIndexHeader_fpid_set", _wrap_FptIndexHeader_fpid_set},
{"Chemistry::OpenBabelc::FptIndexHeader_fpid_get", _wrap_FptIndexHeader_fpid_get},
{"Chemistry::OpenBabelc::FptIndexHeader_datafilename_set", _wrap_FptIndexHeader_datafilename_set},
{"Chemistry::OpenBabelc::FptIndexHeader_datafilename_get", _wrap_FptIndexHeader_datafilename_get},
{"Chemistry::OpenBabelc::new_FptIndexHeader", _wrap_new_FptIndexHeader},
{"Chemistry::OpenBabelc::delete_FptIndexHeader", _wrap_delete_FptIndexHeader},
{"Chemistry::OpenBabelc::FptIndex_header_set", _wrap_FptIndex_header_set},
{"Chemistry::OpenBabelc::FptIndex_header_get", _wrap_FptIndex_header_get},
{"Chemistry::OpenBabelc::FptIndex_fptdata_set", _wrap_FptIndex_fptdata_set},
{"Chemistry::OpenBabelc::FptIndex_fptdata_get", _wrap_FptIndex_fptdata_get},
{"Chemistry::OpenBabelc::FptIndex_seekdata_set", _wrap_FptIndex_seekdata_set},
{"Chemistry::OpenBabelc::FptIndex_seekdata_get", _wrap_FptIndex_seekdata_get},
{"Chemistry::OpenBabelc::FptIndex_Read", _wrap_FptIndex_Read},
{"Chemistry::OpenBabelc::FptIndex_CheckFP", _wrap_FptIndex_CheckFP},
{"Chemistry::OpenBabelc::new_FptIndex", _wrap_new_FptIndex},
{"Chemistry::OpenBabelc::delete_FptIndex", _wrap_delete_FptIndex},
{"Chemistry::OpenBabelc::FastSearch_ReadIndex", _wrap_FastSearch_ReadIndex},
{"Chemistry::OpenBabelc::delete_FastSearch", _wrap_delete_FastSearch},
{"Chemistry::OpenBabelc::FastSearch_Find", _wrap_FastSearch_Find},
{"Chemistry::OpenBabelc::FastSearch_FindSimilar", _wrap_FastSearch_FindSimilar},
{"Chemistry::OpenBabelc::FastSearch_GetFingerprint", _wrap_FastSearch_GetFingerprint},
{"Chemistry::OpenBabelc::FastSearch_GetIndexHeader", _wrap_FastSearch_GetIndexHeader},
{"Chemistry::OpenBabelc::new_FastSearch", _wrap_new_FastSearch},
{"Chemistry::OpenBabelc::new_FastSearchIndexer", _wrap_new_FastSearchIndexer},
{"Chemistry::OpenBabelc::delete_FastSearchIndexer", _wrap_delete_FastSearchIndexer},
{"Chemistry::OpenBabelc::FastSearchIndexer_Add", _wrap_FastSearchIndexer_Add},
{"Chemistry::OpenBabelc::new_OBMolAtomIter", _wrap_new_OBMolAtomIter},
{"Chemistry::OpenBabelc::OBMolAtomIter_good", _wrap_OBMolAtomIter_good},
{"Chemistry::OpenBabelc::OBMolAtomIter_inc", _wrap_OBMolAtomIter_inc},
{"Chemistry::OpenBabelc::OBMolAtomIter_deref", _wrap_OBMolAtomIter_deref},
{"Chemistry::OpenBabelc::OBMolAtomIter___ref__", _wrap_OBMolAtomIter___ref__},
{"Chemistry::OpenBabelc::delete_OBMolAtomIter", _wrap_delete_OBMolAtomIter},
{"Chemistry::OpenBabelc::OBMolAtomIter_Visit_set", _wrap_OBMolAtomIter_Visit_set},
{"Chemistry::OpenBabelc::OBMolAtomIter_Visit_get", _wrap_OBMolAtomIter_Visit_get},
{"Chemistry::OpenBabelc::OBMolAtomIter_Clear", _wrap_OBMolAtomIter_Clear},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetIdx", _wrap_OBMolAtomIter_SetIdx},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetHyb", _wrap_OBMolAtomIter_SetHyb},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetAtomicNum", _wrap_OBMolAtomIter_SetAtomicNum},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetIsotope", _wrap_OBMolAtomIter_SetIsotope},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetImplicitValence", _wrap_OBMolAtomIter_SetImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomIter_IncrementImplicitValence", _wrap_OBMolAtomIter_IncrementImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomIter_DecrementImplicitValence", _wrap_OBMolAtomIter_DecrementImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetFormalCharge", _wrap_OBMolAtomIter_SetFormalCharge},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetSpinMultiplicity", _wrap_OBMolAtomIter_SetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetType", _wrap_OBMolAtomIter_SetType},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetPartialCharge", _wrap_OBMolAtomIter_SetPartialCharge},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetVector", _wrap_OBMolAtomIter_SetVector},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetCoordPtr", _wrap_OBMolAtomIter_SetCoordPtr},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetResidue", _wrap_OBMolAtomIter_SetResidue},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetParent", _wrap_OBMolAtomIter_SetParent},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetAromatic", _wrap_OBMolAtomIter_SetAromatic},
{"Chemistry::OpenBabelc::OBMolAtomIter_UnsetAromatic", _wrap_OBMolAtomIter_UnsetAromatic},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetClockwiseStereo", _wrap_OBMolAtomIter_SetClockwiseStereo},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetAntiClockwiseStereo", _wrap_OBMolAtomIter_SetAntiClockwiseStereo},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetPositiveStereo", _wrap_OBMolAtomIter_SetPositiveStereo},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetNegativeStereo", _wrap_OBMolAtomIter_SetNegativeStereo},
{"Chemistry::OpenBabelc::OBMolAtomIter_UnsetStereo", _wrap_OBMolAtomIter_UnsetStereo},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetInRing", _wrap_OBMolAtomIter_SetInRing},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetChiral", _wrap_OBMolAtomIter_SetChiral},
{"Chemistry::OpenBabelc::OBMolAtomIter_ClearCoordPtr", _wrap_OBMolAtomIter_ClearCoordPtr},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetFormalCharge", _wrap_OBMolAtomIter_GetFormalCharge},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetAtomicNum", _wrap_OBMolAtomIter_GetAtomicNum},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetIsotope", _wrap_OBMolAtomIter_GetIsotope},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetSpinMultiplicity", _wrap_OBMolAtomIter_GetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetAtomicMass", _wrap_OBMolAtomIter_GetAtomicMass},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetExactMass", _wrap_OBMolAtomIter_GetExactMass},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetIdx", _wrap_OBMolAtomIter_GetIdx},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetCoordinateIdx", _wrap_OBMolAtomIter_GetCoordinateIdx},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetCIdx", _wrap_OBMolAtomIter_GetCIdx},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetValence", _wrap_OBMolAtomIter_GetValence},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetHyb", _wrap_OBMolAtomIter_GetHyb},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetImplicitValence", _wrap_OBMolAtomIter_GetImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetHvyValence", _wrap_OBMolAtomIter_GetHvyValence},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetHeteroValence", _wrap_OBMolAtomIter_GetHeteroValence},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetType", _wrap_OBMolAtomIter_GetType},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetX", _wrap_OBMolAtomIter_GetX},
{"Chemistry::OpenBabelc::OBMolAtomIter_x", _wrap_OBMolAtomIter_x},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetY", _wrap_OBMolAtomIter_GetY},
{"Chemistry::OpenBabelc::OBMolAtomIter_y", _wrap_OBMolAtomIter_y},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetZ", _wrap_OBMolAtomIter_GetZ},
{"Chemistry::OpenBabelc::OBMolAtomIter_z", _wrap_OBMolAtomIter_z},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetCoordinate", _wrap_OBMolAtomIter_GetCoordinate},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetVector", _wrap_OBMolAtomIter_GetVector},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetPartialCharge", _wrap_OBMolAtomIter_GetPartialCharge},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetResidue", _wrap_OBMolAtomIter_GetResidue},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetParent", _wrap_OBMolAtomIter_GetParent},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetNewBondVector", _wrap_OBMolAtomIter_GetNewBondVector},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetBond", _wrap_OBMolAtomIter_GetBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetNextAtom", _wrap_OBMolAtomIter_GetNextAtom},
{"Chemistry::OpenBabelc::OBMolAtomIter_BeginBonds", _wrap_OBMolAtomIter_BeginBonds},
{"Chemistry::OpenBabelc::OBMolAtomIter_EndBonds", _wrap_OBMolAtomIter_EndBonds},
{"Chemistry::OpenBabelc::OBMolAtomIter_BeginBond", _wrap_OBMolAtomIter_BeginBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_NextBond", _wrap_OBMolAtomIter_NextBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_BeginNbrAtom", _wrap_OBMolAtomIter_BeginNbrAtom},
{"Chemistry::OpenBabelc::OBMolAtomIter_NextNbrAtom", _wrap_OBMolAtomIter_NextNbrAtom},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetDistance", _wrap_OBMolAtomIter_GetDistance},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetAngle", _wrap_OBMolAtomIter_GetAngle},
{"Chemistry::OpenBabelc::OBMolAtomIter_NewResidue", _wrap_OBMolAtomIter_NewResidue},
{"Chemistry::OpenBabelc::OBMolAtomIter_DeleteResidue", _wrap_OBMolAtomIter_DeleteResidue},
{"Chemistry::OpenBabelc::OBMolAtomIter_AddBond", _wrap_OBMolAtomIter_AddBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_InsertBond", _wrap_OBMolAtomIter_InsertBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_DeleteBond", _wrap_OBMolAtomIter_DeleteBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_ClearBond", _wrap_OBMolAtomIter_ClearBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_CountFreeOxygens", _wrap_OBMolAtomIter_CountFreeOxygens},
{"Chemistry::OpenBabelc::OBMolAtomIter_ImplicitHydrogenCount", _wrap_OBMolAtomIter_ImplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBMolAtomIter_ExplicitHydrogenCount", _wrap_OBMolAtomIter_ExplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBMolAtomIter_MemberOfRingCount", _wrap_OBMolAtomIter_MemberOfRingCount},
{"Chemistry::OpenBabelc::OBMolAtomIter_MemberOfRingSize", _wrap_OBMolAtomIter_MemberOfRingSize},
{"Chemistry::OpenBabelc::OBMolAtomIter_CountRingBonds", _wrap_OBMolAtomIter_CountRingBonds},
{"Chemistry::OpenBabelc::OBMolAtomIter_SmallestBondAngle", _wrap_OBMolAtomIter_SmallestBondAngle},
{"Chemistry::OpenBabelc::OBMolAtomIter_AverageBondAngle", _wrap_OBMolAtomIter_AverageBondAngle},
{"Chemistry::OpenBabelc::OBMolAtomIter_BOSum", _wrap_OBMolAtomIter_BOSum},
{"Chemistry::OpenBabelc::OBMolAtomIter_KBOSum", _wrap_OBMolAtomIter_KBOSum},
{"Chemistry::OpenBabelc::OBMolAtomIter_HtoMethyl", _wrap_OBMolAtomIter_HtoMethyl},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetHybAndGeom", _wrap_OBMolAtomIter_SetHybAndGeom},
{"Chemistry::OpenBabelc::OBMolAtomIter_ForceNoH", _wrap_OBMolAtomIter_ForceNoH},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasNoHForced", _wrap_OBMolAtomIter_HasNoHForced},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasResidue", _wrap_OBMolAtomIter_HasResidue},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsHydrogen", _wrap_OBMolAtomIter_IsHydrogen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsCarbon", _wrap_OBMolAtomIter_IsCarbon},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsNitrogen", _wrap_OBMolAtomIter_IsNitrogen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsOxygen", _wrap_OBMolAtomIter_IsOxygen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsSulfur", _wrap_OBMolAtomIter_IsSulfur},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsPhosphorus", _wrap_OBMolAtomIter_IsPhosphorus},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsAromatic", _wrap_OBMolAtomIter_IsAromatic},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsInRing", _wrap_OBMolAtomIter_IsInRing},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsInRingSize", _wrap_OBMolAtomIter_IsInRingSize},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsHeteroatom", _wrap_OBMolAtomIter_IsHeteroatom},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsNotCorH", _wrap_OBMolAtomIter_IsNotCorH},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsConnected", _wrap_OBMolAtomIter_IsConnected},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsOneThree", _wrap_OBMolAtomIter_IsOneThree},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsOneFour", _wrap_OBMolAtomIter_IsOneFour},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsCarboxylOxygen", _wrap_OBMolAtomIter_IsCarboxylOxygen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsPhosphateOxygen", _wrap_OBMolAtomIter_IsPhosphateOxygen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsSulfateOxygen", _wrap_OBMolAtomIter_IsSulfateOxygen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsNitroOxygen", _wrap_OBMolAtomIter_IsNitroOxygen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsAmideNitrogen", _wrap_OBMolAtomIter_IsAmideNitrogen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsPolarHydrogen", _wrap_OBMolAtomIter_IsPolarHydrogen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsNonPolarHydrogen", _wrap_OBMolAtomIter_IsNonPolarHydrogen},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsAromaticNOxide", _wrap_OBMolAtomIter_IsAromaticNOxide},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsChiral", _wrap_OBMolAtomIter_IsChiral},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsAxial", _wrap_OBMolAtomIter_IsAxial},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsClockwise", _wrap_OBMolAtomIter_IsClockwise},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsAntiClockwise", _wrap_OBMolAtomIter_IsAntiClockwise},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsPositiveStereo", _wrap_OBMolAtomIter_IsPositiveStereo},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsNegativeStereo", _wrap_OBMolAtomIter_IsNegativeStereo},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasChiralitySpecified", _wrap_OBMolAtomIter_HasChiralitySpecified},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasChiralVolume", _wrap_OBMolAtomIter_HasChiralVolume},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsHbondAcceptor", _wrap_OBMolAtomIter_IsHbondAcceptor},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsHbondDonor", _wrap_OBMolAtomIter_IsHbondDonor},
{"Chemistry::OpenBabelc::OBMolAtomIter_IsHbondDonorH", _wrap_OBMolAtomIter_IsHbondDonorH},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasAlphaBetaUnsat", _wrap_OBMolAtomIter_HasAlphaBetaUnsat},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasBondOfOrder", _wrap_OBMolAtomIter_HasBondOfOrder},
{"Chemistry::OpenBabelc::OBMolAtomIter_CountBondsOfOrder", _wrap_OBMolAtomIter_CountBondsOfOrder},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasNonSingleBond", _wrap_OBMolAtomIter_HasNonSingleBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasSingleBond", _wrap_OBMolAtomIter_HasSingleBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasDoubleBond", _wrap_OBMolAtomIter_HasDoubleBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasAromaticBond", _wrap_OBMolAtomIter_HasAromaticBond},
{"Chemistry::OpenBabelc::OBMolAtomIter_MatchesSMARTS", _wrap_OBMolAtomIter_MatchesSMARTS},
{"Chemistry::OpenBabelc::OBMolAtomIter_DoTransformations", _wrap_OBMolAtomIter_DoTransformations},
{"Chemistry::OpenBabelc::OBMolAtomIter_ClassDescription", _wrap_OBMolAtomIter_ClassDescription},
{"Chemistry::OpenBabelc::OBMolAtomIter_HasData", _wrap_OBMolAtomIter_HasData},
{"Chemistry::OpenBabelc::OBMolAtomIter_DeleteData", _wrap_OBMolAtomIter_DeleteData},
{"Chemistry::OpenBabelc::OBMolAtomIter_SetData", _wrap_OBMolAtomIter_SetData},
{"Chemistry::OpenBabelc::OBMolAtomIter_DataSize", _wrap_OBMolAtomIter_DataSize},
{"Chemistry::OpenBabelc::OBMolAtomIter_GetData", _wrap_OBMolAtomIter_GetData},
{"Chemistry::OpenBabelc::OBMolAtomIter_BeginData", _wrap_OBMolAtomIter_BeginData},
{"Chemistry::OpenBabelc::OBMolAtomIter_EndData", _wrap_OBMolAtomIter_EndData},
{"Chemistry::OpenBabelc::new_OBMolAtomDFSIter", _wrap_new_OBMolAtomDFSIter},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter___plusplus__", _wrap_OBMolAtomDFSIter___plusplus__},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter___deref__", _wrap_OBMolAtomDFSIter___deref__},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter___ref__", _wrap_OBMolAtomDFSIter___ref__},
{"Chemistry::OpenBabelc::delete_OBMolAtomDFSIter", _wrap_delete_OBMolAtomDFSIter},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_Visit_set", _wrap_OBMolAtomDFSIter_Visit_set},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_Visit_get", _wrap_OBMolAtomDFSIter_Visit_get},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_Clear", _wrap_OBMolAtomDFSIter_Clear},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetIdx", _wrap_OBMolAtomDFSIter_SetIdx},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetHyb", _wrap_OBMolAtomDFSIter_SetHyb},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetAtomicNum", _wrap_OBMolAtomDFSIter_SetAtomicNum},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetIsotope", _wrap_OBMolAtomDFSIter_SetIsotope},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetImplicitValence", _wrap_OBMolAtomDFSIter_SetImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IncrementImplicitValence", _wrap_OBMolAtomDFSIter_IncrementImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_DecrementImplicitValence", _wrap_OBMolAtomDFSIter_DecrementImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetFormalCharge", _wrap_OBMolAtomDFSIter_SetFormalCharge},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetSpinMultiplicity", _wrap_OBMolAtomDFSIter_SetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetType", _wrap_OBMolAtomDFSIter_SetType},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetPartialCharge", _wrap_OBMolAtomDFSIter_SetPartialCharge},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetVector", _wrap_OBMolAtomDFSIter_SetVector},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetCoordPtr", _wrap_OBMolAtomDFSIter_SetCoordPtr},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetResidue", _wrap_OBMolAtomDFSIter_SetResidue},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetParent", _wrap_OBMolAtomDFSIter_SetParent},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetAromatic", _wrap_OBMolAtomDFSIter_SetAromatic},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_UnsetAromatic", _wrap_OBMolAtomDFSIter_UnsetAromatic},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetClockwiseStereo", _wrap_OBMolAtomDFSIter_SetClockwiseStereo},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetAntiClockwiseStereo", _wrap_OBMolAtomDFSIter_SetAntiClockwiseStereo},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetPositiveStereo", _wrap_OBMolAtomDFSIter_SetPositiveStereo},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetNegativeStereo", _wrap_OBMolAtomDFSIter_SetNegativeStereo},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_UnsetStereo", _wrap_OBMolAtomDFSIter_UnsetStereo},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetInRing", _wrap_OBMolAtomDFSIter_SetInRing},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetChiral", _wrap_OBMolAtomDFSIter_SetChiral},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_ClearCoordPtr", _wrap_OBMolAtomDFSIter_ClearCoordPtr},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetFormalCharge", _wrap_OBMolAtomDFSIter_GetFormalCharge},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetAtomicNum", _wrap_OBMolAtomDFSIter_GetAtomicNum},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetIsotope", _wrap_OBMolAtomDFSIter_GetIsotope},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetSpinMultiplicity", _wrap_OBMolAtomDFSIter_GetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetAtomicMass", _wrap_OBMolAtomDFSIter_GetAtomicMass},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetExactMass", _wrap_OBMolAtomDFSIter_GetExactMass},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetIdx", _wrap_OBMolAtomDFSIter_GetIdx},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetCoordinateIdx", _wrap_OBMolAtomDFSIter_GetCoordinateIdx},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetCIdx", _wrap_OBMolAtomDFSIter_GetCIdx},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetValence", _wrap_OBMolAtomDFSIter_GetValence},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetHyb", _wrap_OBMolAtomDFSIter_GetHyb},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetImplicitValence", _wrap_OBMolAtomDFSIter_GetImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetHvyValence", _wrap_OBMolAtomDFSIter_GetHvyValence},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetHeteroValence", _wrap_OBMolAtomDFSIter_GetHeteroValence},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetType", _wrap_OBMolAtomDFSIter_GetType},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetX", _wrap_OBMolAtomDFSIter_GetX},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_x", _wrap_OBMolAtomDFSIter_x},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetY", _wrap_OBMolAtomDFSIter_GetY},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_y", _wrap_OBMolAtomDFSIter_y},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetZ", _wrap_OBMolAtomDFSIter_GetZ},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_z", _wrap_OBMolAtomDFSIter_z},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetCoordinate", _wrap_OBMolAtomDFSIter_GetCoordinate},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetVector", _wrap_OBMolAtomDFSIter_GetVector},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetPartialCharge", _wrap_OBMolAtomDFSIter_GetPartialCharge},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetResidue", _wrap_OBMolAtomDFSIter_GetResidue},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetParent", _wrap_OBMolAtomDFSIter_GetParent},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetNewBondVector", _wrap_OBMolAtomDFSIter_GetNewBondVector},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetBond", _wrap_OBMolAtomDFSIter_GetBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetNextAtom", _wrap_OBMolAtomDFSIter_GetNextAtom},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_BeginBonds", _wrap_OBMolAtomDFSIter_BeginBonds},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_EndBonds", _wrap_OBMolAtomDFSIter_EndBonds},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_BeginBond", _wrap_OBMolAtomDFSIter_BeginBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_NextBond", _wrap_OBMolAtomDFSIter_NextBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_BeginNbrAtom", _wrap_OBMolAtomDFSIter_BeginNbrAtom},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_NextNbrAtom", _wrap_OBMolAtomDFSIter_NextNbrAtom},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetDistance", _wrap_OBMolAtomDFSIter_GetDistance},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetAngle", _wrap_OBMolAtomDFSIter_GetAngle},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_NewResidue", _wrap_OBMolAtomDFSIter_NewResidue},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_DeleteResidue", _wrap_OBMolAtomDFSIter_DeleteResidue},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_AddBond", _wrap_OBMolAtomDFSIter_AddBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_InsertBond", _wrap_OBMolAtomDFSIter_InsertBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_DeleteBond", _wrap_OBMolAtomDFSIter_DeleteBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_ClearBond", _wrap_OBMolAtomDFSIter_ClearBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_CountFreeOxygens", _wrap_OBMolAtomDFSIter_CountFreeOxygens},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_ImplicitHydrogenCount", _wrap_OBMolAtomDFSIter_ImplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_ExplicitHydrogenCount", _wrap_OBMolAtomDFSIter_ExplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_MemberOfRingCount", _wrap_OBMolAtomDFSIter_MemberOfRingCount},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_MemberOfRingSize", _wrap_OBMolAtomDFSIter_MemberOfRingSize},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_CountRingBonds", _wrap_OBMolAtomDFSIter_CountRingBonds},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SmallestBondAngle", _wrap_OBMolAtomDFSIter_SmallestBondAngle},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_AverageBondAngle", _wrap_OBMolAtomDFSIter_AverageBondAngle},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_BOSum", _wrap_OBMolAtomDFSIter_BOSum},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_KBOSum", _wrap_OBMolAtomDFSIter_KBOSum},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HtoMethyl", _wrap_OBMolAtomDFSIter_HtoMethyl},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetHybAndGeom", _wrap_OBMolAtomDFSIter_SetHybAndGeom},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_ForceNoH", _wrap_OBMolAtomDFSIter_ForceNoH},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasNoHForced", _wrap_OBMolAtomDFSIter_HasNoHForced},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasResidue", _wrap_OBMolAtomDFSIter_HasResidue},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsHydrogen", _wrap_OBMolAtomDFSIter_IsHydrogen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsCarbon", _wrap_OBMolAtomDFSIter_IsCarbon},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsNitrogen", _wrap_OBMolAtomDFSIter_IsNitrogen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsOxygen", _wrap_OBMolAtomDFSIter_IsOxygen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsSulfur", _wrap_OBMolAtomDFSIter_IsSulfur},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsPhosphorus", _wrap_OBMolAtomDFSIter_IsPhosphorus},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsAromatic", _wrap_OBMolAtomDFSIter_IsAromatic},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsInRing", _wrap_OBMolAtomDFSIter_IsInRing},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsInRingSize", _wrap_OBMolAtomDFSIter_IsInRingSize},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsHeteroatom", _wrap_OBMolAtomDFSIter_IsHeteroatom},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsNotCorH", _wrap_OBMolAtomDFSIter_IsNotCorH},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsConnected", _wrap_OBMolAtomDFSIter_IsConnected},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsOneThree", _wrap_OBMolAtomDFSIter_IsOneThree},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsOneFour", _wrap_OBMolAtomDFSIter_IsOneFour},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsCarboxylOxygen", _wrap_OBMolAtomDFSIter_IsCarboxylOxygen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsPhosphateOxygen", _wrap_OBMolAtomDFSIter_IsPhosphateOxygen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsSulfateOxygen", _wrap_OBMolAtomDFSIter_IsSulfateOxygen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsNitroOxygen", _wrap_OBMolAtomDFSIter_IsNitroOxygen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsAmideNitrogen", _wrap_OBMolAtomDFSIter_IsAmideNitrogen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsPolarHydrogen", _wrap_OBMolAtomDFSIter_IsPolarHydrogen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsNonPolarHydrogen", _wrap_OBMolAtomDFSIter_IsNonPolarHydrogen},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsAromaticNOxide", _wrap_OBMolAtomDFSIter_IsAromaticNOxide},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsChiral", _wrap_OBMolAtomDFSIter_IsChiral},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsAxial", _wrap_OBMolAtomDFSIter_IsAxial},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsClockwise", _wrap_OBMolAtomDFSIter_IsClockwise},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsAntiClockwise", _wrap_OBMolAtomDFSIter_IsAntiClockwise},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsPositiveStereo", _wrap_OBMolAtomDFSIter_IsPositiveStereo},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsNegativeStereo", _wrap_OBMolAtomDFSIter_IsNegativeStereo},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasChiralitySpecified", _wrap_OBMolAtomDFSIter_HasChiralitySpecified},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasChiralVolume", _wrap_OBMolAtomDFSIter_HasChiralVolume},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsHbondAcceptor", _wrap_OBMolAtomDFSIter_IsHbondAcceptor},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsHbondDonor", _wrap_OBMolAtomDFSIter_IsHbondDonor},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_IsHbondDonorH", _wrap_OBMolAtomDFSIter_IsHbondDonorH},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasAlphaBetaUnsat", _wrap_OBMolAtomDFSIter_HasAlphaBetaUnsat},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasBondOfOrder", _wrap_OBMolAtomDFSIter_HasBondOfOrder},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_CountBondsOfOrder", _wrap_OBMolAtomDFSIter_CountBondsOfOrder},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasNonSingleBond", _wrap_OBMolAtomDFSIter_HasNonSingleBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasSingleBond", _wrap_OBMolAtomDFSIter_HasSingleBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasDoubleBond", _wrap_OBMolAtomDFSIter_HasDoubleBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasAromaticBond", _wrap_OBMolAtomDFSIter_HasAromaticBond},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_MatchesSMARTS", _wrap_OBMolAtomDFSIter_MatchesSMARTS},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_DoTransformations", _wrap_OBMolAtomDFSIter_DoTransformations},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_ClassDescription", _wrap_OBMolAtomDFSIter_ClassDescription},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_HasData", _wrap_OBMolAtomDFSIter_HasData},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_DeleteData", _wrap_OBMolAtomDFSIter_DeleteData},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_SetData", _wrap_OBMolAtomDFSIter_SetData},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_DataSize", _wrap_OBMolAtomDFSIter_DataSize},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_GetData", _wrap_OBMolAtomDFSIter_GetData},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_BeginData", _wrap_OBMolAtomDFSIter_BeginData},
{"Chemistry::OpenBabelc::OBMolAtomDFSIter_EndData", _wrap_OBMolAtomDFSIter_EndData},
{"Chemistry::OpenBabelc::new_OBMolAtomBFSIter", _wrap_new_OBMolAtomBFSIter},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter___plusplus__", _wrap_OBMolAtomBFSIter___plusplus__},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter___deref__", _wrap_OBMolAtomBFSIter___deref__},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter___ref__", _wrap_OBMolAtomBFSIter___ref__},
{"Chemistry::OpenBabelc::delete_OBMolAtomBFSIter", _wrap_delete_OBMolAtomBFSIter},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_Visit_set", _wrap_OBMolAtomBFSIter_Visit_set},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_Visit_get", _wrap_OBMolAtomBFSIter_Visit_get},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_Clear", _wrap_OBMolAtomBFSIter_Clear},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetIdx", _wrap_OBMolAtomBFSIter_SetIdx},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetHyb", _wrap_OBMolAtomBFSIter_SetHyb},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetAtomicNum", _wrap_OBMolAtomBFSIter_SetAtomicNum},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetIsotope", _wrap_OBMolAtomBFSIter_SetIsotope},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetImplicitValence", _wrap_OBMolAtomBFSIter_SetImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IncrementImplicitValence", _wrap_OBMolAtomBFSIter_IncrementImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_DecrementImplicitValence", _wrap_OBMolAtomBFSIter_DecrementImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetFormalCharge", _wrap_OBMolAtomBFSIter_SetFormalCharge},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetSpinMultiplicity", _wrap_OBMolAtomBFSIter_SetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetType", _wrap_OBMolAtomBFSIter_SetType},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetPartialCharge", _wrap_OBMolAtomBFSIter_SetPartialCharge},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetVector", _wrap_OBMolAtomBFSIter_SetVector},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetCoordPtr", _wrap_OBMolAtomBFSIter_SetCoordPtr},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetResidue", _wrap_OBMolAtomBFSIter_SetResidue},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetParent", _wrap_OBMolAtomBFSIter_SetParent},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetAromatic", _wrap_OBMolAtomBFSIter_SetAromatic},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_UnsetAromatic", _wrap_OBMolAtomBFSIter_UnsetAromatic},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetClockwiseStereo", _wrap_OBMolAtomBFSIter_SetClockwiseStereo},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetAntiClockwiseStereo", _wrap_OBMolAtomBFSIter_SetAntiClockwiseStereo},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetPositiveStereo", _wrap_OBMolAtomBFSIter_SetPositiveStereo},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetNegativeStereo", _wrap_OBMolAtomBFSIter_SetNegativeStereo},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_UnsetStereo", _wrap_OBMolAtomBFSIter_UnsetStereo},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetInRing", _wrap_OBMolAtomBFSIter_SetInRing},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetChiral", _wrap_OBMolAtomBFSIter_SetChiral},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_ClearCoordPtr", _wrap_OBMolAtomBFSIter_ClearCoordPtr},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetFormalCharge", _wrap_OBMolAtomBFSIter_GetFormalCharge},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetAtomicNum", _wrap_OBMolAtomBFSIter_GetAtomicNum},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetIsotope", _wrap_OBMolAtomBFSIter_GetIsotope},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetSpinMultiplicity", _wrap_OBMolAtomBFSIter_GetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetAtomicMass", _wrap_OBMolAtomBFSIter_GetAtomicMass},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetExactMass", _wrap_OBMolAtomBFSIter_GetExactMass},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetIdx", _wrap_OBMolAtomBFSIter_GetIdx},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetCoordinateIdx", _wrap_OBMolAtomBFSIter_GetCoordinateIdx},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetCIdx", _wrap_OBMolAtomBFSIter_GetCIdx},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetValence", _wrap_OBMolAtomBFSIter_GetValence},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetHyb", _wrap_OBMolAtomBFSIter_GetHyb},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetImplicitValence", _wrap_OBMolAtomBFSIter_GetImplicitValence},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetHvyValence", _wrap_OBMolAtomBFSIter_GetHvyValence},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetHeteroValence", _wrap_OBMolAtomBFSIter_GetHeteroValence},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetType", _wrap_OBMolAtomBFSIter_GetType},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetX", _wrap_OBMolAtomBFSIter_GetX},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_x", _wrap_OBMolAtomBFSIter_x},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetY", _wrap_OBMolAtomBFSIter_GetY},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_y", _wrap_OBMolAtomBFSIter_y},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetZ", _wrap_OBMolAtomBFSIter_GetZ},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_z", _wrap_OBMolAtomBFSIter_z},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetCoordinate", _wrap_OBMolAtomBFSIter_GetCoordinate},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetVector", _wrap_OBMolAtomBFSIter_GetVector},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetPartialCharge", _wrap_OBMolAtomBFSIter_GetPartialCharge},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetResidue", _wrap_OBMolAtomBFSIter_GetResidue},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetParent", _wrap_OBMolAtomBFSIter_GetParent},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetNewBondVector", _wrap_OBMolAtomBFSIter_GetNewBondVector},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetBond", _wrap_OBMolAtomBFSIter_GetBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetNextAtom", _wrap_OBMolAtomBFSIter_GetNextAtom},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_BeginBonds", _wrap_OBMolAtomBFSIter_BeginBonds},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_EndBonds", _wrap_OBMolAtomBFSIter_EndBonds},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_BeginBond", _wrap_OBMolAtomBFSIter_BeginBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_NextBond", _wrap_OBMolAtomBFSIter_NextBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_BeginNbrAtom", _wrap_OBMolAtomBFSIter_BeginNbrAtom},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_NextNbrAtom", _wrap_OBMolAtomBFSIter_NextNbrAtom},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetDistance", _wrap_OBMolAtomBFSIter_GetDistance},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetAngle", _wrap_OBMolAtomBFSIter_GetAngle},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_NewResidue", _wrap_OBMolAtomBFSIter_NewResidue},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_DeleteResidue", _wrap_OBMolAtomBFSIter_DeleteResidue},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_AddBond", _wrap_OBMolAtomBFSIter_AddBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_InsertBond", _wrap_OBMolAtomBFSIter_InsertBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_DeleteBond", _wrap_OBMolAtomBFSIter_DeleteBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_ClearBond", _wrap_OBMolAtomBFSIter_ClearBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_CountFreeOxygens", _wrap_OBMolAtomBFSIter_CountFreeOxygens},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_ImplicitHydrogenCount", _wrap_OBMolAtomBFSIter_ImplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_ExplicitHydrogenCount", _wrap_OBMolAtomBFSIter_ExplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_MemberOfRingCount", _wrap_OBMolAtomBFSIter_MemberOfRingCount},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_MemberOfRingSize", _wrap_OBMolAtomBFSIter_MemberOfRingSize},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_CountRingBonds", _wrap_OBMolAtomBFSIter_CountRingBonds},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SmallestBondAngle", _wrap_OBMolAtomBFSIter_SmallestBondAngle},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_AverageBondAngle", _wrap_OBMolAtomBFSIter_AverageBondAngle},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_BOSum", _wrap_OBMolAtomBFSIter_BOSum},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_KBOSum", _wrap_OBMolAtomBFSIter_KBOSum},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HtoMethyl", _wrap_OBMolAtomBFSIter_HtoMethyl},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetHybAndGeom", _wrap_OBMolAtomBFSIter_SetHybAndGeom},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_ForceNoH", _wrap_OBMolAtomBFSIter_ForceNoH},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasNoHForced", _wrap_OBMolAtomBFSIter_HasNoHForced},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasResidue", _wrap_OBMolAtomBFSIter_HasResidue},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsHydrogen", _wrap_OBMolAtomBFSIter_IsHydrogen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsCarbon", _wrap_OBMolAtomBFSIter_IsCarbon},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsNitrogen", _wrap_OBMolAtomBFSIter_IsNitrogen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsOxygen", _wrap_OBMolAtomBFSIter_IsOxygen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsSulfur", _wrap_OBMolAtomBFSIter_IsSulfur},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsPhosphorus", _wrap_OBMolAtomBFSIter_IsPhosphorus},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsAromatic", _wrap_OBMolAtomBFSIter_IsAromatic},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsInRing", _wrap_OBMolAtomBFSIter_IsInRing},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsInRingSize", _wrap_OBMolAtomBFSIter_IsInRingSize},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsHeteroatom", _wrap_OBMolAtomBFSIter_IsHeteroatom},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsNotCorH", _wrap_OBMolAtomBFSIter_IsNotCorH},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsConnected", _wrap_OBMolAtomBFSIter_IsConnected},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsOneThree", _wrap_OBMolAtomBFSIter_IsOneThree},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsOneFour", _wrap_OBMolAtomBFSIter_IsOneFour},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsCarboxylOxygen", _wrap_OBMolAtomBFSIter_IsCarboxylOxygen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsPhosphateOxygen", _wrap_OBMolAtomBFSIter_IsPhosphateOxygen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsSulfateOxygen", _wrap_OBMolAtomBFSIter_IsSulfateOxygen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsNitroOxygen", _wrap_OBMolAtomBFSIter_IsNitroOxygen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsAmideNitrogen", _wrap_OBMolAtomBFSIter_IsAmideNitrogen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsPolarHydrogen", _wrap_OBMolAtomBFSIter_IsPolarHydrogen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsNonPolarHydrogen", _wrap_OBMolAtomBFSIter_IsNonPolarHydrogen},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsAromaticNOxide", _wrap_OBMolAtomBFSIter_IsAromaticNOxide},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsChiral", _wrap_OBMolAtomBFSIter_IsChiral},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsAxial", _wrap_OBMolAtomBFSIter_IsAxial},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsClockwise", _wrap_OBMolAtomBFSIter_IsClockwise},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsAntiClockwise", _wrap_OBMolAtomBFSIter_IsAntiClockwise},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsPositiveStereo", _wrap_OBMolAtomBFSIter_IsPositiveStereo},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsNegativeStereo", _wrap_OBMolAtomBFSIter_IsNegativeStereo},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasChiralitySpecified", _wrap_OBMolAtomBFSIter_HasChiralitySpecified},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasChiralVolume", _wrap_OBMolAtomBFSIter_HasChiralVolume},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsHbondAcceptor", _wrap_OBMolAtomBFSIter_IsHbondAcceptor},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsHbondDonor", _wrap_OBMolAtomBFSIter_IsHbondDonor},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_IsHbondDonorH", _wrap_OBMolAtomBFSIter_IsHbondDonorH},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasAlphaBetaUnsat", _wrap_OBMolAtomBFSIter_HasAlphaBetaUnsat},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasBondOfOrder", _wrap_OBMolAtomBFSIter_HasBondOfOrder},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_CountBondsOfOrder", _wrap_OBMolAtomBFSIter_CountBondsOfOrder},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasNonSingleBond", _wrap_OBMolAtomBFSIter_HasNonSingleBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasSingleBond", _wrap_OBMolAtomBFSIter_HasSingleBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasDoubleBond", _wrap_OBMolAtomBFSIter_HasDoubleBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasAromaticBond", _wrap_OBMolAtomBFSIter_HasAromaticBond},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_MatchesSMARTS", _wrap_OBMolAtomBFSIter_MatchesSMARTS},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_DoTransformations", _wrap_OBMolAtomBFSIter_DoTransformations},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_ClassDescription", _wrap_OBMolAtomBFSIter_ClassDescription},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_HasData", _wrap_OBMolAtomBFSIter_HasData},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_DeleteData", _wrap_OBMolAtomBFSIter_DeleteData},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_SetData", _wrap_OBMolAtomBFSIter_SetData},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_DataSize", _wrap_OBMolAtomBFSIter_DataSize},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_GetData", _wrap_OBMolAtomBFSIter_GetData},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_BeginData", _wrap_OBMolAtomBFSIter_BeginData},
{"Chemistry::OpenBabelc::OBMolAtomBFSIter_EndData", _wrap_OBMolAtomBFSIter_EndData},
{"Chemistry::OpenBabelc::new_OBMolBondIter", _wrap_new_OBMolBondIter},
{"Chemistry::OpenBabelc::OBMolBondIter_good", _wrap_OBMolBondIter_good},
{"Chemistry::OpenBabelc::OBMolBondIter_inc", _wrap_OBMolBondIter_inc},
{"Chemistry::OpenBabelc::OBMolBondIter_deref", _wrap_OBMolBondIter_deref},
{"Chemistry::OpenBabelc::OBMolBondIter___ref__", _wrap_OBMolBondIter___ref__},
{"Chemistry::OpenBabelc::delete_OBMolBondIter", _wrap_delete_OBMolBondIter},
{"Chemistry::OpenBabelc::OBMolBondIter_Visit_set", _wrap_OBMolBondIter_Visit_set},
{"Chemistry::OpenBabelc::OBMolBondIter_Visit_get", _wrap_OBMolBondIter_Visit_get},
{"Chemistry::OpenBabelc::OBMolBondIter_SetIdx", _wrap_OBMolBondIter_SetIdx},
{"Chemistry::OpenBabelc::OBMolBondIter_SetBO", _wrap_OBMolBondIter_SetBO},
{"Chemistry::OpenBabelc::OBMolBondIter_SetBondOrder", _wrap_OBMolBondIter_SetBondOrder},
{"Chemistry::OpenBabelc::OBMolBondIter_SetBegin", _wrap_OBMolBondIter_SetBegin},
{"Chemistry::OpenBabelc::OBMolBondIter_SetEnd", _wrap_OBMolBondIter_SetEnd},
{"Chemistry::OpenBabelc::OBMolBondIter_SetParent", _wrap_OBMolBondIter_SetParent},
{"Chemistry::OpenBabelc::OBMolBondIter_SetLength", _wrap_OBMolBondIter_SetLength},
{"Chemistry::OpenBabelc::OBMolBondIter_Set", _wrap_OBMolBondIter_Set},
{"Chemistry::OpenBabelc::OBMolBondIter_SetKSingle", _wrap_OBMolBondIter_SetKSingle},
{"Chemistry::OpenBabelc::OBMolBondIter_SetKDouble", _wrap_OBMolBondIter_SetKDouble},
{"Chemistry::OpenBabelc::OBMolBondIter_SetKTriple", _wrap_OBMolBondIter_SetKTriple},
{"Chemistry::OpenBabelc::OBMolBondIter_SetAromatic", _wrap_OBMolBondIter_SetAromatic},
{"Chemistry::OpenBabelc::OBMolBondIter_SetHash", _wrap_OBMolBondIter_SetHash},
{"Chemistry::OpenBabelc::OBMolBondIter_SetWedge", _wrap_OBMolBondIter_SetWedge},
{"Chemistry::OpenBabelc::OBMolBondIter_SetUp", _wrap_OBMolBondIter_SetUp},
{"Chemistry::OpenBabelc::OBMolBondIter_SetDown", _wrap_OBMolBondIter_SetDown},
{"Chemistry::OpenBabelc::OBMolBondIter_SetInRing", _wrap_OBMolBondIter_SetInRing},
{"Chemistry::OpenBabelc::OBMolBondIter_SetClosure", _wrap_OBMolBondIter_SetClosure},
{"Chemistry::OpenBabelc::OBMolBondIter_UnsetHash", _wrap_OBMolBondIter_UnsetHash},
{"Chemistry::OpenBabelc::OBMolBondIter_UnsetWedge", _wrap_OBMolBondIter_UnsetWedge},
{"Chemistry::OpenBabelc::OBMolBondIter_UnsetUp", _wrap_OBMolBondIter_UnsetUp},
{"Chemistry::OpenBabelc::OBMolBondIter_UnsetDown", _wrap_OBMolBondIter_UnsetDown},
{"Chemistry::OpenBabelc::OBMolBondIter_UnsetAromatic", _wrap_OBMolBondIter_UnsetAromatic},
{"Chemistry::OpenBabelc::OBMolBondIter_UnsetKekule", _wrap_OBMolBondIter_UnsetKekule},
{"Chemistry::OpenBabelc::OBMolBondIter_GetIdx", _wrap_OBMolBondIter_GetIdx},
{"Chemistry::OpenBabelc::OBMolBondIter_GetBO", _wrap_OBMolBondIter_GetBO},
{"Chemistry::OpenBabelc::OBMolBondIter_GetBondOrder", _wrap_OBMolBondIter_GetBondOrder},
{"Chemistry::OpenBabelc::OBMolBondIter_GetFlags", _wrap_OBMolBondIter_GetFlags},
{"Chemistry::OpenBabelc::OBMolBondIter_GetBeginAtomIdx", _wrap_OBMolBondIter_GetBeginAtomIdx},
{"Chemistry::OpenBabelc::OBMolBondIter_GetEndAtomIdx", _wrap_OBMolBondIter_GetEndAtomIdx},
{"Chemistry::OpenBabelc::OBMolBondIter_GetBeginAtom", _wrap_OBMolBondIter_GetBeginAtom},
{"Chemistry::OpenBabelc::OBMolBondIter_GetEndAtom", _wrap_OBMolBondIter_GetEndAtom},
{"Chemistry::OpenBabelc::OBMolBondIter_GetNbrAtom", _wrap_OBMolBondIter_GetNbrAtom},
{"Chemistry::OpenBabelc::OBMolBondIter_GetParent", _wrap_OBMolBondIter_GetParent},
{"Chemistry::OpenBabelc::OBMolBondIter_GetEquibLength", _wrap_OBMolBondIter_GetEquibLength},
{"Chemistry::OpenBabelc::OBMolBondIter_GetLength", _wrap_OBMolBondIter_GetLength},
{"Chemistry::OpenBabelc::OBMolBondIter_GetNbrAtomIdx", _wrap_OBMolBondIter_GetNbrAtomIdx},
{"Chemistry::OpenBabelc::OBMolBondIter_IsAromatic", _wrap_OBMolBondIter_IsAromatic},
{"Chemistry::OpenBabelc::OBMolBondIter_IsInRing", _wrap_OBMolBondIter_IsInRing},
{"Chemistry::OpenBabelc::OBMolBondIter_IsRotor", _wrap_OBMolBondIter_IsRotor},
{"Chemistry::OpenBabelc::OBMolBondIter_IsAmide", _wrap_OBMolBondIter_IsAmide},
{"Chemistry::OpenBabelc::OBMolBondIter_IsPrimaryAmide", _wrap_OBMolBondIter_IsPrimaryAmide},
{"Chemistry::OpenBabelc::OBMolBondIter_IsSecondaryAmide", _wrap_OBMolBondIter_IsSecondaryAmide},
{"Chemistry::OpenBabelc::OBMolBondIter_IsEster", _wrap_OBMolBondIter_IsEster},
{"Chemistry::OpenBabelc::OBMolBondIter_IsCarbonyl", _wrap_OBMolBondIter_IsCarbonyl},
{"Chemistry::OpenBabelc::OBMolBondIter_IsSingle", _wrap_OBMolBondIter_IsSingle},
{"Chemistry::OpenBabelc::OBMolBondIter_IsDouble", _wrap_OBMolBondIter_IsDouble},
{"Chemistry::OpenBabelc::OBMolBondIter_IsTriple", _wrap_OBMolBondIter_IsTriple},
{"Chemistry::OpenBabelc::OBMolBondIter_IsKSingle", _wrap_OBMolBondIter_IsKSingle},
{"Chemistry::OpenBabelc::OBMolBondIter_IsKDouble", _wrap_OBMolBondIter_IsKDouble},
{"Chemistry::OpenBabelc::OBMolBondIter_IsKTriple", _wrap_OBMolBondIter_IsKTriple},
{"Chemistry::OpenBabelc::OBMolBondIter_IsClosure", _wrap_OBMolBondIter_IsClosure},
{"Chemistry::OpenBabelc::OBMolBondIter_IsUp", _wrap_OBMolBondIter_IsUp},
{"Chemistry::OpenBabelc::OBMolBondIter_IsDown", _wrap_OBMolBondIter_IsDown},
{"Chemistry::OpenBabelc::OBMolBondIter_IsWedge", _wrap_OBMolBondIter_IsWedge},
{"Chemistry::OpenBabelc::OBMolBondIter_IsHash", _wrap_OBMolBondIter_IsHash},
{"Chemistry::OpenBabelc::OBMolBondIter_IsDoubleBondGeometry", _wrap_OBMolBondIter_IsDoubleBondGeometry},
{"Chemistry::OpenBabelc::OBMolBondIter_DoTransformations", _wrap_OBMolBondIter_DoTransformations},
{"Chemistry::OpenBabelc::OBMolBondIter_ClassDescription", _wrap_OBMolBondIter_ClassDescription},
{"Chemistry::OpenBabelc::OBMolBondIter_HasData", _wrap_OBMolBondIter_HasData},
{"Chemistry::OpenBabelc::OBMolBondIter_DeleteData", _wrap_OBMolBondIter_DeleteData},
{"Chemistry::OpenBabelc::OBMolBondIter_SetData", _wrap_OBMolBondIter_SetData},
{"Chemistry::OpenBabelc::OBMolBondIter_DataSize", _wrap_OBMolBondIter_DataSize},
{"Chemistry::OpenBabelc::OBMolBondIter_GetData", _wrap_OBMolBondIter_GetData},
{"Chemistry::OpenBabelc::OBMolBondIter_BeginData", _wrap_OBMolBondIter_BeginData},
{"Chemistry::OpenBabelc::OBMolBondIter_EndData", _wrap_OBMolBondIter_EndData},
{"Chemistry::OpenBabelc::new_OBAtomAtomIter", _wrap_new_OBAtomAtomIter},
{"Chemistry::OpenBabelc::OBAtomAtomIter_good", _wrap_OBAtomAtomIter_good},
{"Chemistry::OpenBabelc::OBAtomAtomIter_inc", _wrap_OBAtomAtomIter_inc},
{"Chemistry::OpenBabelc::OBAtomAtomIter_deref", _wrap_OBAtomAtomIter_deref},
{"Chemistry::OpenBabelc::OBAtomAtomIter___ref__", _wrap_OBAtomAtomIter___ref__},
{"Chemistry::OpenBabelc::delete_OBAtomAtomIter", _wrap_delete_OBAtomAtomIter},
{"Chemistry::OpenBabelc::OBAtomAtomIter_Visit_set", _wrap_OBAtomAtomIter_Visit_set},
{"Chemistry::OpenBabelc::OBAtomAtomIter_Visit_get", _wrap_OBAtomAtomIter_Visit_get},
{"Chemistry::OpenBabelc::OBAtomAtomIter_Clear", _wrap_OBAtomAtomIter_Clear},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetIdx", _wrap_OBAtomAtomIter_SetIdx},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetHyb", _wrap_OBAtomAtomIter_SetHyb},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetAtomicNum", _wrap_OBAtomAtomIter_SetAtomicNum},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetIsotope", _wrap_OBAtomAtomIter_SetIsotope},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetImplicitValence", _wrap_OBAtomAtomIter_SetImplicitValence},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IncrementImplicitValence", _wrap_OBAtomAtomIter_IncrementImplicitValence},
{"Chemistry::OpenBabelc::OBAtomAtomIter_DecrementImplicitValence", _wrap_OBAtomAtomIter_DecrementImplicitValence},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetFormalCharge", _wrap_OBAtomAtomIter_SetFormalCharge},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetSpinMultiplicity", _wrap_OBAtomAtomIter_SetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetType", _wrap_OBAtomAtomIter_SetType},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetPartialCharge", _wrap_OBAtomAtomIter_SetPartialCharge},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetVector", _wrap_OBAtomAtomIter_SetVector},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetCoordPtr", _wrap_OBAtomAtomIter_SetCoordPtr},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetResidue", _wrap_OBAtomAtomIter_SetResidue},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetParent", _wrap_OBAtomAtomIter_SetParent},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetAromatic", _wrap_OBAtomAtomIter_SetAromatic},
{"Chemistry::OpenBabelc::OBAtomAtomIter_UnsetAromatic", _wrap_OBAtomAtomIter_UnsetAromatic},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetClockwiseStereo", _wrap_OBAtomAtomIter_SetClockwiseStereo},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetAntiClockwiseStereo", _wrap_OBAtomAtomIter_SetAntiClockwiseStereo},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetPositiveStereo", _wrap_OBAtomAtomIter_SetPositiveStereo},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetNegativeStereo", _wrap_OBAtomAtomIter_SetNegativeStereo},
{"Chemistry::OpenBabelc::OBAtomAtomIter_UnsetStereo", _wrap_OBAtomAtomIter_UnsetStereo},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetInRing", _wrap_OBAtomAtomIter_SetInRing},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetChiral", _wrap_OBAtomAtomIter_SetChiral},
{"Chemistry::OpenBabelc::OBAtomAtomIter_ClearCoordPtr", _wrap_OBAtomAtomIter_ClearCoordPtr},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetFormalCharge", _wrap_OBAtomAtomIter_GetFormalCharge},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetAtomicNum", _wrap_OBAtomAtomIter_GetAtomicNum},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetIsotope", _wrap_OBAtomAtomIter_GetIsotope},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetSpinMultiplicity", _wrap_OBAtomAtomIter_GetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetAtomicMass", _wrap_OBAtomAtomIter_GetAtomicMass},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetExactMass", _wrap_OBAtomAtomIter_GetExactMass},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetIdx", _wrap_OBAtomAtomIter_GetIdx},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetCoordinateIdx", _wrap_OBAtomAtomIter_GetCoordinateIdx},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetCIdx", _wrap_OBAtomAtomIter_GetCIdx},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetValence", _wrap_OBAtomAtomIter_GetValence},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetHyb", _wrap_OBAtomAtomIter_GetHyb},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetImplicitValence", _wrap_OBAtomAtomIter_GetImplicitValence},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetHvyValence", _wrap_OBAtomAtomIter_GetHvyValence},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetHeteroValence", _wrap_OBAtomAtomIter_GetHeteroValence},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetType", _wrap_OBAtomAtomIter_GetType},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetX", _wrap_OBAtomAtomIter_GetX},
{"Chemistry::OpenBabelc::OBAtomAtomIter_x", _wrap_OBAtomAtomIter_x},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetY", _wrap_OBAtomAtomIter_GetY},
{"Chemistry::OpenBabelc::OBAtomAtomIter_y", _wrap_OBAtomAtomIter_y},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetZ", _wrap_OBAtomAtomIter_GetZ},
{"Chemistry::OpenBabelc::OBAtomAtomIter_z", _wrap_OBAtomAtomIter_z},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetCoordinate", _wrap_OBAtomAtomIter_GetCoordinate},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetVector", _wrap_OBAtomAtomIter_GetVector},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetPartialCharge", _wrap_OBAtomAtomIter_GetPartialCharge},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetResidue", _wrap_OBAtomAtomIter_GetResidue},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetParent", _wrap_OBAtomAtomIter_GetParent},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetNewBondVector", _wrap_OBAtomAtomIter_GetNewBondVector},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetBond", _wrap_OBAtomAtomIter_GetBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetNextAtom", _wrap_OBAtomAtomIter_GetNextAtom},
{"Chemistry::OpenBabelc::OBAtomAtomIter_BeginBonds", _wrap_OBAtomAtomIter_BeginBonds},
{"Chemistry::OpenBabelc::OBAtomAtomIter_EndBonds", _wrap_OBAtomAtomIter_EndBonds},
{"Chemistry::OpenBabelc::OBAtomAtomIter_BeginBond", _wrap_OBAtomAtomIter_BeginBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_NextBond", _wrap_OBAtomAtomIter_NextBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_BeginNbrAtom", _wrap_OBAtomAtomIter_BeginNbrAtom},
{"Chemistry::OpenBabelc::OBAtomAtomIter_NextNbrAtom", _wrap_OBAtomAtomIter_NextNbrAtom},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetDistance", _wrap_OBAtomAtomIter_GetDistance},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetAngle", _wrap_OBAtomAtomIter_GetAngle},
{"Chemistry::OpenBabelc::OBAtomAtomIter_NewResidue", _wrap_OBAtomAtomIter_NewResidue},
{"Chemistry::OpenBabelc::OBAtomAtomIter_DeleteResidue", _wrap_OBAtomAtomIter_DeleteResidue},
{"Chemistry::OpenBabelc::OBAtomAtomIter_AddBond", _wrap_OBAtomAtomIter_AddBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_InsertBond", _wrap_OBAtomAtomIter_InsertBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_DeleteBond", _wrap_OBAtomAtomIter_DeleteBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_ClearBond", _wrap_OBAtomAtomIter_ClearBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_CountFreeOxygens", _wrap_OBAtomAtomIter_CountFreeOxygens},
{"Chemistry::OpenBabelc::OBAtomAtomIter_ImplicitHydrogenCount", _wrap_OBAtomAtomIter_ImplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBAtomAtomIter_ExplicitHydrogenCount", _wrap_OBAtomAtomIter_ExplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBAtomAtomIter_MemberOfRingCount", _wrap_OBAtomAtomIter_MemberOfRingCount},
{"Chemistry::OpenBabelc::OBAtomAtomIter_MemberOfRingSize", _wrap_OBAtomAtomIter_MemberOfRingSize},
{"Chemistry::OpenBabelc::OBAtomAtomIter_CountRingBonds", _wrap_OBAtomAtomIter_CountRingBonds},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SmallestBondAngle", _wrap_OBAtomAtomIter_SmallestBondAngle},
{"Chemistry::OpenBabelc::OBAtomAtomIter_AverageBondAngle", _wrap_OBAtomAtomIter_AverageBondAngle},
{"Chemistry::OpenBabelc::OBAtomAtomIter_BOSum", _wrap_OBAtomAtomIter_BOSum},
{"Chemistry::OpenBabelc::OBAtomAtomIter_KBOSum", _wrap_OBAtomAtomIter_KBOSum},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HtoMethyl", _wrap_OBAtomAtomIter_HtoMethyl},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetHybAndGeom", _wrap_OBAtomAtomIter_SetHybAndGeom},
{"Chemistry::OpenBabelc::OBAtomAtomIter_ForceNoH", _wrap_OBAtomAtomIter_ForceNoH},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasNoHForced", _wrap_OBAtomAtomIter_HasNoHForced},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasResidue", _wrap_OBAtomAtomIter_HasResidue},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsHydrogen", _wrap_OBAtomAtomIter_IsHydrogen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsCarbon", _wrap_OBAtomAtomIter_IsCarbon},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsNitrogen", _wrap_OBAtomAtomIter_IsNitrogen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsOxygen", _wrap_OBAtomAtomIter_IsOxygen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsSulfur", _wrap_OBAtomAtomIter_IsSulfur},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsPhosphorus", _wrap_OBAtomAtomIter_IsPhosphorus},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsAromatic", _wrap_OBAtomAtomIter_IsAromatic},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsInRing", _wrap_OBAtomAtomIter_IsInRing},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsInRingSize", _wrap_OBAtomAtomIter_IsInRingSize},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsHeteroatom", _wrap_OBAtomAtomIter_IsHeteroatom},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsNotCorH", _wrap_OBAtomAtomIter_IsNotCorH},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsConnected", _wrap_OBAtomAtomIter_IsConnected},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsOneThree", _wrap_OBAtomAtomIter_IsOneThree},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsOneFour", _wrap_OBAtomAtomIter_IsOneFour},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsCarboxylOxygen", _wrap_OBAtomAtomIter_IsCarboxylOxygen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsPhosphateOxygen", _wrap_OBAtomAtomIter_IsPhosphateOxygen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsSulfateOxygen", _wrap_OBAtomAtomIter_IsSulfateOxygen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsNitroOxygen", _wrap_OBAtomAtomIter_IsNitroOxygen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsAmideNitrogen", _wrap_OBAtomAtomIter_IsAmideNitrogen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsPolarHydrogen", _wrap_OBAtomAtomIter_IsPolarHydrogen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsNonPolarHydrogen", _wrap_OBAtomAtomIter_IsNonPolarHydrogen},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsAromaticNOxide", _wrap_OBAtomAtomIter_IsAromaticNOxide},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsChiral", _wrap_OBAtomAtomIter_IsChiral},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsAxial", _wrap_OBAtomAtomIter_IsAxial},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsClockwise", _wrap_OBAtomAtomIter_IsClockwise},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsAntiClockwise", _wrap_OBAtomAtomIter_IsAntiClockwise},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsPositiveStereo", _wrap_OBAtomAtomIter_IsPositiveStereo},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsNegativeStereo", _wrap_OBAtomAtomIter_IsNegativeStereo},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasChiralitySpecified", _wrap_OBAtomAtomIter_HasChiralitySpecified},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasChiralVolume", _wrap_OBAtomAtomIter_HasChiralVolume},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsHbondAcceptor", _wrap_OBAtomAtomIter_IsHbondAcceptor},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsHbondDonor", _wrap_OBAtomAtomIter_IsHbondDonor},
{"Chemistry::OpenBabelc::OBAtomAtomIter_IsHbondDonorH", _wrap_OBAtomAtomIter_IsHbondDonorH},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasAlphaBetaUnsat", _wrap_OBAtomAtomIter_HasAlphaBetaUnsat},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasBondOfOrder", _wrap_OBAtomAtomIter_HasBondOfOrder},
{"Chemistry::OpenBabelc::OBAtomAtomIter_CountBondsOfOrder", _wrap_OBAtomAtomIter_CountBondsOfOrder},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasNonSingleBond", _wrap_OBAtomAtomIter_HasNonSingleBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasSingleBond", _wrap_OBAtomAtomIter_HasSingleBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasDoubleBond", _wrap_OBAtomAtomIter_HasDoubleBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasAromaticBond", _wrap_OBAtomAtomIter_HasAromaticBond},
{"Chemistry::OpenBabelc::OBAtomAtomIter_MatchesSMARTS", _wrap_OBAtomAtomIter_MatchesSMARTS},
{"Chemistry::OpenBabelc::OBAtomAtomIter_DoTransformations", _wrap_OBAtomAtomIter_DoTransformations},
{"Chemistry::OpenBabelc::OBAtomAtomIter_ClassDescription", _wrap_OBAtomAtomIter_ClassDescription},
{"Chemistry::OpenBabelc::OBAtomAtomIter_HasData", _wrap_OBAtomAtomIter_HasData},
{"Chemistry::OpenBabelc::OBAtomAtomIter_DeleteData", _wrap_OBAtomAtomIter_DeleteData},
{"Chemistry::OpenBabelc::OBAtomAtomIter_SetData", _wrap_OBAtomAtomIter_SetData},
{"Chemistry::OpenBabelc::OBAtomAtomIter_DataSize", _wrap_OBAtomAtomIter_DataSize},
{"Chemistry::OpenBabelc::OBAtomAtomIter_GetData", _wrap_OBAtomAtomIter_GetData},
{"Chemistry::OpenBabelc::OBAtomAtomIter_BeginData", _wrap_OBAtomAtomIter_BeginData},
{"Chemistry::OpenBabelc::OBAtomAtomIter_EndData", _wrap_OBAtomAtomIter_EndData},
{"Chemistry::OpenBabelc::new_OBAtomBondIter", _wrap_new_OBAtomBondIter},
{"Chemistry::OpenBabelc::OBAtomBondIter_good", _wrap_OBAtomBondIter_good},
{"Chemistry::OpenBabelc::OBAtomBondIter_inc", _wrap_OBAtomBondIter_inc},
{"Chemistry::OpenBabelc::OBAtomBondIter_deref", _wrap_OBAtomBondIter_deref},
{"Chemistry::OpenBabelc::OBAtomBondIter___ref__", _wrap_OBAtomBondIter___ref__},
{"Chemistry::OpenBabelc::delete_OBAtomBondIter", _wrap_delete_OBAtomBondIter},
{"Chemistry::OpenBabelc::OBAtomBondIter_Visit_set", _wrap_OBAtomBondIter_Visit_set},
{"Chemistry::OpenBabelc::OBAtomBondIter_Visit_get", _wrap_OBAtomBondIter_Visit_get},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetIdx", _wrap_OBAtomBondIter_SetIdx},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetBO", _wrap_OBAtomBondIter_SetBO},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetBondOrder", _wrap_OBAtomBondIter_SetBondOrder},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetBegin", _wrap_OBAtomBondIter_SetBegin},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetEnd", _wrap_OBAtomBondIter_SetEnd},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetParent", _wrap_OBAtomBondIter_SetParent},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetLength", _wrap_OBAtomBondIter_SetLength},
{"Chemistry::OpenBabelc::OBAtomBondIter_Set", _wrap_OBAtomBondIter_Set},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetKSingle", _wrap_OBAtomBondIter_SetKSingle},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetKDouble", _wrap_OBAtomBondIter_SetKDouble},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetKTriple", _wrap_OBAtomBondIter_SetKTriple},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetAromatic", _wrap_OBAtomBondIter_SetAromatic},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetHash", _wrap_OBAtomBondIter_SetHash},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetWedge", _wrap_OBAtomBondIter_SetWedge},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetUp", _wrap_OBAtomBondIter_SetUp},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetDown", _wrap_OBAtomBondIter_SetDown},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetInRing", _wrap_OBAtomBondIter_SetInRing},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetClosure", _wrap_OBAtomBondIter_SetClosure},
{"Chemistry::OpenBabelc::OBAtomBondIter_UnsetHash", _wrap_OBAtomBondIter_UnsetHash},
{"Chemistry::OpenBabelc::OBAtomBondIter_UnsetWedge", _wrap_OBAtomBondIter_UnsetWedge},
{"Chemistry::OpenBabelc::OBAtomBondIter_UnsetUp", _wrap_OBAtomBondIter_UnsetUp},
{"Chemistry::OpenBabelc::OBAtomBondIter_UnsetDown", _wrap_OBAtomBondIter_UnsetDown},
{"Chemistry::OpenBabelc::OBAtomBondIter_UnsetAromatic", _wrap_OBAtomBondIter_UnsetAromatic},
{"Chemistry::OpenBabelc::OBAtomBondIter_UnsetKekule", _wrap_OBAtomBondIter_UnsetKekule},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetIdx", _wrap_OBAtomBondIter_GetIdx},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetBO", _wrap_OBAtomBondIter_GetBO},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetBondOrder", _wrap_OBAtomBondIter_GetBondOrder},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetFlags", _wrap_OBAtomBondIter_GetFlags},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetBeginAtomIdx", _wrap_OBAtomBondIter_GetBeginAtomIdx},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetEndAtomIdx", _wrap_OBAtomBondIter_GetEndAtomIdx},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetBeginAtom", _wrap_OBAtomBondIter_GetBeginAtom},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetEndAtom", _wrap_OBAtomBondIter_GetEndAtom},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetNbrAtom", _wrap_OBAtomBondIter_GetNbrAtom},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetParent", _wrap_OBAtomBondIter_GetParent},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetEquibLength", _wrap_OBAtomBondIter_GetEquibLength},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetLength", _wrap_OBAtomBondIter_GetLength},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetNbrAtomIdx", _wrap_OBAtomBondIter_GetNbrAtomIdx},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsAromatic", _wrap_OBAtomBondIter_IsAromatic},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsInRing", _wrap_OBAtomBondIter_IsInRing},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsRotor", _wrap_OBAtomBondIter_IsRotor},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsAmide", _wrap_OBAtomBondIter_IsAmide},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsPrimaryAmide", _wrap_OBAtomBondIter_IsPrimaryAmide},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsSecondaryAmide", _wrap_OBAtomBondIter_IsSecondaryAmide},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsEster", _wrap_OBAtomBondIter_IsEster},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsCarbonyl", _wrap_OBAtomBondIter_IsCarbonyl},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsSingle", _wrap_OBAtomBondIter_IsSingle},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsDouble", _wrap_OBAtomBondIter_IsDouble},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsTriple", _wrap_OBAtomBondIter_IsTriple},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsKSingle", _wrap_OBAtomBondIter_IsKSingle},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsKDouble", _wrap_OBAtomBondIter_IsKDouble},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsKTriple", _wrap_OBAtomBondIter_IsKTriple},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsClosure", _wrap_OBAtomBondIter_IsClosure},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsUp", _wrap_OBAtomBondIter_IsUp},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsDown", _wrap_OBAtomBondIter_IsDown},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsWedge", _wrap_OBAtomBondIter_IsWedge},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsHash", _wrap_OBAtomBondIter_IsHash},
{"Chemistry::OpenBabelc::OBAtomBondIter_IsDoubleBondGeometry", _wrap_OBAtomBondIter_IsDoubleBondGeometry},
{"Chemistry::OpenBabelc::OBAtomBondIter_DoTransformations", _wrap_OBAtomBondIter_DoTransformations},
{"Chemistry::OpenBabelc::OBAtomBondIter_ClassDescription", _wrap_OBAtomBondIter_ClassDescription},
{"Chemistry::OpenBabelc::OBAtomBondIter_HasData", _wrap_OBAtomBondIter_HasData},
{"Chemistry::OpenBabelc::OBAtomBondIter_DeleteData", _wrap_OBAtomBondIter_DeleteData},
{"Chemistry::OpenBabelc::OBAtomBondIter_SetData", _wrap_OBAtomBondIter_SetData},
{"Chemistry::OpenBabelc::OBAtomBondIter_DataSize", _wrap_OBAtomBondIter_DataSize},
{"Chemistry::OpenBabelc::OBAtomBondIter_GetData", _wrap_OBAtomBondIter_GetData},
{"Chemistry::OpenBabelc::OBAtomBondIter_BeginData", _wrap_OBAtomBondIter_BeginData},
{"Chemistry::OpenBabelc::OBAtomBondIter_EndData", _wrap_OBAtomBondIter_EndData},
{"Chemistry::OpenBabelc::new_OBResidueIter", _wrap_new_OBResidueIter},
{"Chemistry::OpenBabelc::OBResidueIter_good", _wrap_OBResidueIter_good},
{"Chemistry::OpenBabelc::OBResidueIter_inc", _wrap_OBResidueIter_inc},
{"Chemistry::OpenBabelc::OBResidueIter___deref__", _wrap_OBResidueIter___deref__},
{"Chemistry::OpenBabelc::OBResidueIter___ref__", _wrap_OBResidueIter___ref__},
{"Chemistry::OpenBabelc::delete_OBResidueIter", _wrap_delete_OBResidueIter},
{"Chemistry::OpenBabelc::OBResidueIter_AddAtom", _wrap_OBResidueIter_AddAtom},
{"Chemistry::OpenBabelc::OBResidueIter_InsertAtom", _wrap_OBResidueIter_InsertAtom},
{"Chemistry::OpenBabelc::OBResidueIter_RemoveAtom", _wrap_OBResidueIter_RemoveAtom},
{"Chemistry::OpenBabelc::OBResidueIter_Clear", _wrap_OBResidueIter_Clear},
{"Chemistry::OpenBabelc::OBResidueIter_SetName", _wrap_OBResidueIter_SetName},
{"Chemistry::OpenBabelc::OBResidueIter_SetNum", _wrap_OBResidueIter_SetNum},
{"Chemistry::OpenBabelc::OBResidueIter_SetChain", _wrap_OBResidueIter_SetChain},
{"Chemistry::OpenBabelc::OBResidueIter_SetChainNum", _wrap_OBResidueIter_SetChainNum},
{"Chemistry::OpenBabelc::OBResidueIter_SetIdx", _wrap_OBResidueIter_SetIdx},
{"Chemistry::OpenBabelc::OBResidueIter_SetAtomID", _wrap_OBResidueIter_SetAtomID},
{"Chemistry::OpenBabelc::OBResidueIter_SetHetAtom", _wrap_OBResidueIter_SetHetAtom},
{"Chemistry::OpenBabelc::OBResidueIter_SetSerialNum", _wrap_OBResidueIter_SetSerialNum},
{"Chemistry::OpenBabelc::OBResidueIter_GetName", _wrap_OBResidueIter_GetName},
{"Chemistry::OpenBabelc::OBResidueIter_GetNum", _wrap_OBResidueIter_GetNum},
{"Chemistry::OpenBabelc::OBResidueIter_GetNumAtoms", _wrap_OBResidueIter_GetNumAtoms},
{"Chemistry::OpenBabelc::OBResidueIter_GetChain", _wrap_OBResidueIter_GetChain},
{"Chemistry::OpenBabelc::OBResidueIter_GetChainNum", _wrap_OBResidueIter_GetChainNum},
{"Chemistry::OpenBabelc::OBResidueIter_GetIdx", _wrap_OBResidueIter_GetIdx},
{"Chemistry::OpenBabelc::OBResidueIter_GetResKey", _wrap_OBResidueIter_GetResKey},
{"Chemistry::OpenBabelc::OBResidueIter_GetAtoms", _wrap_OBResidueIter_GetAtoms},
{"Chemistry::OpenBabelc::OBResidueIter_GetBonds", _wrap_OBResidueIter_GetBonds},
{"Chemistry::OpenBabelc::OBResidueIter_GetAtomID", _wrap_OBResidueIter_GetAtomID},
{"Chemistry::OpenBabelc::OBResidueIter_GetSerialNum", _wrap_OBResidueIter_GetSerialNum},
{"Chemistry::OpenBabelc::OBResidueIter_GetAminoAcidProperty", _wrap_OBResidueIter_GetAminoAcidProperty},
{"Chemistry::OpenBabelc::OBResidueIter_GetAtomProperty", _wrap_OBResidueIter_GetAtomProperty},
{"Chemistry::OpenBabelc::OBResidueIter_GetResidueProperty", _wrap_OBResidueIter_GetResidueProperty},
{"Chemistry::OpenBabelc::OBResidueIter_IsHetAtom", _wrap_OBResidueIter_IsHetAtom},
{"Chemistry::OpenBabelc::OBResidueIter_IsResidueType", _wrap_OBResidueIter_IsResidueType},
{"Chemistry::OpenBabelc::OBResidueIter_BeginAtoms", _wrap_OBResidueIter_BeginAtoms},
{"Chemistry::OpenBabelc::OBResidueIter_EndAtoms", _wrap_OBResidueIter_EndAtoms},
{"Chemistry::OpenBabelc::OBResidueIter_BeginAtom", _wrap_OBResidueIter_BeginAtom},
{"Chemistry::OpenBabelc::OBResidueIter_NextAtom", _wrap_OBResidueIter_NextAtom},
{"Chemistry::OpenBabelc::OBResidueIter_DoTransformations", _wrap_OBResidueIter_DoTransformations},
{"Chemistry::OpenBabelc::OBResidueIter_ClassDescription", _wrap_OBResidueIter_ClassDescription},
{"Chemistry::OpenBabelc::OBResidueIter_HasData", _wrap_OBResidueIter_HasData},
{"Chemistry::OpenBabelc::OBResidueIter_DeleteData", _wrap_OBResidueIter_DeleteData},
{"Chemistry::OpenBabelc::OBResidueIter_SetData", _wrap_OBResidueIter_SetData},
{"Chemistry::OpenBabelc::OBResidueIter_DataSize", _wrap_OBResidueIter_DataSize},
{"Chemistry::OpenBabelc::OBResidueIter_GetData", _wrap_OBResidueIter_GetData},
{"Chemistry::OpenBabelc::OBResidueIter_BeginData", _wrap_OBResidueIter_BeginData},
{"Chemistry::OpenBabelc::OBResidueIter_EndData", _wrap_OBResidueIter_EndData},
{"Chemistry::OpenBabelc::new_OBResidueAtomIter", _wrap_new_OBResidueAtomIter},
{"Chemistry::OpenBabelc::OBResidueAtomIter_good", _wrap_OBResidueAtomIter_good},
{"Chemistry::OpenBabelc::OBResidueAtomIter_inc", _wrap_OBResidueAtomIter_inc},
{"Chemistry::OpenBabelc::OBResidueAtomIter_deref", _wrap_OBResidueAtomIter_deref},
{"Chemistry::OpenBabelc::OBResidueAtomIter___ref__", _wrap_OBResidueAtomIter___ref__},
{"Chemistry::OpenBabelc::delete_OBResidueAtomIter", _wrap_delete_OBResidueAtomIter},
{"Chemistry::OpenBabelc::OBResidueAtomIter_Visit_set", _wrap_OBResidueAtomIter_Visit_set},
{"Chemistry::OpenBabelc::OBResidueAtomIter_Visit_get", _wrap_OBResidueAtomIter_Visit_get},
{"Chemistry::OpenBabelc::OBResidueAtomIter_Clear", _wrap_OBResidueAtomIter_Clear},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetIdx", _wrap_OBResidueAtomIter_SetIdx},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetHyb", _wrap_OBResidueAtomIter_SetHyb},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetAtomicNum", _wrap_OBResidueAtomIter_SetAtomicNum},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetIsotope", _wrap_OBResidueAtomIter_SetIsotope},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetImplicitValence", _wrap_OBResidueAtomIter_SetImplicitValence},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IncrementImplicitValence", _wrap_OBResidueAtomIter_IncrementImplicitValence},
{"Chemistry::OpenBabelc::OBResidueAtomIter_DecrementImplicitValence", _wrap_OBResidueAtomIter_DecrementImplicitValence},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetFormalCharge", _wrap_OBResidueAtomIter_SetFormalCharge},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetSpinMultiplicity", _wrap_OBResidueAtomIter_SetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetType", _wrap_OBResidueAtomIter_SetType},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetPartialCharge", _wrap_OBResidueAtomIter_SetPartialCharge},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetVector", _wrap_OBResidueAtomIter_SetVector},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetCoordPtr", _wrap_OBResidueAtomIter_SetCoordPtr},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetResidue", _wrap_OBResidueAtomIter_SetResidue},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetParent", _wrap_OBResidueAtomIter_SetParent},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetAromatic", _wrap_OBResidueAtomIter_SetAromatic},
{"Chemistry::OpenBabelc::OBResidueAtomIter_UnsetAromatic", _wrap_OBResidueAtomIter_UnsetAromatic},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetClockwiseStereo", _wrap_OBResidueAtomIter_SetClockwiseStereo},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetAntiClockwiseStereo", _wrap_OBResidueAtomIter_SetAntiClockwiseStereo},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetPositiveStereo", _wrap_OBResidueAtomIter_SetPositiveStereo},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetNegativeStereo", _wrap_OBResidueAtomIter_SetNegativeStereo},
{"Chemistry::OpenBabelc::OBResidueAtomIter_UnsetStereo", _wrap_OBResidueAtomIter_UnsetStereo},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetInRing", _wrap_OBResidueAtomIter_SetInRing},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetChiral", _wrap_OBResidueAtomIter_SetChiral},
{"Chemistry::OpenBabelc::OBResidueAtomIter_ClearCoordPtr", _wrap_OBResidueAtomIter_ClearCoordPtr},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetFormalCharge", _wrap_OBResidueAtomIter_GetFormalCharge},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetAtomicNum", _wrap_OBResidueAtomIter_GetAtomicNum},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetIsotope", _wrap_OBResidueAtomIter_GetIsotope},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetSpinMultiplicity", _wrap_OBResidueAtomIter_GetSpinMultiplicity},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetAtomicMass", _wrap_OBResidueAtomIter_GetAtomicMass},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetExactMass", _wrap_OBResidueAtomIter_GetExactMass},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetIdx", _wrap_OBResidueAtomIter_GetIdx},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetCoordinateIdx", _wrap_OBResidueAtomIter_GetCoordinateIdx},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetCIdx", _wrap_OBResidueAtomIter_GetCIdx},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetValence", _wrap_OBResidueAtomIter_GetValence},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetHyb", _wrap_OBResidueAtomIter_GetHyb},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetImplicitValence", _wrap_OBResidueAtomIter_GetImplicitValence},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetHvyValence", _wrap_OBResidueAtomIter_GetHvyValence},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetHeteroValence", _wrap_OBResidueAtomIter_GetHeteroValence},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetType", _wrap_OBResidueAtomIter_GetType},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetX", _wrap_OBResidueAtomIter_GetX},
{"Chemistry::OpenBabelc::OBResidueAtomIter_x", _wrap_OBResidueAtomIter_x},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetY", _wrap_OBResidueAtomIter_GetY},
{"Chemistry::OpenBabelc::OBResidueAtomIter_y", _wrap_OBResidueAtomIter_y},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetZ", _wrap_OBResidueAtomIter_GetZ},
{"Chemistry::OpenBabelc::OBResidueAtomIter_z", _wrap_OBResidueAtomIter_z},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetCoordinate", _wrap_OBResidueAtomIter_GetCoordinate},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetVector", _wrap_OBResidueAtomIter_GetVector},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetPartialCharge", _wrap_OBResidueAtomIter_GetPartialCharge},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetResidue", _wrap_OBResidueAtomIter_GetResidue},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetParent", _wrap_OBResidueAtomIter_GetParent},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetNewBondVector", _wrap_OBResidueAtomIter_GetNewBondVector},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetBond", _wrap_OBResidueAtomIter_GetBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetNextAtom", _wrap_OBResidueAtomIter_GetNextAtom},
{"Chemistry::OpenBabelc::OBResidueAtomIter_BeginBonds", _wrap_OBResidueAtomIter_BeginBonds},
{"Chemistry::OpenBabelc::OBResidueAtomIter_EndBonds", _wrap_OBResidueAtomIter_EndBonds},
{"Chemistry::OpenBabelc::OBResidueAtomIter_BeginBond", _wrap_OBResidueAtomIter_BeginBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_NextBond", _wrap_OBResidueAtomIter_NextBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_BeginNbrAtom", _wrap_OBResidueAtomIter_BeginNbrAtom},
{"Chemistry::OpenBabelc::OBResidueAtomIter_NextNbrAtom", _wrap_OBResidueAtomIter_NextNbrAtom},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetDistance", _wrap_OBResidueAtomIter_GetDistance},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetAngle", _wrap_OBResidueAtomIter_GetAngle},
{"Chemistry::OpenBabelc::OBResidueAtomIter_NewResidue", _wrap_OBResidueAtomIter_NewResidue},
{"Chemistry::OpenBabelc::OBResidueAtomIter_DeleteResidue", _wrap_OBResidueAtomIter_DeleteResidue},
{"Chemistry::OpenBabelc::OBResidueAtomIter_AddBond", _wrap_OBResidueAtomIter_AddBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_InsertBond", _wrap_OBResidueAtomIter_InsertBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_DeleteBond", _wrap_OBResidueAtomIter_DeleteBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_ClearBond", _wrap_OBResidueAtomIter_ClearBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_CountFreeOxygens", _wrap_OBResidueAtomIter_CountFreeOxygens},
{"Chemistry::OpenBabelc::OBResidueAtomIter_ImplicitHydrogenCount", _wrap_OBResidueAtomIter_ImplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBResidueAtomIter_ExplicitHydrogenCount", _wrap_OBResidueAtomIter_ExplicitHydrogenCount},
{"Chemistry::OpenBabelc::OBResidueAtomIter_MemberOfRingCount", _wrap_OBResidueAtomIter_MemberOfRingCount},
{"Chemistry::OpenBabelc::OBResidueAtomIter_MemberOfRingSize", _wrap_OBResidueAtomIter_MemberOfRingSize},
{"Chemistry::OpenBabelc::OBResidueAtomIter_CountRingBonds", _wrap_OBResidueAtomIter_CountRingBonds},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SmallestBondAngle", _wrap_OBResidueAtomIter_SmallestBondAngle},
{"Chemistry::OpenBabelc::OBResidueAtomIter_AverageBondAngle", _wrap_OBResidueAtomIter_AverageBondAngle},
{"Chemistry::OpenBabelc::OBResidueAtomIter_BOSum", _wrap_OBResidueAtomIter_BOSum},
{"Chemistry::OpenBabelc::OBResidueAtomIter_KBOSum", _wrap_OBResidueAtomIter_KBOSum},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HtoMethyl", _wrap_OBResidueAtomIter_HtoMethyl},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetHybAndGeom", _wrap_OBResidueAtomIter_SetHybAndGeom},
{"Chemistry::OpenBabelc::OBResidueAtomIter_ForceNoH", _wrap_OBResidueAtomIter_ForceNoH},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasNoHForced", _wrap_OBResidueAtomIter_HasNoHForced},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasResidue", _wrap_OBResidueAtomIter_HasResidue},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsHydrogen", _wrap_OBResidueAtomIter_IsHydrogen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsCarbon", _wrap_OBResidueAtomIter_IsCarbon},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsNitrogen", _wrap_OBResidueAtomIter_IsNitrogen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsOxygen", _wrap_OBResidueAtomIter_IsOxygen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsSulfur", _wrap_OBResidueAtomIter_IsSulfur},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsPhosphorus", _wrap_OBResidueAtomIter_IsPhosphorus},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsAromatic", _wrap_OBResidueAtomIter_IsAromatic},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsInRing", _wrap_OBResidueAtomIter_IsInRing},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsInRingSize", _wrap_OBResidueAtomIter_IsInRingSize},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsHeteroatom", _wrap_OBResidueAtomIter_IsHeteroatom},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsNotCorH", _wrap_OBResidueAtomIter_IsNotCorH},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsConnected", _wrap_OBResidueAtomIter_IsConnected},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsOneThree", _wrap_OBResidueAtomIter_IsOneThree},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsOneFour", _wrap_OBResidueAtomIter_IsOneFour},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsCarboxylOxygen", _wrap_OBResidueAtomIter_IsCarboxylOxygen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsPhosphateOxygen", _wrap_OBResidueAtomIter_IsPhosphateOxygen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsSulfateOxygen", _wrap_OBResidueAtomIter_IsSulfateOxygen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsNitroOxygen", _wrap_OBResidueAtomIter_IsNitroOxygen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsAmideNitrogen", _wrap_OBResidueAtomIter_IsAmideNitrogen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsPolarHydrogen", _wrap_OBResidueAtomIter_IsPolarHydrogen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsNonPolarHydrogen", _wrap_OBResidueAtomIter_IsNonPolarHydrogen},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsAromaticNOxide", _wrap_OBResidueAtomIter_IsAromaticNOxide},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsChiral", _wrap_OBResidueAtomIter_IsChiral},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsAxial", _wrap_OBResidueAtomIter_IsAxial},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsClockwise", _wrap_OBResidueAtomIter_IsClockwise},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsAntiClockwise", _wrap_OBResidueAtomIter_IsAntiClockwise},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsPositiveStereo", _wrap_OBResidueAtomIter_IsPositiveStereo},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsNegativeStereo", _wrap_OBResidueAtomIter_IsNegativeStereo},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasChiralitySpecified", _wrap_OBResidueAtomIter_HasChiralitySpecified},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasChiralVolume", _wrap_OBResidueAtomIter_HasChiralVolume},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsHbondAcceptor", _wrap_OBResidueAtomIter_IsHbondAcceptor},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsHbondDonor", _wrap_OBResidueAtomIter_IsHbondDonor},
{"Chemistry::OpenBabelc::OBResidueAtomIter_IsHbondDonorH", _wrap_OBResidueAtomIter_IsHbondDonorH},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasAlphaBetaUnsat", _wrap_OBResidueAtomIter_HasAlphaBetaUnsat},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasBondOfOrder", _wrap_OBResidueAtomIter_HasBondOfOrder},
{"Chemistry::OpenBabelc::OBResidueAtomIter_CountBondsOfOrder", _wrap_OBResidueAtomIter_CountBondsOfOrder},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasNonSingleBond", _wrap_OBResidueAtomIter_HasNonSingleBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasSingleBond", _wrap_OBResidueAtomIter_HasSingleBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasDoubleBond", _wrap_OBResidueAtomIter_HasDoubleBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasAromaticBond", _wrap_OBResidueAtomIter_HasAromaticBond},
{"Chemistry::OpenBabelc::OBResidueAtomIter_MatchesSMARTS", _wrap_OBResidueAtomIter_MatchesSMARTS},
{"Chemistry::OpenBabelc::OBResidueAtomIter_DoTransformations", _wrap_OBResidueAtomIter_DoTransformations},
{"Chemistry::OpenBabelc::OBResidueAtomIter_ClassDescription", _wrap_OBResidueAtomIter_ClassDescription},
{"Chemistry::OpenBabelc::OBResidueAtomIter_HasData", _wrap_OBResidueAtomIter_HasData},
{"Chemistry::OpenBabelc::OBResidueAtomIter_DeleteData", _wrap_OBResidueAtomIter_DeleteData},
{"Chemistry::OpenBabelc::OBResidueAtomIter_SetData", _wrap_OBResidueAtomIter_SetData},
{"Chemistry::OpenBabelc::OBResidueAtomIter_DataSize", _wrap_OBResidueAtomIter_DataSize},
{"Chemistry::OpenBabelc::OBResidueAtomIter_GetData", _wrap_OBResidueAtomIter_GetData},
{"Chemistry::OpenBabelc::OBResidueAtomIter_BeginData", _wrap_OBResidueAtomIter_BeginData},
{"Chemistry::OpenBabelc::OBResidueAtomIter_EndData", _wrap_OBResidueAtomIter_EndData},
{0,0}
};
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C"
#endif

XS(SWIG_init) {
  dXSARGS;
  int i;
  
  SWIG_InitializeModule(0);
  
  /* Install commands */
  for (i = 0; swig_commands[i].name; i++) {
    newXS((char*) swig_commands[i].name,swig_commands[i].wrapper, (char*)__FILE__);
  }
  
  /* Install variables */
  for (i = 0; swig_variables[i].name; i++) {
    SV *sv;
    sv = get_sv((char*) swig_variables[i].name, TRUE | 0x2);
    if (swig_variables[i].type) {
      SWIG_MakePtr(sv,(void *)1, *swig_variables[i].type,0);
    } else {
      sv_setiv(sv,(IV) 0);
    }
    swig_create_magic(sv, (char *) swig_variables[i].name, swig_variables[i].set, swig_variables[i].get); 
  }
  
  /* Install constant */
  for (i = 0; swig_constants[i].type; i++) {
    SV *sv;
    sv = get_sv((char*)swig_constants[i].name, TRUE | 0x2);
    switch(swig_constants[i].type) {
    case SWIG_INT:
      sv_setiv(sv, (IV) swig_constants[i].lvalue);
      break;
    case SWIG_FLOAT:
      sv_setnv(sv, (double) swig_constants[i].dvalue);
      break;
    case SWIG_STRING:
      sv_setpv(sv, (char *) swig_constants[i].pvalue);
      break;
    case SWIG_POINTER:
      SWIG_MakePtr(sv, swig_constants[i].pvalue, *(swig_constants[i].ptype),0);
      break;
    case SWIG_BINARY:
      SWIG_MakePackedObj(sv, swig_constants[i].pvalue, swig_constants[i].lvalue, *(swig_constants[i].ptype));
      break;
    default:
      break;
    }
    SvREADONLY_on(sv);
  }
  
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorTint_t, (void*) "Chemistry::OpenBabel::vectorInt");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorTstd__vectorTint_t_t, (void*) "Chemistry::OpenBabel::vvInt");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorTdouble_t, (void*) "Chemistry::OpenBabel::vectorDouble");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorTOpenBabel__vector3_t, (void*) "Chemistry::OpenBabel::vVector3");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorTOpenBabel__OBMol_t, (void*) "Chemistry::OpenBabel::vectorMol");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorTOpenBabel__OBBond_t, (void*) "Chemistry::OpenBabel::vectorBond");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorTOpenBabel__OBResidue_t, (void*) "Chemistry::OpenBabel::vectorResidue");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorTOpenBabel__OBRing_t, (void*) "Chemistry::OpenBabel::vectorRing");
  SWIG_TypeClientData(SWIGTYPE_p_std__vectorTOpenBabel__OBGenericData_p_t, (void*) "Chemistry::OpenBabel::vectorData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBGlobalDataBase, (void*) "Chemistry::OpenBabel::OBGlobalDataBase");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBElement, (void*) "Chemistry::OpenBabel::OBElement");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBElementTable, (void*) "Chemistry::OpenBabel::OBElementTable");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBIsotopeTable, (void*) "Chemistry::OpenBabel::OBIsotopeTable");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBTypeTable, (void*) "Chemistry::OpenBabel::OBTypeTable");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBResidueData, (void*) "Chemistry::OpenBabel::OBResidueData");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "FILE_SEP_CHAR", TRUE | 0x2);
    sv_setsv(sv, SWIG_FromCharPtr("/"));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__DoubleType, (void*) "Chemistry::OpenBabel::DoubleType");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBRandom, (void*) "Chemistry::OpenBabel::OBRandom");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "M_PI", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >(3.14159265358979323846)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBStopwatch, (void*) "Chemistry::OpenBabel::OBStopwatch");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBSqrtTbl, (void*) "Chemistry::OpenBabel::OBSqrtTbl");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "RAD_TO_DEG", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >((180.0/3.14159265358979323846))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "DEG_TO_RAD", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_double  SWIG_PERL_CALL_ARGS_1(static_cast< double >((3.14159265358979323846/180.0))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__vector3, (void*) "Chemistry::OpenBabel::vector3");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBGenericData, (void*) "Chemistry::OpenBabel::OBGenericData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBCommentData, (void*) "Chemistry::OpenBabel::OBCommentData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBExternalBond, (void*) "Chemistry::OpenBabel::OBExternalBond");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBExternalBondData, (void*) "Chemistry::OpenBabel::OBExternalBondData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBPairData, (void*) "Chemistry::OpenBabel::OBPairData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBSetData, (void*) "Chemistry::OpenBabel::OBSetData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBVirtualBond, (void*) "Chemistry::OpenBabel::OBVirtualBond");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBRingData, (void*) "Chemistry::OpenBabel::OBRingData");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBUnitCell_Undefined", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBUnitCell::Undefined)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBUnitCell_Triclinic", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBUnitCell::Triclinic)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBUnitCell_Monoclinic", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBUnitCell::Monoclinic)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBUnitCell_Orthorhombic", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBUnitCell::Orthorhombic)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBUnitCell_Tetragonal", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBUnitCell::Tetragonal)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBUnitCell_Rhombohedral", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBUnitCell::Rhombohedral)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBUnitCell_Hexagonal", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBUnitCell::Hexagonal)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBUnitCell_Cubic", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBUnitCell::Cubic)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBUnitCell, (void*) "Chemistry::OpenBabel::OBUnitCell");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBConformerData, (void*) "Chemistry::OpenBabel::OBConformerData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBSymmetryData, (void*) "Chemistry::OpenBabel::OBSymmetryData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBTorsion, (void*) "Chemistry::OpenBabel::OBTorsion");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBTorsionData, (void*) "Chemistry::OpenBabel::OBTorsionData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBAngle, (void*) "Chemistry::OpenBabel::OBAngle");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBAngleData, (void*) "Chemistry::OpenBabel::OBAngleData");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "output", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::output)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "input", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::input)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "calcvolume", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::calcvolume)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBChiralData, (void*) "Chemistry::OpenBabel::OBChiralData");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBSerialNums, (void*) "Chemistry::OpenBabel::OBSerialNums");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBBase, (void*) "Chemistry::OpenBabel::OBBase");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "obError", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::obError)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "obWarning", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::obWarning)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "obInfo", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::obInfo)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "obAuditMsg", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::obAuditMsg)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "obDebug", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::obDebug)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBError, (void*) "Chemistry::OpenBabel::OBError");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBMessageHandler, (void*) "Chemistry::OpenBabel::OBMessageHandler");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__obLogBuf, (void*) "Chemistry::OpenBabel::obLogBuf");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBFormat, (void*) "Chemistry::OpenBabel::OBFormat");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__CharPtrLess, (void*) "Chemistry::OpenBabel::CharPtrLess");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBConversion_INOPTIONS", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBConversion::INOPTIONS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBConversion_OUTOPTIONS", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBConversion::OUTOPTIONS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBConversion_GENOPTIONS", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBConversion::GENOPTIONS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBConversion, (void*) "Chemistry::OpenBabel::OBConversion");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "NOTREADABLE", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(0x01)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "READONEONLY", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(0x02)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "READBINARY", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(0x04)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "ZEROATOMSOK", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(0x08)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "NOTWRITABLE", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(0x10)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "WRITEONEONLY", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(0x20)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "WRITEBINARY", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(0x40)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "DEFAULTFORMAT", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(0x4000)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBResidue, (void*) "Chemistry::OpenBabel::OBResidue");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "MAXSETNO", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(40)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "MAXELEM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(1024)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "MINELEM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(29)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "MAXRES", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(100)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "MINRES", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(54)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_ALA", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 1))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_GLY", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 2))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_LEU", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 3))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_SER", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 4))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_VAL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 5))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_THR", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 6))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_LYS", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 7))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_ASP", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 8))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_ILE", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 9))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_ASN", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 10))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_GLU", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 11))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_PRO", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 12))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_ARG", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 13))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_PHE", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 14))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_GLN", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 15))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_TYR", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 16))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_HIS", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 17))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_CYS", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 18))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_MET", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 19))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "AA_TRP", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 20))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBInternalCoord, (void*) "Chemistry::OpenBabel::OBInternalCoord");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_4RING_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 1))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_3RING_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 2))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_AROMATIC_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 3))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_RING_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 4))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_CSTEREO_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 5))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_ACSTEREO_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 6))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_DONOR_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 7))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_ACCEPTOR_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 8))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_CHIRAL_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 9))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_POS_CHIRAL_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 10))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_NEG_CHIRAL_ATOM", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 11))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_ATOM_HAS_NO_H", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 12))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBAtom, (void*) "Chemistry::OpenBabel::OBAtom");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_AROMATIC_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 1))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_WEDGE_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 2))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_HASH_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 3))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_RING_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 4))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_TORUP_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 5))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_TORDOWN_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 6))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_KSINGLE_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 7))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_KDOUBLE_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 8))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_KTRIPLE_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 9))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_CLOSURE_BOND", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 10))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBBond, (void*) "Chemistry::OpenBabel::OBBond");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_SSSR_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 1))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_RINGFLAGS_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 2))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_AROMATIC_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 3))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_ATOMTYPES_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 4))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_CHIRALITY_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 5))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_PCHARGE_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 6))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_HYBRID_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 8))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_IMPVAL_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 9))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_KEKULE_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 10))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_CLOSURE_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 11))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_H_ADDED_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 12))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_PH_CORRECTED_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 13))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_AROM_CORRECTED_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 14))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_CHAINS_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 15))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_TCHARGE_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 16))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_TSPIN_MOL", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >((1 << 17))));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OB_CURRENT_CONFORMER", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(-1)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBMol, (void*) "Chemistry::OpenBabel::OBMol");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "BUFF_SIZE", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(32768)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBRTree, (void*) "Chemistry::OpenBabel::OBRTree");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBRing, (void*) "Chemistry::OpenBabel::OBRing");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBRingSearch, (void*) "Chemistry::OpenBabel::OBRingSearch");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBSmartsPattern, (void*) "Chemistry::OpenBabel::OBSmartsPattern");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBSSMatch, (void*) "Chemistry::OpenBabel::OBSSMatch");
  /*@SWIG:%set_constant@*/ do {
    SV *sv = get_sv((char*) SWIG_prefix "OBFingerprint_FPT_UNIQUEBITS", TRUE | 0x2);
    sv_setsv(sv, SWIG_From_int  SWIG_PERL_CALL_ARGS_1(static_cast< int >(OpenBabel::OBFingerprint::FPT_UNIQUEBITS)));
    SvREADONLY_on(sv);
  } while(0) /*@SWIG@*/;
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBFingerprint, (void*) "Chemistry::OpenBabel::OBFingerprint");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__FptIndexHeader, (void*) "Chemistry::OpenBabel::FptIndexHeader");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__FptIndex, (void*) "Chemistry::OpenBabel::FptIndex");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__FastSearch, (void*) "Chemistry::OpenBabel::FastSearch");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__FastSearchIndexer, (void*) "Chemistry::OpenBabel::FastSearchIndexer");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBMolAtomIter, (void*) "Chemistry::OpenBabel::OBMolAtomIter");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBMolAtomDFSIter, (void*) "Chemistry::OpenBabel::OBMolAtomDFSIter");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBMolAtomBFSIter, (void*) "Chemistry::OpenBabel::OBMolAtomBFSIter");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBMolBondIter, (void*) "Chemistry::OpenBabel::OBMolBondIter");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBAtomAtomIter, (void*) "Chemistry::OpenBabel::OBAtomAtomIter");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBAtomBondIter, (void*) "Chemistry::OpenBabel::OBAtomBondIter");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBResidueIter, (void*) "Chemistry::OpenBabel::OBResidueIter");
  SWIG_TypeClientData(SWIGTYPE_p_OpenBabel__OBResidueAtomIter, (void*) "Chemistry::OpenBabel::OBResidueAtomIter");
  ST(0) = &PL_sv_yes;
  XSRETURN(1);
}

