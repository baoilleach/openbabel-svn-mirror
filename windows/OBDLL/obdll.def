; Created by Map2Def on 20040621 152320

LIBRARY obdll  BASE=0x787B0000

EXPORTS

 ??0vector3@OpenBabel@@QAE@NNN@Z @ 10 NONAME ; public: __thiscall OpenBabel::vector3::vector3(double,double,double)
 ??0OBAtom@OpenBabel@@QAE@XZ @ 11 NONAME ; public: __thiscall OpenBabel::OBAtom::OBAtom(void)
 ?DoTransformations@OBBase@OpenBabel@@UAEPAV12@PBD@Z @ 12 NONAME ; public: virtual class OpenBabel::OBBase * __thiscall OpenBabel::OBBase::DoTransformations(char const *)
 ??0OBNodeBase@OpenBabel@@QAE@XZ @ 13 NONAME ; public: __thiscall OpenBabel::OBNodeBase::OBNodeBase(void)
 ??1OBBase@OpenBabel@@UAE@XZ @ 14 NONAME ; public: virtual __thiscall OpenBabel::OBBase::~OBBase(void)
 ??1OBNodeBase@OpenBabel@@UAE@XZ @ 15 NONAME ; public: virtual __thiscall OpenBabel::OBNodeBase::~OBNodeBase(void)
 ?GetIdx@OBNodeBase@OpenBabel@@UBEIXZ @ 16 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::GetIdx(void)const 
 ?GetParent@OBNodeBase@OpenBabel@@UAEPAVOBGraphBase@2@XZ @ 17 NONAME ; public: virtual class OpenBabel::OBGraphBase * __thiscall OpenBabel::OBNodeBase::GetParent(void)
 ?GetValence@OBNodeBase@OpenBabel@@UBEIXZ @ 18 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::GetValence(void)const 
 ?GetFormalCharge@OBNodeBase@OpenBabel@@UBEHXZ @ 19 NONAME ; public: virtual int __thiscall OpenBabel::OBNodeBase::GetFormalCharge(void)const 
 ?Error@OBNodeBase@OpenBabel@@QAEXH@Z @ 20 NONAME ; public: void __thiscall OpenBabel::OBNodeBase::Error(int)
 ?ExplicitHydrogenCount@OBNodeBase@OpenBabel@@UBEIXZ @ 21 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::ExplicitHydrogenCount(void)const 
 ?ImplicitHydrogenCount@OBNodeBase@OpenBabel@@UBEIXZ @ 22 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::ImplicitHydrogenCount(void)const 
 ?GetImplicitValence@OBNodeBase@OpenBabel@@UBEIXZ @ 23 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::GetImplicitValence(void)const 
 ?GetHvyValence@OBNodeBase@OpenBabel@@UBEIXZ @ 24 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::GetHvyValence(void)const 
 ?KBOSum@OBNodeBase@OpenBabel@@UBEIXZ @ 25 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::KBOSum(void)const 
 ?GetHyb@OBNodeBase@OpenBabel@@UBEIXZ @ 26 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::GetHyb(void)const 
 ?MemberOfRingCount@OBNodeBase@OpenBabel@@UBEIXZ @ 27 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::MemberOfRingCount(void)const 
 ?GetAtomicNum@OBNodeBase@OpenBabel@@UBEIXZ @ 28 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBNodeBase::GetAtomicNum(void)const 
 ?SetMatch@OBNodeBase@OpenBabel@@UAEXPAV12@@Z @ 29 NONAME ; public: virtual void __thiscall OpenBabel::OBNodeBase::SetMatch(class OpenBabel::OBNodeBase *)
 ?SetAromatic@OBNodeBase@OpenBabel@@UAEXXZ @ 30 NONAME ; public: virtual void __thiscall OpenBabel::OBNodeBase::SetAromatic(void)
 ?IsInRingSize@OBNodeBase@OpenBabel@@UBE_NH@Z @ 31 NONAME ; public: virtual bool __thiscall OpenBabel::OBNodeBase::IsInRingSize(int)const 
 ?IsAromatic@OBNodeBase@OpenBabel@@UBE_NXZ @ 32 NONAME ; public: virtual bool __thiscall OpenBabel::OBNodeBase::IsAromatic(void)const 
 ?IsInRing@OBNodeBase@OpenBabel@@UBE_NXZ @ 33 NONAME ; public: virtual bool __thiscall OpenBabel::OBNodeBase::IsInRing(void)const 
 ?Eval@OBNodeBase@OpenBabel@@UBE_NPAV12@@Z @ 34 NONAME ; public: virtual bool __thiscall OpenBabel::OBNodeBase::Eval(class OpenBabel::OBNodeBase *)const 
 ?GetMatch@OBNodeBase@OpenBabel@@UAEPAV12@XZ @ 35 NONAME ; public: virtual class OpenBabel::OBNodeBase * __thiscall OpenBabel::OBNodeBase::GetMatch(void)
 ??0OBBase@OpenBabel@@QAE@XZ @ 36 NONAME ; public: __thiscall OpenBabel::OBBase::OBBase(void)
 ?SetAromatic@OBAtom@OpenBabel@@UAEXXZ @ 37 NONAME ; public: virtual void __thiscall OpenBabel::OBAtom::SetAromatic(void)
 ?SetFlag@OBAtom@OpenBabel@@IAEXH@Z @ 38 NONAME ; protected: void __thiscall OpenBabel::OBAtom::SetFlag(int)
 ?GetFormalCharge@OBAtom@OpenBabel@@UBEHXZ @ 39 NONAME ; public: virtual int __thiscall OpenBabel::OBAtom::GetFormalCharge(void)const 
 ?GetAtomicNum@OBAtom@OpenBabel@@UBEIXZ @ 40 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::GetAtomicNum(void)const 
 ?GetIdx@OBAtom@OpenBabel@@UBEIXZ @ 41 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::GetIdx(void)const 
 ?GetValence@OBAtom@OpenBabel@@UBEIXZ @ 42 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::GetValence(void)const 
 ??1OBAtom@OpenBabel@@UAE@XZ @ 43 NONAME ; public: virtual __thiscall OpenBabel::OBAtom::~OBAtom(void)
 ?Clear@OBAtom@OpenBabel@@QAEXXZ @ 44 NONAME ; public: void __thiscall OpenBabel::OBAtom::Clear(void)
 ??4OBAtom@OpenBabel@@QAEAAV01@AAV01@@Z @ 45 NONAME ; public: class OpenBabel::OBAtom & __thiscall OpenBabel::OBAtom::operator=(class OpenBabel::OBAtom &)
 ??4vector3@OpenBabel@@QAEAAV01@ABV01@@Z @ 46 NONAME ; public: class OpenBabel::vector3 & __thiscall OpenBabel::vector3::operator=(class OpenBabel::vector3 const &)
 ?GetFlag@OBAtom@OpenBabel@@IBEHXZ @ 47 NONAME ; protected: int __thiscall OpenBabel::OBAtom::GetFlag(void)const 
 ?GetIsotope@OBAtom@OpenBabel@@QBEGXZ @ 48 NONAME ; public: unsigned short __thiscall OpenBabel::OBAtom::GetIsotope(void)const 
 ?IsConnected@OBAtom@OpenBabel@@QAE_NPAV12@@Z @ 49 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsConnected(class OpenBabel::OBAtom *)
 ?GetBeginAtom@OBBond@OpenBabel@@QAEPAVOBAtom@2@XZ @ 50 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBBond::GetBeginAtom(void)
 ?GetEndAtom@OBBond@OpenBabel@@QAEPAVOBAtom@2@XZ @ 51 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBBond::GetEndAtom(void)
 ?IsOneThree@OBAtom@OpenBabel@@QAE_NPAV12@@Z @ 52 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsOneThree(class OpenBabel::OBAtom *)
 ?GetNbrAtom@OBBond@OpenBabel@@QAEPAVOBAtom@2@PAV32@@Z @ 53 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBBond::GetNbrAtom(class OpenBabel::OBAtom *)
 ?IsOneFour@OBAtom@OpenBabel@@QAE_NPAV12@@Z @ 54 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsOneFour(class OpenBabel::OBAtom *)
 ?IsAxial@OBAtom@OpenBabel@@QAE_NXZ @ 55 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsAxial(void)
 ?HasAlphaBetaUnsat@OBAtom@OpenBabel@@QAE_N_N@Z @ 56 NONAME ; public: bool __thiscall OpenBabel::OBAtom::HasAlphaBetaUnsat(bool)
 ?IsSulfur@OBAtom@OpenBabel@@QAE_NXZ @ 57 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsSulfur(void)
 ?IsPhosphorus@OBAtom@OpenBabel@@QAE_NXZ @ 58 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsPhosphorus(void)
 ?HasBondOfOrder@OBAtom@OpenBabel@@QAE_NI@Z @ 59 NONAME ; public: bool __thiscall OpenBabel::OBAtom::HasBondOfOrder(unsigned int)
 ?CountBondsOfOrder@OBAtom@OpenBabel@@QAEHI@Z @ 60 NONAME ; public: int __thiscall OpenBabel::OBAtom::CountBondsOfOrder(unsigned int)
 ?HasNonSingleBond@OBAtom@OpenBabel@@QAE_NXZ @ 61 NONAME ; public: bool __thiscall OpenBabel::OBAtom::HasNonSingleBond(void)
 ?IsPolarHydrogen@OBAtom@OpenBabel@@QAE_NXZ @ 62 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsPolarHydrogen(void)
 ?IsHydrogen@OBAtom@OpenBabel@@QAE_NXZ @ 63 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsHydrogen(void)
 ?IsNonPolarHydrogen@OBAtom@OpenBabel@@QAE_NXZ @ 64 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsNonPolarHydrogen(void)
 ?GetVector@OBAtom@OpenBabel@@QAEAAVvector3@2@XZ @ 65 NONAME ; public: class OpenBabel::vector3 & __thiscall OpenBabel::OBAtom::GetVector(void)
 ?Set@vector3@OpenBabel@@QAEXNNN@Z @ 66 NONAME ; public: void __thiscall OpenBabel::vector3::Set(double,double,double)
 ?SetVector@OBAtom@OpenBabel@@QAEXXZ @ 67 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetVector(void)
 ?SetVector@OBAtom@OpenBabel@@QAEXAAVvector3@2@@Z @ 68 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetVector(class OpenBabel::vector3 &)
 ?x@vector3@OpenBabel@@QBENXZ @ 69 NONAME ; public: double __thiscall OpenBabel::vector3::x(void)const 
 ?y@vector3@OpenBabel@@QBENXZ @ 70 NONAME ; public: double __thiscall OpenBabel::vector3::y(void)const 
 ?z@vector3@OpenBabel@@QBENXZ @ 71 NONAME ; public: double __thiscall OpenBabel::vector3::z(void)const 
 ?SetVector@OBAtom@OpenBabel@@QAEXNNN@Z @ 72 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetVector(double,double,double)
 ?SetType@OBAtom@OpenBabel@@QAEXPAD@Z @ 73 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetType(char *)
 ?SetType@OBAtom@OpenBabel@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 74 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetType(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?SetIsotope@OBAtom@OpenBabel@@QAEXI@Z @ 75 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetIsotope(unsigned int)
 ?GetNextAtom@OBAtom@OpenBabel@@QAEPAV12@XZ @ 76 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBAtom::GetNextAtom(void)
 ?NumAtoms@OBMol@OpenBabel@@QBEIXZ @ 77 NONAME ; public: unsigned int __thiscall OpenBabel::OBMol::NumAtoms(void)const 
 ?GetResidue@OBAtom@OpenBabel@@QAEPAVOBResidue@2@XZ @ 78 NONAME ; public: class OpenBabel::OBResidue * __thiscall OpenBabel::OBAtom::GetResidue(void)
 ?SetChainsPerceived@OBMol@OpenBabel@@QAEXXZ @ 79 NONAME ; public: void __thiscall OpenBabel::OBMol::SetChainsPerceived(void)
 ?SetFlag@OBMol@OpenBabel@@IAEXH@Z @ 80 NONAME ; protected: void __thiscall OpenBabel::OBMol::SetFlag(int)
 ?HasChainsPerceived@OBMol@OpenBabel@@QAE_NXZ @ 81 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasChainsPerceived(void)
 ?HasFlag@OBMol@OpenBabel@@IAE_NH@Z @ 82 NONAME ; protected: bool __thiscall OpenBabel::OBMol::HasFlag(int)
 ?GetAtomicMass@OBAtom@OpenBabel@@QBENXZ @ 83 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetAtomicMass(void)const 
 ?GetExactMass@OBAtom@OpenBabel@@QBENXZ @ 84 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetExactMass(void)const 
 ?GetType@OBAtom@OpenBabel@@QAEPADXZ @ 85 NONAME ; public: char * __thiscall OpenBabel::OBAtom::GetType(void)
 ??1OBTypeTable@OpenBabel@@UAE@XZ @ 86 NONAME ; public: virtual __thiscall OpenBabel::OBTypeTable::~OBTypeTable(void)
 ??1OBGlobalDataBase@OpenBabel@@UAE@XZ @ 87 NONAME ; public: virtual __thiscall OpenBabel::OBGlobalDataBase::~OBGlobalDataBase(void)
 ?ParseLine@OBGlobalDataBase@OpenBabel@@UAEXPBD@Z @ 88 NONAME ; public: virtual void __thiscall OpenBabel::OBGlobalDataBase::ParseLine(char const *)
 ?HasAtomTypesPerceived@OBMol@OpenBabel@@QAE_NXZ @ 89 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasAtomTypesPerceived(void)
 ?GetImplicitValence@OBAtom@OpenBabel@@UBEIXZ @ 90 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::GetImplicitValence(void)const 
 ?HasImplicitValencePerceived@OBMol@OpenBabel@@QAE_NXZ @ 91 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasImplicitValencePerceived(void)
 ?GetHyb@OBAtom@OpenBabel@@UBEIXZ @ 92 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::GetHyb(void)const 
 ?HasHybridizationPerceived@OBMol@OpenBabel@@QAE_NXZ @ 93 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasHybridizationPerceived(void)
 ?GetHvyValence@OBAtom@OpenBabel@@UBEIXZ @ 94 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::GetHvyValence(void)const 
 ?GetHeteroValence@OBAtom@OpenBabel@@QBEIXZ @ 95 NONAME ; public: unsigned int __thiscall OpenBabel::OBAtom::GetHeteroValence(void)const 
 ?GetPartialCharge@OBAtom@OpenBabel@@QAENXZ @ 96 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetPartialCharge(void)
 ?SetPartialCharge@OBAtom@OpenBabel@@QAEXN@Z @ 97 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetPartialCharge(double)
 ?AutomaticPartialCharge@OBMol@OpenBabel@@QAE_NXZ @ 98 NONAME ; public: bool __thiscall OpenBabel::OBMol::AutomaticPartialCharge(void)
 ?HasPartialChargesPerceived@OBMol@OpenBabel@@QAE_NXZ @ 99 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasPartialChargesPerceived(void)
 ??0OBGastChrg@OpenBabel@@QAE@XZ @ 100 NONAME ; public: __thiscall OpenBabel::OBGastChrg::OBGastChrg(void)
 ?IsAmideNitrogen@OBAtom@OpenBabel@@QAE_NXZ @ 101 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsAmideNitrogen(void)
 ?IsNitrogen@OBAtom@OpenBabel@@QAE_NXZ @ 102 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsNitrogen(void)
 ?IsAromaticNOxide@OBAtom@OpenBabel@@QAE_NXZ @ 103 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsAromaticNOxide(void)
 ?IsOxygen@OBAtom@OpenBabel@@QAE_NXZ @ 104 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsOxygen(void)
 ?IsCarboxylOxygen@OBAtom@OpenBabel@@QAE_NXZ @ 105 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsCarboxylOxygen(void)
 ?IsCarbon@OBAtom@OpenBabel@@QAE_NXZ @ 106 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsCarbon(void)
 ?IsPhosphateOxygen@OBAtom@OpenBabel@@QAE_NXZ @ 107 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsPhosphateOxygen(void)
 ?IsSulfateOxygen@OBAtom@OpenBabel@@QAE_NXZ @ 108 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsSulfateOxygen(void)
 ?IsNitroOxygen@OBAtom@OpenBabel@@QAE_NXZ @ 109 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsNitroOxygen(void)
 ?IsHeteroatom@OBAtom@OpenBabel@@QAE_NXZ @ 110 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsHeteroatom(void)
 ?IsAromatic@OBAtom@OpenBabel@@UBE_NXZ @ 111 NONAME ; public: virtual bool __thiscall OpenBabel::OBAtom::IsAromatic(void)const 
 ?HasFlag@OBAtom@OpenBabel@@IAE_NH@Z @ 112 NONAME ; protected: bool __thiscall OpenBabel::OBAtom::HasFlag(int)
 ?HasAromaticPerceived@OBMol@OpenBabel@@QAE_NXZ @ 113 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasAromaticPerceived(void)
 ?IsInRing@OBAtom@OpenBabel@@UBE_NXZ @ 114 NONAME ; public: virtual bool __thiscall OpenBabel::OBAtom::IsInRing(void)const 
 ?HasRingAtomsAndBondsPerceived@OBMol@OpenBabel@@QAE_NXZ @ 115 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasRingAtomsAndBondsPerceived(void)
 ?IsChiral@OBAtom@OpenBabel@@QAE_NXZ @ 116 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsChiral(void)
 ?HasChiralityPerceived@OBMol@OpenBabel@@QAE_NXZ @ 117 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasChiralityPerceived(void)
 ?IsInRingSize@OBAtom@OpenBabel@@UBE_NH@Z @ 118 NONAME ; public: virtual bool __thiscall OpenBabel::OBAtom::IsInRingSize(int)const 
 ?PathSize@OBRing@OpenBabel@@QBEHXZ @ 119 NONAME ; public: int __thiscall OpenBabel::OBRing::PathSize(void)const 
 ?IsInRing@OBRing@OpenBabel@@QAE_NH@Z @ 120 NONAME ; public: bool __thiscall OpenBabel::OBRing::IsInRing(int)
 ?BitIsOn@OBBitVec@OpenBabel@@QAE_NH@Z @ 121 NONAME ; public: bool __thiscall OpenBabel::OBBitVec::BitIsOn(int)
 ?GetSize@OBBitVec@OpenBabel@@QBEHXZ @ 122 NONAME ; public: int __thiscall OpenBabel::OBBitVec::GetSize(void)const 
 ?HasSSSRPerceived@OBMol@OpenBabel@@QAE_NXZ @ 123 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasSSSRPerceived(void)
 ?MemberOfRingCount@OBAtom@OpenBabel@@UBEIXZ @ 124 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::MemberOfRingCount(void)const 
 ?MemberOfRingSize@OBAtom@OpenBabel@@QBEIXZ @ 125 NONAME ; public: unsigned int __thiscall OpenBabel::OBAtom::MemberOfRingSize(void)const 
 ?Size@OBRing@OpenBabel@@QBEHXZ @ 126 NONAME ; public: int __thiscall OpenBabel::OBRing::Size(void)const 
 ?SmallestBondAngle@OBAtom@OpenBabel@@QAENXZ @ 127 NONAME ; public: double __thiscall OpenBabel::OBAtom::SmallestBondAngle(void)
 ??G@YA?AVvector3@OpenBabel@@ABV01@0@Z @ 128 NONAME ; class OpenBabel::vector3 __cdecl operator-(class OpenBabel::vector3 const &,class OpenBabel::vector3 const &)
 ?CountFreeOxygens@OBAtom@OpenBabel@@QBEIXZ @ 129 NONAME ; public: unsigned int __thiscall OpenBabel::OBAtom::CountFreeOxygens(void)const 
 ?BOSum@OBAtom@OpenBabel@@QBEIXZ @ 130 NONAME ; public: unsigned int __thiscall OpenBabel::OBAtom::BOSum(void)const 
 ?KBOSum@OBAtom@OpenBabel@@UBEIXZ @ 131 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::KBOSum(void)const 
 ?ImplicitHydrogenCount@OBAtom@OpenBabel@@UBEIXZ @ 132 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::ImplicitHydrogenCount(void)const 
 ?ExplicitHydrogenCount@OBAtom@OpenBabel@@UBEIXZ @ 133 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBAtom::ExplicitHydrogenCount(void)const 
 ?DeleteBond@OBAtom@OpenBabel@@QAE_NPAVOBBond@2@@Z @ 134 NONAME ; public: bool __thiscall OpenBabel::OBAtom::DeleteBond(class OpenBabel::OBBond *)
 ?MatchesSMARTS@OBAtom@OpenBabel@@QAE_NPBD@Z @ 135 NONAME ; public: bool __thiscall OpenBabel::OBAtom::MatchesSMARTS(char const *)
 ??0OBSmartsPattern@OpenBabel@@QAE@XZ @ 136 NONAME ; public: __thiscall OpenBabel::OBSmartsPattern::OBSmartsPattern(void)
 ?BeginBond@OBAtom@OpenBabel@@QAEPAVOBBond@2@AAPAPAVOBEdgeBase@2@@Z @ 137 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBAtom::BeginBond(class OpenBabel::OBEdgeBase * * &)
 ?NextBond@OBAtom@OpenBabel@@QAEPAVOBBond@2@AAPAPAVOBEdgeBase@2@@Z @ 138 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBAtom::NextBond(class OpenBabel::OBEdgeBase * * &)
 ?BeginNbrAtom@OBAtom@OpenBabel@@QAEPAV12@AAPAPAVOBEdgeBase@2@@Z @ 139 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBAtom::BeginNbrAtom(class OpenBabel::OBEdgeBase * * &)
 ?NextNbrAtom@OBAtom@OpenBabel@@QAEPAV12@AAPAPAVOBEdgeBase@2@@Z @ 140 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBAtom::NextNbrAtom(class OpenBabel::OBEdgeBase * * &)
 ?GetDistance@OBAtom@OpenBabel@@QAENPAV12@@Z @ 141 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetDistance(class OpenBabel::OBAtom *)
 ?length@vector3@OpenBabel@@QBENXZ @ 142 NONAME ; public: double __thiscall OpenBabel::vector3::length(void)const 
 ?GetDistance@OBAtom@OpenBabel@@QAENH@Z @ 143 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetDistance(int)
 ?GetAngle@OBAtom@OpenBabel@@QAENPAV12@0@Z @ 144 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetAngle(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?GetAngle@OBAtom@OpenBabel@@QAENHH@Z @ 145 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetAngle(int,int)
 ?GetNewBondVector@OBAtom@OpenBabel@@QAE_NAAVvector3@2@N@Z @ 146 NONAME ; public: bool __thiscall OpenBabel::OBAtom::GetNewBondVector(class OpenBabel::vector3 &,double)
 ??H@YA?AVvector3@OpenBabel@@ABV01@0@Z @ 147 NONAME ; class OpenBabel::vector3 __cdecl operator+(class OpenBabel::vector3 const &,class OpenBabel::vector3 const &)
 ??Yvector3@OpenBabel@@QAEAAV01@ABV01@@Z @ 148 NONAME ; public: class OpenBabel::vector3 & __thiscall OpenBabel::vector3::operator+=(class OpenBabel::vector3 const &)
 ??Xvector3@OpenBabel@@QAEAAV01@ABN@Z @ 149 NONAME ; public: class OpenBabel::vector3 & __thiscall OpenBabel::vector3::operator*=(double const &)
 ??_0vector3@OpenBabel@@QAEAAV01@ABN@Z @ 150 NONAME ; public: class OpenBabel::vector3 & __thiscall OpenBabel::vector3::operator/=(double const &)
 ??0matrix3x3@OpenBabel@@QAE@XZ @ 151 NONAME ; public: __thiscall OpenBabel::matrix3x3::matrix3x3(void)
 ?HtoMethyl@OBAtom@OpenBabel@@QAE_NXZ @ 152 NONAME ; public: bool __thiscall OpenBabel::OBAtom::HtoMethyl(void)
 ?SetHyb@OBAtom@OpenBabel@@QAEXH@Z @ 153 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetHyb(int)
 ?SetAtomicNum@OBAtom@OpenBabel@@QAEXH@Z @ 154 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetAtomicNum(int)
 ?SetHybAndGeom@OBAtom@OpenBabel@@QAE_NH@Z @ 155 NONAME ; public: bool __thiscall OpenBabel::OBAtom::SetHybAndGeom(int)
 ?IncrementMod@OBMol@OpenBabel@@QAEXXZ @ 156 NONAME ; public: void __thiscall OpenBabel::OBMol::IncrementMod(void)
 ?DecrementMod@OBMol@OpenBabel@@QAEXXZ @ 157 NONAME ; public: void __thiscall OpenBabel::OBMol::DecrementMod(void)
 ??Zvector3@OpenBabel@@QAEAAV01@ABV01@@Z @ 158 NONAME ; public: class OpenBabel::vector3 & __thiscall OpenBabel::vector3::operator-=(class OpenBabel::vector3 const &)
 ?GetBond@OBAtom@OpenBabel@@QAEPAVOBBond@2@PAV12@@Z @ 159 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBAtom::GetBond(class OpenBabel::OBAtom *)
 ?HasData@OBAtom@OpenBabel@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 160 NONAME ; public: bool __thiscall OpenBabel::OBAtom::HasData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?HasData@OBAtom@OpenBabel@@QAE_NPBD@Z @ 161 NONAME ; public: bool __thiscall OpenBabel::OBAtom::HasData(char const *)
 ?HasData@OBAtom@OpenBabel@@QAE_NW4obDataType@2@@Z @ 162 NONAME ; public: bool __thiscall OpenBabel::OBAtom::HasData(enum OpenBabel::obDataType)
 ?GetDataType@OBGenericData@OpenBabel@@QBE?AW4obDataType@2@XZ @ 163 NONAME ; public: enum OpenBabel::obDataType __thiscall OpenBabel::OBGenericData::GetDataType(void)const 
 ?GetData@OBAtom@OpenBabel@@QAEPAVOBGenericData@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 164 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBAtom::GetData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?GetData@OBAtom@OpenBabel@@QAEPAVOBGenericData@2@PBD@Z @ 165 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBAtom::GetData(char const *)
 ?GetData@OBAtom@OpenBabel@@QAEPAVOBGenericData@2@W4obDataType@2@@Z @ 166 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBAtom::GetData(enum OpenBabel::obDataType)
 ?DeleteData@OBAtom@OpenBabel@@QAEXW4obDataType@2@@Z @ 167 NONAME ; public: void __thiscall OpenBabel::OBAtom::DeleteData(enum OpenBabel::obDataType)
 ?DeleteData@OBAtom@OpenBabel@@QAEXAAV?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@@Z @ 168 NONAME ; public: void __thiscall OpenBabel::OBAtom::DeleteData(class std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> > &)
 ?DeleteData@OBAtom@OpenBabel@@QAEXPAVOBGenericData@2@@Z @ 169 NONAME ; public: void __thiscall OpenBabel::OBAtom::DeleteData(class OpenBabel::OBGenericData *)
 ??0?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBEdgeBase@OpenBabel@@@1@@Z @ 170 NONAME ; public: __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >(class std::allocator<class OpenBabel::OBEdgeBase *> const &)
 ??1?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAE@XZ @ 171 NONAME ; public: __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::~vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >(void)
 ?reserve@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEXI@Z @ 172 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::reserve(unsigned int)
 ?begin@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBEdgeBase@OpenBabel@@XZ @ 173 NONAME ; public: class OpenBabel::OBEdgeBase * * __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::begin(void)
 ?end@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBEdgeBase@OpenBabel@@XZ @ 174 NONAME ; public: class OpenBabel::OBEdgeBase * * __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::end(void)
 ?size@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QBEIXZ @ 175 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::size(void)const 
 ?empty@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QBE_NXZ @ 176 NONAME ; public: bool __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::empty(void)const 
 ?erase@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBEdgeBase@OpenBabel@@PAPAV34@@Z @ 177 NONAME ; public: class OpenBabel::OBEdgeBase * * __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::erase(class OpenBabel::OBEdgeBase * *)
 ?clear@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEXXZ @ 178 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::clear(void)
 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ @ 179 NONAME ; public: __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::~vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(void)
 ??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ @ 180 NONAME ; public: __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::~vector<class st
 ??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV?$allocator@H@1@@Z @ 181 NONAME ; public: __thiscall std::vector<int,class std::allocator<int> >::vector<int,class std::allocator<int> >(class std::allocator<int> const &)
 ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ @ 182 NONAME ; public: __thiscall std::vector<int,class std::allocator<int> >::~vector<int,class std::allocator<int> >(void)
 ?begin@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ @ 183 NONAME ; public: int * __thiscall std::vector<int,class std::allocator<int> >::begin(void)
 ?end@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ @ 184 NONAME ; public: int * __thiscall std::vector<int,class std::allocator<int> >::end(void)
 ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ @ 185 NONAME ; public: unsigned int __thiscall std::vector<int,class std::allocator<int> >::size(void)const 
 ??A?$vector@HV?$allocator@H@std@@@std@@QAEAAHI@Z @ 186 NONAME ; public: int & __thiscall std::vector<int,class std::allocator<int> >::operator[](unsigned int)
 ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEXABH@Z @ 187 NONAME ; public: void __thiscall std::vector<int,class std::allocator<int> >::push_back(int const &)
 ??0?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBRing@OpenBabel@@@1@@Z @ 188 NONAME ; public: __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >(class std::allocator<class OpenBabel::OBRing *> const &)
 ??1?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAE@XZ @ 189 NONAME ; public: __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::~vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >(void)
 ??4?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEAAV01@ABV01@@Z @ 190 NONAME ; public: class std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> > & __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::operator=(class std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> > const &)
 ?begin@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEPAPAVOBRing@OpenBabel@@XZ @ 191 NONAME ; public: class OpenBabel::OBRing * * __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::begin(void)
 ?end@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEPAPAVOBRing@OpenBabel@@XZ @ 192 NONAME ; public: class OpenBabel::OBRing * * __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::end(void)
 ??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@ABV?$allocator@_N@1@@Z @ 193 NONAME ; public: __thiscall std::vector<bool,class std::allocator<bool> >::vector<bool,class std::allocator<bool> >(class std::allocator<bool> const &)
 ??1?$vector@_NV?$allocator@_N@std@@@std@@QAE@XZ @ 194 NONAME ; public: __thiscall std::vector<bool,class std::allocator<bool> >::~vector<bool,class std::allocator<bool> >(void)
 ??0?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAE@ABV?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@1@@Z @ 195 NONAME ; public: __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >(class std::allocator<class std::vector<int,class std::allocator<int> > > const &)
 ??1?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAE@XZ @ 196 NONAME ; public: __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::~vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >(void)
 ??4?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEAAV01@ABV01@@Z @ 197 NONAME ; public: class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > & __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::operator=(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &)
 ?begin@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEPAV?$vector@HV?$allocator@H@std@@@2@XZ @ 198 NONAME ; public: class std::vector<int,class std::allocator<int> > * __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::begin(void)
 ?end@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEPAV?$vector@HV?$allocator@H@std@@@2@XZ @ 199 NONAME ; public: class std::vector<int,class std::allocator<int> > * __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::end(void)
 ?size@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBEIXZ @ 200 NONAME ; public: unsigned int __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::size(void)const 
 ??0?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBAtom@OpenBabel@@@1@@Z @ 201 NONAME ; public: __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >(class std::allocator<class OpenBabel::OBAtom *> const &)
 ??1?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAE@XZ @ 202 NONAME ; public: __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::~vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >(void)
 ?begin@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAEPAPAVOBAtom@OpenBabel@@XZ @ 203 NONAME ; public: class OpenBabel::OBAtom * * __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::begin(void)
 ?end@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAEPAPAVOBAtom@OpenBabel@@XZ @ 204 NONAME ; public: class OpenBabel::OBAtom * * __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::end(void)
 ?push_back@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAEXABQAVOBAtom@OpenBabel@@@Z @ 205 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::push_back(class OpenBabel::OBAtom * const &)
 ??0?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBGenericData@OpenBabel@@@1@@Z @ 206 NONAME ; public: __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >(class std::allocator<class OpenBabel::OBGenericData *> const &)
 ??1?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAE@XZ @ 207 NONAME ; public: __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::~vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >(void)
 ??4?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAEAAV01@ABV01@@Z @ 208 NONAME ; public: class std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> > & __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::operator=(class std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> > const &)
 ?begin@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAEPAPAVOBGenericData@OpenBabel@@XZ @ 209 NONAME ; public: class OpenBabel::OBGenericData * * __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::begin(void)
 ?end@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAEPAPAVOBGenericData@OpenBabel@@XZ @ 210 NONAME ; public: class OpenBabel::OBGenericData * * __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::end(void)
 ?size@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QBEIXZ @ 211 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::size(void)const 
 ?empty@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QBE_NXZ @ 212 NONAME ; public: bool __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::empty(void)const 
 ?push_back@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAEXABQAVOBGenericData@OpenBabel@@@Z @ 213 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::push_back(class OpenBabel::OBGenericData * const &)
 ?erase@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAEPAPAVOBGenericData@OpenBabel@@PAPAV34@@Z @ 214 NONAME ; public: class OpenBabel::OBGenericData * * __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::erase(class OpenBabel::OBGenericData * *)
 ?clear@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAEXXZ @ 215 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::clear(void)
 ??0?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVGasteigerState@OpenBabel@@@1@@Z @ 216 NONAME ; public: __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >(class std::allocator<class OpenBabel::GasteigerState *> const &)
 ?capacity@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QBEIXZ @ 217 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::capacity(void)const 
 ?erase@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBEdgeBase@OpenBabel@@PAPAV34@0@Z @ 218 NONAME ; public: class OpenBabel::OBEdgeBase * * __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::erase(class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * *)
 ?_Destroy@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@IAEXPAPAVOBEdgeBase@OpenBabel@@0@Z @ 219 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::_Destroy(class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * *)
 ?_Ucopy@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@IAEPAPAVOBEdgeBase@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 220 NONAME ; protected: class OpenBabel::OBEdgeBase * * __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::_Ucopy(class OpenBabel::OBEdgeBase * const *,class OpenBabel::OBEdgeBase * const *,class OpenBabel::OBEdgeBase * *)
 ?allocate@?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@QAEPAPAVOBEdgeBase@OpenBabel@@IPBX@Z @ 221 NONAME ; public: class OpenBabel::OBEdgeBase * * __thiscall std::allocator<class OpenBabel::OBEdgeBase *>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@QAEXPAXI@Z @ 222 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBEdgeBase *>::deallocate(void *,unsigned int)
 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z @ 223 NONAME ; protected: void __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Destroy(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAXI@Z @ 224 NONAME ; public: void __thiscall std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::deallocate(void *,unsigned int)
 ?_Destroy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z @ 225 NONAME ; protected: void __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_Destroy
 ?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAXI@Z @ 226 NONAME ; public: void __thiscall std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::deallocate(void *,unsigned int)
 ?insert@?$vector@HV?$allocator@H@std@@@std@@QAEPAHPAHABH@Z @ 227 NONAME ; public: int * __thiscall std::vector<int,class std::allocator<int> >::insert(int *,int const &)
 ?insert@?$vector@HV?$allocator@H@std@@@std@@QAEXPAHIABH@Z @ 228 NONAME ; public: void __thiscall std::vector<int,class std::allocator<int> >::insert(int *,unsigned int,int const &)
 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z @ 229 NONAME ; protected: void __thiscall std::vector<int,class std::allocator<int> >::_Destroy(int *,int *)
 ?deallocate@?$allocator@H@std@@QAEXPAXI@Z @ 230 NONAME ; public: void __thiscall std::allocator<int>::deallocate(void *,unsigned int)
 ?capacity@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QBEIXZ @ 231 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::capacity(void)const 
 ?begin@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QBEPBQAVOBRing@OpenBabel@@XZ @ 232 NONAME ; public: class OpenBabel::OBRing * const * __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::begin(void)const 
 ?end@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QBEPBQAVOBRing@OpenBabel@@XZ @ 233 NONAME ; public: class OpenBabel::OBRing * const * __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::end(void)const 
 ?size@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QBEIXZ @ 234 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::size(void)const 
 ?_Destroy@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@IAEXPAPAVOBRing@OpenBabel@@0@Z @ 235 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::_Destroy(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *)
 ?_Ucopy@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@IAEPAPAVOBRing@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 236 NONAME ; protected: class OpenBabel::OBRing * * __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::_Ucopy(class OpenBabel::OBRing * const *,class OpenBabel::OBRing * const *,class OpenBabel::OBRing * *)
 ?allocate@?$allocator@PAVOBRing@OpenBabel@@@std@@QAEPAPAVOBRing@OpenBabel@@IPBX@Z @ 237 NONAME ; public: class OpenBabel::OBRing * * __thiscall std::allocator<class OpenBabel::OBRing *>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@PAVOBRing@OpenBabel@@@std@@QAEXPAXI@Z @ 238 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRing *>::deallocate(void *,unsigned int)
 ?_Destroy@?$vector@_NV?$allocator@_N@std@@@std@@IAEXPA_N0@Z @ 239 NONAME ; protected: void __thiscall std::vector<bool,class std::allocator<bool> >::_Destroy(bool *,bool *)
 ?deallocate@?$allocator@_N@std@@QAEXPAXI@Z @ 240 NONAME ; public: void __thiscall std::allocator<bool>::deallocate(void *,unsigned int)
 ?capacity@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBEIXZ @ 241 NONAME ; public: unsigned int __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::capacity(void)const 
 ?begin@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBEPBV?$vector@HV?$allocator@H@std@@@2@XZ @ 242 NONAME ; public: class std::vector<int,class std::allocator<int> > const * __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::begin(void)const 
 ?end@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBEPBV?$vector@HV?$allocator@H@std@@@2@XZ @ 243 NONAME ; public: class std::vector<int,class std::allocator<int> > const * __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::end(void)const 
 ?_Destroy@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IAEXPAV?$vector@HV?$allocator@H@std@@@2@0@Z @ 244 NONAME ; protected: void __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::_Destroy(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *)
 ?_Ucopy@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IAEPAV?$vector@HV?$allocator@H@std@@@2@PBV32@0PAV32@@Z @ 245 NONAME ; protected: class std::vector<int,class std::allocator<int> > * __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::_Ucopy(class std::vector<int,class std::allocator<int> > const *,class std::vector<int,class std::allocator<int> > const *,class std::vector<int,class std::allocator<int> > *)
 ?allocate@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEPAV?$vector@HV?$allocator@H@std@@@2@IPBX@Z @ 246 NONAME ; public: class std::vector<int,class std::allocator<int> > * __thiscall std::allocator<class std::vector<int,class std::allocator<int> > >::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEXPAXI@Z @ 247 NONAME ; public: void __thiscall std::allocator<class std::vector<int,class std::allocator<int> > >::deallocate(void *,unsigned int)
 ?insert@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAEPAPAVOBAtom@OpenBabel@@PAPAV34@ABQAV34@@Z @ 248 NONAME ; public: class OpenBabel::OBAtom * * __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::insert(class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * const &)
 ?_Destroy@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@IAEXPAPAVOBAtom@OpenBabel@@0@Z @ 249 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::_Destroy(class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * *)
 ?deallocate@?$allocator@PAVOBAtom@OpenBabel@@@std@@QAEXPAXI@Z @ 250 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBAtom *>::deallocate(void *,unsigned int)
 ?capacity@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QBEIXZ @ 251 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::capacity(void)const 
 ?begin@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QBEPBQAVOBGenericData@OpenBabel@@XZ @ 252 NONAME ; public: class OpenBabel::OBGenericData * const * __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::begin(void)const 
 ?end@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QBEPBQAVOBGenericData@OpenBabel@@XZ @ 253 NONAME ; public: class OpenBabel::OBGenericData * const * __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::end(void)const 
 ?insert@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAEPAPAVOBGenericData@OpenBabel@@PAPAV34@ABQAV34@@Z @ 254 NONAME ; public: class OpenBabel::OBGenericData * * __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::insert(class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * const &)
 ?erase@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAEPAPAVOBGenericData@OpenBabel@@PAPAV34@0@Z @ 255 NONAME ; public: class OpenBabel::OBGenericData * * __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::erase(class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * *)
 ?_Destroy@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@IAEXPAPAVOBGenericData@OpenBabel@@0@Z @ 256 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::_Destroy(class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * *)
 ?_Ucopy@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@IAEPAPAVOBGenericData@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 257 NONAME ; protected: class OpenBabel::OBGenericData * * __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::_Ucopy(class OpenBabel::OBGenericData * const *,class OpenBabel::OBGenericData * const *,class OpenBabel::OBGenericData * *)
 ?allocate@?$allocator@PAVOBGenericData@OpenBabel@@@std@@QAEPAPAVOBGenericData@OpenBabel@@IPBX@Z @ 258 NONAME ; public: class OpenBabel::OBGenericData * * __thiscall std::allocator<class OpenBabel::OBGenericData *>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@PAVOBGenericData@OpenBabel@@@std@@QAEXPAXI@Z @ 259 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBGenericData *>::deallocate(void *,unsigned int)
 ?construct@?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@QAEXPAPAVOBEdgeBase@OpenBabel@@ABQAV34@@Z @ 260 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBEdgeBase *>::construct(class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * const &)
 ?destroy@?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@QAEXPAPAVOBEdgeBase@OpenBabel@@@Z @ 261 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBEdgeBase *>::destroy(class OpenBabel::OBEdgeBase * *)
 ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z @ 262 NONAME ; public: void __thiscall std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::destroy(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
 ?destroy@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z @ 263 NONAME ; public: void __thiscall std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::destroy(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > *)
 ?_Ucopy@?$vector@HV?$allocator@H@std@@@std@@IAEPAHPBH0PAH@Z @ 264 NONAME ; protected: int * __thiscall std::vector<int,class std::allocator<int> >::_Ucopy(int const *,int const *,int *)
 ?_Ufill@?$vector@HV?$allocator@H@std@@@std@@IAEXPAHIABH@Z @ 265 NONAME ; protected: void __thiscall std::vector<int,class std::allocator<int> >::_Ufill(int *,unsigned int,int const &)
 ?allocate@?$allocator@H@std@@QAEPAHIPBX@Z @ 266 NONAME ; public: int * __thiscall std::allocator<int>::allocate(unsigned int,void const *)
 ?destroy@?$allocator@H@std@@QAEXPAH@Z @ 267 NONAME ; public: void __thiscall std::allocator<int>::destroy(int *)
 ?construct@?$allocator@PAVOBRing@OpenBabel@@@std@@QAEXPAPAVOBRing@OpenBabel@@ABQAV34@@Z @ 268 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRing *>::construct(class OpenBabel::OBRing * *,class OpenBabel::OBRing * const &)
 ?destroy@?$allocator@PAVOBRing@OpenBabel@@@std@@QAEXPAPAVOBRing@OpenBabel@@@Z @ 269 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRing *>::destroy(class OpenBabel::OBRing * *)
 ?destroy@?$allocator@_N@std@@QAEXPA_N@Z @ 270 NONAME ; public: void __thiscall std::allocator<bool>::destroy(bool *)
 ?construct@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@2@ABV32@@Z @ 271 NONAME ; public: void __thiscall std::allocator<class std::vector<int,class std::allocator<int> > >::construct(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > const &)
 ?destroy@?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@2@@Z @ 272 NONAME ; public: void __thiscall std::allocator<class std::vector<int,class std::allocator<int> > >::destroy(class std::vector<int,class std::allocator<int> > *)
 ?insert@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAEXPAPAVOBAtom@OpenBabel@@IABQAV34@@Z @ 273 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::insert(class OpenBabel::OBAtom * *,unsigned int,class OpenBabel::OBAtom * const &)
 ?destroy@?$allocator@PAVOBAtom@OpenBabel@@@std@@QAEXPAPAVOBAtom@OpenBabel@@@Z @ 274 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBAtom *>::destroy(class OpenBabel::OBAtom * *)
 ?insert@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@QAEXPAPAVOBGenericData@OpenBabel@@IABQAV34@@Z @ 275 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::insert(class OpenBabel::OBGenericData * *,unsigned int,class OpenBabel::OBGenericData * const &)
 ?construct@?$allocator@PAVOBGenericData@OpenBabel@@@std@@QAEXPAPAVOBGenericData@OpenBabel@@ABQAV34@@Z @ 276 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBGenericData *>::construct(class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * const &)
 ?destroy@?$allocator@PAVOBGenericData@OpenBabel@@@std@@QAEXPAPAVOBGenericData@OpenBabel@@@Z @ 277 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBGenericData *>::destroy(class OpenBabel::OBGenericData * *)
 ?construct@?$allocator@H@std@@QAEXPAHABH@Z @ 278 NONAME ; public: void __thiscall std::allocator<int>::construct(int *,int const &)
 ?size@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QBEIXZ @ 279 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::size(void)const 
 ?_Ucopy@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@IAEPAPAVOBAtom@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 280 NONAME ; protected: class OpenBabel::OBAtom * * __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::_Ucopy(class OpenBabel::OBAtom * const *,class OpenBabel::OBAtom * const *,class OpenBabel::OBAtom * *)
 ?_Ufill@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@IAEXPAPAVOBAtom@OpenBabel@@IABQAV34@@Z @ 281 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::_Ufill(class OpenBabel::OBAtom * *,unsigned int,class OpenBabel::OBAtom * const &)
 ?allocate@?$allocator@PAVOBAtom@OpenBabel@@@std@@QAEPAPAVOBAtom@OpenBabel@@IPBX@Z @ 282 NONAME ; public: class OpenBabel::OBAtom * * __thiscall std::allocator<class OpenBabel::OBAtom *>::allocate(unsigned int,void const *)
 ?_Ufill@?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@IAEXPAPAVOBGenericData@OpenBabel@@IABQAV34@@Z @ 283 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> >::_Ufill(class OpenBabel::OBGenericData * *,unsigned int,class OpenBabel::OBGenericData * const &)
 ?construct@?$allocator@PAVOBAtom@OpenBabel@@@std@@QAEXPAPAVOBAtom@OpenBabel@@ABQAV34@@Z @ 284 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBAtom *>::construct(class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * const &)
 ?copy@std@@YAPAPAVOBEdgeBase@OpenBabel@@PAPAV23@00@Z @ 285 NONAME ; class OpenBabel::OBEdgeBase * * __cdecl std::copy(class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * *)
 ?copy@std@@YAPAPAVOBRing@OpenBabel@@PBQAV23@0PAPAV23@@Z @ 286 NONAME ; class OpenBabel::OBRing * * __cdecl std::copy(class OpenBabel::OBRing * const *,class OpenBabel::OBRing * const *,class OpenBabel::OBRing * *)
 ?copy@std@@YAPAV?$vector@HV?$allocator@H@std@@@1@PBV21@0PAV21@@Z @ 287 NONAME ; class std::vector<int,class std::allocator<int> > * __cdecl std::copy(class std::vector<int,class std::allocator<int> > const *,class std::vector<int,class std::allocator<int> > const *,class std::vector<int,class std::allocator<int> > *)
 ?copy@std@@YAPAPAVOBGenericData@OpenBabel@@PBQAV23@0PAPAV23@@Z @ 288 NONAME ; class OpenBabel::OBGenericData * * __cdecl std::copy(class OpenBabel::OBGenericData * const *,class OpenBabel::OBGenericData * const *,class OpenBabel::OBGenericData * *)
 ?copy@std@@YAPAPAVOBGenericData@OpenBabel@@PAPAV23@00@Z @ 289 NONAME ; class OpenBabel::OBGenericData * * __cdecl std::copy(class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * *)
 ?_Allocate@std@@YAPAPAVOBEdgeBase@OpenBabel@@HPAPAV23@@Z @ 290 NONAME ; class OpenBabel::OBEdgeBase * * __cdecl std::_Allocate(int,class OpenBabel::OBEdgeBase * *)
 ?fill@std@@YAXPAH0ABH@Z @ 291 NONAME ; void __cdecl std::fill(int *,int *,int const &)
 ?copy_backward@std@@YAPAHPAH00@Z @ 292 NONAME ; int * __cdecl std::copy_backward(int *,int *,int *)
 ?_Allocate@std@@YAPAPAVOBRing@OpenBabel@@HPAPAV23@@Z @ 293 NONAME ; class OpenBabel::OBRing * * __cdecl std::_Allocate(int,class OpenBabel::OBRing * *)
 ?_Allocate@std@@YAPAV?$vector@HV?$allocator@H@std@@@1@HPAV21@@Z @ 294 NONAME ; class std::vector<int,class std::allocator<int> > * __cdecl std::_Allocate(int,class std::vector<int,class std::allocator<int> > *)
 ?_Allocate@std@@YAPAPAVOBGenericData@OpenBabel@@HPAPAV23@@Z @ 295 NONAME ; class OpenBabel::OBGenericData * * __cdecl std::_Allocate(int,class OpenBabel::OBGenericData * *)
 ?_Construct@std@@YAXPAPAVOBEdgeBase@OpenBabel@@ABQAV23@@Z @ 296 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * const &)
 ??2@YAPAXIPAX@Z @ 297 NONAME ; void * __cdecl operator new(unsigned int,void *)
 ?_Destroy@std@@YAXPAPAVOBEdgeBase@OpenBabel@@@Z @ 298 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBEdgeBase * *)
 ?_Destroy@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z @ 299 NONAME ; void __cdecl std::_Destroy(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
 ?_Destroy@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@@Z @ 300 NONAME ; void __cdecl std::_Destroy(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > *)
 ?_Allocate@std@@YAPAHHPAH@Z @ 301 NONAME ; int * __cdecl std::_Allocate(int,int *)
 ?_Destroy@std@@YAXPAH@Z @ 302 NONAME ; void __cdecl std::_Destroy(int *)
 ?_Construct@std@@YAXPAPAVOBRing@OpenBabel@@ABQAV23@@Z @ 303 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBRing * *,class OpenBabel::OBRing * const &)
 ?_Destroy@std@@YAXPAPAVOBRing@OpenBabel@@@Z @ 304 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBRing * *)
 ?_Destroy@std@@YAXPA_N@Z @ 305 NONAME ; void __cdecl std::_Destroy(bool *)
 ?_Construct@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@ABV21@@Z @ 306 NONAME ; void __cdecl std::_Construct(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > const &)
 ??3@YAXPAX0@Z @ 307 NONAME ; void __cdecl operator delete(void *,void *)
 ?_Destroy@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@@Z @ 308 NONAME ; void __cdecl std::_Destroy(class std::vector<int,class std::allocator<int> > *)
 ?fill@std@@YAXPAPAVOBAtom@OpenBabel@@0ABQAV23@@Z @ 309 NONAME ; void __cdecl std::fill(class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * const &)
 ?copy_backward@std@@YAPAPAVOBAtom@OpenBabel@@PAPAV23@00@Z @ 310 NONAME ; class OpenBabel::OBAtom * * __cdecl std::copy_backward(class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * *)
 ?_Destroy@std@@YAXPAPAVOBAtom@OpenBabel@@@Z @ 311 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBAtom * *)
 ?fill@std@@YAXPAPAVOBGenericData@OpenBabel@@0ABQAV23@@Z @ 312 NONAME ; void __cdecl std::fill(class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * const &)
 ?copy_backward@std@@YAPAPAVOBGenericData@OpenBabel@@PAPAV23@00@Z @ 313 NONAME ; class OpenBabel::OBGenericData * * __cdecl std::copy_backward(class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * *)
 ?_Construct@std@@YAXPAPAVOBGenericData@OpenBabel@@ABQAV23@@Z @ 314 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBGenericData * *,class OpenBabel::OBGenericData * const &)
 ?_Destroy@std@@YAXPAPAVOBGenericData@OpenBabel@@@Z @ 315 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBGenericData * *)
 ?_Construct@std@@YAXPAHABH@Z @ 316 NONAME ; void __cdecl std::_Construct(int *,int const &)
 ?_Allocate@std@@YAPAPAVOBAtom@OpenBabel@@HPAPAV23@@Z @ 317 NONAME ; class OpenBabel::OBAtom * * __cdecl std::_Allocate(int,class OpenBabel::OBAtom * *)
 ?_Construct@std@@YAXPAPAVOBAtom@OpenBabel@@ABQAV23@@Z @ 318 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * const &)
 ??0?$vector@HV?$allocator@H@std@@@std@@QAE@ABV01@@Z @ 319 NONAME ; public: __thiscall std::vector<int,class std::allocator<int> >::vector<int,class std::allocator<int> >(class std::vector<int,class std::allocator<int> > const &)
 ??4?$vector@HV?$allocator@H@std@@@std@@QAEAAV01@ABV01@@Z @ 320 NONAME ; public: class std::vector<int,class std::allocator<int> > & __thiscall std::vector<int,class std::allocator<int> >::operator=(class std::vector<int,class std::allocator<int> > const &)
 ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ @ 321 NONAME ; public: unsigned int __thiscall std::vector<int,class std::allocator<int> >::capacity(void)const 
 ?begin@?$vector@HV?$allocator@H@std@@@std@@QBEPBHXZ @ 322 NONAME ; public: int const * __thiscall std::vector<int,class std::allocator<int> >::begin(void)const 
 ?end@?$vector@HV?$allocator@H@std@@@std@@QBEPBHXZ @ 323 NONAME ; public: int const * __thiscall std::vector<int,class std::allocator<int> >::end(void)const 
 ?copy@std@@YAPAHPBH0PAH@Z @ 324 NONAME ; int * __cdecl std::copy(int const *,int const *,int *)
 ?Match@OBGraphBase@OpenBabel@@QAE_NAAV12@_N@Z @ 325 NONAME ; public: bool __thiscall OpenBabel::OBGraphBase::Match(class OpenBabel::OBGraphBase &,bool)
 ?Match@OBGraphBase@OpenBabel@@QAE_NAAV12@PAU?$pair@PAVOBNodeBase@OpenBabel@@V?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@@std@@PAPAVOBEdgeBase@2@@Z @ 326 NONAME ; public: bool __thiscall OpenBabel::OBGraphBase::Match(class OpenBabel::OBGraphBase &,struct std::pair<class OpenBabel::OBNodeBase *,class std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> > > *,class OpenBabel::OBEdgeBase * *)
 ?GetBgn@OBEdgeBase@OpenBabel@@QAEPAVOBNodeBase@2@XZ @ 327 NONAME ; public: class OpenBabel::OBNodeBase * __thiscall OpenBabel::OBEdgeBase::GetBgn(void)
 ?GetEnd@OBEdgeBase@OpenBabel@@QAEPAVOBNodeBase@2@XZ @ 328 NONAME ; public: class OpenBabel::OBNodeBase * __thiscall OpenBabel::OBEdgeBase::GetEnd(void)
 ?Begin@OBGraphBase@OpenBabel@@QAEPAVOBNodeBase@2@AAPAPAV32@@Z @ 329 NONAME ; public: class OpenBabel::OBNodeBase * __thiscall OpenBabel::OBGraphBase::Begin(class OpenBabel::OBNodeBase * * &)
 ?Next@OBGraphBase@OpenBabel@@QAEPAVOBNodeBase@2@AAPAPAV32@@Z @ 330 NONAME ; public: class OpenBabel::OBNodeBase * __thiscall OpenBabel::OBGraphBase::Next(class OpenBabel::OBNodeBase * * &)
 ?Begin@OBGraphBase@OpenBabel@@QAEPAVOBEdgeBase@2@AAPAPAV32@@Z @ 331 NONAME ; public: class OpenBabel::OBEdgeBase * __thiscall OpenBabel::OBGraphBase::Begin(class OpenBabel::OBEdgeBase * * &)
 ?Next@OBGraphBase@OpenBabel@@QAEPAVOBEdgeBase@2@AAPAPAV32@@Z @ 332 NONAME ; public: class OpenBabel::OBEdgeBase * __thiscall OpenBabel::OBGraphBase::Next(class OpenBabel::OBEdgeBase * * &)
 ?BeginNbr@OBNodeBase@OpenBabel@@QAEPAV12@AAPAPAVOBEdgeBase@2@@Z @ 333 NONAME ; public: class OpenBabel::OBNodeBase * __thiscall OpenBabel::OBNodeBase::BeginNbr(class OpenBabel::OBEdgeBase * * &)
 ?NextNbr@OBNodeBase@OpenBabel@@QAEPAV12@AAPAPAVOBEdgeBase@2@@Z @ 334 NONAME ; public: class OpenBabel::OBNodeBase * __thiscall OpenBabel::OBNodeBase::NextNbr(class OpenBabel::OBEdgeBase * * &)
 ?SetParent@OBNodeBase@OpenBabel@@QAEXPAVOBGraphBase@2@@Z @ 335 NONAME ; public: void __thiscall OpenBabel::OBNodeBase::SetParent(class OpenBabel::OBGraphBase *)
 ?SetParent@OBEdgeBase@OpenBabel@@QAEXPAVOBGraphBase@2@@Z @ 336 NONAME ; public: void __thiscall OpenBabel::OBEdgeBase::SetParent(class OpenBabel::OBGraphBase *)
 ?IsConnected@OBNodeBase@OpenBabel@@UAE_NPAV12@@Z @ 337 NONAME ; public: virtual bool __thiscall OpenBabel::OBNodeBase::IsConnected(class OpenBabel::OBNodeBase *)
 ?ResetVisitFlags@OBGraphBase@OpenBabel@@QAEXXZ @ 338 NONAME ; public: void __thiscall OpenBabel::OBGraphBase::ResetVisitFlags(void)
 ?SetVisitLock@OBGraphBase@OpenBabel@@QAE_N_N@Z @ 339 NONAME ; public: bool __thiscall OpenBabel::OBGraphBase::SetVisitLock(bool)
 ??0?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBNodeBase@OpenBabel@@@1@@Z @ 340 NONAME ; public: __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >(class std::allocator<class OpenBabel::OBNodeBase *> const &)
 ??1?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAE@XZ @ 341 NONAME ; public: __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::~vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >(void)
 ?begin@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBNodeBase@OpenBabel@@XZ @ 342 NONAME ; public: class OpenBabel::OBNodeBase * * __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::begin(void)
 ?end@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBNodeBase@OpenBabel@@XZ @ 343 NONAME ; public: class OpenBabel::OBNodeBase * * __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::end(void)
 ?push_back@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEXABQAVOBNodeBase@OpenBabel@@@Z @ 344 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::push_back(class OpenBabel::OBNodeBase * const &)
 ?insert@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBNodeBase@OpenBabel@@PAPAV34@ABQAV34@@Z @ 345 NONAME ; public: class OpenBabel::OBNodeBase * * __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::insert(class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * const &)
 ?_Destroy@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@IAEXPAPAVOBNodeBase@OpenBabel@@0@Z @ 346 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::_Destroy(class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * *)
 ?deallocate@?$allocator@PAVOBNodeBase@OpenBabel@@@std@@QAEXPAXI@Z @ 347 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBNodeBase *>::deallocate(void *,unsigned int)
 ?insert@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEXPAPAVOBNodeBase@OpenBabel@@IABQAV34@@Z @ 348 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::insert(class OpenBabel::OBNodeBase * *,unsigned int,class OpenBabel::OBNodeBase * const &)
 ?size@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QBEIXZ @ 349 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::size(void)const 
 ?destroy@?$allocator@PAVOBNodeBase@OpenBabel@@@std@@QAEXPAPAVOBNodeBase@OpenBabel@@@Z @ 350 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBNodeBase *>::destroy(class OpenBabel::OBNodeBase * *)
 ?_Ucopy@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@IAEPAPAVOBNodeBase@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 351 NONAME ; protected: class OpenBabel::OBNodeBase * * __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::_Ucopy(class OpenBabel::OBNodeBase * const *,class OpenBabel::OBNodeBase * const *,class OpenBabel::OBNodeBase * *)
 ?_Ufill@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@IAEXPAPAVOBNodeBase@OpenBabel@@IABQAV34@@Z @ 352 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::_Ufill(class OpenBabel::OBNodeBase * *,unsigned int,class OpenBabel::OBNodeBase * const &)
 ?allocate@?$allocator@PAVOBNodeBase@OpenBabel@@@std@@QAEPAPAVOBNodeBase@OpenBabel@@IPBX@Z @ 353 NONAME ; public: class OpenBabel::OBNodeBase * * __thiscall std::allocator<class OpenBabel::OBNodeBase *>::allocate(unsigned int,void const *)
 ?construct@?$allocator@PAVOBNodeBase@OpenBabel@@@std@@QAEXPAPAVOBNodeBase@OpenBabel@@ABQAV34@@Z @ 354 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBNodeBase *>::construct(class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * const &)
 ?fill@std@@YAXPAPAVOBNodeBase@OpenBabel@@0ABQAV23@@Z @ 355 NONAME ; void __cdecl std::fill(class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * const &)
 ?copy_backward@std@@YAPAPAVOBNodeBase@OpenBabel@@PAPAV23@00@Z @ 356 NONAME ; class OpenBabel::OBNodeBase * * __cdecl std::copy_backward(class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * *)
 ?_Destroy@std@@YAXPAPAVOBNodeBase@OpenBabel@@@Z @ 357 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBNodeBase * *)
 ?_Allocate@std@@YAPAPAVOBNodeBase@OpenBabel@@HPAPAV23@@Z @ 358 NONAME ; class OpenBabel::OBNodeBase * * __cdecl std::_Allocate(int,class OpenBabel::OBNodeBase * *)
 ?_Construct@std@@YAXPAPAVOBNodeBase@OpenBabel@@ABQAV23@@Z @ 359 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * const &)
 ?ReadBGF@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@PBD@Z @ 360 NONAME ; bool __cdecl OpenBabel::ReadBGF(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,char const *)
 ?WriteBGF@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 361 NONAME ; bool __cdecl OpenBabel::WriteBGF(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?GetX@OBAtom@OpenBabel@@QAENXZ @ 362 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetX(void)
 ?x@OBAtom@OpenBabel@@QAENXZ @ 363 NONAME ; public: double __thiscall OpenBabel::OBAtom::x(void)
 ?GetY@OBAtom@OpenBabel@@QAENXZ @ 364 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetY(void)
 ?y@OBAtom@OpenBabel@@QAENXZ @ 365 NONAME ; public: double __thiscall OpenBabel::OBAtom::y(void)
 ?GetZ@OBAtom@OpenBabel@@QAENXZ @ 366 NONAME ; public: double __thiscall OpenBabel::OBAtom::GetZ(void)
 ?z@OBAtom@OpenBabel@@QAENXZ @ 367 NONAME ; public: double __thiscall OpenBabel::OBAtom::z(void)
 ?GetTitle@OBMol@OpenBabel@@QBEPBDXZ @ 368 NONAME ; public: char const * __thiscall OpenBabel::OBMol::GetTitle(void)const 
 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z @ 369 NONAME ; public: __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::allocator<class std::basic_string<char,struct std::char_tra
 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ @ 370 NONAME ; public: unsigned int __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::size(void)const 
 ?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NXZ @ 371 NONAME ; public: bool __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::empty(void)const 
 ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z @ 372 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::operator[](unsigned int)
 ?empty@?$vector@HV?$allocator@H@std@@@std@@QBE_NXZ @ 373 NONAME ; public: bool __thiscall std::vector<int,class std::allocator<int> >::empty(void)const 
 ??A?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEAAV?$vector@HV?$allocator@H@std@@@1@I@Z @ 374 NONAME ; public: class std::vector<int,class std::allocator<int> > & __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::operator[](unsigned int)
 ?push_back@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEXABV?$vector@HV?$allocator@H@std@@@2@@Z @ 375 NONAME ; public: void __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::push_back(class std::vector<int,class std::allocator<int> > const &)
 ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ @ 376 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::begin(void)
 ?insert@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEPAV?$vector@HV?$allocator@H@std@@@2@PAV32@ABV32@@Z @ 377 NONAME ; public: class std::vector<int,class std::allocator<int> > * __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::insert(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > const &)
 ?insert@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEXPAV?$vector@HV?$allocator@H@std@@@2@IABV32@@Z @ 378 NONAME ; public: void __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::insert(class std::vector<int,class std::allocator<int> > *,unsigned int,class std::vector<int,class std::allocator<int> > const &)
 ?_Ufill@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@IAEXPAV?$vector@HV?$allocator@H@std@@@2@IABV32@@Z @ 379 NONAME ; protected: void __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::_Ufill(class std::vector<int,class std::allocator<int> > *,unsigned int,class std::vector<int,class std::allocator<int> > const &)
 ?fill@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@0ABV21@@Z @ 380 NONAME ; void __cdecl std::fill(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > const &)
 ?copy_backward@std@@YAPAV?$vector@HV?$allocator@H@std@@@1@PAV21@00@Z @ 381 NONAME ; class std::vector<int,class std::allocator<int> > * __cdecl std::copy_backward(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *)
 ?Swab@OpenBabel@@YAHH@Z @ 382 NONAME ; int __cdecl OpenBabel::Swab(int)
 ??1OBRotamerList@OpenBabel@@UAE@XZ @ 383 NONAME ; public: virtual __thiscall OpenBabel::OBRotamerList::~OBRotamerList(void)
 ??1OBGenericData@OpenBabel@@UAE@XZ @ 384 NONAME ; public: virtual __thiscall OpenBabel::OBGenericData::~OBGenericData(void)
 ?GetAttribute@OBGenericData@OpenBabel@@UBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ @ 385 NONAME ; public: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall OpenBabel::OBGenericData::GetAttribute(void)const 
 ?GetReferenceArray@OBRotamerList@OpenBabel@@QAEXPAE@Z @ 386 NONAME ; public: void __thiscall OpenBabel::OBRotamerList::GetReferenceArray(unsigned char *)
 ?Setup@OBRotamerList@OpenBabel@@QAEXAAVOBMol@2@AAVOBRotorList@2@@Z @ 387 NONAME ; public: void __thiscall OpenBabel::OBRotamerList::Setup(class OpenBabel::OBMol &,class OpenBabel::OBRotorList &)
 ?GetDihedralAtoms@OBRotor@OpenBabel@@QAEXQAH@Z @ 388 NONAME ; public: void __thiscall OpenBabel::OBRotor::GetDihedralAtoms(int * const)
 ?GetResolution@OBRotor@OpenBabel@@QAEAAV?$vector@NV?$allocator@N@std@@@std@@XZ @ 389 NONAME ; public: class std::vector<double,class std::allocator<double> > & __thiscall OpenBabel::OBRotor::GetResolution(void)
 ?BeginRotor@OBRotorList@OpenBabel@@QAEPAVOBRotor@2@AAPAPAV32@@Z @ 390 NONAME ; public: class OpenBabel::OBRotor * __thiscall OpenBabel::OBRotorList::BeginRotor(class OpenBabel::OBRotor * * &)
 ?NextRotor@OBRotorList@OpenBabel@@QAEPAVOBRotor@2@AAPAPAV32@@Z @ 391 NONAME ; public: class OpenBabel::OBRotor * __thiscall OpenBabel::OBRotorList::NextRotor(class OpenBabel::OBRotor * * &)
 ??1?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAE@XZ @ 392 NONAME ; public: __thiscall std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >::~pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >(void)
 ?Setup@OBRotamerList@OpenBabel@@QAEXAAVOBMol@2@PAEH@Z @ 393 NONAME ; public: void __thiscall OpenBabel::OBRotamerList::Setup(class OpenBabel::OBMol &,unsigned char *,int)
 ?AddRotamer@OBRotamerList@OpenBabel@@QAEXPAN@Z @ 394 NONAME ; public: void __thiscall OpenBabel::OBRotamerList::AddRotamer(double *)
 ?GetCIdx@OBAtom@OpenBabel@@QBEIXZ @ 395 NONAME ; public: unsigned int __thiscall OpenBabel::OBAtom::GetCIdx(void)const 
 ?rint@OpenBabel@@YANN@Z @ 396 NONAME ; double __cdecl OpenBabel::rint(double)
 ?AddRotamer@OBRotamerList@OpenBabel@@QAEXPAH@Z @ 397 NONAME ; public: void __thiscall OpenBabel::OBRotamerList::AddRotamer(int *)
 ?AddRotamer@OBRotamerList@OpenBabel@@QAEXPAE@Z @ 398 NONAME ; public: void __thiscall OpenBabel::OBRotamerList::AddRotamer(unsigned char *)
 ?AddRotamers@OBRotamerList@OpenBabel@@QAEXPAEH@Z @ 399 NONAME ; public: void __thiscall OpenBabel::OBRotamerList::AddRotamers(unsigned char *,int)
 ?ExpandConformerList@OBRotamerList@OpenBabel@@QAEXAAVOBMol@2@AAV?$vector@PANV?$allocator@PAN@std@@@std@@@Z @ 400 NONAME ; public: void __thiscall OpenBabel::OBRotamerList::ExpandConformerList(class OpenBabel::OBMol &,class std::vector<double *,class std::allocator<double *> > &)
 ?CreateConformerList@OBRotamerList@OpenBabel@@QAE?AV?$vector@PANV?$allocator@PAN@std@@@std@@AAVOBMol@2@@Z @ 401 NONAME ; public: class std::vector<double *,class std::allocator<double *> > __thiscall OpenBabel::OBRotamerList::CreateConformerList(class OpenBabel::OBMol &)
 ?SetBaseCoordinateSets@OBRotamerList@OpenBabel@@QAEXV?$vector@PANV?$allocator@PAN@std@@@std@@I@Z @ 402 NONAME ; public: void __thiscall OpenBabel::OBRotamerList::SetBaseCoordinateSets(class std::vector<double *,class std::allocator<double *> >,unsigned int)
 ?PackCoordinate@OpenBabel@@YAHQAN0@Z @ 403 NONAME ; int __cdecl OpenBabel::PackCoordinate(double * const,double * const)
 ?UnpackCoordinate@OpenBabel@@YAXQAN0H@Z @ 404 NONAME ; void __cdecl OpenBabel::UnpackCoordinate(double * const,double * const,int)
 ?WriteBinary@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 405 NONAME ; bool __cdecl OpenBabel::WriteBinary(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?SetOutputType@OBMol@OpenBabel@@QAEXW4io_type@2@@Z @ 406 NONAME ; public: void __thiscall OpenBabel::OBMol::SetOutputType(enum OpenBabel::io_type)
 ?WriteBinary@OpenBabel@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAHAAVOBMol@1@@Z @ 407 NONAME ; bool __cdecl OpenBabel::WriteBinary(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,int &,class OpenBabel::OBMol &)
 ?GetIdx@OBEdgeBase@OpenBabel@@QAEIXZ @ 408 NONAME ; public: unsigned int __thiscall OpenBabel::OBEdgeBase::GetIdx(void)
 ?Get@vector3@OpenBabel@@QAEXPAN@Z @ 409 NONAME ; public: void __thiscall OpenBabel::vector3::Get(double *)
 ?GetBeginAtomIdx@OBBond@OpenBabel@@QBEIXZ @ 410 NONAME ; public: unsigned int __thiscall OpenBabel::OBBond::GetBeginAtomIdx(void)const 
 ?GetEndAtomIdx@OBBond@OpenBabel@@QBEIXZ @ 411 NONAME ; public: unsigned int __thiscall OpenBabel::OBBond::GetEndAtomIdx(void)const 
 ?NumBonds@OBMol@OpenBabel@@QBEIXZ @ 412 NONAME ; public: unsigned int __thiscall OpenBabel::OBMol::NumBonds(void)const 
 ?NumConformers@OBMol@OpenBabel@@QAEHXZ @ 413 NONAME ; public: int __thiscall OpenBabel::OBMol::NumConformers(void)
 ?GetConformers@OBMol@OpenBabel@@QAEAAV?$vector@PANV?$allocator@PAN@std@@@std@@XZ @ 414 NONAME ; public: class std::vector<double *,class std::allocator<double *> > & __thiscall OpenBabel::OBMol::GetConformers(void)
 ?NumRotors@OBRotamerList@OpenBabel@@QBEIXZ @ 415 NONAME ; public: unsigned int __thiscall OpenBabel::OBRotamerList::NumRotors(void)const 
 ?NumRotamers@OBRotamerList@OpenBabel@@QBEIXZ @ 416 NONAME ; public: unsigned int __thiscall OpenBabel::OBRotamerList::NumRotamers(void)const 
 ?BeginRotamer@OBRotamerList@OpenBabel@@QAEPAPAEXZ @ 417 NONAME ; public: unsigned char * * __thiscall OpenBabel::OBRotamerList::BeginRotamer(void)
 ?EndRotamer@OBRotamerList@OpenBabel@@QAEPAPAEXZ @ 418 NONAME ; public: unsigned char * * __thiscall OpenBabel::OBRotamerList::EndRotamer(void)
 ?NumBaseCoordinateSets@OBRotamerList@OpenBabel@@QBEIXZ @ 419 NONAME ; public: unsigned int __thiscall OpenBabel::OBRotamerList::NumBaseCoordinateSets(void)const 
 ?GetBaseCoordinateSet@OBRotamerList@OpenBabel@@QAEPANI@Z @ 420 NONAME ; public: double * __thiscall OpenBabel::OBRotamerList::GetBaseCoordinateSet(unsigned int)
 ?NumAtoms@OBRotamerList@OpenBabel@@QBEIXZ @ 421 NONAME ; public: unsigned int __thiscall OpenBabel::OBRotamerList::NumAtoms(void)const 
 ?ReadBinary@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 422 NONAME ; bool __cdecl OpenBabel::ReadBinary(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?ReadBinary@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAPAE@Z @ 423 NONAME ; bool __cdecl OpenBabel::ReadBinary(class std::basic_istream<char,struct std::char_traits<char> > &,unsigned char * *)
 ?ReadBinary@OpenBabel@@YA_NPAEAAVOBMol@1@H@Z @ 424 NONAME ; bool __cdecl OpenBabel::ReadBinary(unsigned char *,class OpenBabel::OBMol &,int)
 ?Set@vector3@OpenBabel@@QAEXPBN@Z @ 425 NONAME ; public: void __thiscall OpenBabel::vector3::Set(double const *)
 ?SetAromatic@OBBond@OpenBabel@@QAEXXZ @ 426 NONAME ; public: void __thiscall OpenBabel::OBBond::SetAromatic(void)
 ?SetFlag@OBBond@OpenBabel@@IAEXH@Z @ 427 NONAME ; protected: void __thiscall OpenBabel::OBBond::SetFlag(int)
 ?SetData@OBMol@OpenBabel@@QAEXPAVOBGenericData@2@@Z @ 428 NONAME ; public: void __thiscall OpenBabel::OBMol::SetData(class OpenBabel::OBGenericData *)
 ?SetTitle@OBMol@OpenBabel@@QAEXPBD@Z @ 429 NONAME ; public: void __thiscall OpenBabel::OBMol::SetTitle(char const *)
 ?SetAromaticPerceived@OBMol@OpenBabel@@QAEXXZ @ 430 NONAME ; public: void __thiscall OpenBabel::OBMol::SetAromaticPerceived(void)
 ??0OBRotamerList@OpenBabel@@QAE@XZ @ 431 NONAME ; public: __thiscall OpenBabel::OBRotamerList::OBRotamerList(void)
 ?SetRotorToAngle@OpenBabel@@YAXPANPAPAVOBAtom@1@NV?$vector@HV?$allocator@H@std@@@std@@@Z @ 432 NONAME ; void __cdecl OpenBabel::SetRotorToAngle(double *,class OpenBabel::OBAtom * *,double,class std::vector<int,class std::allocator<int> >)
 ??0OBBinaryDBase@OpenBabel@@QAE@PBD@Z @ 433 NONAME ; public: __thiscall OpenBabel::OBBinaryDBase::OBBinaryDBase(char const *)
 ??0OBBinaryDBase@OpenBabel@@QAE@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 434 NONAME ; public: __thiscall OpenBabel::OBBinaryDBase::OBBinaryDBase(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?Size@OBBinaryDBase@OpenBabel@@QAEHXZ @ 435 NONAME ; public: int __thiscall OpenBabel::OBBinaryDBase::Size(void)
 ??1OBBinaryDBase@OpenBabel@@QAE@XZ @ 436 NONAME ; public: __thiscall OpenBabel::OBBinaryDBase::~OBBinaryDBase(void)
 ??0?$fpos@H@std@@QAE@J@Z @ 437 NONAME ; public: __thiscall std::fpos<int>::fpos<int>(long)
 ??0?$vector@PANV?$allocator@PAN@std@@@std@@QAE@ABV?$allocator@PAN@1@@Z @ 438 NONAME ; public: __thiscall std::vector<double *,class std::allocator<double *> >::vector<double *,class std::allocator<double *> >(class std::allocator<double *> const &)
 ??0?$vector@PANV?$allocator@PAN@std@@@std@@QAE@ABV01@@Z @ 439 NONAME ; public: __thiscall std::vector<double *,class std::allocator<double *> >::vector<double *,class std::allocator<double *> >(class std::vector<double *,class std::allocator<double *> > const &)
 ??1?$vector@PANV?$allocator@PAN@std@@@std@@QAE@XZ @ 440 NONAME ; public: __thiscall std::vector<double *,class std::allocator<double *> >::~vector<double *,class std::allocator<double *> >(void)
 ??4?$vector@PANV?$allocator@PAN@std@@@std@@QAEAAV01@ABV01@@Z @ 441 NONAME ; public: class std::vector<double *,class std::allocator<double *> > & __thiscall std::vector<double *,class std::allocator<double *> >::operator=(class std::vector<double *,class std::allocator<double *> > const &)
 ?begin@?$vector@PANV?$allocator@PAN@std@@@std@@QAEPAPANXZ @ 442 NONAME ; public: double * * __thiscall std::vector<double *,class std::allocator<double *> >::begin(void)
 ?end@?$vector@PANV?$allocator@PAN@std@@@std@@QAEPAPANXZ @ 443 NONAME ; public: double * * __thiscall std::vector<double *,class std::allocator<double *> >::end(void)
 ?size@?$vector@PANV?$allocator@PAN@std@@@std@@QBEIXZ @ 444 NONAME ; public: unsigned int __thiscall std::vector<double *,class std::allocator<double *> >::size(void)const 
 ?empty@?$vector@PANV?$allocator@PAN@std@@@std@@QBE_NXZ @ 445 NONAME ; public: bool __thiscall std::vector<double *,class std::allocator<double *> >::empty(void)const 
 ??A?$vector@PANV?$allocator@PAN@std@@@std@@QAEAAPANI@Z @ 446 NONAME ; public: double * & __thiscall std::vector<double *,class std::allocator<double *> >::operator[](unsigned int)
 ?push_back@?$vector@PANV?$allocator@PAN@std@@@std@@QAEXABQAN@Z @ 447 NONAME ; public: void __thiscall std::vector<double *,class std::allocator<double *> >::push_back(double * const &)
 ?clear@?$vector@PANV?$allocator@PAN@std@@@std@@QAEXXZ @ 448 NONAME ; public: void __thiscall std::vector<double *,class std::allocator<double *> >::clear(void)
 ?begin@?$vector@NV?$allocator@N@std@@@std@@QAEPANXZ @ 449 NONAME ; public: double * __thiscall std::vector<double,class std::allocator<double> >::begin(void)
 ?end@?$vector@NV?$allocator@N@std@@@std@@QAEPANXZ @ 450 NONAME ; public: double * __thiscall std::vector<double,class std::allocator<double> >::end(void)
 ??A?$vector@NV?$allocator@N@std@@@std@@QAEAANI@Z @ 451 NONAME ; public: double & __thiscall std::vector<double,class std::allocator<double> >::operator[](unsigned int)
 ??0?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAE@ABV?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@1@@Z @ 452 NONAME ; public: __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >(class std::allocator<class std::vector<double,class std::allocator<double> > > const &)
 ??1?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAE@XZ @ 453 NONAME ; public: __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::~vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >(void)
 ?begin@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAEPAV?$vector@NV?$allocator@N@std@@@2@XZ @ 454 NONAME ; public: class std::vector<double,class std::allocator<double> > * __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::begin(void)
 ?end@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAEPAV?$vector@NV?$allocator@N@std@@@2@XZ @ 455 NONAME ; public: class std::vector<double,class std::allocator<double> > * __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::end(void)
 ??A?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAEAAV?$vector@NV?$allocator@N@std@@@1@I@Z @ 456 NONAME ; public: class std::vector<double,class std::allocator<double> > & __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::operator[](unsigned int)
 ?push_back@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAEXABV?$vector@NV?$allocator@N@std@@@2@@Z @ 457 NONAME ; public: void __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::push_back(class std::vector<double,class std::allocator<double> > const &)
 ?clear@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAEXXZ @ 458 NONAME ; public: void __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::clear(void)
 ?begin@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QAEPAPAVOBRotor@OpenBabel@@XZ @ 459 NONAME ; public: class OpenBabel::OBRotor * * __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::begin(void)
 ?end@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QAEPAPAVOBRotor@OpenBabel@@XZ @ 460 NONAME ; public: class OpenBabel::OBRotor * * __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::end(void)
 ??0?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@ABV?$allocator@PAE@1@@Z @ 461 NONAME ; public: __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::vector<unsigned char *,class std::allocator<unsigned char *> >(class std::allocator<unsigned char *> const &)
 ??1?$vector@PAEV?$allocator@PAE@std@@@std@@QAE@XZ @ 462 NONAME ; public: __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::~vector<unsigned char *,class std::allocator<unsigned char *> >(void)
 ?begin@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEPAPAEXZ @ 463 NONAME ; public: unsigned char * * __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::begin(void)
 ?end@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEPAPAEXZ @ 464 NONAME ; public: unsigned char * * __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::end(void)
 ?size@?$vector@PAEV?$allocator@PAE@std@@@std@@QBEIXZ @ 465 NONAME ; public: unsigned int __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::size(void)const 
 ?push_back@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXABQAE@Z @ 466 NONAME ; public: void __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::push_back(unsigned char * const &)
 ?clear@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXXZ @ 467 NONAME ; public: void __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::clear(void)
 ??0?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@1@@Z @ 468 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >(class std::allocator<struct std::p
 ??1?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAE@XZ @ 469 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::~vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >(void)
 ?begin@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@XZ @ 470 NONAME ; public: struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::begin(void)
 ?end@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@XZ @ 471 NONAME ; public: struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::end(void)
 ?size@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QBEIXZ @ 472 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::size(void)const 
 ??A?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAEAAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@1@I@Z @ 473 NONAME ; public: struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > & __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::operator[](unsigned int)
 ?push_back@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAEXABU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@@Z @ 474 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::push_back(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > const &)
 ?clear@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAEXXZ @ 475 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::clear(void)
 ??0?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@QAE@ABV?$allocator@V?$fpos@H@std@@@1@@Z @ 476 NONAME ; public: __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >(class std::allocator<class std::fpos<int> > const &)
 ??1?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@QAE@XZ @ 477 NONAME ; public: __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::~vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >(void)
 ?size@?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@QBEIXZ @ 478 NONAME ; public: unsigned int __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::size(void)const 
 ?push_back@?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@QAEXABV?$fpos@H@2@@Z @ 479 NONAME ; public: void __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::push_back(class std::fpos<int> const &)
 ??0?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAE@ABQAPAVOBAtom@OpenBabel@@ABV?$vector@HV?$allocator@H@std@@@1@@Z @ 480 NONAME ; public: __thiscall std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >(class OpenBabel::OBAtom * * const &,class std::vector<int,class std::allocator<int> > const &)
 ?capacity@?$vector@PANV?$allocator@PAN@std@@@std@@QBEIXZ @ 481 NONAME ; public: unsigned int __thiscall std::vector<double *,class std::allocator<double *> >::capacity(void)const 
 ?begin@?$vector@PANV?$allocator@PAN@std@@@std@@QBEPBQANXZ @ 482 NONAME ; public: double * const * __thiscall std::vector<double *,class std::allocator<double *> >::begin(void)const 
 ?end@?$vector@PANV?$allocator@PAN@std@@@std@@QBEPBQANXZ @ 483 NONAME ; public: double * const * __thiscall std::vector<double *,class std::allocator<double *> >::end(void)const 
 ?insert@?$vector@PANV?$allocator@PAN@std@@@std@@QAEPAPANPAPANABQAN@Z @ 484 NONAME ; public: double * * __thiscall std::vector<double *,class std::allocator<double *> >::insert(double * *,double * const &)
 ?erase@?$vector@PANV?$allocator@PAN@std@@@std@@QAEPAPANPAPAN0@Z @ 485 NONAME ; public: double * * __thiscall std::vector<double *,class std::allocator<double *> >::erase(double * *,double * *)
 ?_Destroy@?$vector@PANV?$allocator@PAN@std@@@std@@IAEXPAPAN0@Z @ 486 NONAME ; protected: void __thiscall std::vector<double *,class std::allocator<double *> >::_Destroy(double * *,double * *)
 ?_Ucopy@?$vector@PANV?$allocator@PAN@std@@@std@@IAEPAPANPBQAN0PAPAN@Z @ 487 NONAME ; protected: double * * __thiscall std::vector<double *,class std::allocator<double *> >::_Ucopy(double * const *,double * const *,double * *)
 ?allocate@?$allocator@PAN@std@@QAEPAPANIPBX@Z @ 488 NONAME ; public: double * * __thiscall std::allocator<double *>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@PAN@std@@QAEXPAXI@Z @ 489 NONAME ; public: void __thiscall std::allocator<double *>::deallocate(void *,unsigned int)
 ?insert@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAEPAV?$vector@NV?$allocator@N@std@@@2@PAV32@ABV32@@Z @ 490 NONAME ; public: class std::vector<double,class std::allocator<double> > * __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::insert(class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > const &)
 ?erase@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAEPAV?$vector@NV?$allocator@N@std@@@2@PAV32@0@Z @ 491 NONAME ; public: class std::vector<double,class std::allocator<double> > * __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::erase(class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > *)
 ?_Destroy@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@IAEXPAV?$vector@NV?$allocator@N@std@@@2@0@Z @ 492 NONAME ; protected: void __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::_Destroy(class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > *)
 ?deallocate@?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@std@@QAEXPAXI@Z @ 493 NONAME ; public: void __thiscall std::allocator<class std::vector<double,class std::allocator<double> > >::deallocate(void *,unsigned int)
 ?insert@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEPAPAEPAPAEABQAE@Z @ 494 NONAME ; public: unsigned char * * __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::insert(unsigned char * *,unsigned char * const &)
 ?erase@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEPAPAEPAPAE0@Z @ 495 NONAME ; public: unsigned char * * __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::erase(unsigned char * *,unsigned char * *)
 ?_Destroy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAE0@Z @ 496 NONAME ; protected: void __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::_Destroy(unsigned char * *,unsigned char * *)
 ?deallocate@?$allocator@PAE@std@@QAEXPAXI@Z @ 497 NONAME ; public: void __thiscall std::allocator<unsigned char *>::deallocate(void *,unsigned int)
 ?insert@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@PAU32@ABU32@@Z @ 498 NONAME ; public: struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::insert(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std:
 ?erase@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@PAU32@0@Z @ 499 NONAME ; public: struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::erase(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::
 ?_Destroy@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@IAEXPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@0@Z @ 500 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::_Destroy(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *)
 ?deallocate@?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAEXPAXI@Z @ 501 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > >::deallocate(void *,unsigned int)
 ?end@?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@QAEPAV?$fpos@H@2@XZ @ 502 NONAME ; public: class std::fpos<int> * __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::end(void)
 ?insert@?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@QAEPAV?$fpos@H@2@PAV32@ABV32@@Z @ 503 NONAME ; public: class std::fpos<int> * __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::insert(class std::fpos<int> *,class std::fpos<int> const &)
 ?_Destroy@?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@IAEXPAV?$fpos@H@2@0@Z @ 504 NONAME ; protected: void __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::_Destroy(class std::fpos<int> *,class std::fpos<int> *)
 ?deallocate@?$allocator@V?$fpos@H@std@@@std@@QAEXPAXI@Z @ 505 NONAME ; public: void __thiscall std::allocator<class std::fpos<int> >::deallocate(void *,unsigned int)
 ?insert@?$vector@PANV?$allocator@PAN@std@@@std@@QAEXPAPANIABQAN@Z @ 506 NONAME ; public: void __thiscall std::vector<double *,class std::allocator<double *> >::insert(double * *,unsigned int,double * const &)
 ?construct@?$allocator@PAN@std@@QAEXPAPANABQAN@Z @ 507 NONAME ; public: void __thiscall std::allocator<double *>::construct(double * *,double * const &)
 ?destroy@?$allocator@PAN@std@@QAEXPAPAN@Z @ 508 NONAME ; public: void __thiscall std::allocator<double *>::destroy(double * *)
 ?insert@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAEXPAV?$vector@NV?$allocator@N@std@@@2@IABV32@@Z @ 509 NONAME ; public: void __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::insert(class std::vector<double,class std::allocator<double> > *,unsigned int,class std::vector<double,class std::allocator<double> > const &)
 ?destroy@?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@std@@QAEXPAV?$vector@NV?$allocator@N@std@@@2@@Z @ 510 NONAME ; public: void __thiscall std::allocator<class std::vector<double,class std::allocator<double> > >::destroy(class std::vector<double,class std::allocator<double> > *)
 ?insert@?$vector@PAEV?$allocator@PAE@std@@@std@@QAEXPAPAEIABQAE@Z @ 511 NONAME ; public: void __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::insert(unsigned char * *,unsigned int,unsigned char * const &)
 ?destroy@?$allocator@PAE@std@@QAEXPAPAE@Z @ 512 NONAME ; public: void __thiscall std::allocator<unsigned char *>::destroy(unsigned char * *)
 ?insert@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@QAEXPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@IABU32@@Z @ 513 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::insert(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,unsigned int,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > const &)
 ?destroy@?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAEXPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@@Z @ 514 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > >::destroy(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *)
 ?begin@?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@QAEPAV?$fpos@H@2@XZ @ 515 NONAME ; public: class std::fpos<int> * __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::begin(void)
 ?insert@?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@QAEXPAV?$fpos@H@2@IABV32@@Z @ 516 NONAME ; public: void __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::insert(class std::fpos<int> *,unsigned int,class std::fpos<int> const &)
 ?destroy@?$allocator@V?$fpos@H@std@@@std@@QAEXPAV?$fpos@H@2@@Z @ 517 NONAME ; public: void __thiscall std::allocator<class std::fpos<int> >::destroy(class std::fpos<int> *)
 ?_Ufill@?$vector@PANV?$allocator@PAN@std@@@std@@IAEXPAPANIABQAN@Z @ 518 NONAME ; protected: void __thiscall std::vector<double *,class std::allocator<double *> >::_Ufill(double * *,unsigned int,double * const &)
 ?size@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QBEIXZ @ 519 NONAME ; public: unsigned int __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::size(void)const 
 ?_Ucopy@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@IAEPAV?$vector@NV?$allocator@N@std@@@2@PBV32@0PAV32@@Z @ 520 NONAME ; protected: class std::vector<double,class std::allocator<double> > * __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::_Ucopy(class std::vector<double,class std::allocator<double> > const *,class std::vector<double,class std::allocator<double> > const *,class std::vector<double,class std::allocator<double> > *)
 ?_Ufill@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@IAEXPAV?$vector@NV?$allocator@N@std@@@2@IABV32@@Z @ 521 NONAME ; protected: void __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::_Ufill(class std::vector<double,class std::allocator<double> > *,unsigned int,class std::vector<double,class std::allocator<double> > const &)
 ?allocate@?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@std@@QAEPAV?$vector@NV?$allocator@N@std@@@2@IPBX@Z @ 522 NONAME ; public: class std::vector<double,class std::allocator<double> > * __thiscall std::allocator<class std::vector<double,class std::allocator<double> > >::allocate(unsigned int,void const *)
 ?_Ucopy@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEPAPAEPBQAE0PAPAE@Z @ 523 NONAME ; protected: unsigned char * * __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::_Ucopy(unsigned char * const *,unsigned char * const *,unsigned char * *)
 ?_Ufill@?$vector@PAEV?$allocator@PAE@std@@@std@@IAEXPAPAEIABQAE@Z @ 524 NONAME ; protected: void __thiscall std::vector<unsigned char *,class std::allocator<unsigned char *> >::_Ufill(unsigned char * *,unsigned int,unsigned char * const &)
 ?allocate@?$allocator@PAE@std@@QAEPAPAEIPBX@Z @ 525 NONAME ; public: unsigned char * * __thiscall std::allocator<unsigned char *>::allocate(unsigned int,void const *)
 ?_Ucopy@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@IAEPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@PBU32@0PAU32@@Z @ 526 NONAME ; protected: struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::_Ucopy(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > const *,struct std::pair<class OpenBabel::OBAtom * *,c
 ?_Ufill@?$vector@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@V?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@2@@std@@IAEXPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@IABU32@@Z @ 527 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >,class std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > > >::_Ufill(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,unsigned int,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > const &)
 ?allocate@?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAEPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@IPBX@Z @ 528 NONAME ; public: struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > * __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > >::allocate(unsigned int,void const *)
 ?_Ucopy@?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@IAEPAV?$fpos@H@2@PBV32@0PAV32@@Z @ 529 NONAME ; protected: class std::fpos<int> * __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::_Ucopy(class std::fpos<int> const *,class std::fpos<int> const *,class std::fpos<int> *)
 ?_Ufill@?$vector@V?$fpos@H@std@@V?$allocator@V?$fpos@H@std@@@2@@std@@IAEXPAV?$fpos@H@2@IABV32@@Z @ 530 NONAME ; protected: void __thiscall std::vector<class std::fpos<int>,class std::allocator<class std::fpos<int> > >::_Ufill(class std::fpos<int> *,unsigned int,class std::fpos<int> const &)
 ?allocate@?$allocator@V?$fpos@H@std@@@std@@QAEPAV?$fpos@H@2@IPBX@Z @ 531 NONAME ; public: class std::fpos<int> * __thiscall std::allocator<class std::fpos<int> >::allocate(unsigned int,void const *)
 ?construct@?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@std@@QAEXPAV?$vector@NV?$allocator@N@std@@@2@ABV32@@Z @ 532 NONAME ; public: void __thiscall std::allocator<class std::vector<double,class std::allocator<double> > >::construct(class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > const &)
 ?construct@?$allocator@PAE@std@@QAEXPAPAEABQAE@Z @ 533 NONAME ; public: void __thiscall std::allocator<unsigned char *>::construct(unsigned char * *,unsigned char * const &)
 ?construct@?$allocator@U?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@@std@@QAEXPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@2@ABU32@@Z @ 534 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > >::construct(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > const &)
 ?construct@?$allocator@V?$fpos@H@std@@@std@@QAEXPAV?$fpos@H@2@ABV32@@Z @ 535 NONAME ; public: void __thiscall std::allocator<class std::fpos<int> >::construct(class std::fpos<int> *,class std::fpos<int> const &)
 ?copy@std@@YAPAPANPBQAN0PAPAN@Z @ 536 NONAME ; double * * __cdecl std::copy(double * const *,double * const *,double * *)
 ?copy@std@@YAPAPANPAPAN00@Z @ 537 NONAME ; double * * __cdecl std::copy(double * *,double * *,double * *)
 ?_Allocate@std@@YAPAPANHPAPAN@Z @ 538 NONAME ; double * * __cdecl std::_Allocate(int,double * *)
 ?copy@std@@YAPAV?$vector@NV?$allocator@N@std@@@1@PAV21@00@Z @ 539 NONAME ; class std::vector<double,class std::allocator<double> > * __cdecl std::copy(class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > *)
 ??4?$vector@NV?$allocator@N@std@@@std@@QAEAAV01@ABV01@@Z @ 540 NONAME ; public: class std::vector<double,class std::allocator<double> > & __thiscall std::vector<double,class std::allocator<double> >::operator=(class std::vector<double,class std::allocator<double> > const &)
 ?size@?$vector@NV?$allocator@N@std@@@std@@QBEIXZ @ 541 NONAME ; public: unsigned int __thiscall std::vector<double,class std::allocator<double> >::size(void)const 
 ?capacity@?$vector@NV?$allocator@N@std@@@std@@QBEIXZ @ 542 NONAME ; public: unsigned int __thiscall std::vector<double,class std::allocator<double> >::capacity(void)const 
 ?begin@?$vector@NV?$allocator@N@std@@@std@@QBEPBNXZ @ 543 NONAME ; public: double const * __thiscall std::vector<double,class std::allocator<double> >::begin(void)const 
 ?end@?$vector@NV?$allocator@N@std@@@std@@QBEPBNXZ @ 544 NONAME ; public: double const * __thiscall std::vector<double,class std::allocator<double> >::end(void)const 
 ?_Destroy@?$vector@NV?$allocator@N@std@@@std@@IAEXPAN0@Z @ 545 NONAME ; protected: void __thiscall std::vector<double,class std::allocator<double> >::_Destroy(double *,double *)
 ?_Ucopy@?$vector@NV?$allocator@N@std@@@std@@IAEPANPBN0PAN@Z @ 546 NONAME ; protected: double * __thiscall std::vector<double,class std::allocator<double> >::_Ucopy(double const *,double const *,double *)
 ?allocate@?$allocator@N@std@@QAEPANIPBX@Z @ 547 NONAME ; public: double * __thiscall std::allocator<double>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@N@std@@QAEXPAXI@Z @ 548 NONAME ; public: void __thiscall std::allocator<double>::deallocate(void *,unsigned int)
 ?construct@?$allocator@N@std@@QAEXPANABN@Z @ 549 NONAME ; public: void __thiscall std::allocator<double>::construct(double *,double const &)
 ?destroy@?$allocator@N@std@@QAEXPAN@Z @ 550 NONAME ; public: void __thiscall std::allocator<double>::destroy(double *)
 ?copy@std@@YAPANPBN0PAN@Z @ 551 NONAME ; double * __cdecl std::copy(double const *,double const *,double *)
 ?_Allocate@std@@YAPANHPAN@Z @ 552 NONAME ; double * __cdecl std::_Allocate(int,double *)
 ?copy@std@@YAPAPAEPAPAE00@Z @ 553 NONAME ; unsigned char * * __cdecl std::copy(unsigned char * *,unsigned char * *,unsigned char * *)
 ?copy@std@@YAPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@1@PAU21@00@Z @ 554 NONAME ; struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > * __cdecl std::copy(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *)
 ?fill@std@@YAXPAPAN0ABQAN@Z @ 555 NONAME ; void __cdecl std::fill(double * *,double * *,double * const &)
 ?copy_backward@std@@YAPAPANPAPAN00@Z @ 556 NONAME ; double * * __cdecl std::copy_backward(double * *,double * *,double * *)
 ?_Construct@std@@YAXPAPANABQAN@Z @ 557 NONAME ; void __cdecl std::_Construct(double * *,double * const &)
 ?_Destroy@std@@YAXPAPAN@Z @ 558 NONAME ; void __cdecl std::_Destroy(double * *)
 ?_Construct@std@@YAXPANABN@Z @ 559 NONAME ; void __cdecl std::_Construct(double *,double const &)
 ?_Destroy@std@@YAXPAN@Z @ 560 NONAME ; void __cdecl std::_Destroy(double *)
 ?fill@std@@YAXPAV?$vector@NV?$allocator@N@std@@@1@0ABV21@@Z @ 561 NONAME ; void __cdecl std::fill(class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > const &)
 ?copy_backward@std@@YAPAV?$vector@NV?$allocator@N@std@@@1@PAV21@00@Z @ 562 NONAME ; class std::vector<double,class std::allocator<double> > * __cdecl std::copy_backward(class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > *)
 ?_Destroy@std@@YAXPAV?$vector@NV?$allocator@N@std@@@1@@Z @ 563 NONAME ; void __cdecl std::_Destroy(class std::vector<double,class std::allocator<double> > *)
 ?fill@std@@YAXPAPAE0ABQAE@Z @ 564 NONAME ; void __cdecl std::fill(unsigned char * *,unsigned char * *,unsigned char * const &)
 ?copy_backward@std@@YAPAPAEPAPAE00@Z @ 565 NONAME ; unsigned char * * __cdecl std::copy_backward(unsigned char * *,unsigned char * *,unsigned char * *)
 ?_Destroy@std@@YAXPAPAE@Z @ 566 NONAME ; void __cdecl std::_Destroy(unsigned char * *)
 ?fill@std@@YAXPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@1@0ABU21@@Z @ 567 NONAME ; void __cdecl std::fill(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > const &)
 ?copy_backward@std@@YAPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@1@PAU21@00@Z @ 568 NONAME ; struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > * __cdecl std::copy_backward(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *)
 ?_Destroy@std@@YAXPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@1@@Z @ 569 NONAME ; void __cdecl std::_Destroy(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *)
 ?fill@std@@YAXPAV?$fpos@H@1@0ABV21@@Z @ 570 NONAME ; void __cdecl std::fill(class std::fpos<int> *,class std::fpos<int> *,class std::fpos<int> const &)
 ?copy_backward@std@@YAPAV?$fpos@H@1@PAV21@00@Z @ 571 NONAME ; class std::fpos<int> * __cdecl std::copy_backward(class std::fpos<int> *,class std::fpos<int> *,class std::fpos<int> *)
 ?_Destroy@std@@YAXPAV?$fpos@H@1@@Z @ 572 NONAME ; void __cdecl std::_Destroy(class std::fpos<int> *)
 ?_Allocate@std@@YAPAV?$vector@NV?$allocator@N@std@@@1@HPAV21@@Z @ 573 NONAME ; class std::vector<double,class std::allocator<double> > * __cdecl std::_Allocate(int,class std::vector<double,class std::allocator<double> > *)
 ?_Allocate@std@@YAPAPAEHPAPAE@Z @ 574 NONAME ; unsigned char * * __cdecl std::_Allocate(int,unsigned char * *)
 ?_Allocate@std@@YAPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@1@HPAU21@@Z @ 575 NONAME ; struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > * __cdecl std::_Allocate(int,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *)
 ?_Allocate@std@@YAPAV?$fpos@H@1@HPAV21@@Z @ 576 NONAME ; class std::fpos<int> * __cdecl std::_Allocate(int,class std::fpos<int> *)
 ?_Construct@std@@YAXPAV?$vector@NV?$allocator@N@std@@@1@ABV21@@Z @ 577 NONAME ; void __cdecl std::_Construct(class std::vector<double,class std::allocator<double> > *,class std::vector<double,class std::allocator<double> > const &)
 ?_Construct@std@@YAXPAPAEABQAE@Z @ 578 NONAME ; void __cdecl std::_Construct(unsigned char * *,unsigned char * const &)
 ?_Construct@std@@YAXPAU?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@1@ABU21@@Z @ 579 NONAME ; void __cdecl std::_Construct(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > *,struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > const &)
 ?_Construct@std@@YAXPAV?$fpos@H@1@ABV21@@Z @ 580 NONAME ; void __cdecl std::_Construct(class std::fpos<int> *,class std::fpos<int> const &)
 ??4?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAEAAU01@ABU01@@Z @ 581 NONAME ; public: struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > & __thiscall std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >::operator=(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > const &)
 ??1?$vector@NV?$allocator@N@std@@@std@@QAE@XZ @ 582 NONAME ; public: __thiscall std::vector<double,class std::allocator<double> >::~vector<double,class std::allocator<double> >(void)
 ??0?$pair@PAPAVOBAtom@OpenBabel@@V?$vector@HV?$allocator@H@std@@@std@@@std@@QAE@ABU01@@Z @ 583 NONAME ; public: __thiscall std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > >(struct std::pair<class OpenBabel::OBAtom * *,class std::vector<int,class std::allocator<int> > > const &)
 ??0?$vector@NV?$allocator@N@std@@@std@@QAE@ABV01@@Z @ 584 NONAME ; public: __thiscall std::vector<double,class std::allocator<double> >::vector<double,class std::allocator<double> >(class std::vector<double,class std::allocator<double> > const &)
 ??0OBBitVec@OpenBabel@@QAE@ABV01@@Z @ 585 NONAME ; public: __thiscall OpenBabel::OBBitVec::OBBitVec(class OpenBabel::OBBitVec const &)
 ?SetBitOn@OBBitVec@OpenBabel@@QAEXH@Z @ 586 NONAME ; public: void __thiscall OpenBabel::OBBitVec::SetBitOn(int)
 ?SetRangeOn@OBBitVec@OpenBabel@@QAEXHH@Z @ 587 NONAME ; public: void __thiscall OpenBabel::OBBitVec::SetRangeOn(int,int)
 ?SetBitOff@OBBitVec@OpenBabel@@QAEXH@Z @ 588 NONAME ; public: void __thiscall OpenBabel::OBBitVec::SetBitOff(int)
 ?SetRangeOff@OBBitVec@OpenBabel@@QAEXHH@Z @ 589 NONAME ; public: void __thiscall OpenBabel::OBBitVec::SetRangeOff(int,int)
 ?NextBit@OBBitVec@OpenBabel@@QAEHH@Z @ 590 NONAME ; public: int __thiscall OpenBabel::OBBitVec::NextBit(int)
 ?Resize@OBBitVec@OpenBabel@@QAE_NH@Z @ 591 NONAME ; public: bool __thiscall OpenBabel::OBBitVec::Resize(int)
 ??4OBBitVec@OpenBabel@@QAEAAV01@ABV01@@Z @ 592 NONAME ; public: class OpenBabel::OBBitVec & __thiscall OpenBabel::OBBitVec::operator=(class OpenBabel::OBBitVec const &)
 ??_4OBBitVec@OpenBabel@@QAEAAV01@AAV01@@Z @ 593 NONAME ; public: class OpenBabel::OBBitVec & __thiscall OpenBabel::OBBitVec::operator&=(class OpenBabel::OBBitVec &)
 ??_5OBBitVec@OpenBabel@@QAEAAV01@AAV01@@Z @ 594 NONAME ; public: class OpenBabel::OBBitVec & __thiscall OpenBabel::OBBitVec::operator|=(class OpenBabel::OBBitVec &)
 ??_6OBBitVec@OpenBabel@@QAEAAV01@AAV01@@Z @ 595 NONAME ; public: class OpenBabel::OBBitVec & __thiscall OpenBabel::OBBitVec::operator^=(class OpenBabel::OBBitVec &)
 ??ZOBBitVec@OpenBabel@@QAEAAV01@AAV01@@Z @ 596 NONAME ; public: class OpenBabel::OBBitVec & __thiscall OpenBabel::OBBitVec::operator-=(class OpenBabel::OBBitVec &)
 ??0OBBitVec@OpenBabel@@QAE@XZ @ 597 NONAME ; public: __thiscall OpenBabel::OBBitVec::OBBitVec(void)
 ??1OBBitVec@OpenBabel@@QAE@XZ @ 598 NONAME ; public: __thiscall OpenBabel::OBBitVec::~OBBitVec(void)
 ??YOBBitVec@OpenBabel@@QAEAAV01@AAV01@@Z @ 599 NONAME ; public: class OpenBabel::OBBitVec & __thiscall OpenBabel::OBBitVec::operator+=(class OpenBabel::OBBitVec &)
 ??UOpenBabel@@YA?AVOBBitVec@0@AAV10@0@Z @ 600 NONAME ; class OpenBabel::OBBitVec __cdecl OpenBabel::operator|(class OpenBabel::OBBitVec &,class OpenBabel::OBBitVec &)
 ??IOpenBabel@@YA?AVOBBitVec@0@AAV10@0@Z @ 601 NONAME ; class OpenBabel::OBBitVec __cdecl OpenBabel::operator&(class OpenBabel::OBBitVec &,class OpenBabel::OBBitVec &)
 ??TOpenBabel@@YA?AVOBBitVec@0@AAV10@0@Z @ 602 NONAME ; class OpenBabel::OBBitVec __cdecl OpenBabel::operator^(class OpenBabel::OBBitVec &,class OpenBabel::OBBitVec &)
 ??8OpenBabel@@YA_NABVOBBitVec@0@0@Z @ 603 NONAME ; bool __cdecl OpenBabel::operator==(class OpenBabel::OBBitVec const &,class OpenBabel::OBBitVec const &)
 ??GOpenBabel@@YA?AVOBBitVec@0@AAV10@0@Z @ 604 NONAME ; class OpenBabel::OBBitVec __cdecl OpenBabel::operator-(class OpenBabel::OBBitVec &,class OpenBabel::OBBitVec &)
 ??5OpenBabel@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAV12@AAVOBBitVec@0@@Z @ 605 NONAME ; class std::basic_istream<char,struct std::char_traits<char> > & __cdecl OpenBabel::operator>>(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBBitVec &)
 ??6OpenBabel@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVOBBitVec@0@@Z @ 606 NONAME ; class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl OpenBabel::operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBBitVec const &)
 ?Fold@OBBitVec@OpenBabel@@QAEXH@Z @ 607 NONAME ; public: void __thiscall OpenBabel::OBBitVec::Fold(int)
 ?FromVecInt@OBBitVec@OpenBabel@@QAEXAAV?$vector@HV?$allocator@H@std@@@std@@@Z @ 608 NONAME ; public: void __thiscall OpenBabel::OBBitVec::FromVecInt(class std::vector<int,class std::allocator<int> > &)
 ?FromString@OBBitVec@OpenBabel@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z @ 609 NONAME ; public: void __thiscall OpenBabel::OBBitVec::FromString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,int)
 ?ToVecInt@OBBitVec@OpenBabel@@QAEXAAV?$vector@HV?$allocator@H@std@@@std@@@Z @ 610 NONAME ; public: void __thiscall OpenBabel::OBBitVec::ToVecInt(class std::vector<int,class std::allocator<int> > &)
 ?Clear@OBBitVec@OpenBabel@@QAEXXZ @ 611 NONAME ; public: void __thiscall OpenBabel::OBBitVec::Clear(void)
 ?CountBits@OBBitVec@OpenBabel@@QAEHXZ @ 612 NONAME ; public: int __thiscall OpenBabel::OBBitVec::CountBits(void)
 ?IsEmpty@OBBitVec@OpenBabel@@QAE_NXZ @ 613 NONAME ; public: bool __thiscall OpenBabel::OBBitVec::IsEmpty(void)
 ?Tanimoto@OpenBabel@@YANAAVOBBitVec@1@0@Z @ 614 NONAME ; double __cdecl OpenBabel::Tanimoto(class OpenBabel::OBBitVec &,class OpenBabel::OBBitVec &)
 ?reserve@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z @ 615 NONAME ; public: void __thiscall std::vector<int,class std::allocator<int> >::reserve(unsigned int)
 ?resize@?$vector@HV?$allocator@H@std@@@std@@QAEXIABH@Z @ 616 NONAME ; public: void __thiscall std::vector<int,class std::allocator<int> >::resize(unsigned int,int const &)
 ??A?$vector@HV?$allocator@H@std@@@std@@QBEABHI@Z @ 617 NONAME ; public: int const & __thiscall std::vector<int,class std::allocator<int> >::operator[](unsigned int)const 
 ?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ @ 618 NONAME ; public: void __thiscall std::vector<int,class std::allocator<int> >::clear(void)
 ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z @ 619 NONAME ; public: void __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::push_back(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ?erase@?$vector@HV?$allocator@H@std@@@std@@QAEPAHPAH0@Z @ 620 NONAME ; public: int * __thiscall std::vector<int,class std::allocator<int> >::erase(int *,int *)
 ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ @ 621 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::end(void)
 ?insert@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@ABV32@@Z @ 622 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::insert(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > con
 ?insert@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@IABV32@@Z @ 623 NONAME ; public: void __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::insert(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ?_Ucopy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBV32@0PAV32@@Z @ 624 NONAME ; protected: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Ucopy(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<ch
 ?_Ufill@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@IABV32@@Z @ 625 NONAME ; protected: void __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::_Ufill(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@IPBX@Z @ 626 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __thiscall std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::allocate(unsigned int,void const *)
 ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z @ 627 NONAME ; public: void __thiscall std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::construct(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ?copy@std@@YAPAHPAH00@Z @ 628 NONAME ; int * __cdecl std::copy(int *,int *,int *)
 ?fill@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0ABV21@@Z @ 629 NONAME ; void __cdecl std::fill(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ?copy_backward@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z @ 630 NONAME ; class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl std::copy_backward(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
 ?_Allocate@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HPAV21@@Z @ 631 NONAME ; class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl std::_Allocate(int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
 ?_Construct@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABV21@@Z @ 632 NONAME ; void __cdecl std::_Construct(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ??0OBBond@OpenBabel@@QAE@XZ @ 633 NONAME ; public: __thiscall OpenBabel::OBBond::OBBond(void)
 ??0OBEdgeBase@OpenBabel@@QAE@XZ @ 634 NONAME ; public: __thiscall OpenBabel::OBEdgeBase::OBEdgeBase(void)
 ??1OBEdgeBase@OpenBabel@@UAE@XZ @ 635 NONAME ; public: virtual __thiscall OpenBabel::OBEdgeBase::~OBEdgeBase(void)
 ?GetParent@OBEdgeBase@OpenBabel@@UAEPAVOBGraphBase@2@XZ @ 636 NONAME ; public: virtual class OpenBabel::OBGraphBase * __thiscall OpenBabel::OBEdgeBase::GetParent(void)
 ?SetClosure@OBEdgeBase@OpenBabel@@UAEXXZ @ 637 NONAME ; public: virtual void __thiscall OpenBabel::OBEdgeBase::SetClosure(void)
 ?IsAromatic@OBEdgeBase@OpenBabel@@UBE_NXZ @ 638 NONAME ; public: virtual bool __thiscall OpenBabel::OBEdgeBase::IsAromatic(void)const 
 ?Error@OBEdgeBase@OpenBabel@@QAEXH@Z @ 639 NONAME ; public: void __thiscall OpenBabel::OBEdgeBase::Error(int)
 ?IsInRing@OBEdgeBase@OpenBabel@@UBE_NXZ @ 640 NONAME ; public: virtual bool __thiscall OpenBabel::OBEdgeBase::IsInRing(void)const 
 ?IsClosure@OBEdgeBase@OpenBabel@@UAE_NXZ @ 641 NONAME ; public: virtual bool __thiscall OpenBabel::OBEdgeBase::IsClosure(void)
 ?Eval@OBEdgeBase@OpenBabel@@UAE_NPAV12@@Z @ 642 NONAME ; public: virtual bool __thiscall OpenBabel::OBEdgeBase::Eval(class OpenBabel::OBEdgeBase *)
 ?GetBO@OBEdgeBase@OpenBabel@@UBEIXZ @ 643 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBEdgeBase::GetBO(void)const 
 ?SetClosure@OBBond@OpenBabel@@UAEXXZ @ 644 NONAME ; public: virtual void __thiscall OpenBabel::OBBond::SetClosure(void)
 ?GetBO@OBBond@OpenBabel@@UBEIXZ @ 645 NONAME ; public: virtual unsigned int __thiscall OpenBabel::OBBond::GetBO(void)const 
 ??1OBBond@OpenBabel@@UAE@XZ @ 646 NONAME ; public: virtual __thiscall OpenBabel::OBBond::~OBBond(void)
 ?Set@OBBond@OpenBabel@@QAEXHPAVOBAtom@2@0HH@Z @ 647 NONAME ; public: void __thiscall OpenBabel::OBBond::Set(int,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,int,int)
 ?SetIdx@OBBond@OpenBabel@@QAEXH@Z @ 648 NONAME ; public: void __thiscall OpenBabel::OBBond::SetIdx(int)
 ?SetBegin@OBBond@OpenBabel@@QAEXPAVOBAtom@2@@Z @ 649 NONAME ; public: void __thiscall OpenBabel::OBBond::SetBegin(class OpenBabel::OBAtom *)
 ?SetEnd@OBBond@OpenBabel@@QAEXPAVOBAtom@2@@Z @ 650 NONAME ; public: void __thiscall OpenBabel::OBBond::SetEnd(class OpenBabel::OBAtom *)
 ?SetBO@OBBond@OpenBabel@@QAEXH@Z @ 651 NONAME ; public: void __thiscall OpenBabel::OBBond::SetBO(int)
 ?UnsetAromatic@OBBond@OpenBabel@@QAEXXZ @ 652 NONAME ; public: void __thiscall OpenBabel::OBBond::UnsetAromatic(void)
 ?SetLength@OBBond@OpenBabel@@QAEXPAVOBAtom@2@N@Z @ 653 NONAME ; public: void __thiscall OpenBabel::OBBond::SetLength(class OpenBabel::OBAtom *,double)
 ?IsRotor@OBBond@OpenBabel@@QAE_NXZ @ 654 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsRotor(void)
 ?IsAmide@OBBond@OpenBabel@@QAE_NXZ @ 655 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsAmide(void)
 ?IsPrimaryAmide@OBBond@OpenBabel@@QAE_NXZ @ 656 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsPrimaryAmide(void)
 ?IsSecondaryAmide@OBBond@OpenBabel@@QAE_NXZ @ 657 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsSecondaryAmide(void)
 ?IsEster@OBBond@OpenBabel@@QAE_NXZ @ 658 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsEster(void)
 ?IsCarbonyl@OBBond@OpenBabel@@QAE_NXZ @ 659 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsCarbonyl(void)
 ?IsSingle@OBBond@OpenBabel@@QAE_NXZ @ 660 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsSingle(void)
 ?HasFlag@OBBond@OpenBabel@@IAE_NH@Z @ 661 NONAME ; protected: bool __thiscall OpenBabel::OBBond::HasFlag(int)
 ?GetBondOrder@OBBond@OpenBabel@@QBEIXZ @ 662 NONAME ; public: unsigned int __thiscall OpenBabel::OBBond::GetBondOrder(void)const 
 ?IsDouble@OBBond@OpenBabel@@QAE_NXZ @ 663 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsDouble(void)
 ?IsTriple@OBBond@OpenBabel@@QAE_NXZ @ 664 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsTriple(void)
 ?IsAromatic@OBBond@OpenBabel@@UBE_NXZ @ 665 NONAME ; public: virtual bool __thiscall OpenBabel::OBBond::IsAromatic(void)const 
 ?SetKSingle@OBBond@OpenBabel@@QAEXXZ @ 666 NONAME ; public: void __thiscall OpenBabel::OBBond::SetKSingle(void)
 ?SetKDouble@OBBond@OpenBabel@@QAEXXZ @ 667 NONAME ; public: void __thiscall OpenBabel::OBBond::SetKDouble(void)
 ?SetKTriple@OBBond@OpenBabel@@QAEXXZ @ 668 NONAME ; public: void __thiscall OpenBabel::OBBond::SetKTriple(void)
 ?IsKSingle@OBBond@OpenBabel@@QAE_NXZ @ 669 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsKSingle(void)
 ?HasKekulePerceived@OBMol@OpenBabel@@QAE_NXZ @ 670 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasKekulePerceived(void)
 ?IsKDouble@OBBond@OpenBabel@@QAE_NXZ @ 671 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsKDouble(void)
 ?IsKTriple@OBBond@OpenBabel@@QAE_NXZ @ 672 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsKTriple(void)
 ?IsInRing@OBBond@OpenBabel@@UBE_NXZ @ 673 NONAME ; public: virtual bool __thiscall OpenBabel::OBBond::IsInRing(void)const 
 ?IsClosure@OBBond@OpenBabel@@UAE_NXZ @ 674 NONAME ; public: virtual bool __thiscall OpenBabel::OBBond::IsClosure(void)
 ??_5OBBitVec@OpenBabel@@QAEAAV01@H@Z @ 675 NONAME ; public: class OpenBabel::OBBitVec & __thiscall OpenBabel::OBBitVec::operator|=(int)
 ??AOBBitVec@OpenBabel@@QAE_NH@Z @ 676 NONAME ; public: bool __thiscall OpenBabel::OBBitVec::operator[](int)
 ?SetClosureBondsPerceived@OBMol@OpenBabel@@QAEXXZ @ 677 NONAME ; public: void __thiscall OpenBabel::OBMol::SetClosureBondsPerceived(void)
 ?HasClosureBondsPerceived@OBMol@OpenBabel@@QAE_NXZ @ 678 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasClosureBondsPerceived(void)
 ?GetEquibLength@OBBond@OpenBabel@@QAENXZ @ 679 NONAME ; public: double __thiscall OpenBabel::OBBond::GetEquibLength(void)
 ?GetLength@OBBond@OpenBabel@@QAENXZ @ 680 NONAME ; public: double __thiscall OpenBabel::OBBond::GetLength(void)
 ?HasData@OBBond@OpenBabel@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 681 NONAME ; public: bool __thiscall OpenBabel::OBBond::HasData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?HasData@OBBond@OpenBabel@@QAE_NPBD@Z @ 682 NONAME ; public: bool __thiscall OpenBabel::OBBond::HasData(char const *)
 ?HasData@OBBond@OpenBabel@@QAE_NW4obDataType@2@@Z @ 683 NONAME ; public: bool __thiscall OpenBabel::OBBond::HasData(enum OpenBabel::obDataType)
 ?GetData@OBBond@OpenBabel@@QAEPAVOBGenericData@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 684 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBBond::GetData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?GetData@OBBond@OpenBabel@@QAEPAVOBGenericData@2@PBD@Z @ 685 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBBond::GetData(char const *)
 ?GetData@OBBond@OpenBabel@@QAEPAVOBGenericData@2@W4obDataType@2@@Z @ 686 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBBond::GetData(enum OpenBabel::obDataType)
 ?DeleteData@OBBond@OpenBabel@@QAEXW4obDataType@2@@Z @ 687 NONAME ; public: void __thiscall OpenBabel::OBBond::DeleteData(enum OpenBabel::obDataType)
 ?DeleteData@OBBond@OpenBabel@@QAEXAAV?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@@Z @ 688 NONAME ; public: void __thiscall OpenBabel::OBBond::DeleteData(class std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> > &)
 ?DeleteData@OBBond@OpenBabel@@QAEXPAVOBGenericData@2@@Z @ 689 NONAME ; public: void __thiscall OpenBabel::OBBond::DeleteData(class OpenBabel::OBGenericData *)
 ??4?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEAAV01@ABV01@@Z @ 690 NONAME ; public: class std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> > & __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::operator=(class std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> > const &)
 ?empty@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QBE_NXZ @ 691 NONAME ; public: bool __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::empty(void)const 
 ?clear@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEXXZ @ 692 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::clear(void)
 ?capacity@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QBEIXZ @ 693 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::capacity(void)const 
 ?begin@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QBEPBQAVOBNodeBase@OpenBabel@@XZ @ 694 NONAME ; public: class OpenBabel::OBNodeBase * const * __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::begin(void)const 
 ?end@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QBEPBQAVOBNodeBase@OpenBabel@@XZ @ 695 NONAME ; public: class OpenBabel::OBNodeBase * const * __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::end(void)const 
 ?erase@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBNodeBase@OpenBabel@@PAPAV34@0@Z @ 696 NONAME ; public: class OpenBabel::OBNodeBase * * __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::erase(class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * *)
 ?copy@std@@YAPAPAVOBNodeBase@OpenBabel@@PBQAV23@0PAPAV23@@Z @ 697 NONAME ; class OpenBabel::OBNodeBase * * __cdecl std::copy(class OpenBabel::OBNodeBase * const *,class OpenBabel::OBNodeBase * const *,class OpenBabel::OBNodeBase * *)
 ?copy@std@@YAPAPAVOBNodeBase@OpenBabel@@PAPAV23@00@Z @ 698 NONAME ; class OpenBabel::OBNodeBase * * __cdecl std::copy(class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * *,class OpenBabel::OBNodeBase * *)
 ?ReadBox@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@PBD@Z @ 699 NONAME ; bool __cdecl OpenBabel::ReadBox(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,char const *)
 ?WriteBox@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@N@Z @ 700 NONAME ; bool __cdecl OpenBabel::WriteBox(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,double)
 ?SetX@vector3@OpenBabel@@QAEXN@Z @ 701 NONAME ; public: void __thiscall OpenBabel::vector3::SetX(double)
 ?SetY@vector3@OpenBabel@@QAEXN@Z @ 702 NONAME ; public: void __thiscall OpenBabel::vector3::SetY(double)
 ?SetZ@vector3@OpenBabel@@QAEXN@Z @ 703 NONAME ; public: void __thiscall OpenBabel::vector3::SetZ(double)
 ?WriteChem3d2@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 704 NONAME ; bool __cdecl OpenBabel::WriteChem3d2(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?WriteChem3d1@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 705 NONAME ; bool __cdecl OpenBabel::WriteChem3d1(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?WriteMmads@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 706 NONAME ; bool __cdecl OpenBabel::WriteMmads(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?ReadMmads@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@PBD@Z @ 707 NONAME ; bool __cdecl OpenBabel::ReadMmads(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,char const *)
 ?ReadChem3d1@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@PBD@Z @ 708 NONAME ; bool __cdecl OpenBabel::ReadChem3d1(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,char const *)
 ?ReadChem3d2@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@PBD@Z @ 709 NONAME ; bool __cdecl OpenBabel::ReadChem3d2(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,char const *)
 ?ReserveAtoms@OBMol@OpenBabel@@QAEXH@Z @ 710 NONAME ; public: void __thiscall OpenBabel::OBMol::ReserveAtoms(int)
 ?SetTitle@OBMol@OpenBabel@@QAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 711 NONAME ; public: void __thiscall OpenBabel::OBMol::SetTitle(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?reserve@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEXI@Z @ 712 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::reserve(unsigned int)
 ?WriteCache@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 713 NONAME ; bool __cdecl OpenBabel::WriteCache(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?ReadBiosymCAR@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@PBD@Z @ 714 NONAME ; bool __cdecl OpenBabel::ReadBiosymCAR(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,char const *)
 ?ReadCCC@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@PBD@Z @ 715 NONAME ; bool __cdecl OpenBabel::ReadCCC(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,char const *)
 ?SetEnergy@OBMol@OpenBabel@@QAEXN@Z @ 716 NONAME ; public: void __thiscall OpenBabel::OBMol::SetEnergy(double)
 ?GenerateByteCodes@OpenBabel@@YAXPAPAT_ByteCode@1@HHHH@Z @ 717 NONAME ; void __cdecl OpenBabel::GenerateByteCodes(union OpenBabel::_ByteCode * *,int,int,int,int)
 ??0OBChainsParser@OpenBabel@@QAE@XZ @ 718 NONAME ; public: __thiscall OpenBabel::OBChainsParser::OBChainsParser(void)
 ??1OBChainsParser@OpenBabel@@QAE@XZ @ 719 NONAME ; public: __thiscall OpenBabel::OBChainsParser::~OBChainsParser(void)
 ?SetupMol@OBChainsParser@OpenBabel@@AAEXAAVOBMol@2@@Z @ 720 NONAME ; private: void __thiscall OpenBabel::OBChainsParser::SetupMol(class OpenBabel::OBMol &)
 ?CleanupMol@OBChainsParser@OpenBabel@@AAEXXZ @ 721 NONAME ; private: void __thiscall OpenBabel::OBChainsParser::CleanupMol(void)
 ?ClearResidueInformation@OBChainsParser@OpenBabel@@AAEXAAVOBMol@2@@Z @ 722 NONAME ; private: void __thiscall OpenBabel::OBChainsParser::ClearResidueInformation(class OpenBabel::OBMol &)
 ?BeginResidue@OBMol@OpenBabel@@QAEPAVOBResidue@2@AAPAPAV32@@Z @ 723 NONAME ; public: class OpenBabel::OBResidue * __thiscall OpenBabel::OBMol::BeginResidue(class OpenBabel::OBResidue * * &)
 ?NextResidue@OBMol@OpenBabel@@QAEPAVOBResidue@2@AAPAPAV32@@Z @ 724 NONAME ; public: class OpenBabel::OBResidue * __thiscall OpenBabel::OBMol::NextResidue(class OpenBabel::OBResidue * * &)
 ?SetResidueInformation@OBChainsParser@OpenBabel@@AAEXAAVOBMol@2@@Z @ 725 NONAME ; private: void __thiscall OpenBabel::OBChainsParser::SetResidueInformation(class OpenBabel::OBMol &)
 ?NumResidues@OBMol@OpenBabel@@QBEIXZ @ 726 NONAME ; public: unsigned int __thiscall OpenBabel::OBMol::NumResidues(void)const 
 ??1?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@std@@QAE@XZ @ 727 NONAME ; public: __thiscall std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::~map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >(void)
 ?PerceiveChains@OBChainsParser@OpenBabel@@QAE_NAAVOBMol@2@@Z @ 728 NONAME ; public: bool __thiscall OpenBabel::OBChainsParser::PerceiveChains(class OpenBabel::OBMol &)
 ?DetermineHetAtoms@OBChainsParser@OpenBabel@@AAE_NAAVOBMol@2@@Z @ 729 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::DetermineHetAtoms(class OpenBabel::OBMol &)
 ?DetermineConnectedChains@OBChainsParser@OpenBabel@@AAE_NAAVOBMol@2@@Z @ 730 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::DetermineConnectedChains(class OpenBabel::OBMol &)
 ?RecurseChain@OBChainsParser@OpenBabel@@AAEHAAVOBMol@2@HH@Z @ 731 NONAME ; private: int __thiscall OpenBabel::OBChainsParser::RecurseChain(class OpenBabel::OBMol &,int,int)
 ?DeterminePeptideBackbone@OBChainsParser@OpenBabel@@AAE_NAAVOBMol@2@@Z @ 732 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::DeterminePeptideBackbone(class OpenBabel::OBMol &)
 ?ConstrainBackbone@OBChainsParser@OpenBabel@@AAEXAAVOBMol@2@PAUTemplate@2@H@Z @ 733 NONAME ; private: void __thiscall OpenBabel::OBChainsParser::ConstrainBackbone(class OpenBabel::OBMol &,struct OpenBabel::Template *,int)
 ?MatchConstraint@OBChainsParser@OpenBabel@@AAE_NPAVOBAtom@2@H@Z @ 734 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::MatchConstraint(class OpenBabel::OBAtom *,int)
 ?Match2Constraints@OBChainsParser@OpenBabel@@AAE_NPAUTemplate@2@PAVOBAtom@2@1@Z @ 735 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::Match2Constraints(struct OpenBabel::Template *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?Match3Constraints@OBChainsParser@OpenBabel@@AAE_NPAUTemplate@2@PAVOBAtom@2@11@Z @ 736 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::Match3Constraints(struct OpenBabel::Template *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?Match4Constraints@OBChainsParser@OpenBabel@@AAE_NPAUTemplate@2@PAVOBAtom@2@111@Z @ 737 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::Match4Constraints(struct OpenBabel::Template *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?TracePeptideChain@OBChainsParser@OpenBabel@@AAEXAAVOBMol@2@HH@Z @ 738 NONAME ; private: void __thiscall OpenBabel::OBChainsParser::TracePeptideChain(class OpenBabel::OBMol &,int,int)
 ?DeterminePeptideSidechains@OBChainsParser@OpenBabel@@AAE_NAAVOBMol@2@@Z @ 739 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::DeterminePeptideSidechains(class OpenBabel::OBMol &)
 ?AssignResidue@OBChainsParser@OpenBabel@@AAEXAAVOBMol@2@HHH@Z @ 740 NONAME ; private: void __thiscall OpenBabel::OBChainsParser::AssignResidue(class OpenBabel::OBMol &,int,int,int)
 ?IdentifyResidue@OBChainsParser@OpenBabel@@AAEHPAXAAVOBMol@2@HH@Z @ 741 NONAME ; private: int __thiscall OpenBabel::OBChainsParser::IdentifyResidue(void *,class OpenBabel::OBMol &,int,int)
 ?DetermineNucleicBackbone@OBChainsParser@OpenBabel@@AAE_NAAVOBMol@2@@Z @ 742 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::DetermineNucleicBackbone(class OpenBabel::OBMol &)
 ?TraceNucleicChain@OBChainsParser@OpenBabel@@AAEXAAVOBMol@2@HH@Z @ 743 NONAME ; private: void __thiscall OpenBabel::OBChainsParser::TraceNucleicChain(class OpenBabel::OBMol &,int,int)
 ?DetermineNucleicSidechains@OBChainsParser@OpenBabel@@AAE_NAAVOBMol@2@@Z @ 744 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::DetermineNucleicSidechains(class OpenBabel::OBMol &)
 ?DetermineHydrogens@OBChainsParser@OpenBabel@@AAE_NAAVOBMol@2@@Z @ 745 NONAME ; private: bool __thiscall OpenBabel::OBChainsParser::DetermineHydrogens(class OpenBabel::OBMol &)
 ?DefineMonomer@OBChainsParser@OpenBabel@@AAEXPAPAXHPAD@Z @ 746 NONAME ; private: void __thiscall OpenBabel::OBChainsParser::DefineMonomer(void * *,int,char *)
 ?IdentifyElement@OBChainsParser@OpenBabel@@AAEHPAD@Z @ 747 NONAME ; private: int __thiscall OpenBabel::OBChainsParser::IdentifyElement(char *)
 ?ParseSmiles@OBChainsParser@OpenBabel@@AAEPADPADH@Z @ 748 NONAME ; private: char * __thiscall OpenBabel::OBChainsParser::ParseSmiles(char *,int)
 ??0?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBResidue@OpenBabel@@@1@@Z @ 749 NONAME ; public: __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >(class std::allocator<class OpenBabel::OBResidue *> const &)
 ??1?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAE@XZ @ 750 NONAME ; public: __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::~vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >(void)
 ?begin@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAEPAPAVOBResidue@OpenBabel@@XZ @ 751 NONAME ; public: class OpenBabel::OBResidue * * __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::begin(void)
 ?end@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAEPAPAVOBResidue@OpenBabel@@XZ @ 752 NONAME ; public: class OpenBabel::OBResidue * * __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::end(void)
 ?size@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QBEIXZ @ 753 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::size(void)const 
 ??A?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAEAAPAVOBResidue@OpenBabel@@I@Z @ 754 NONAME ; public: class OpenBabel::OBResidue * & __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::operator[](unsigned int)
 ?push_back@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAEXABQAVOBResidue@OpenBabel@@@Z @ 755 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::push_back(class OpenBabel::OBResidue * const &)
 ?clear@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAEXXZ @ 756 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::clear(void)
 ??0?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@std@@QAE@ABU?$less@F@1@ABV?$allocator@PAVOBResidue@OpenBabel@@@1@@Z @ 757 NONAME ; public: __thiscall std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >(struct std::less<short> const &,class std::allocator<class OpenBabel::OBResidue *> const &)
 ?end@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@std@@QAE?AViterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@2@XZ @ 758 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::end(void)
 ??A?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@std@@QAEAAPAVOBResidue@OpenBabel@@ABF@Z @ 759 NONAME ; public: class OpenBabel::OBResidue * & __thiscall std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::operator[](short const &)
 ?find@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@std@@QAE?AViterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@2@ABF@Z @ 760 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::find(short const &)
 ??1?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE@XZ @ 761 NONAME ; public: __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::~_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_
 ??9iterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QBE_NABV012@@Z @ 762 NONAME ; public: bool __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator::operator!=(class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocato
 ?insert@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAEPAPAVOBResidue@OpenBabel@@PAPAV34@ABQAV34@@Z @ 763 NONAME ; public: class OpenBabel::OBResidue * * __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::insert(class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * const &)
 ?erase@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAEPAPAVOBResidue@OpenBabel@@PAPAV34@0@Z @ 764 NONAME ; public: class OpenBabel::OBResidue * * __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::erase(class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * *)
 ?_Destroy@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@IAEXPAPAVOBResidue@OpenBabel@@0@Z @ 765 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::_Destroy(class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * *)
 ?deallocate@?$allocator@PAVOBResidue@OpenBabel@@@std@@QAEXPAXI@Z @ 766 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBResidue *>::deallocate(void *,unsigned int)
 ?insert@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@std@@QAE?AU?$pair@Viterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@_N@2@ABU?$pair@$$CBFPAVOBResidue@OpenBabel@@@2@@Z @ 767 NONAME ; public: struct std::pair<class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator,bool> __thiscall std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::insert(struct std::pair<short const ,class
 ??0?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE@ABU?$less@F@1@_NABV?$allocator@PAVOBResidue@OpenBabel@@@1@@Z @ 768 NONAME ; public: __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_K
 ?begin@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE?AViterator@12@XZ @ 769 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabe
 ?end@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE?AViterator@12@XZ @ 770 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabe
 ?erase@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE?AViterator@12@V312@0@Z @ 771 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabe
 ?find@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE?AViterator@12@ABF@Z @ 772 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabe
 ?_Freenode@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEXPAU_Node@12@@Z @ 773 NONAME ; protected: void __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Freenode(struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class
 ??0?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@QAE@ABFABQAVOBResidue@OpenBabel@@@Z @ 774 NONAME ; public: __thiscall std::pair<short const ,class OpenBabel::OBResidue *>::pair<short const ,class OpenBabel::OBResidue *>(short const &,class OpenBabel::OBResidue * const &)
 ??Diterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QBEAAU?$pair@$$CBFPAVOBResidue@OpenBabel@@@2@XZ @ 775 NONAME ; public: struct std::pair<short const ,class OpenBabel::OBResidue *> & __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator::operator*(void)const 
 ??8iterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QBE_NABV012@@Z @ 776 NONAME ; public: bool __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator::operator==(class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocato
 ?insert@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAEXPAPAVOBResidue@OpenBabel@@IABQAV34@@Z @ 777 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::insert(class OpenBabel::OBResidue * *,unsigned int,class OpenBabel::OBResidue * const &)
 ?destroy@?$allocator@PAVOBResidue@OpenBabel@@@std@@QAEXPAPAVOBResidue@OpenBabel@@@Z @ 778 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBResidue *>::destroy(class OpenBabel::OBResidue * *)
 ??R?$less@F@std@@QBE_NABF0@Z @ 779 NONAME ; public: bool __thiscall std::less<short>::operator()(short const &,short const &)const 
 ?_Key@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@KAABFPAU_Node@12@@Z @ 780 NONAME ; protected: static short const & __cdecl std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Key(struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocat
 ?_Value@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@KAAAU?$pair@$$CBFPAVOBResidue@OpenBabel@@@2@PAU_Node@12@@Z @ 781 NONAME ; protected: static struct std::pair<short const ,class OpenBabel::OBResidue *> & __cdecl std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Value(struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBRe
 ?size@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QBEIXZ @ 782 NONAME ; public: unsigned int __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::size(void)const 
 ?insert@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE?AU?$pair@Viterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@_N@2@ABU?$pair@$$CBFPAVOBResidue@OpenBabel@@@2@@Z @ 783 NONAME ; public: struct std::pair<class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator,bool> __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::a
 ?erase@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE?AViterator@12@V312@@Z @ 784 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabe
 ?lower_bound@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE?AViterator@12@ABF@Z @ 785 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabe
 ?_Erase@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEXPAU_Node@12@@Z @ 786 NONAME ; protected: void __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Erase(struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class Op
 ?_Init@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEXXZ @ 787 NONAME ; protected: void __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Init(void)
 ?_Lmost@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEAAPAU_Node@12@XZ @ 788 NONAME ; protected: struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * & __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class Open
 ?_Rmost@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEAAPAU_Node@12@XZ @ 789 NONAME ; protected: struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * & __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class Open
 ?_Root@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEAAPAU_Node@12@XZ @ 790 NONAME ; protected: struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * & __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class Open
 ?_Mynode@const_iterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QBEPAU_Node@23@XZ @ 791 NONAME ; public: struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel
 ??0iterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE@PAU_Node@12@@Z @ 792 NONAME ; public: __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator::iterator(struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<clas
 ??Eiterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE?AV012@H@Z @ 793 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabe
 ??0?$pair@Viterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@_N@std@@QAE@ABViterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@1@AB_N@Z @ 794 NONAME ; public: __thiscall std::pair<class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator,bool>::pair<class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class st
 ?_Ucopy@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@IAEPAPAVOBResidue@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 795 NONAME ; protected: class OpenBabel::OBResidue * * __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::_Ucopy(class OpenBabel::OBResidue * const *,class OpenBabel::OBResidue * const *,class OpenBabel::OBResidue * *)
 ?_Ufill@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@IAEXPAPAVOBResidue@OpenBabel@@IABQAV34@@Z @ 796 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::_Ufill(class OpenBabel::OBResidue * *,unsigned int,class OpenBabel::OBResidue * const &)
 ?allocate@?$allocator@PAVOBResidue@OpenBabel@@@std@@QAEPAPAVOBResidue@OpenBabel@@IPBX@Z @ 797 NONAME ; public: class OpenBabel::OBResidue * * __thiscall std::allocator<class OpenBabel::OBResidue *>::allocate(unsigned int,void const *)
 ??R_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@std@@QBEABFABU?$pair@$$CBFPAVOBResidue@OpenBabel@@@2@@Z @ 798 NONAME ; public: short const & __thiscall std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn::operator()(struct std::pair<short const ,class OpenBabel::OBResidue *> const &)const 
 ?_Color@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@KAAAW4_Redbl@12@PAU_Node@12@@Z @ 799 NONAME ; protected: static enum std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Redbl & __cdecl std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class Ope
 ?_Left@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z @ 800 NONAME ; protected: static struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * & __cdecl std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class 
 ?_Parent@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z @ 801 NONAME ; protected: static struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * & __cdecl std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class 
 ?_Right@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@KAAAPAU_Node@12@PAU312@@Z @ 802 NONAME ; protected: static struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * & __cdecl std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class 
 ?_Insert@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAE?AViterator@12@PAU_Node@12@0ABU?$pair@$$CBFPAVOBResidue@OpenBabel@@@2@@Z @ 803 NONAME ; protected: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenB
 ?_Lbound@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IBEPAU_Node@12@ABF@Z @ 804 NONAME ; protected: struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBa
 ?_Lrotate@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEXPAU_Node@12@@Z @ 805 NONAME ; protected: void __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Lrotate(struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class 
 ?_Max@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@KAPAU_Node@12@PAU312@@Z @ 806 NONAME ; protected: static struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * __cdecl std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class Op
 ?_Min@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@KAPAU_Node@12@PAU312@@Z @ 807 NONAME ; protected: static struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * __cdecl std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class Op
 ?_Rrotate@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEXPAU_Node@12@@Z @ 808 NONAME ; protected: void __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Rrotate(struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class 
 ?_Buynode@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEPAU_Node@12@PAU312@W4_Redbl@12@@Z @ 809 NONAME ; protected: struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBa
 ?_Destval@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEXPAU?$pair@$$CBFPAVOBResidue@OpenBabel@@@2@@Z @ 810 NONAME ; protected: void __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Destval(struct std::pair<short const ,class OpenBabel::OBResidue *> *)
 ??0const_iterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAE@PAU_Node@12@@Z @ 811 NONAME ; public: __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::const_iterator::const_iterator(struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::al
 ??Eiterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAEAAV012@XZ @ 812 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator & __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBab
 ??Fiterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAEAAV012@XZ @ 813 NONAME ; public: class std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::iterator & __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBab
 ?_Charalloc@?$allocator@PAVOBResidue@OpenBabel@@@std@@QAEPADI@Z @ 814 NONAME ; public: char * __thiscall std::allocator<class OpenBabel::OBResidue *>::_Charalloc(unsigned int)
 ?construct@?$allocator@PAVOBResidue@OpenBabel@@@std@@QAEXPAPAVOBResidue@OpenBabel@@ABQAV34@@Z @ 815 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBResidue *>::construct(class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * const &)
 ?_Root@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IBEAAPAU_Node@12@XZ @ 816 NONAME ; protected: struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * & __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class Open
 ?_Consval@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@IAEXPAU?$pair@$$CBFPAVOBResidue@OpenBabel@@@2@ABU32@@Z @ 817 NONAME ; protected: void __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Consval(struct std::pair<short const ,class OpenBabel::OBResidue *> *,struct std::pair<short const ,class OpenBabel::OBResidue *> const &)
 ?_Dec@const_iterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAEXXZ @ 818 NONAME ; public: void __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::const_iterator::_Dec(void)
 ?_Inc@const_iterator@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@QAEXXZ @ 819 NONAME ; public: void __thiscall std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::const_iterator::_Inc(void)
 ?copy@std@@YAPAPAVOBResidue@OpenBabel@@PAPAV23@00@Z @ 820 NONAME ; class OpenBabel::OBResidue * * __cdecl std::copy(class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * *)
 ?fill@std@@YAXPAPAVOBResidue@OpenBabel@@0ABQAV23@@Z @ 821 NONAME ; void __cdecl std::fill(class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * const &)
 ?copy_backward@std@@YAPAPAVOBResidue@OpenBabel@@PAPAV23@00@Z @ 822 NONAME ; class OpenBabel::OBResidue * * __cdecl std::copy_backward(class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * *)
 ?_Destroy@std@@YAXPAPAVOBResidue@OpenBabel@@@Z @ 823 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBResidue * *)
 ?swap@std@@YAXAAW4_Redbl@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@1@0@Z @ 824 NONAME ; void __cdecl std::swap(enum std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Redbl &,enum std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class O
 ?_Allocate@std@@YAPAPAVOBResidue@OpenBabel@@HPAPAV23@@Z @ 825 NONAME ; class OpenBabel::OBResidue * * __cdecl std::_Allocate(int,class OpenBabel::OBResidue * *)
 ?_Destroy@std@@YAXPAU?$pair@$$CBFPAVOBResidue@OpenBabel@@@1@@Z @ 826 NONAME ; void __cdecl std::_Destroy(struct std::pair<short const ,class OpenBabel::OBResidue *> *)
 ?_Allocate@std@@YAPADHPAD@Z @ 827 NONAME ; char * __cdecl std::_Allocate(int,char *)
 ?_Construct@std@@YAXPAPAVOBResidue@OpenBabel@@ABQAV23@@Z @ 828 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBResidue * *,class OpenBabel::OBResidue * const &)
 ?_Construct@std@@YAXPAU?$pair@$$CBFPAVOBResidue@OpenBabel@@@1@ABU21@@Z @ 829 NONAME ; void __cdecl std::_Construct(struct std::pair<short const ,class OpenBabel::OBResidue *> *,struct std::pair<short const ,class OpenBabel::OBResidue *> const &)
 ?WriteChemDraw@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 830 NONAME ; bool __cdecl OpenBabel::WriteChemDraw(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?FindChiralCenters@OBMol@OpenBabel@@QAEXXZ @ 831 NONAME ; public: void __thiscall OpenBabel::OBMol::FindChiralCenters(void)
 ?SetChiral@OBAtom@OpenBabel@@QAEXXZ @ 832 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetChiral(void)
 ?IsWedge@OBBond@OpenBabel@@QAE_NXZ @ 833 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsWedge(void)
 ?IsHash@OBBond@OpenBabel@@QAE_NXZ @ 834 NONAME ; public: bool __thiscall OpenBabel::OBBond::IsHash(void)
 ?SetChiralityPerceived@OBMol@OpenBabel@@QAEXXZ @ 835 NONAME ; public: void __thiscall OpenBabel::OBMol::SetChiralityPerceived(void)
 ?GetChirality@OpenBabel@@YAXAAVOBMol@1@AAV?$vector@HV?$allocator@H@std@@@std@@@Z @ 836 NONAME ; void __cdecl OpenBabel::GetChirality(class OpenBabel::OBMol &,class std::vector<int,class std::allocator<int> > &)
 ?CalcSignedVolume@OpenBabel@@YANAAVOBMol@1@PAVOBAtom@1@@Z @ 837 NONAME ; double __cdecl OpenBabel::CalcSignedVolume(class OpenBabel::OBMol &,class OpenBabel::OBAtom *)
 ?signed_volume@OpenBabel@@YANABVvector3@1@000@Z @ 838 NONAME ; double __cdecl OpenBabel::signed_volume(class OpenBabel::vector3 const &,class OpenBabel::vector3 const &,class OpenBabel::vector3 const &,class OpenBabel::vector3 const &)
 ??0vector3@OpenBabel@@QAE@ABV01@@Z @ 839 NONAME ; public: __thiscall OpenBabel::vector3::vector3(class OpenBabel::vector3 const &)
 ??0matrix3x3@OpenBabel@@QAE@Vvector3@1@00@Z @ 840 NONAME ; public: __thiscall OpenBabel::matrix3x3::matrix3x3(class OpenBabel::vector3,class OpenBabel::vector3,class OpenBabel::vector3)
 ?GraphPotentials@OpenBabel@@YAXAAVOBMol@1@AAV?$vector@NV?$allocator@N@std@@@std@@@Z @ 841 NONAME ; void __cdecl OpenBabel::GraphPotentials(class OpenBabel::OBMol &,class std::vector<double,class std::allocator<double> > &)
 ?construct_g_matrix@OpenBabel@@YAXAAVOBMol@1@AAV?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@@Z @ 842 NONAME ; void __cdecl OpenBabel::construct_g_matrix(class OpenBabel::OBMol &,class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &)
 ?construct_c_matrix@OpenBabel@@YAXAAVOBMol@1@AAV?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@@Z @ 843 NONAME ; void __cdecl OpenBabel::construct_c_matrix(class OpenBabel::OBMol &,class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &)
 ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z @ 844 NONAME ; public: __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::vector<unsigned int,class std::allocator<unsigned int> >(class std::allocator<unsigned int> const &)
 ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ @ 845 NONAME ; public: __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::~vector<unsigned int,class std::allocator<unsigned int> >(void)
 ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ @ 846 NONAME ; public: unsigned int * __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::begin(void)
 ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ @ 847 NONAME ; public: unsigned int * __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::end(void)
 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z @ 848 NONAME ; public: unsigned int & __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::operator[](unsigned int)
 ?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEXABI@Z @ 849 NONAME ; public: void __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::push_back(unsigned int const &)
 ?clear@?$vector@IV?$allocator@I@std@@@std@@QAEXXZ @ 850 NONAME ; public: void __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::clear(void)
 ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z @ 851 NONAME ; public: unsigned int * __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::erase(unsigned int *,unsigned int *)
 ??0?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@Vvector3@OpenBabel@@@1@@Z @ 852 NONAME ; public: __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >(class std::allocator<class OpenBabel::vector3> const &)
 ??1?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAE@XZ @ 853 NONAME ; public: __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::~vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >(void)
 ??A?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAEAAVvector3@OpenBabel@@I@Z @ 854 NONAME ; public: class OpenBabel::vector3 & __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::operator[](unsigned int)
 ?push_back@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAEXABVvector3@OpenBabel@@@Z @ 855 NONAME ; public: void __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::push_back(class OpenBabel::vector3 const &)
 ?resize@?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@QAEXIABV?$vector@NV?$allocator@N@std@@@2@@Z @ 856 NONAME ; public: void __thiscall std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > >::resize(unsigned int,class std::vector<double,class std::allocator<double> > const &)
 ??0?$vector@NV?$allocator@N@std@@@std@@QAE@ABV?$allocator@N@1@@Z @ 857 NONAME ; public: __thiscall std::vector<double,class std::allocator<double> >::vector<double,class std::allocator<double> >(class std::allocator<double> const &)
 ?resize@?$vector@NV?$allocator@N@std@@@std@@QAEXIABN@Z @ 858 NONAME ; public: void __thiscall std::vector<double,class std::allocator<double> >::resize(unsigned int,double const &)
 ?deallocate@?$allocator@I@std@@QAEXPAXI@Z @ 859 NONAME ; public: void __thiscall std::allocator<unsigned int>::deallocate(void *,unsigned int)
 ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAIABI@Z @ 860 NONAME ; public: unsigned int * __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::insert(unsigned int *,unsigned int const &)
 ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z @ 861 NONAME ; public: void __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::insert(unsigned int *,unsigned int,unsigned int const &)
 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ @ 862 NONAME ; public: unsigned int __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::size(void)const 
 ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z @ 863 NONAME ; public: unsigned int * __thiscall std::allocator<unsigned int>::allocate(unsigned int,void const *)
 ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z @ 864 NONAME ; protected: void __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::_Destroy(unsigned int *,unsigned int *)
 ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z @ 865 NONAME ; protected: unsigned int * __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::_Ucopy(unsigned int const *,unsigned int const *,unsigned int *)
 ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z @ 866 NONAME ; protected: void __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::_Ufill(unsigned int *,unsigned int,unsigned int const &)
 ?begin@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAEPAVvector3@OpenBabel@@XZ @ 867 NONAME ; public: class OpenBabel::vector3 * __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::begin(void)
 ?end@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAEPAVvector3@OpenBabel@@XZ @ 868 NONAME ; public: class OpenBabel::vector3 * __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::end(void)
 ?insert@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAEPAVvector3@OpenBabel@@PAV34@ABV34@@Z @ 869 NONAME ; public: class OpenBabel::vector3 * __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::insert(class OpenBabel::vector3 *,class OpenBabel::vector3 const &)
 ?_Destroy@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@IAEXPAVvector3@OpenBabel@@0@Z @ 870 NONAME ; protected: void __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::_Destroy(class OpenBabel::vector3 *,class OpenBabel::vector3 *)
 ?deallocate@?$allocator@Vvector3@OpenBabel@@@std@@QAEXPAXI@Z @ 871 NONAME ; public: void __thiscall std::allocator<class OpenBabel::vector3>::deallocate(void *,unsigned int)
 ?insert@?$vector@NV?$allocator@N@std@@@std@@QAEXPANIABN@Z @ 872 NONAME ; public: void __thiscall std::vector<double,class std::allocator<double> >::insert(double *,unsigned int,double const &)
 ?erase@?$vector@NV?$allocator@N@std@@@std@@QAEPANPAN0@Z @ 873 NONAME ; public: double * __thiscall std::vector<double,class std::allocator<double> >::erase(double *,double *)
 ?construct@?$allocator@I@std@@QAEXPAIABI@Z @ 874 NONAME ; public: void __thiscall std::allocator<unsigned int>::construct(unsigned int *,unsigned int const &)
 ?destroy@?$allocator@I@std@@QAEXPAI@Z @ 875 NONAME ; public: void __thiscall std::allocator<unsigned int>::destroy(unsigned int *)
 ?insert@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAEXPAVvector3@OpenBabel@@IABV34@@Z @ 876 NONAME ; public: void __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::insert(class OpenBabel::vector3 *,unsigned int,class OpenBabel::vector3 const &)
 ?destroy@?$allocator@Vvector3@OpenBabel@@@std@@QAEXPAVvector3@OpenBabel@@@Z @ 877 NONAME ; public: void __thiscall std::allocator<class OpenBabel::vector3>::destroy(class OpenBabel::vector3 *)
 ?_Ufill@?$vector@NV?$allocator@N@std@@@std@@IAEXPANIABN@Z @ 878 NONAME ; protected: void __thiscall std::vector<double,class std::allocator<double> >::_Ufill(double *,unsigned int,double const &)
 ?size@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QBEIXZ @ 879 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::size(void)const 
 ?_Ucopy@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@IAEPAVvector3@OpenBabel@@PBV34@0PAV34@@Z @ 880 NONAME ; protected: class OpenBabel::vector3 * __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::_Ucopy(class OpenBabel::vector3 const *,class OpenBabel::vector3 const *,class OpenBabel::vector3 *)
 ?_Ufill@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@IAEXPAVvector3@OpenBabel@@IABV34@@Z @ 881 NONAME ; protected: void __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::_Ufill(class OpenBabel::vector3 *,unsigned int,class OpenBabel::vector3 const &)
 ?allocate@?$allocator@Vvector3@OpenBabel@@@std@@QAEPAVvector3@OpenBabel@@IPBX@Z @ 882 NONAME ; public: class OpenBabel::vector3 * __thiscall std::allocator<class OpenBabel::vector3>::allocate(unsigned int,void const *)
 ?construct@?$allocator@Vvector3@OpenBabel@@@std@@QAEXPAVvector3@OpenBabel@@ABV34@@Z @ 883 NONAME ; public: void __thiscall std::allocator<class OpenBabel::vector3>::construct(class OpenBabel::vector3 *,class OpenBabel::vector3 const &)
 ?sort@std@@YAXPAH0@Z @ 884 NONAME ; void __cdecl std::sort(int *,int *)
 ?copy@std@@YAPAIPAI00@Z @ 885 NONAME ; unsigned int * __cdecl std::copy(unsigned int *,unsigned int *,unsigned int *)
 ?_Allocate@std@@YAPAIHPAI@Z @ 886 NONAME ; unsigned int * __cdecl std::_Allocate(int,unsigned int *)
 ?fill@std@@YAXPAI0ABI@Z @ 887 NONAME ; void __cdecl std::fill(unsigned int *,unsigned int *,unsigned int const &)
 ?copy_backward@std@@YAPAIPAI00@Z @ 888 NONAME ; unsigned int * __cdecl std::copy_backward(unsigned int *,unsigned int *,unsigned int *)
 ?fill@std@@YAXPAN0ABN@Z @ 889 NONAME ; void __cdecl std::fill(double *,double *,double const &)
 ?copy_backward@std@@YAPANPAN00@Z @ 890 NONAME ; double * __cdecl std::copy_backward(double *,double *,double *)
 ?copy@std@@YAPANPAN00@Z @ 891 NONAME ; double * __cdecl std::copy(double *,double *,double *)
 ?_Construct@std@@YAXPAIABI@Z @ 892 NONAME ; void __cdecl std::_Construct(unsigned int *,unsigned int const &)
 ?_Destroy@std@@YAXPAI@Z @ 893 NONAME ; void __cdecl std::_Destroy(unsigned int *)
 ?fill@std@@YAXPAVvector3@OpenBabel@@0ABV23@@Z @ 894 NONAME ; void __cdecl std::fill(class OpenBabel::vector3 *,class OpenBabel::vector3 *,class OpenBabel::vector3 const &)
 ?copy_backward@std@@YAPAVvector3@OpenBabel@@PAV23@00@Z @ 895 NONAME ; class OpenBabel::vector3 * __cdecl std::copy_backward(class OpenBabel::vector3 *,class OpenBabel::vector3 *,class OpenBabel::vector3 *)
 ?_Destroy@std@@YAXPAVvector3@OpenBabel@@@Z @ 896 NONAME ; void __cdecl std::_Destroy(class OpenBabel::vector3 *)
 ?_Allocate@std@@YAPAVvector3@OpenBabel@@HPAV23@@Z @ 897 NONAME ; class OpenBabel::vector3 * __cdecl std::_Allocate(int,class OpenBabel::vector3 *)
 ?_Construct@std@@YAXPAVvector3@OpenBabel@@ABV23@@Z @ 898 NONAME ; void __cdecl std::_Construct(class OpenBabel::vector3 *,class OpenBabel::vector3 const &)
 ?_Val_type@std@@YAPAHPBH@Z @ 899 NONAME ; int * __cdecl std::_Val_type(int const *)
 ?_Sort_0@std@@YAXPAH00@Z @ 900 NONAME ; void __cdecl std::_Sort_0(int *,int *,int *)
 ?_Insertion_sort@std@@YAXPAH0@Z @ 901 NONAME ; void __cdecl std::_Insertion_sort(int *,int *)
 ?_Sort@std@@YAXPAH00@Z @ 902 NONAME ; void __cdecl std::_Sort(int *,int *,int *)
 ?_Unguarded_insert@std@@YAXPAHH@Z @ 903 NONAME ; void __cdecl std::_Unguarded_insert(int *,int)
 ?_Insertion_sort_1@std@@YAXPAH00@Z @ 904 NONAME ; void __cdecl std::_Insertion_sort_1(int *,int *,int *)
 ?_Median@std@@YAHHHH@Z @ 905 NONAME ; int __cdecl std::_Median(int,int,int)
 ?_Unguarded_partition@std@@YAPAHPAH0H@Z @ 906 NONAME ; int * __cdecl std::_Unguarded_partition(int *,int *,int)
 ?iter_swap@std@@YAXPAH0@Z @ 907 NONAME ; void __cdecl std::iter_swap(int *,int *)
 ?_Iter_swap@std@@YAXPAH00@Z @ 908 NONAME ; void __cdecl std::_Iter_swap(int *,int *,int *)
 ?WriteCSR@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 909 NONAME ; bool __cdecl OpenBabel::WriteCSR(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?WriteCSSR@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 910 NONAME ; bool __cdecl OpenBabel::WriteCSSR(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ??0?$vector@HV?$allocator@H@std@@@std@@QAE@IABHABV?$allocator@H@1@@Z @ 911 NONAME ; public: __thiscall std::vector<int,class std::allocator<int> >::vector<int,class std::allocator<int> >(unsigned int,int const &,class std::allocator<int> const &)
 ??1OBExtensionTable@OpenBabel@@UAE@XZ @ 912 NONAME ; public: virtual __thiscall OpenBabel::OBExtensionTable::~OBExtensionTable(void)
 ??1OBIsotopeTable@OpenBabel@@UAE@XZ @ 913 NONAME ; public: virtual __thiscall OpenBabel::OBIsotopeTable::~OBIsotopeTable(void)
 ??0OBElementTable@OpenBabel@@QAE@XZ @ 914 NONAME ; public: __thiscall OpenBabel::OBElementTable::OBElementTable(void)
 ??0OBGlobalDataBase@OpenBabel@@QAE@XZ @ 915 NONAME ; public: __thiscall OpenBabel::OBGlobalDataBase::OBGlobalDataBase(void)
 ??1OBElementTable@OpenBabel@@UAE@XZ @ 916 NONAME ; public: virtual __thiscall OpenBabel::OBElementTable::~OBElementTable(void)
 ?ParseLine@OBElementTable@OpenBabel@@UAEXPBD@Z @ 917 NONAME ; public: virtual void __thiscall OpenBabel::OBElementTable::ParseLine(char const *)
 ??0OBElement@OpenBabel@@QAE@HPBDNNNHNN@Z @ 918 NONAME ; public: __thiscall OpenBabel::OBElement::OBElement(int,char const *,double,double,double,int,double,double)
 ?GetSymbol@OBElementTable@OpenBabel@@QAEPADH@Z @ 919 NONAME ; public: char * __thiscall OpenBabel::OBElementTable::GetSymbol(int)
 ?GetSymbol@OBElement@OpenBabel@@QAEPADXZ @ 920 NONAME ; public: char * __thiscall OpenBabel::OBElement::GetSymbol(void)
 ?GetMaxBonds@OBElementTable@OpenBabel@@QAEHH@Z @ 921 NONAME ; public: int __thiscall OpenBabel::OBElementTable::GetMaxBonds(int)
 ?GetMaxBonds@OBElement@OpenBabel@@QAEHXZ @ 922 NONAME ; public: int __thiscall OpenBabel::OBElement::GetMaxBonds(void)
 ?GetElectroNeg@OBElementTable@OpenBabel@@QAENH@Z @ 923 NONAME ; public: double __thiscall OpenBabel::OBElementTable::GetElectroNeg(int)
 ?GetElectroNeg@OBElement@OpenBabel@@QAENXZ @ 924 NONAME ; public: double __thiscall OpenBabel::OBElement::GetElectroNeg(void)
 ?GetVdwRad@OBElementTable@OpenBabel@@QAENH@Z @ 925 NONAME ; public: double __thiscall OpenBabel::OBElementTable::GetVdwRad(int)
 ?GetVdwRad@OBElement@OpenBabel@@QAENXZ @ 926 NONAME ; public: double __thiscall OpenBabel::OBElement::GetVdwRad(void)
 ?GetBORad@OBElementTable@OpenBabel@@QAENH@Z @ 927 NONAME ; public: double __thiscall OpenBabel::OBElementTable::GetBORad(int)
 ?GetBoRad@OBElement@OpenBabel@@QAENXZ @ 928 NONAME ; public: double __thiscall OpenBabel::OBElement::GetBoRad(void)
 ?CorrectedBondRad@OBElementTable@OpenBabel@@QAENHH@Z @ 929 NONAME ; public: double __thiscall OpenBabel::OBElementTable::CorrectedBondRad(int,int)
 ?CorrectedVdwRad@OBElementTable@OpenBabel@@QAENHH@Z @ 930 NONAME ; public: double __thiscall OpenBabel::OBElementTable::CorrectedVdwRad(int,int)
 ?GetCovalentRad@OBElementTable@OpenBabel@@QAENH@Z @ 931 NONAME ; public: double __thiscall OpenBabel::OBElementTable::GetCovalentRad(int)
 ?GetCovalentRad@OBElement@OpenBabel@@QAENXZ @ 932 NONAME ; public: double __thiscall OpenBabel::OBElement::GetCovalentRad(void)
 ?GetMass@OBElementTable@OpenBabel@@QAENH@Z @ 933 NONAME ; public: double __thiscall OpenBabel::OBElementTable::GetMass(int)
 ?GetMass@OBElement@OpenBabel@@QAENXZ @ 934 NONAME ; public: double __thiscall OpenBabel::OBElement::GetMass(void)
 ?GetAtomicNum@OBElementTable@OpenBabel@@QAEHPBDG@Z @ 935 NONAME ; public: int __thiscall OpenBabel::OBElementTable::GetAtomicNum(char const *,unsigned short)
 ?GetAtomicNum@OBElement@OpenBabel@@QAEHXZ @ 936 NONAME ; public: int __thiscall OpenBabel::OBElement::GetAtomicNum(void)
 ??0OBIsotopeTable@OpenBabel@@QAE@XZ @ 937 NONAME ; public: __thiscall OpenBabel::OBIsotopeTable::OBIsotopeTable(void)
 ?ParseLine@OBIsotopeTable@OpenBabel@@UAEXPBD@Z @ 938 NONAME ; public: virtual void __thiscall OpenBabel::OBIsotopeTable::ParseLine(char const *)
 ?GetExactMass@OBIsotopeTable@OpenBabel@@QAENII@Z @ 939 NONAME ; public: double __thiscall OpenBabel::OBIsotopeTable::GetExactMass(unsigned int,unsigned int)
 ??0OBTypeTable@OpenBabel@@QAE@XZ @ 940 NONAME ; public: __thiscall OpenBabel::OBTypeTable::OBTypeTable(void)
 ?ParseLine@OBTypeTable@OpenBabel@@UAEXPBD@Z @ 941 NONAME ; public: virtual void __thiscall OpenBabel::OBTypeTable::ParseLine(char const *)
 ?SetFromType@OBTypeTable@OpenBabel@@QAE_NPAD@Z @ 942 NONAME ; public: bool __thiscall OpenBabel::OBTypeTable::SetFromType(char *)
 ?SetToType@OBTypeTable@OpenBabel@@QAE_NPAD@Z @ 943 NONAME ; public: bool __thiscall OpenBabel::OBTypeTable::SetToType(char *)
 ?Translate@OBTypeTable@OpenBabel@@QAE_NPAD0@Z @ 944 NONAME ; public: bool __thiscall OpenBabel::OBTypeTable::Translate(char *,char *)
 ?Translate@OBTypeTable@OpenBabel@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z @ 945 NONAME ; public: bool __thiscall OpenBabel::OBTypeTable::Translate(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?Toupper@OpenBabel@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 946 NONAME ; void __cdecl OpenBabel::Toupper(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?Tolower@OpenBabel@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 947 NONAME ; void __cdecl OpenBabel::Tolower(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ??0OBExtensionTable@OpenBabel@@QAE@XZ @ 948 NONAME ; public: __thiscall OpenBabel::OBExtensionTable::OBExtensionTable(void)
 ?ParseLine@OBExtensionTable@OpenBabel@@UAEXPBD@Z @ 949 NONAME ; public: virtual void __thiscall OpenBabel::OBExtensionTable::ParseLine(char const *)
 ?TextToType@OpenBabel@@YA?AW4io_type@1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 950 NONAME ; enum OpenBabel::io_type __cdecl OpenBabel::TextToType(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)
 ?FilenameToType@OBExtensionTable@OpenBabel@@QAE?AW4io_type@2@PAD@Z @ 951 NONAME ; public: enum OpenBabel::io_type __thiscall OpenBabel::OBExtensionTable::FilenameToType(char *)
 ?FilenameToType@OBExtensionTable@OpenBabel@@QAE?AW4io_type@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 952 NONAME ; public: enum OpenBabel::io_type __thiscall OpenBabel::OBExtensionTable::FilenameToType(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?MIMEToType@OBExtensionTable@OpenBabel@@QAE?AW4io_type@2@PAD@Z @ 953 NONAME ; public: enum OpenBabel::io_type __thiscall OpenBabel::OBExtensionTable::MIMEToType(char *)
 ?MIMEToType@OBExtensionTable@OpenBabel@@QAE?AW4io_type@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 954 NONAME ; public: enum OpenBabel::io_type __thiscall OpenBabel::OBExtensionTable::MIMEToType(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?TypeToExtension@OBExtensionTable@OpenBabel@@QAEXW4io_type@2@PAD@Z @ 955 NONAME ; public: void __thiscall OpenBabel::OBExtensionTable::TypeToExtension(enum OpenBabel::io_type,char *)
 ?TypeToMIME@OBExtensionTable@OpenBabel@@QAEXW4io_type@2@PAD@Z @ 956 NONAME ; public: void __thiscall OpenBabel::OBExtensionTable::TypeToMIME(enum OpenBabel::io_type,char *)
 ?ExtensionToDescription@OBExtensionTable@OpenBabel@@QAEXPAD0@Z @ 957 NONAME ; public: void __thiscall OpenBabel::OBExtensionTable::ExtensionToDescription(char *,char *)
 ?CanReadExtension@OBExtensionTable@OpenBabel@@QAE_NPAD@Z @ 958 NONAME ; public: bool __thiscall OpenBabel::OBExtensionTable::CanReadExtension(char *)
 ?CanWriteExtension@OBExtensionTable@OpenBabel@@QAE_NPAD@Z @ 959 NONAME ; public: bool __thiscall OpenBabel::OBExtensionTable::CanWriteExtension(char *)
 ?GetExtension@OBExtensionTable@OpenBabel@@QAEPBDI@Z @ 960 NONAME ; public: char const * __thiscall OpenBabel::OBExtensionTable::GetExtension(unsigned int)
 ?GetDescription@OBExtensionTable@OpenBabel@@QAEPBDI@Z @ 961 NONAME ; public: char const * __thiscall OpenBabel::OBExtensionTable::GetDescription(unsigned int)
 ?GetType@OBExtensionTable@OpenBabel@@QAE?AW4io_type@2@I@Z @ 962 NONAME ; public: enum OpenBabel::io_type __thiscall OpenBabel::OBExtensionTable::GetType(unsigned int)
 ?IsReadable@OBExtensionTable@OpenBabel@@QAE_NI@Z @ 963 NONAME ; public: bool __thiscall OpenBabel::OBExtensionTable::IsReadable(unsigned int)
 ?IsReadable@OBExtensionTable@OpenBabel@@QAE_NW4io_type@2@@Z @ 964 NONAME ; public: bool __thiscall OpenBabel::OBExtensionTable::IsReadable(enum OpenBabel::io_type)
 ?IsWritable@OBExtensionTable@OpenBabel@@QAE_NI@Z @ 965 NONAME ; public: bool __thiscall OpenBabel::OBExtensionTable::IsWritable(unsigned int)
 ?IsWritable@OBExtensionTable@OpenBabel@@QAE_NW4io_type@2@@Z @ 966 NONAME ; public: bool __thiscall OpenBabel::OBExtensionTable::IsWritable(enum OpenBabel::io_type)
 ?Count@OBExtensionTable@OpenBabel@@QAEIXZ @ 967 NONAME ; public: unsigned int __thiscall OpenBabel::OBExtensionTable::Count(void)
 ?Init@OBGlobalDataBase@OpenBabel@@QAEXXZ @ 968 NONAME ; public: void __thiscall OpenBabel::OBGlobalDataBase::Init(void)
 ??0?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBElement@OpenBabel@@@1@@Z @ 969 NONAME ; public: __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >(class std::allocator<class OpenBabel::OBElement *> const &)
 ??1?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@QAE@XZ @ 970 NONAME ; public: __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::~vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >(void)
 ?begin@?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@QAEPAPAVOBElement@OpenBabel@@XZ @ 971 NONAME ; public: class OpenBabel::OBElement * * __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::begin(void)
 ?end@?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@QAEPAPAVOBElement@OpenBabel@@XZ @ 972 NONAME ; public: class OpenBabel::OBElement * * __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::end(void)
 ?size@?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@QBEIXZ @ 973 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::size(void)const 
 ??A?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@QAEAAPAVOBElement@OpenBabel@@I@Z @ 974 NONAME ; public: class OpenBabel::OBElement * & __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::operator[](unsigned int)
 ?push_back@?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@QAEXABQAVOBElement@OpenBabel@@@Z @ 975 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::push_back(class OpenBabel::OBElement * const &)
 ??0?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@QAE@ABV?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@1@@Z @ 976 NONAME ; public: __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::al
 ??1?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@QAE@XZ @ 977 NONAME ; public: __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::~vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::a
 ?size@?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@QBEIXZ @ 978 NONAME ; public: unsigned int __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::size(void)const 
 ??A?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@QAEAAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@1@I@Z @ 979 NONAME ; public: class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > & __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::operator[](unsigned int)
 ?push_back@?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@QAEXABV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@@Z @ 980 NONAME ; public: void __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::push_back(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > const &)
 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z @ 981 NONAME ; public: __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >(class std::vector<class std::basic_string<char,struct std::char_traits
 ??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@ABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z @ 982 NONAME ; public: __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::vector<class std
 ?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ @ 983 NONAME ; public: class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > * __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<c
 ?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ @ 984 NONAME ; public: class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > * __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<c
 ?size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ @ 985 NONAME ; public: unsigned int __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::siz
 ??A?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@I@Z @ 986 NONAME ; public: class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<c
 ?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z @ 987 NONAME ; public: void __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::push_back(c
 ??0?$pair@IN@std@@QAE@XZ @ 988 NONAME ; public: __thiscall std::pair<unsigned int,double>::pair<unsigned int,double>(void)
 ??0?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@IN@std@@@1@@Z @ 989 NONAME ; public: __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >(class std::allocator<struct std::pair<unsigned int,double> > const &)
 ??1?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAE@XZ @ 990 NONAME ; public: __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::~vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >(void)
 ?size@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QBEIXZ @ 991 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::size(void)const 
 ??A?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAEAAU?$pair@IN@1@I@Z @ 992 NONAME ; public: struct std::pair<unsigned int,double> & __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::operator[](unsigned int)
 ?push_back@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAEXABU?$pair@IN@2@@Z @ 993 NONAME ; public: void __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::push_back(struct std::pair<unsigned int,double> const &)
 ?insert@?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@QAEPAPAVOBElement@OpenBabel@@PAPAV34@ABQAV34@@Z @ 994 NONAME ; public: class OpenBabel::OBElement * * __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::insert(class OpenBabel::OBElement * *,class OpenBabel::OBElement * const &)
 ?_Destroy@?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@IAEXPAPAVOBElement@OpenBabel@@0@Z @ 995 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::_Destroy(class OpenBabel::OBElement * *,class OpenBabel::OBElement * *)
 ?deallocate@?$allocator@PAVOBElement@OpenBabel@@@std@@QAEXPAXI@Z @ 996 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBElement *>::deallocate(void *,unsigned int)
 ?begin@?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@QAEPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@XZ @ 997 NONAME ; public: class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > * __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::begin(void)
 ?end@?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@QAEPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@XZ @ 998 NONAME ; public: class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > * __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::end(void)
 ?insert@?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@QAEPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@PAV32@ABV32@@Z @ 999 NONAME ; public: class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > * __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::insert(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std:
 ?_Destroy@?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@0@Z @ 1000 NONAME ; protected: void __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::_Destroy(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *,class std::vector<struct std::pair<unsigned int,double>,class std::allocator<s
 ?deallocate@?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@std@@QAEXPAXI@Z @ 1001 NONAME ; public: void __thiscall std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > >::deallocate(void *,unsigned int)
 ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ @ 1002 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const * __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::begin(void)const 
 ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ @ 1003 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const * __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::end(void)const 
 ?insert@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@PAV32@ABV32@@Z @ 1004 NONAME ; public: class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > * __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<c
 ?begin@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAEPAU?$pair@IN@2@XZ @ 1005 NONAME ; public: struct std::pair<unsigned int,double> * __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::begin(void)
 ?end@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAEPAU?$pair@IN@2@XZ @ 1006 NONAME ; public: struct std::pair<unsigned int,double> * __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::end(void)
 ?insert@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAEPAU?$pair@IN@2@PAU32@ABU32@@Z @ 1007 NONAME ; public: struct std::pair<unsigned int,double> * __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::insert(struct std::pair<unsigned int,double> *,struct std::pair<unsigned int,double> const &)
 ?_Destroy@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@IAEXPAU?$pair@IN@2@0@Z @ 1008 NONAME ; protected: void __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::_Destroy(struct std::pair<unsigned int,double> *,struct std::pair<unsigned int,double> *)
 ?deallocate@?$allocator@U?$pair@IN@std@@@std@@QAEXPAXI@Z @ 1009 NONAME ; public: void __thiscall std::allocator<struct std::pair<unsigned int,double> >::deallocate(void *,unsigned int)
 ?insert@?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@QAEXPAPAVOBElement@OpenBabel@@IABQAV34@@Z @ 1010 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::insert(class OpenBabel::OBElement * *,unsigned int,class OpenBabel::OBElement * const &)
 ?destroy@?$allocator@PAVOBElement@OpenBabel@@@std@@QAEXPAPAVOBElement@OpenBabel@@@Z @ 1011 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBElement *>::destroy(class OpenBabel::OBElement * *)
 ?insert@?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@QAEXPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@IABV32@@Z @ 1012 NONAME ; public: void __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::insert(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *,unsigned int,class std::vector<struct std::pair<unsigned int,double>,class std::all
 ?destroy@?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@std@@QAEXPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@@Z @ 1013 NONAME ; public: void __thiscall std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > >::destroy(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *)
 ?insert@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV32@@Z @ 1014 NONAME ; public: void __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::insert(clas
 ?insert@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAEXPAU?$pair@IN@2@IABU32@@Z @ 1015 NONAME ; public: void __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::insert(struct std::pair<unsigned int,double> *,unsigned int,struct std::pair<unsigned int,double> const &)
 ?destroy@?$allocator@U?$pair@IN@std@@@std@@QAEXPAU?$pair@IN@2@@Z @ 1016 NONAME ; public: void __thiscall std::allocator<struct std::pair<unsigned int,double> >::destroy(struct std::pair<unsigned int,double> *)
 ?_Ucopy@?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@IAEPAPAVOBElement@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 1017 NONAME ; protected: class OpenBabel::OBElement * * __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::_Ucopy(class OpenBabel::OBElement * const *,class OpenBabel::OBElement * const *,class OpenBabel::OBElement * *)
 ?_Ufill@?$vector@PAVOBElement@OpenBabel@@V?$allocator@PAVOBElement@OpenBabel@@@std@@@std@@IAEXPAPAVOBElement@OpenBabel@@IABQAV34@@Z @ 1018 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBElement *,class std::allocator<class OpenBabel::OBElement *> >::_Ufill(class OpenBabel::OBElement * *,unsigned int,class OpenBabel::OBElement * const &)
 ?allocate@?$allocator@PAVOBElement@OpenBabel@@@std@@QAEPAPAVOBElement@OpenBabel@@IPBX@Z @ 1019 NONAME ; public: class OpenBabel::OBElement * * __thiscall std::allocator<class OpenBabel::OBElement *>::allocate(unsigned int,void const *)
 ?_Ucopy@?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@IAEPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@PBV32@0PAV32@@Z @ 1020 NONAME ; protected: class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > * __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::_Ucopy(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct s
 ?_Ufill@?$vector@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@V?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@IABV32@@Z @ 1021 NONAME ; protected: void __thiscall std::vector<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >,class std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > > >::_Ufill(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *,unsigned int,class std::vector<struct std::pair<unsigned int,double>,class std::
 ?allocate@?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@std@@QAEPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@IPBX@Z @ 1022 NONAME ; public: class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > * __thiscall std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > >::allocate(unsigned int,void const *)
 ?_Ucopy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@PBV32@0PAV32@@Z @ 1023 NONAME ; protected: class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > * __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vecto
 ?_Ufill@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IABV32@@Z @ 1024 NONAME ; protected: void __thiscall std::vector<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >,class std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > > >::_Ufill(c
 ?allocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@IPBX@Z @ 1025 NONAME ; public: class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > * __thiscall std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::allocate(unsigned int,void const *
 ?_Ucopy@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@IAEPAU?$pair@IN@2@PBU32@0PAU32@@Z @ 1026 NONAME ; protected: struct std::pair<unsigned int,double> * __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::_Ucopy(struct std::pair<unsigned int,double> const *,struct std::pair<unsigned int,double> const *,struct std::pair<unsigned int,double> *)
 ?_Ufill@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@IAEXPAU?$pair@IN@2@IABU32@@Z @ 1027 NONAME ; protected: void __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::_Ufill(struct std::pair<unsigned int,double> *,unsigned int,struct std::pair<unsigned int,double> const &)
 ?allocate@?$allocator@U?$pair@IN@std@@@std@@QAEPAU?$pair@IN@2@IPBX@Z @ 1028 NONAME ; public: struct std::pair<unsigned int,double> * __thiscall std::allocator<struct std::pair<unsigned int,double> >::allocate(unsigned int,void const *)
 ?construct@?$allocator@PAVOBElement@OpenBabel@@@std@@QAEXPAPAVOBElement@OpenBabel@@ABQAV34@@Z @ 1029 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBElement *>::construct(class OpenBabel::OBElement * *,class OpenBabel::OBElement * const &)
 ?construct@?$allocator@V?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@@std@@QAEXPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@2@ABV32@@Z @ 1030 NONAME ; public: void __thiscall std::allocator<class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > >::construct(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *,class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > const &)
 ?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@Z @ 1031 NONAME ; public: void __thiscall std::allocator<class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::construct(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > *,class std::vector<c
 ?construct@?$allocator@U?$pair@IN@std@@@std@@QAEXPAU?$pair@IN@2@ABU32@@Z @ 1032 NONAME ; public: void __thiscall std::allocator<struct std::pair<unsigned int,double> >::construct(struct std::pair<unsigned int,double> *,struct std::pair<unsigned int,double> const &)
 ?fill@std@@YAXPAPAVOBElement@OpenBabel@@0ABQAV23@@Z @ 1033 NONAME ; void __cdecl std::fill(class OpenBabel::OBElement * *,class OpenBabel::OBElement * *,class OpenBabel::OBElement * const &)
 ?copy_backward@std@@YAPAPAVOBElement@OpenBabel@@PAPAV23@00@Z @ 1034 NONAME ; class OpenBabel::OBElement * * __cdecl std::copy_backward(class OpenBabel::OBElement * *,class OpenBabel::OBElement * *,class OpenBabel::OBElement * *)
 ?_Destroy@std@@YAXPAPAVOBElement@OpenBabel@@@Z @ 1035 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBElement * *)
 ?fill@std@@YAXPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@1@0ABV21@@Z @ 1036 NONAME ; void __cdecl std::fill(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *,class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *,class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > const &)
 ?copy_backward@std@@YAPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@1@PAV21@00@Z @ 1037 NONAME ; class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > * __cdecl std::copy_backward(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *,class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *,class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *)
 ?_Destroy@std@@YAXPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@1@@Z @ 1038 NONAME ; void __cdecl std::_Destroy(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *)
 ?fill@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@0ABV21@@Z @ 1039 NONAME ; void __cdecl std::fill(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > *,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > *,class std::vector<class std::basic_string<char
 ?copy_backward@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PAV21@00@Z @ 1040 NONAME ; class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > * __cdecl std::copy_backward(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > *,class std::vector<class std::basic_string<
 ?fill@std@@YAXPAU?$pair@IN@1@0ABU21@@Z @ 1041 NONAME ; void __cdecl std::fill(struct std::pair<unsigned int,double> *,struct std::pair<unsigned int,double> *,struct std::pair<unsigned int,double> const &)
 ?copy_backward@std@@YAPAU?$pair@IN@1@PAU21@00@Z @ 1042 NONAME ; struct std::pair<unsigned int,double> * __cdecl std::copy_backward(struct std::pair<unsigned int,double> *,struct std::pair<unsigned int,double> *,struct std::pair<unsigned int,double> *)
 ?_Destroy@std@@YAXPAU?$pair@IN@1@@Z @ 1043 NONAME ; void __cdecl std::_Destroy(struct std::pair<unsigned int,double> *)
 ?_Allocate@std@@YAPAPAVOBElement@OpenBabel@@HPAPAV23@@Z @ 1044 NONAME ; class OpenBabel::OBElement * * __cdecl std::_Allocate(int,class OpenBabel::OBElement * *)
 ?_Allocate@std@@YAPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@1@HPAV21@@Z @ 1045 NONAME ; class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > * __cdecl std::_Allocate(int,class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *)
 ?_Allocate@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@HPAV21@@Z @ 1046 NONAME ; class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > * __cdecl std::_Allocate(int,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > *)
 ?_Allocate@std@@YAPAU?$pair@IN@1@HPAU21@@Z @ 1047 NONAME ; struct std::pair<unsigned int,double> * __cdecl std::_Allocate(int,struct std::pair<unsigned int,double> *)
 ?_Construct@std@@YAXPAPAVOBElement@OpenBabel@@ABQAV23@@Z @ 1048 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBElement * *,class OpenBabel::OBElement * const &)
 ?_Construct@std@@YAXPAV?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@1@ABV21@@Z @ 1049 NONAME ; void __cdecl std::_Construct(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > *,class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > const &)
 ?_Construct@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV21@@Z @ 1050 NONAME ; void __cdecl std::_Construct(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > *,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &)
 ?_Construct@std@@YAXPAU?$pair@IN@1@ABU21@@Z @ 1051 NONAME ; void __cdecl std::_Construct(struct std::pair<unsigned int,double> *,struct std::pair<unsigned int,double> const &)
 ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z @ 1052 NONAME ; public: class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > & __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::operator=(class std::vector<class std::basic_string<char,
 ??0?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAE@ABV01@@Z @ 1053 NONAME ; public: __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > const &)
 ??4?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QAEAAV01@ABV01@@Z @ 1054 NONAME ; public: class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > & __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::operator=(class std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > > const &)
 ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ @ 1055 NONAME ; public: unsigned int __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::capacity(void)const 
 ?capacity@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QBEIXZ @ 1056 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::capacity(void)const 
 ?begin@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QBEPBU?$pair@IN@2@XZ @ 1057 NONAME ; public: struct std::pair<unsigned int,double> const * __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::begin(void)const 
 ?end@?$vector@U?$pair@IN@std@@V?$allocator@U?$pair@IN@std@@@2@@std@@QBEPBU?$pair@IN@2@XZ @ 1058 NONAME ; public: struct std::pair<unsigned int,double> const * __thiscall std::vector<struct std::pair<unsigned int,double>,class std::allocator<struct std::pair<unsigned int,double> > >::end(void)const 
 ?copy@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBV21@0PAV21@@Z @ 1059 NONAME ; class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl std::copy(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
 ?copy@std@@YAPAU?$pair@IN@1@PBU21@0PAU21@@Z @ 1060 NONAME ; struct std::pair<unsigned int,double> * __cdecl std::copy(struct std::pair<unsigned int,double> const *,struct std::pair<unsigned int,double> const *,struct std::pair<unsigned int,double> *)
 ?ReadDMol@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@PBD@Z @ 1061 NONAME ; bool __cdecl OpenBabel::ReadDMol(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,char const *)
 ?WriteDMol@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 1062 NONAME ; bool __cdecl OpenBabel::WriteDMol(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ??D@YA?AVvector3@OpenBabel@@ABV01@ABN@Z @ 1063 NONAME ; class OpenBabel::vector3 __cdecl operator*(class OpenBabel::vector3 const &,double const &)
 ??0OBGenericData@OpenBabel@@QAE@XZ @ 1064 NONAME ; public: __thiscall OpenBabel::OBGenericData::OBGenericData(void)
 ??0OBGenericData@OpenBabel@@QAE@ABV01@@Z @ 1065 NONAME ; public: __thiscall OpenBabel::OBGenericData::OBGenericData(class OpenBabel::OBGenericData const &)
 ??4OBGenericData@OpenBabel@@QAEAAV01@ABV01@@Z @ 1066 NONAME ; public: class OpenBabel::OBGenericData & __thiscall OpenBabel::OBGenericData::operator=(class OpenBabel::OBGenericData const &)
 ??0OBCommentData@OpenBabel@@QAE@XZ @ 1067 NONAME ; public: __thiscall OpenBabel::OBCommentData::OBCommentData(void)
 ??1OBCommentData@OpenBabel@@UAE@XZ @ 1068 NONAME ; public: virtual __thiscall OpenBabel::OBCommentData::~OBCommentData(void)
 ??0OBCommentData@OpenBabel@@QAE@ABV01@@Z @ 1069 NONAME ; public: __thiscall OpenBabel::OBCommentData::OBCommentData(class OpenBabel::OBCommentData const &)
 ?GetData@OBCommentData@OpenBabel@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ @ 1070 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall OpenBabel::OBCommentData::GetData(void)const 
 ??0OBExternalBond@OpenBabel@@QAE@PAVOBAtom@1@PAVOBBond@1@H@Z @ 1071 NONAME ; public: __thiscall OpenBabel::OBExternalBond::OBExternalBond(class OpenBabel::OBAtom *,class OpenBabel::OBBond *,int)
 ??0OBExternalBond@OpenBabel@@QAE@ABV01@@Z @ 1072 NONAME ; public: __thiscall OpenBabel::OBExternalBond::OBExternalBond(class OpenBabel::OBExternalBond const &)
 ?GetIdx@OBExternalBond@OpenBabel@@QBEHXZ @ 1073 NONAME ; public: int __thiscall OpenBabel::OBExternalBond::GetIdx(void)const 
 ?GetAtom@OBExternalBond@OpenBabel@@QBEPAVOBAtom@2@XZ @ 1074 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBExternalBond::GetAtom(void)const 
 ?GetBond@OBExternalBond@OpenBabel@@QBEPAVOBBond@2@XZ @ 1075 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBExternalBond::GetBond(void)const 
 ??0OBExternalBondData@OpenBabel@@QAE@XZ @ 1076 NONAME ; public: __thiscall OpenBabel::OBExternalBondData::OBExternalBondData(void)
 ??1OBExternalBondData@OpenBabel@@UAE@XZ @ 1077 NONAME ; public: virtual __thiscall OpenBabel::OBExternalBondData::~OBExternalBondData(void)
 ?SetData@OBExternalBondData@OpenBabel@@QAEXPAVOBAtom@2@PAVOBBond@2@H@Z @ 1078 NONAME ; public: void __thiscall OpenBabel::OBExternalBondData::SetData(class OpenBabel::OBAtom *,class OpenBabel::OBBond *,int)
 ??1OBExternalBond@OpenBabel@@QAE@XZ @ 1079 NONAME ; public: __thiscall OpenBabel::OBExternalBond::~OBExternalBond(void)
 ??0OBPairData@OpenBabel@@QAE@XZ @ 1080 NONAME ; public: __thiscall OpenBabel::OBPairData::OBPairData(void)
 ??1OBPairData@OpenBabel@@UAE@XZ @ 1081 NONAME ; public: virtual __thiscall OpenBabel::OBPairData::~OBPairData(void)
 ??0OBVirtualBond@OpenBabel@@QAE@XZ @ 1082 NONAME ; public: __thiscall OpenBabel::OBVirtualBond::OBVirtualBond(void)
 ??1OBVirtualBond@OpenBabel@@UAE@XZ @ 1083 NONAME ; public: virtual __thiscall OpenBabel::OBVirtualBond::~OBVirtualBond(void)
 ??0OBVirtualBond@OpenBabel@@QAE@HHHH@Z @ 1084 NONAME ; public: __thiscall OpenBabel::OBVirtualBond::OBVirtualBond(int,int,int,int)
 ??0OBUnitCell@OpenBabel@@QAE@XZ @ 1085 NONAME ; public: __thiscall OpenBabel::OBUnitCell::OBUnitCell(void)
 ??1OBUnitCell@OpenBabel@@UAE@XZ @ 1086 NONAME ; public: virtual __thiscall OpenBabel::OBUnitCell::~OBUnitCell(void)
 ??0OBUnitCell@OpenBabel@@QAE@ABV01@@Z @ 1087 NONAME ; public: __thiscall OpenBabel::OBUnitCell::OBUnitCell(class OpenBabel::OBUnitCell const &)
 ??4OBUnitCell@OpenBabel@@QAEAAV01@ABV01@@Z @ 1088 NONAME ; public: class OpenBabel::OBUnitCell & __thiscall OpenBabel::OBUnitCell::operator=(class OpenBabel::OBUnitCell const &)
 ?SetData@OBUnitCell@OpenBabel@@QAEXVvector3@2@00@Z @ 1089 NONAME ; public: void __thiscall OpenBabel::OBUnitCell::SetData(class OpenBabel::vector3,class OpenBabel::vector3,class OpenBabel::vector3)
 ?GetCellVectors@OBUnitCell@OpenBabel@@QAE?AV?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@XZ @ 1090 NONAME ; public: class std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> > __thiscall OpenBabel::OBUnitCell::GetCellVectors(void)
 ?GetCellMatrix@OBUnitCell@OpenBabel@@QAE?AVmatrix3x3@2@XZ @ 1091 NONAME ; public: class OpenBabel::matrix3x3 __thiscall OpenBabel::OBUnitCell::GetCellMatrix(void)
 ?GetOrthoMatrix@OBUnitCell@OpenBabel@@QAE?AVmatrix3x3@2@XZ @ 1092 NONAME ; public: class OpenBabel::matrix3x3 __thiscall OpenBabel::OBUnitCell::GetOrthoMatrix(void)
 ?Set@matrix3x3@OpenBabel@@QAEXHHN@Z @ 1093 NONAME ; public: void __thiscall OpenBabel::matrix3x3::Set(int,int,double)
 ??0OBRingData@OpenBabel@@QAE@XZ @ 1094 NONAME ; public: __thiscall OpenBabel::OBRingData::OBRingData(void)
 ??0OBRingData@OpenBabel@@QAE@ABV01@@Z @ 1095 NONAME ; public: __thiscall OpenBabel::OBRingData::OBRingData(class OpenBabel::OBRingData const &)
 ??0OBRing@OpenBabel@@QAE@XZ @ 1096 NONAME ; public: __thiscall OpenBabel::OBRing::OBRing(void)
 ??1OBRingData@OpenBabel@@UAE@XZ @ 1097 NONAME ; public: virtual __thiscall OpenBabel::OBRingData::~OBRingData(void)
 ??1OBRing@OpenBabel@@QAE@XZ @ 1098 NONAME ; public: __thiscall OpenBabel::OBRing::~OBRing(void)
 ??4OBRingData@OpenBabel@@QAEAAV01@ABV01@@Z @ 1099 NONAME ; public: class OpenBabel::OBRingData & __thiscall OpenBabel::OBRingData::operator=(class OpenBabel::OBRingData const &)
 ??0OBAngle@OpenBabel@@IAE@XZ @ 1100 NONAME ; protected: __thiscall OpenBabel::OBAngle::OBAngle(void)
 ??0OBAngle@OpenBabel@@IAE@PAVOBAtom@1@00@Z @ 1101 NONAME ; protected: __thiscall OpenBabel::OBAngle::OBAngle(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ??0OBAngle@OpenBabel@@QAE@ABV01@@Z @ 1102 NONAME ; public: __thiscall OpenBabel::OBAngle::OBAngle(class OpenBabel::OBAngle const &)
 ??4OBAngle@OpenBabel@@QAEAAV01@ABV01@@Z @ 1103 NONAME ; public: class OpenBabel::OBAngle & __thiscall OpenBabel::OBAngle::operator=(class OpenBabel::OBAngle const &)
 ?Clear@OBAngle@OpenBabel@@QAEXXZ @ 1104 NONAME ; public: void __thiscall OpenBabel::OBAngle::Clear(void)
 ?SetAtoms@OBAngle@OpenBabel@@QAEXPAVOBAtom@2@00@Z @ 1105 NONAME ; public: void __thiscall OpenBabel::OBAngle::SetAtoms(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?SetAtoms@OBAngle@OpenBabel@@QAEXAAU?$triple@PAVOBAtom@OpenBabel@@PAV12@PAV12@@2@@Z @ 1106 NONAME ; public: void __thiscall OpenBabel::OBAngle::SetAtoms(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> &)
 ?GetAtoms@OBAngle@OpenBabel@@IAE?AU?$triple@PAVOBAtom@OpenBabel@@PAV12@PAV12@@2@XZ @ 1107 NONAME ; protected: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> __thiscall OpenBabel::OBAngle::GetAtoms(void)
 ?SortByIndex@OBAngle@OpenBabel@@IAEXXZ @ 1108 NONAME ; protected: void __thiscall OpenBabel::OBAngle::SortByIndex(void)
 ??8OBAngle@OpenBabel@@QAE_NABV01@@Z @ 1109 NONAME ; public: bool __thiscall OpenBabel::OBAngle::operator==(class OpenBabel::OBAngle const &)
 ??0OBAngleData@OpenBabel@@IAE@XZ @ 1110 NONAME ; protected: __thiscall OpenBabel::OBAngleData::OBAngleData(void)
 ??1OBAngleData@OpenBabel@@UAE@XZ @ 1111 NONAME ; public: virtual __thiscall OpenBabel::OBAngleData::~OBAngleData(void)
 ??0OBAngleData@OpenBabel@@IAE@ABV01@@Z @ 1112 NONAME ; protected: __thiscall OpenBabel::OBAngleData::OBAngleData(class OpenBabel::OBAngleData const &)
 ??4OBAngleData@OpenBabel@@QAEAAV01@ABV01@@Z @ 1113 NONAME ; public: class OpenBabel::OBAngleData & __thiscall OpenBabel::OBAngleData::operator=(class OpenBabel::OBAngleData const &)
 ?Clear@OBAngleData@OpenBabel@@QAEXXZ @ 1114 NONAME ; public: void __thiscall OpenBabel::OBAngleData::Clear(void)
 ?SetData@OBAngleData@OpenBabel@@QAEXAAVOBAngle@2@@Z @ 1115 NONAME ; public: void __thiscall OpenBabel::OBAngleData::SetData(class OpenBabel::OBAngle &)
 ?FillAngleArray@OBAngleData@OpenBabel@@QAEIPAPAHAAI@Z @ 1116 NONAME ; public: unsigned int __thiscall OpenBabel::OBAngleData::FillAngleArray(int * *,unsigned int &)
 ??0OBTorsion@OpenBabel@@IAE@PAVOBAtom@1@000@Z @ 1117 NONAME ; protected: __thiscall OpenBabel::OBTorsion::OBTorsion(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ??0OBTorsion@OpenBabel@@QAE@ABV01@@Z @ 1118 NONAME ; public: __thiscall OpenBabel::OBTorsion::OBTorsion(class OpenBabel::OBTorsion const &)
 ?GetTorsions@OBTorsion@OpenBabel@@IAE?AV?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@XZ @ 1119 NONAME ; protected: class std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > > __thiscall OpenBabel::OBTorsion::GetTorsions(void)
 ??4OBTorsion@OpenBabel@@QAEAAV01@ABV01@@Z @ 1120 NONAME ; public: class OpenBabel::OBTorsion & __thiscall OpenBabel::OBTorsion::operator=(class OpenBabel::OBTorsion const &)
 ?Clear@OBTorsion@OpenBabel@@QAEXXZ @ 1121 NONAME ; public: void __thiscall OpenBabel::OBTorsion::Clear(void)
 ?SetAngle@OBTorsion@OpenBabel@@QAE_NNI@Z @ 1122 NONAME ; public: bool __thiscall OpenBabel::OBTorsion::SetAngle(double,unsigned int)
 ?GetAngle@OBTorsion@OpenBabel@@QAE_NAANI@Z @ 1123 NONAME ; public: bool __thiscall OpenBabel::OBTorsion::GetAngle(double &,unsigned int)
 ?GetBondIdx@OBTorsion@OpenBabel@@QAEIXZ @ 1124 NONAME ; public: unsigned int __thiscall OpenBabel::OBTorsion::GetBondIdx(void)
 ?IsProtonRotor@OBTorsion@OpenBabel@@QAE_NXZ @ 1125 NONAME ; public: bool __thiscall OpenBabel::OBTorsion::IsProtonRotor(void)
 ?AddTorsion@OBTorsion@OpenBabel@@QAE_NPAVOBAtom@2@000@Z @ 1126 NONAME ; public: bool __thiscall OpenBabel::OBTorsion::AddTorsion(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?Empty@OBTorsion@OpenBabel@@QAE_NXZ @ 1127 NONAME ; public: bool __thiscall OpenBabel::OBTorsion::Empty(void)
 ?AddTorsion@OBTorsion@OpenBabel@@QAE_NAAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@2@@Z @ 1128 NONAME ; public: bool __thiscall OpenBabel::OBTorsion::AddTorsion(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> &)
 ??0OBTorsionData@OpenBabel@@IAE@XZ @ 1129 NONAME ; protected: __thiscall OpenBabel::OBTorsionData::OBTorsionData(void)
 ??1OBTorsionData@OpenBabel@@UAE@XZ @ 1130 NONAME ; public: virtual __thiscall OpenBabel::OBTorsionData::~OBTorsionData(void)
 ??0OBTorsionData@OpenBabel@@IAE@ABV01@@Z @ 1131 NONAME ; protected: __thiscall OpenBabel::OBTorsionData::OBTorsionData(class OpenBabel::OBTorsionData const &)
 ??4OBTorsionData@OpenBabel@@QAEAAV01@ABV01@@Z @ 1132 NONAME ; public: class OpenBabel::OBTorsionData & __thiscall OpenBabel::OBTorsionData::operator=(class OpenBabel::OBTorsionData const &)
 ?Clear@OBTorsionData@OpenBabel@@QAEXXZ @ 1133 NONAME ; public: void __thiscall OpenBabel::OBTorsionData::Clear(void)
 ?SetData@OBTorsionData@OpenBabel@@QAEXAAVOBTorsion@2@@Z @ 1134 NONAME ; public: void __thiscall OpenBabel::OBTorsionData::SetData(class OpenBabel::OBTorsion &)
 ?FillTorsionArray@OBTorsionData@OpenBabel@@QAE_NAAV?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@@Z @ 1135 NONAME ; public: bool __thiscall OpenBabel::OBTorsionData::FillTorsionArray(class std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > > &)
 ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z @ 1136 NONAME ; public: void __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::resize(unsigned int,unsigned int const &)
 ??0?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAE@ABV01@@Z @ 1137 NONAME ; public: __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >(class std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> > const &)
 ?clear@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEXXZ @ 1138 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::clear(void)
 ??0?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@VOBExternalBond@OpenBabel@@@1@@Z @ 1139 NONAME ; public: __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >(class std::allocator<class OpenBabel::OBExternalBond> const &)
 ??1?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@QAE@XZ @ 1140 NONAME ; public: __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::~vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >(void)
 ?push_back@?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@QAEXABVOBExternalBond@OpenBabel@@@Z @ 1141 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::push_back(class OpenBabel::OBExternalBond const &)
 ??0?$pair@PAVOBAtom@OpenBabel@@PAV12@@std@@QAE@XZ @ 1142 NONAME ; public: __thiscall std::pair<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>::pair<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>(void)
 ??0?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@1@@Z @ 1143 NONAME ; public: __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >(class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class Open
 ??0?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAE@ABV01@@Z @ 1144 NONAME ; public: __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >(class std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBab
 ??1?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAE@XZ @ 1145 NONAME ; public: __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::~vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >(void)
 ??4?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAEAAV01@ABV01@@Z @ 1146 NONAME ; public: class std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > > & __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::operator=(class std::vector<struct OpenBabel::triple<class OpenBabel:
 ?begin@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAEPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@XZ @ 1147 NONAME ; public: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::begin(void)
 ?end@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAEPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@XZ @ 1148 NONAME ; public: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::end(void)
 ?size@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QBEIXZ @ 1149 NONAME ; public: unsigned int __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::size(void)const 
 ??A?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAEAAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@I@Z @ 1150 NONAME ; public: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> & __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::operator[](unsigned int)
 ?push_back@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAEXABU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@Z @ 1151 NONAME ; public: void __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::push_back(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const &)
 ?erase@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAEPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@PAU34@0@Z @ 1152 NONAME ; public: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::erase(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *)
 ??0?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@VOBTorsion@OpenBabel@@@1@@Z @ 1153 NONAME ; public: __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >(class std::allocator<class OpenBabel::OBTorsion> const &)
 ??0?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAE@ABV01@@Z @ 1154 NONAME ; public: __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >(class std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> > const &)
 ??1?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAE@XZ @ 1155 NONAME ; public: __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::~vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >(void)
 ??4?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAEAAV01@ABV01@@Z @ 1156 NONAME ; public: class std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> > & __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::operator=(class std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> > const &)
 ?begin@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAEPAVOBTorsion@OpenBabel@@XZ @ 1157 NONAME ; public: class OpenBabel::OBTorsion * __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::begin(void)
 ?end@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAEPAVOBTorsion@OpenBabel@@XZ @ 1158 NONAME ; public: class OpenBabel::OBTorsion * __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::end(void)
 ?size@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QBEIXZ @ 1159 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::size(void)const 
 ?push_back@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAEXABVOBTorsion@OpenBabel@@@Z @ 1160 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::push_back(class OpenBabel::OBTorsion const &)
 ?clear@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAEXXZ @ 1161 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::clear(void)
 ??0?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@VOBAngle@OpenBabel@@@1@@Z @ 1162 NONAME ; public: __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >(class std::allocator<class OpenBabel::OBAngle> const &)
 ??0?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAE@ABV01@@Z @ 1163 NONAME ; public: __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >(class std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> > const &)
 ??1?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAE@XZ @ 1164 NONAME ; public: __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::~vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >(void)
 ??4?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAEAAV01@ABV01@@Z @ 1165 NONAME ; public: class std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> > & __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::operator=(class std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> > const &)
 ?begin@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAEPAVOBAngle@OpenBabel@@XZ @ 1166 NONAME ; public: class OpenBabel::OBAngle * __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::begin(void)
 ?end@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAEPAVOBAngle@OpenBabel@@XZ @ 1167 NONAME ; public: class OpenBabel::OBAngle * __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::end(void)
 ?size@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QBEIXZ @ 1168 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::size(void)const 
 ?push_back@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAEXABVOBAngle@OpenBabel@@@Z @ 1169 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::push_back(class OpenBabel::OBAngle const &)
 ?clear@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAEXXZ @ 1170 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::clear(void)
 ??0?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAE@ABV01@@Z @ 1171 NONAME ; public: __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >(class std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> > const &)
 ?reserve@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QAEXI@Z @ 1172 NONAME ; public: void __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::reserve(unsigned int)
 ??0?$triple@PAVOBAtom@OpenBabel@@PAV12@PAV12@@OpenBabel@@QAE@XZ @ 1173 NONAME ; public: __thiscall OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>(void)
 ??0?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@QAE@ABQAVOBAtom@1@0ABN@Z @ 1174 NONAME ; public: __thiscall OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>(class OpenBabel::OBAtom * const &,class OpenBabel::OBAtom * const &,double const &)
 ??0?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@1@@Z @ 1175 NONAME ; public: __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OB
 ??0?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QAE@ABV01@@Z @ 1176 NONAME ; public: __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OB
 ??1?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QAE@XZ @ 1177 NONAME ; public: __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::~vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::O
 ??4?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QAEAAV01@ABV01@@Z @ 1178 NONAME ; public: class std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > > & __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class O
 ?begin@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QAEPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@XZ @ 1179 NONAME ; public: struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> * __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::begin(void)
 ?end@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QAEPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@XZ @ 1180 NONAME ; public: struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> * __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::end(void)
 ?size@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QBEIXZ @ 1181 NONAME ; public: unsigned int __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::size(void)const 
 ?push_back@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QAEXABU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@Z @ 1182 NONAME ; public: void __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::push_back(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> const &)
 ??0?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@QAE@XZ @ 1183 NONAME ; public: __thiscall OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>(void)
 ?resize@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAEXIABV?$vector@IV?$allocator@I@std@@@2@@Z @ 1184 NONAME ; public: void __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::resize(unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > const &)
 ??A?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAEAAV?$vector@IV?$allocator@I@std@@@1@I@Z @ 1185 NONAME ; public: class std::vector<unsigned int,class std::allocator<unsigned int> > & __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::operator[](unsigned int)
 ?clear@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAEXXZ @ 1186 NONAME ; public: void __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::clear(void)
 ?erase@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEPAPAVOBRing@OpenBabel@@PAPAV34@0@Z @ 1187 NONAME ; public: class OpenBabel::OBRing * * __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::erase(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *)
 ?end@?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@QAEPAVOBExternalBond@OpenBabel@@XZ @ 1188 NONAME ; public: class OpenBabel::OBExternalBond * __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::end(void)
 ?insert@?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@QAEPAVOBExternalBond@OpenBabel@@PAV34@ABV34@@Z @ 1189 NONAME ; public: class OpenBabel::OBExternalBond * __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::insert(class OpenBabel::OBExternalBond *,class OpenBabel::OBExternalBond const &)
 ?_Destroy@?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@IAEXPAVOBExternalBond@OpenBabel@@0@Z @ 1190 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::_Destroy(class OpenBabel::OBExternalBond *,class OpenBabel::OBExternalBond *)
 ?deallocate@?$allocator@VOBExternalBond@OpenBabel@@@std@@QAEXPAXI@Z @ 1191 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBExternalBond>::deallocate(void *,unsigned int)
 ?capacity@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QBEIXZ @ 1192 NONAME ; public: unsigned int __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::capacity(void)const 
 ?begin@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QBEPBU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@XZ @ 1193 NONAME ; public: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const * __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::begin(void)const 
 ?end@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QBEPBU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@XZ @ 1194 NONAME ; public: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const * __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::end(void)const 
 ?insert@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAEPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@PAU34@ABU34@@Z @ 1195 NONAME ; public: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::insert(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const &)
 ?_Destroy@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@IAEXPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@0@Z @ 1196 NONAME ; protected: void __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::_Destroy(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *)
 ?_Ucopy@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@IAEPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@PBU34@0PAU34@@Z @ 1197 NONAME ; protected: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::_Ucopy(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const *,s
 ?allocate@?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@QAEPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@IPBX@Z @ 1198 NONAME ; public: struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __thiscall std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> >::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@QAEXPAXI@Z @ 1199 NONAME ; public: void __thiscall std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> >::deallocate(void *,unsigned int)
 ?capacity@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QBEIXZ @ 1200 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::capacity(void)const 
 ?begin@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QBEPBVOBTorsion@OpenBabel@@XZ @ 1201 NONAME ; public: class OpenBabel::OBTorsion const * __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::begin(void)const 
 ?end@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QBEPBVOBTorsion@OpenBabel@@XZ @ 1202 NONAME ; public: class OpenBabel::OBTorsion const * __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::end(void)const 
 ?insert@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAEPAVOBTorsion@OpenBabel@@PAV34@ABV34@@Z @ 1203 NONAME ; public: class OpenBabel::OBTorsion * __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::insert(class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion const &)
 ?erase@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAEPAVOBTorsion@OpenBabel@@PAV34@0@Z @ 1204 NONAME ; public: class OpenBabel::OBTorsion * __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::erase(class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion *)
 ?_Destroy@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@IAEXPAVOBTorsion@OpenBabel@@0@Z @ 1205 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::_Destroy(class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion *)
 ?_Ucopy@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@IAEPAVOBTorsion@OpenBabel@@PBV34@0PAV34@@Z @ 1206 NONAME ; protected: class OpenBabel::OBTorsion * __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::_Ucopy(class OpenBabel::OBTorsion const *,class OpenBabel::OBTorsion const *,class OpenBabel::OBTorsion *)
 ?allocate@?$allocator@VOBTorsion@OpenBabel@@@std@@QAEPAVOBTorsion@OpenBabel@@IPBX@Z @ 1207 NONAME ; public: class OpenBabel::OBTorsion * __thiscall std::allocator<class OpenBabel::OBTorsion>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@VOBTorsion@OpenBabel@@@std@@QAEXPAXI@Z @ 1208 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBTorsion>::deallocate(void *,unsigned int)
 ?capacity@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QBEIXZ @ 1209 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::capacity(void)const 
 ?begin@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QBEPBVOBAngle@OpenBabel@@XZ @ 1210 NONAME ; public: class OpenBabel::OBAngle const * __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::begin(void)const 
 ?end@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QBEPBVOBAngle@OpenBabel@@XZ @ 1211 NONAME ; public: class OpenBabel::OBAngle const * __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::end(void)const 
 ?insert@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAEPAVOBAngle@OpenBabel@@PAV34@ABV34@@Z @ 1212 NONAME ; public: class OpenBabel::OBAngle * __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::insert(class OpenBabel::OBAngle *,class OpenBabel::OBAngle const &)
 ?erase@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAEPAVOBAngle@OpenBabel@@PAV34@0@Z @ 1213 NONAME ; public: class OpenBabel::OBAngle * __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::erase(class OpenBabel::OBAngle *,class OpenBabel::OBAngle *)
 ?_Destroy@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@IAEXPAVOBAngle@OpenBabel@@0@Z @ 1214 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::_Destroy(class OpenBabel::OBAngle *,class OpenBabel::OBAngle *)
 ?_Ucopy@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@IAEPAVOBAngle@OpenBabel@@PBV34@0PAV34@@Z @ 1215 NONAME ; protected: class OpenBabel::OBAngle * __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::_Ucopy(class OpenBabel::OBAngle const *,class OpenBabel::OBAngle const *,class OpenBabel::OBAngle *)
 ?allocate@?$allocator@VOBAngle@OpenBabel@@@std@@QAEPAVOBAngle@OpenBabel@@IPBX@Z @ 1216 NONAME ; public: class OpenBabel::OBAngle * __thiscall std::allocator<class OpenBabel::OBAngle>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@VOBAngle@OpenBabel@@@std@@QAEXPAXI@Z @ 1217 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBAngle>::deallocate(void *,unsigned int)
 ?capacity@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QBEIXZ @ 1218 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::capacity(void)const 
 ?begin@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QBEPBVvector3@OpenBabel@@XZ @ 1219 NONAME ; public: class OpenBabel::vector3 const * __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::begin(void)const 
 ?end@?$vector@Vvector3@OpenBabel@@V?$allocator@Vvector3@OpenBabel@@@std@@@std@@QBEPBVvector3@OpenBabel@@XZ @ 1220 NONAME ; public: class OpenBabel::vector3 const * __thiscall std::vector<class OpenBabel::vector3,class std::allocator<class OpenBabel::vector3> >::end(void)const 
 ?capacity@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QBEIXZ @ 1221 NONAME ; public: unsigned int __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::capacity(void)const 
 ?begin@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QBEPBU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@XZ @ 1222 NONAME ; public: struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> const * __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::begin(void)const 
 ?end@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QBEPBU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@XZ @ 1223 NONAME ; public: struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> const * __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::end(void)const 
 ?insert@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QAEPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@PAU34@ABU34@@Z @ 1224 NONAME ; public: struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> * __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::insert(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBa
 ?_Destroy@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@IAEXPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@0@Z @ 1225 NONAME ; protected: void __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::_Destroy(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *,struct OpenBabel::quad<class OpenBabel::OBAtom *,cl
 ?_Ucopy@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@IAEPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@PBU34@0PAU34@@Z @ 1226 NONAME ; protected: struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> * __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::_Ucopy(struct OpenBabel::quad<class OpenBabel::OBAtom *,class Ope
 ?allocate@?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@QAEPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@IPBX@Z @ 1227 NONAME ; public: struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> * __thiscall std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> >::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@QAEXPAXI@Z @ 1228 NONAME ; public: void __thiscall std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> >::deallocate(void *,unsigned int)
 ?begin@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAEPAV?$vector@IV?$allocator@I@std@@@2@XZ @ 1229 NONAME ; public: class std::vector<unsigned int,class std::allocator<unsigned int> > * __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::begin(void)
 ?end@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAEPAV?$vector@IV?$allocator@I@std@@@2@XZ @ 1230 NONAME ; public: class std::vector<unsigned int,class std::allocator<unsigned int> > * __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::end(void)
 ?size@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QBEIXZ @ 1231 NONAME ; public: unsigned int __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::size(void)const 
 ?insert@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAEXPAV?$vector@IV?$allocator@I@std@@@2@IABV32@@Z @ 1232 NONAME ; public: void __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::insert(class std::vector<unsigned int,class std::allocator<unsigned int> > *,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > const &)
 ?erase@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QAEPAV?$vector@IV?$allocator@I@std@@@2@PAV32@0@Z @ 1233 NONAME ; public: class std::vector<unsigned int,class std::allocator<unsigned int> > * __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::erase(class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > *)
 ?begin@?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@QAEPAVOBExternalBond@OpenBabel@@XZ @ 1234 NONAME ; public: class OpenBabel::OBExternalBond * __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::begin(void)
 ?insert@?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@QAEXPAVOBExternalBond@OpenBabel@@IABV34@@Z @ 1235 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::insert(class OpenBabel::OBExternalBond *,unsigned int,class OpenBabel::OBExternalBond const &)
 ?destroy@?$allocator@VOBExternalBond@OpenBabel@@@std@@QAEXPAVOBExternalBond@OpenBabel@@@Z @ 1236 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBExternalBond>::destroy(class OpenBabel::OBExternalBond *)
 ?insert@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@QAEXPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@IABU34@@Z @ 1237 NONAME ; public: void __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::insert(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,unsigned int,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const &)
 ?construct@?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@QAEXPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@ABU34@@Z @ 1238 NONAME ; public: void __thiscall std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> >::construct(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const &)
 ?destroy@?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@QAEXPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@Z @ 1239 NONAME ; public: void __thiscall std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> >::destroy(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *)
 ?insert@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@QAEXPAVOBTorsion@OpenBabel@@IABV34@@Z @ 1240 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::insert(class OpenBabel::OBTorsion *,unsigned int,class OpenBabel::OBTorsion const &)
 ?construct@?$allocator@VOBTorsion@OpenBabel@@@std@@QAEXPAVOBTorsion@OpenBabel@@ABV34@@Z @ 1241 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBTorsion>::construct(class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion const &)
 ?destroy@?$allocator@VOBTorsion@OpenBabel@@@std@@QAEXPAVOBTorsion@OpenBabel@@@Z @ 1242 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBTorsion>::destroy(class OpenBabel::OBTorsion *)
 ?insert@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@QAEXPAVOBAngle@OpenBabel@@IABV34@@Z @ 1243 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::insert(class OpenBabel::OBAngle *,unsigned int,class OpenBabel::OBAngle const &)
 ?construct@?$allocator@VOBAngle@OpenBabel@@@std@@QAEXPAVOBAngle@OpenBabel@@ABV34@@Z @ 1244 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBAngle>::construct(class OpenBabel::OBAngle *,class OpenBabel::OBAngle const &)
 ?destroy@?$allocator@VOBAngle@OpenBabel@@@std@@QAEXPAVOBAngle@OpenBabel@@@Z @ 1245 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBAngle>::destroy(class OpenBabel::OBAngle *)
 ?insert@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@QAEXPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@IABU34@@Z @ 1246 NONAME ; public: void __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::insert(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *,unsigned int,struct OpenBabel::quad<class OpenBabel::OBA
 ?construct@?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@QAEXPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@ABU34@@Z @ 1247 NONAME ; public: void __thiscall std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> >::construct(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *,struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> const &)
 ?destroy@?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@QAEXPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@Z @ 1248 NONAME ; public: void __thiscall std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> >::destroy(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *)
 ?_Destroy@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@IAEXPAV?$vector@IV?$allocator@I@std@@@2@0@Z @ 1249 NONAME ; protected: void __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::_Destroy(class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > *)
 ?_Ucopy@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@IAEPAV?$vector@IV?$allocator@I@std@@@2@PBV32@0PAV32@@Z @ 1250 NONAME ; protected: class std::vector<unsigned int,class std::allocator<unsigned int> > * __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::_Ucopy(class std::vector<unsigned int,class std::allocator<unsigned int> > const *,class std::vector<unsigned int,class std::allocator<unsigned int> > const *,class std::vector<unsigned int,class std::allocator<unsigned int> > *)
 ?_Ufill@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@IAEXPAV?$vector@IV?$allocator@I@std@@@2@IABV32@@Z @ 1251 NONAME ; protected: void __thiscall std::vector<class std::vector<unsigned int,class std::allocator<unsigned int> >,class std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > > >::_Ufill(class std::vector<unsigned int,class std::allocator<unsigned int> > *,unsigned int,class std::vector<unsigned int,class std::allocator<unsigned int> > const &)
 ?allocate@?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@std@@QAEPAV?$vector@IV?$allocator@I@std@@@2@IPBX@Z @ 1252 NONAME ; public: class std::vector<unsigned int,class std::allocator<unsigned int> > * __thiscall std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > >::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@std@@QAEXPAXI@Z @ 1253 NONAME ; public: void __thiscall std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > >::deallocate(void *,unsigned int)
 ?size@?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@QBEIXZ @ 1254 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::size(void)const 
 ?_Ucopy@?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@IAEPAVOBExternalBond@OpenBabel@@PBV34@0PAV34@@Z @ 1255 NONAME ; protected: class OpenBabel::OBExternalBond * __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::_Ucopy(class OpenBabel::OBExternalBond const *,class OpenBabel::OBExternalBond const *,class OpenBabel::OBExternalBond *)
 ?_Ufill@?$vector@VOBExternalBond@OpenBabel@@V?$allocator@VOBExternalBond@OpenBabel@@@std@@@std@@IAEXPAVOBExternalBond@OpenBabel@@IABV34@@Z @ 1256 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBExternalBond,class std::allocator<class OpenBabel::OBExternalBond> >::_Ufill(class OpenBabel::OBExternalBond *,unsigned int,class OpenBabel::OBExternalBond const &)
 ?allocate@?$allocator@VOBExternalBond@OpenBabel@@@std@@QAEPAVOBExternalBond@OpenBabel@@IPBX@Z @ 1257 NONAME ; public: class OpenBabel::OBExternalBond * __thiscall std::allocator<class OpenBabel::OBExternalBond>::allocate(unsigned int,void const *)
 ?_Ufill@?$vector@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@V?$allocator@U?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@std@@@std@@IAEXPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@IABU34@@Z @ 1258 NONAME ; protected: void __thiscall std::vector<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double>,class std::allocator<struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> > >::_Ufill(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,unsigned int,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const &)
 ?_Ufill@?$vector@VOBTorsion@OpenBabel@@V?$allocator@VOBTorsion@OpenBabel@@@std@@@std@@IAEXPAVOBTorsion@OpenBabel@@IABV34@@Z @ 1259 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBTorsion,class std::allocator<class OpenBabel::OBTorsion> >::_Ufill(class OpenBabel::OBTorsion *,unsigned int,class OpenBabel::OBTorsion const &)
 ?_Ufill@?$vector@VOBAngle@OpenBabel@@V?$allocator@VOBAngle@OpenBabel@@@std@@@std@@IAEXPAVOBAngle@OpenBabel@@IABV34@@Z @ 1260 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBAngle,class std::allocator<class OpenBabel::OBAngle> >::_Ufill(class OpenBabel::OBAngle *,unsigned int,class OpenBabel::OBAngle const &)
 ?_Ufill@?$vector@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@V?$allocator@U?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@std@@@std@@IAEXPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@IABU34@@Z @ 1261 NONAME ; protected: void __thiscall std::vector<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *>,class std::allocator<struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> > >::_Ufill(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *,unsigned int,struct OpenBabel::quad<class OpenBabel::
 ?construct@?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@std@@QAEXPAV?$vector@IV?$allocator@I@std@@@2@ABV32@@Z @ 1262 NONAME ; public: void __thiscall std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > >::construct(class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > const &)
 ?destroy@?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@std@@QAEXPAV?$vector@IV?$allocator@I@std@@@2@@Z @ 1263 NONAME ; public: void __thiscall std::allocator<class std::vector<unsigned int,class std::allocator<unsigned int> > >::destroy(class std::vector<unsigned int,class std::allocator<unsigned int> > *)
 ?construct@?$allocator@VOBExternalBond@OpenBabel@@@std@@QAEXPAVOBExternalBond@OpenBabel@@ABV34@@Z @ 1264 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBExternalBond>::construct(class OpenBabel::OBExternalBond *,class OpenBabel::OBExternalBond const &)
 ?copy@std@@YAPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@PBU23@0PAU23@@Z @ 1265 NONAME ; struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __cdecl std::copy(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *)
 ?copy@std@@YAPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@PAU23@00@Z @ 1266 NONAME ; struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __cdecl std::copy(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *)
 ?copy@std@@YAPAVOBTorsion@OpenBabel@@PBV23@0PAV23@@Z @ 1267 NONAME ; class OpenBabel::OBTorsion * __cdecl std::copy(class OpenBabel::OBTorsion const *,class OpenBabel::OBTorsion const *,class OpenBabel::OBTorsion *)
 ?copy@std@@YAPAVOBAngle@OpenBabel@@PBV23@0PAV23@@Z @ 1268 NONAME ; class OpenBabel::OBAngle * __cdecl std::copy(class OpenBabel::OBAngle const *,class OpenBabel::OBAngle const *,class OpenBabel::OBAngle *)
 ?copy@std@@YAPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@PBU23@0PAU23@@Z @ 1269 NONAME ; struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> * __cdecl std::copy(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> const *,struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> const *,struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel:
 ?copy@std@@YAPAPAVOBRing@OpenBabel@@PAPAV23@00@Z @ 1270 NONAME ; class OpenBabel::OBRing * * __cdecl std::copy(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,class OpenBabel::OBRing * *)
 ?_Allocate@std@@YAPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@HPAU23@@Z @ 1271 NONAME ; struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __cdecl std::_Allocate(int,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *)
 ?copy@std@@YAPAVOBTorsion@OpenBabel@@PAV23@00@Z @ 1272 NONAME ; class OpenBabel::OBTorsion * __cdecl std::copy(class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion *)
 ?_Allocate@std@@YAPAVOBTorsion@OpenBabel@@HPAV23@@Z @ 1273 NONAME ; class OpenBabel::OBTorsion * __cdecl std::_Allocate(int,class OpenBabel::OBTorsion *)
 ?copy@std@@YAPAVOBAngle@OpenBabel@@PAV23@00@Z @ 1274 NONAME ; class OpenBabel::OBAngle * __cdecl std::copy(class OpenBabel::OBAngle *,class OpenBabel::OBAngle *,class OpenBabel::OBAngle *)
 ?_Allocate@std@@YAPAVOBAngle@OpenBabel@@HPAV23@@Z @ 1275 NONAME ; class OpenBabel::OBAngle * __cdecl std::_Allocate(int,class OpenBabel::OBAngle *)
 ?_Allocate@std@@YAPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@HPAU23@@Z @ 1276 NONAME ; struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> * __cdecl std::_Allocate(int,struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *)
 ?fill@std@@YAXPAV?$vector@IV?$allocator@I@std@@@1@0ABV21@@Z @ 1277 NONAME ; void __cdecl std::fill(class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > const &)
 ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z @ 1278 NONAME ; public: class std::vector<unsigned int,class std::allocator<unsigned int> > & __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::operator=(class std::vector<unsigned int,class std::allocator<unsigned int> > const &)
 ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ @ 1279 NONAME ; public: unsigned int __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::capacity(void)const 
 ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ @ 1280 NONAME ; public: unsigned int const * __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::begin(void)const 
 ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ @ 1281 NONAME ; public: unsigned int const * __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::end(void)const 
 ?copy@std@@YAPAIPBI0PAI@Z @ 1282 NONAME ; unsigned int * __cdecl std::copy(unsigned int const *,unsigned int const *,unsigned int *)
 ?copy_backward@std@@YAPAV?$vector@IV?$allocator@I@std@@@1@PAV21@00@Z @ 1283 NONAME ; class std::vector<unsigned int,class std::allocator<unsigned int> > * __cdecl std::copy_backward(class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > *)
 ?copy@std@@YAPAV?$vector@IV?$allocator@I@std@@@1@PAV21@00@Z @ 1284 NONAME ; class std::vector<unsigned int,class std::allocator<unsigned int> > * __cdecl std::copy(class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > *)
 ?fill@std@@YAXPAVOBExternalBond@OpenBabel@@0ABV23@@Z @ 1285 NONAME ; void __cdecl std::fill(class OpenBabel::OBExternalBond *,class OpenBabel::OBExternalBond *,class OpenBabel::OBExternalBond const &)
 ?copy_backward@std@@YAPAVOBExternalBond@OpenBabel@@PAV23@00@Z @ 1286 NONAME ; class OpenBabel::OBExternalBond * __cdecl std::copy_backward(class OpenBabel::OBExternalBond *,class OpenBabel::OBExternalBond *,class OpenBabel::OBExternalBond *)
 ?_Destroy@std@@YAXPAVOBExternalBond@OpenBabel@@@Z @ 1287 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBExternalBond *)
 ?fill@std@@YAXPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@0ABU23@@Z @ 1288 NONAME ; void __cdecl std::fill(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const &)
 ?copy_backward@std@@YAPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@PAU23@00@Z @ 1289 NONAME ; struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> * __cdecl std::copy_backward(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *)
 ?_Construct@std@@YAXPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@ABU23@@Z @ 1290 NONAME ; void __cdecl std::_Construct(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *,struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> const &)
 ?_Destroy@std@@YAXPAU?$triple@PAVOBAtom@OpenBabel@@PAV12@N@OpenBabel@@@Z @ 1291 NONAME ; void __cdecl std::_Destroy(struct OpenBabel::triple<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double> *)
 ?fill@std@@YAXPAVOBTorsion@OpenBabel@@0ABV23@@Z @ 1292 NONAME ; void __cdecl std::fill(class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion const &)
 ?copy_backward@std@@YAPAVOBTorsion@OpenBabel@@PAV23@00@Z @ 1293 NONAME ; class OpenBabel::OBTorsion * __cdecl std::copy_backward(class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion *)
 ?_Construct@std@@YAXPAVOBTorsion@OpenBabel@@ABV23@@Z @ 1294 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBTorsion *,class OpenBabel::OBTorsion const &)
 ?_Destroy@std@@YAXPAVOBTorsion@OpenBabel@@@Z @ 1295 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBTorsion *)
 ?fill@std@@YAXPAVOBAngle@OpenBabel@@0ABV23@@Z @ 1296 NONAME ; void __cdecl std::fill(class OpenBabel::OBAngle *,class OpenBabel::OBAngle *,class OpenBabel::OBAngle const &)
 ?copy_backward@std@@YAPAVOBAngle@OpenBabel@@PAV23@00@Z @ 1297 NONAME ; class OpenBabel::OBAngle * __cdecl std::copy_backward(class OpenBabel::OBAngle *,class OpenBabel::OBAngle *,class OpenBabel::OBAngle *)
 ?_Construct@std@@YAXPAVOBAngle@OpenBabel@@ABV23@@Z @ 1298 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBAngle *,class OpenBabel::OBAngle const &)
 ?_Destroy@std@@YAXPAVOBAngle@OpenBabel@@@Z @ 1299 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBAngle *)
 ?fill@std@@YAXPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@0ABU23@@Z @ 1300 NONAME ; void __cdecl std::fill(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *,struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *,struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> const &)
 ?copy_backward@std@@YAPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@PAU23@00@Z @ 1301 NONAME ; struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> * __cdecl std::copy_backward(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *,struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *,struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OB
 ?_Construct@std@@YAXPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@ABU23@@Z @ 1302 NONAME ; void __cdecl std::_Construct(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *,struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> const &)
 ?_Destroy@std@@YAXPAU?$quad@PAVOBAtom@OpenBabel@@PAV12@PAV12@PAV12@@OpenBabel@@@Z @ 1303 NONAME ; void __cdecl std::_Destroy(struct OpenBabel::quad<class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *> *)
 ?_Allocate@std@@YAPAV?$vector@IV?$allocator@I@std@@@1@HPAV21@@Z @ 1304 NONAME ; class std::vector<unsigned int,class std::allocator<unsigned int> > * __cdecl std::_Allocate(int,class std::vector<unsigned int,class std::allocator<unsigned int> > *)
 ?_Allocate@std@@YAPAVOBExternalBond@OpenBabel@@HPAV23@@Z @ 1305 NONAME ; class OpenBabel::OBExternalBond * __cdecl std::_Allocate(int,class OpenBabel::OBExternalBond *)
 ?_Construct@std@@YAXPAV?$vector@IV?$allocator@I@std@@@1@ABV21@@Z @ 1306 NONAME ; void __cdecl std::_Construct(class std::vector<unsigned int,class std::allocator<unsigned int> > *,class std::vector<unsigned int,class std::allocator<unsigned int> > const &)
 ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z @ 1307 NONAME ; public: __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::vector<unsigned int,class std::allocator<unsigned int> >(class std::vector<unsigned int,class std::allocator<unsigned int> > const &)
 ?_Destroy@std@@YAXPAV?$vector@IV?$allocator@I@std@@@1@@Z @ 1308 NONAME ; void __cdecl std::_Destroy(class std::vector<unsigned int,class std::allocator<unsigned int> > *)
 ?_Construct@std@@YAXPAVOBExternalBond@OpenBabel@@ABV23@@Z @ 1309 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBExternalBond *,class OpenBabel::OBExternalBond const &)
 ??1OBTorsion@OpenBabel@@QAE@XZ @ 1310 NONAME ; public: __thiscall OpenBabel::OBTorsion::~OBTorsion(void)
 ??1OBAngle@OpenBabel@@QAE@XZ @ 1311 NONAME ; public: __thiscall OpenBabel::OBAngle::~OBAngle(void)
 ?Setup@OBProxGrid@OpenBabel@@QAEXAAVOBMol@2@0NN@Z @ 1312 NONAME ; public: void __thiscall OpenBabel::OBProxGrid::Setup(class OpenBabel::OBMol &,class OpenBabel::OBMol &,double,double)
 ?GetCoordinates@OBMol@OpenBabel@@QAEPANXZ @ 1313 NONAME ; public: double * __thiscall OpenBabel::OBMol::GetCoordinates(void)
 ?PointIsInBox@OBProxGrid@OpenBabel@@QAE_NNNN@Z @ 1314 NONAME ; public: bool __thiscall OpenBabel::OBProxGrid::PointIsInBox(double,double,double)
 ?Setup@OBProxGrid@OpenBabel@@QAEXAAVOBMol@2@0NAAV?$vector@_NV?$allocator@_N@std@@@std@@N@Z @ 1315 NONAME ; public: void __thiscall OpenBabel::OBProxGrid::Setup(class OpenBabel::OBMol &,class OpenBabel::OBMol &,double,class std::vector<bool,class std::allocator<bool> > &,double)
 ?GetProxVector@OBProxGrid@OpenBabel@@QAEPAV?$vector@HV?$allocator@H@std@@@std@@NNN@Z @ 1316 NONAME ; public: class std::vector<int,class std::allocator<int> > * __thiscall OpenBabel::OBProxGrid::GetProxVector(double,double,double)
 ?GetProxVector@OBProxGrid@OpenBabel@@QAEPAV?$vector@HV?$allocator@H@std@@@std@@PAN@Z @ 1317 NONAME ; public: class std::vector<int,class std::allocator<int> > * __thiscall OpenBabel::OBProxGrid::GetProxVector(double *)
 ?Init@OBFloatGrid@OpenBabel@@QAEXAAVOBMol@2@NN@Z @ 1318 NONAME ; public: void __thiscall OpenBabel::OBFloatGrid::Init(class OpenBabel::OBMol &,double,double)
 ?IndexToCoords@OBFloatGrid@OpenBabel@@QAEXHAAN00@Z @ 1319 NONAME ; public: void __thiscall OpenBabel::OBFloatGrid::IndexToCoords(int,double &,double &,double &)
 ?CoordsToIndex@OBFloatGrid@OpenBabel@@QAEHAAN00@Z @ 1320 NONAME ; public: int __thiscall OpenBabel::OBFloatGrid::CoordsToIndex(double &,double &,double &)
 ?CoordsToIndex@OBFloatGrid@OpenBabel@@QAEXPAHPAN@Z @ 1321 NONAME ; public: void __thiscall OpenBabel::OBFloatGrid::CoordsToIndex(int *,double *)
 ?Interpolate@OBFloatGrid@OpenBabel@@QAENNNN@Z @ 1322 NONAME ; public: double __thiscall OpenBabel::OBFloatGrid::Interpolate(double,double,double)
 ?InterpolateDerivatives@OBFloatGrid@OpenBabel@@QAENNNNPAN@Z @ 1323 NONAME ; public: double __thiscall OpenBabel::OBFloatGrid::InterpolateDerivatives(double,double,double,double *)
 ??6OpenBabel@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVOBFloatGrid@0@@Z @ 1324 NONAME ; class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl OpenBabel::operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBFloatGrid const &)
 ??5OpenBabel@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAV12@AAVOBFloatGrid@0@@Z @ 1325 NONAME ; class std::basic_istream<char,struct std::char_traits<char> > & __cdecl OpenBabel::operator>>(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBFloatGrid &)
 ??A?$vector@_NV?$allocator@_N@std@@@std@@QAEAA_NI@Z @ 1326 NONAME ; public: bool & __thiscall std::vector<bool,class std::allocator<bool> >::operator[](unsigned int)
 ?resize@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEXIABV?$vector@HV?$allocator@H@std@@@2@@Z @ 1327 NONAME ; public: void __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::resize(unsigned int,class std::vector<int,class std::allocator<int> > const &)
 ?begin@?$vector@_NV?$allocator@_N@std@@@std@@QAEPA_NXZ @ 1328 NONAME ; public: bool * __thiscall std::vector<bool,class std::allocator<bool> >::begin(void)
 ?erase@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEPAV?$vector@HV?$allocator@H@std@@@2@PAV32@0@Z @ 1329 NONAME ; public: class std::vector<int,class std::allocator<int> > * __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::erase(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *)
 ?copy@std@@YAPAV?$vector@HV?$allocator@H@std@@@1@PAV21@00@Z @ 1330 NONAME ; class std::vector<int,class std::allocator<int> > * __cdecl std::copy(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *)
 ?ReadHIN@OpenBabel@@YA_NAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@PBD@Z @ 1331 NONAME ; bool __cdecl OpenBabel::ReadHIN(class std::basic_istream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &,char const *)
 ?WriteHIN@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 1332 NONAME ; bool __cdecl OpenBabel::WriteHIN(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?print_matrix@OpenBabel@@YAXAAV?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@@Z @ 1333 NONAME ; void __cdecl OpenBabel::print_matrix(class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &)
 ?print_matrix_f@OpenBabel@@YAXPANHH@Z @ 1334 NONAME ; void __cdecl OpenBabel::print_matrix_f(double *,int,int)
 ?print_matrix_ff@OpenBabel@@YAXPAPANHH@Z @ 1335 NONAME ; void __cdecl OpenBabel::print_matrix_ff(double * *,int,int)
 ?mult_matrix@OpenBabel@@YA_NAAV?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@00@Z @ 1336 NONAME ; bool __cdecl OpenBabel::mult_matrix(class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &,class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &,class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &)
 ?mult_matrix_f@OpenBabel@@YA_NPAN00HH@Z @ 1337 NONAME ; bool __cdecl OpenBabel::mult_matrix_f(double *,double *,double *,int,int)
 ?mult_matrix_ff@OpenBabel@@YA_NPAPAN00HH@Z @ 1338 NONAME ; bool __cdecl OpenBabel::mult_matrix_ff(double * *,double * *,double * *,int,int)
 ?invert_matrix@OpenBabel@@YA_NAAV?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@AAN@Z @ 1339 NONAME ; bool __cdecl OpenBabel::invert_matrix(class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &,double &)
 ?invert_matrix_f@OpenBabel@@YA_NPANAANHH@Z @ 1340 NONAME ; bool __cdecl OpenBabel::invert_matrix_f(double *,double &,int,int)
 ?invert_matrix_ff@OpenBabel@@YA_NPAPANAANHH@Z @ 1341 NONAME ; bool __cdecl OpenBabel::invert_matrix_ff(double * *,double &,int,int)
 ?convert_matrix_f@OpenBabel@@YA_NAAV?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@PAN@Z @ 1342 NONAME ; bool __cdecl OpenBabel::convert_matrix_f(class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &,double *)
 ?convert_matrix_ff@OpenBabel@@YA_NAAV?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@PAPAN@Z @ 1343 NONAME ; bool __cdecl OpenBabel::convert_matrix_ff(class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &,double * *)
 ?convert_matrix_f@OpenBabel@@YA_NPANAAV?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@HH@Z @ 1344 NONAME ; bool __cdecl OpenBabel::convert_matrix_f(double *,class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &,int,int)
 ?convert_matrix_ff@OpenBabel@@YA_NPAPANAAV?$vector@V?$vector@NV?$allocator@N@std@@@std@@V?$allocator@V?$vector@NV?$allocator@N@std@@@std@@@2@@std@@HH@Z @ 1345 NONAME ; bool __cdecl OpenBabel::convert_matrix_ff(double * *,class std::vector<class std::vector<double,class std::allocator<double> >,class std::allocator<class std::vector<double,class std::allocator<double> > > > &,int,int)
 ?convert_matrix_f_ff@OpenBabel@@YA_NPANPAPANHH@Z @ 1346 NONAME ; bool __cdecl OpenBabel::convert_matrix_f_ff(double *,double * *,int,int)
 ?convert_matrix_ff_f@OpenBabel@@YA_NPAPANPANHH@Z @ 1347 NONAME ; bool __cdecl OpenBabel::convert_matrix_ff_f(double * *,double *,int,int)
 ?randomRotation@matrix3x3@OpenBabel@@QAEXAAVOBRandom@2@@Z @ 1348 NONAME ; public: void __thiscall OpenBabel::matrix3x3::randomRotation(class OpenBabel::OBRandom &)
 ?SetupRotMat@matrix3x3@OpenBabel@@QAEXNNN@Z @ 1349 NONAME ; public: void __thiscall OpenBabel::matrix3x3::SetupRotMat(double,double,double)
 ?PlaneReflection@matrix3x3@OpenBabel@@QAEXABVvector3@2@@Z @ 1350 NONAME ; public: void __thiscall OpenBabel::matrix3x3::PlaneReflection(class OpenBabel::vector3 const &)
 ??D@YA?AVvector3@OpenBabel@@ABNABV01@@Z @ 1351 NONAME ; class OpenBabel::vector3 __cdecl operator*(double const &,class OpenBabel::vector3 const &)
 ?RotAboutAxisByAngle@matrix3x3@OpenBabel@@QAEXABVvector3@2@N@Z @ 1352 NONAME ; public: void __thiscall OpenBabel::matrix3x3::RotAboutAxisByAngle(class OpenBabel::vector3 const &,double)
 ?SetColumn@matrix3x3@OpenBabel@@QAEXHABVvector3@2@@Z @ 1353 NONAME ; public: void __thiscall OpenBabel::matrix3x3::SetColumn(int,class OpenBabel::vector3 const &)
 ??1OBError@OpenBabel@@QAE@XZ @ 1354 NONAME ; public: __thiscall OpenBabel::OBError::~OBError(void)
 ??0OBError@OpenBabel@@QAE@ABV01@@Z @ 1355 NONAME ; public: __thiscall OpenBabel::OBError::OBError(class OpenBabel::OBError const &)
 ?SetRow@matrix3x3@OpenBabel@@QAEXHABVvector3@2@@Z @ 1356 NONAME ; public: void __thiscall OpenBabel::matrix3x3::SetRow(int,class OpenBabel::vector3 const &)
 ?GetColumn@matrix3x3@OpenBabel@@QBE?AVvector3@2@I@Z @ 1357 NONAME ; public: class OpenBabel::vector3 __thiscall OpenBabel::matrix3x3::GetColumn(unsigned int)const 
 ?GetRow@matrix3x3@OpenBabel@@QBE?AVvector3@2@I@Z @ 1358 NONAME ; public: class OpenBabel::vector3 __thiscall OpenBabel::matrix3x3::GetRow(unsigned int)const 
 ??DOpenBabel@@YA?AVvector3@0@ABVmatrix3x3@0@ABV10@@Z @ 1359 NONAME ; class OpenBabel::vector3 __cdecl OpenBabel::operator*(class OpenBabel::matrix3x3 const &,class OpenBabel::vector3 const &)
 ??DOpenBabel@@YA?AVmatrix3x3@0@ABV10@0@Z @ 1360 NONAME ; class OpenBabel::matrix3x3 __cdecl OpenBabel::operator*(class OpenBabel::matrix3x3 const &,class OpenBabel::matrix3x3 const &)
 ??Xvector3@OpenBabel@@QAEAAV01@ABVmatrix3x3@1@@Z @ 1361 NONAME ; public: class OpenBabel::vector3 & __thiscall OpenBabel::vector3::operator*=(class OpenBabel::matrix3x3 const &)
 ?Get@matrix3x3@OpenBabel@@QBENHH@Z @ 1362 NONAME ; public: double __thiscall OpenBabel::matrix3x3::Get(int,int)const 
 ?inverse@matrix3x3@OpenBabel@@QBE?AV12@XZ @ 1363 NONAME ; public: class OpenBabel::matrix3x3 __thiscall OpenBabel::matrix3x3::inverse(void)const 
 ?transpose@matrix3x3@OpenBabel@@QBE?AV12@XZ @ 1364 NONAME ; public: class OpenBabel::matrix3x3 __thiscall OpenBabel::matrix3x3::transpose(void)const 
 ?determinant@matrix3x3@OpenBabel@@QBENXZ @ 1365 NONAME ; public: double __thiscall OpenBabel::matrix3x3::determinant(void)const 
 ?isSymmetric@matrix3x3@OpenBabel@@QBE_NXZ @ 1366 NONAME ; public: bool __thiscall OpenBabel::matrix3x3::isSymmetric(void)const 
 ?isDiagonal@matrix3x3@OpenBabel@@QBE_NXZ @ 1367 NONAME ; public: bool __thiscall OpenBabel::matrix3x3::isDiagonal(void)const 
 ?isUnitMatrix@matrix3x3@OpenBabel@@QBE_NXZ @ 1368 NONAME ; public: bool __thiscall OpenBabel::matrix3x3::isUnitMatrix(void)const 
 ?findEigenvectorsIfSymmetric@matrix3x3@OpenBabel@@QBE?AV12@AAVvector3@2@@Z @ 1369 NONAME ; public: class OpenBabel::matrix3x3 __thiscall OpenBabel::matrix3x3::findEigenvectorsIfSymmetric(class OpenBabel::vector3 &)const 
 ??_0matrix3x3@OpenBabel@@QAEAAV01@ABN@Z @ 1370 NONAME ; public: class OpenBabel::matrix3x3 & __thiscall OpenBabel::matrix3x3::operator/=(double const &)
 ?FillOrth@matrix3x3@OpenBabel@@QAEXNNNNNN@Z @ 1371 NONAME ; public: void __thiscall OpenBabel::matrix3x3::FillOrth(double,double,double,double,double,double)
 ??6OpenBabel@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVmatrix3x3@0@@Z @ 1372 NONAME ; class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl OpenBabel::operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::matrix3x3 const &)
 ?jacobi@matrix3x3@OpenBabel@@SAXIPAN00@Z @ 1373 NONAME ; public: static void __cdecl OpenBabel::matrix3x3::jacobi(unsigned int,double *,double *,double *)
 ?SortVVInt@OpenBabel@@YA_NABV?$vector@HV?$allocator@H@std@@@std@@0@Z @ 1374 NONAME ; bool __cdecl OpenBabel::SortVVInt(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > const &)
 ?SortAtomZ@OpenBabel@@YA_NABU?$pair@PAVOBAtom@OpenBabel@@N@std@@0@Z @ 1375 NONAME ; bool __cdecl OpenBabel::SortAtomZ(struct std::pair<class OpenBabel::OBAtom *,double> const &,struct std::pair<class OpenBabel::OBAtom *,double> const &)
 ?GetTorsion@OBMol@OpenBabel@@QAENHHHH@Z @ 1376 NONAME ; public: double __thiscall OpenBabel::OBMol::GetTorsion(int,int,int,int)
 ?SetTorsion@OBMol@OpenBabel@@QAEXPAVOBAtom@2@000N@Z @ 1377 NONAME ; public: void __thiscall OpenBabel::OBMol::SetTorsion(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,double)
 ?GetTorsion@OBMol@OpenBabel@@QAENPAVOBAtom@2@000@Z @ 1378 NONAME ; public: double __thiscall OpenBabel::OBMol::GetTorsion(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?ContigFragList@OBMol@OpenBabel@@QAEXAAV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@@Z @ 1379 NONAME ; public: void __thiscall OpenBabel::OBMol::ContigFragList(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > &)
 ?EndBit@OBBitVec@OpenBabel@@QAEHXZ @ 1380 NONAME ; public: int __thiscall OpenBabel::OBBitVec::EndBit(void)
 ?GetNbrAtomIdx@OBBond@OpenBabel@@QAEHPAVOBAtom@2@@Z @ 1381 NONAME ; public: int __thiscall OpenBabel::OBBond::GetNbrAtomIdx(class OpenBabel::OBAtom *)
 ?FindTorsions@OBMol@OpenBabel@@QAEXXZ @ 1382 NONAME ; public: void __thiscall OpenBabel::OBMol::FindTorsions(void)
 ??0OBTorsion@OpenBabel@@IAE@XZ @ 1383 NONAME ; protected: __thiscall OpenBabel::OBTorsion::OBTorsion(void)
 ?GetSize@OBTorsion@OpenBabel@@QBEIXZ @ 1384 NONAME ; public: unsigned int __thiscall OpenBabel::OBTorsion::GetSize(void)const 
 ?FindLargestFragment@OBMol@OpenBabel@@QAEXAAVOBBitVec@2@@Z @ 1385 NONAME ; public: void __thiscall OpenBabel::OBMol::FindLargestFragment(class OpenBabel::OBBitVec &)
 ?Empty@OBBitVec@OpenBabel@@QAE_NXZ @ 1386 NONAME ; public: bool __thiscall OpenBabel::OBBitVec::Empty(void)
 ?FindChildren@OBMol@OpenBabel@@QAEXAAV?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@PAVOBAtom@2@1@Z @ 1387 NONAME ; public: void __thiscall OpenBabel::OBMol::FindChildren(class std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> > &,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?FindChildren@OBMol@OpenBabel@@QAEXAAV?$vector@HV?$allocator@H@std@@@std@@HH@Z @ 1388 NONAME ; public: void __thiscall OpenBabel::OBMol::FindChildren(class std::vector<int,class std::allocator<int> > &,int,int)
 ?BeginBonds@OBAtom@OpenBabel@@QAEPAPAVOBEdgeBase@2@XZ @ 1389 NONAME ; public: class OpenBabel::OBEdgeBase * * __thiscall OpenBabel::OBAtom::BeginBonds(void)
 ?EndBonds@OBAtom@OpenBabel@@QAEPAPAVOBEdgeBase@2@XZ @ 1390 NONAME ; public: class OpenBabel::OBEdgeBase * * __thiscall OpenBabel::OBAtom::EndBonds(void)
 ?GetGTDVector@OBMol@OpenBabel@@QAE_NAAV?$vector@HV?$allocator@H@std@@@std@@@Z @ 1391 NONAME ; public: bool __thiscall OpenBabel::OBMol::GetGTDVector(class std::vector<int,class std::allocator<int> > &)
 ?GetGIVector@OBMol@OpenBabel@@QAEXAAV?$vector@IV?$allocator@I@std@@@std@@@Z @ 1392 NONAME ; public: void __thiscall OpenBabel::OBMol::GetGIVector(class std::vector<unsigned int,class std::allocator<unsigned int> > &)
 ?GetGIDVector@OBMol@OpenBabel@@QAEXAAV?$vector@IV?$allocator@I@std@@@std@@@Z @ 1393 NONAME ; public: void __thiscall OpenBabel::OBMol::GetGIDVector(class std::vector<unsigned int,class std::allocator<unsigned int> > &)
 ?NumHvyAtoms@OBMol@OpenBabel@@QAEIXZ @ 1394 NONAME ; public: unsigned int __thiscall OpenBabel::OBMol::NumHvyAtoms(void)
 ?NumRotors@OBMol@OpenBabel@@QAEIXZ @ 1395 NONAME ; public: unsigned int __thiscall OpenBabel::OBMol::NumRotors(void)
 ?GetAtom@OBMol@OpenBabel@@QAEPAVOBAtom@2@H@Z @ 1396 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBMol::GetAtom(int)
 ?GetFirstAtom@OBMol@OpenBabel@@QAEPAVOBAtom@2@XZ @ 1397 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBMol::GetFirstAtom(void)
 ?GetBond@OBMol@OpenBabel@@QAEPAVOBBond@2@H@Z @ 1398 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBMol::GetBond(int)
 ?GetBond@OBMol@OpenBabel@@QAEPAVOBBond@2@HH@Z @ 1399 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBMol::GetBond(int,int)
 ?GetBond@OBMol@OpenBabel@@QAEPAVOBBond@2@PAVOBAtom@2@0@Z @ 1400 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBMol::GetBond(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?GetResidue@OBMol@OpenBabel@@QAEPAVOBResidue@2@H@Z @ 1401 NONAME ; public: class OpenBabel::OBResidue * __thiscall OpenBabel::OBMol::GetResidue(int)
 ?GetInternalCoord@OBMol@OpenBabel@@QAE?AV?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@XZ @ 1402 NONAME ; public: class std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> > __thiscall OpenBabel::OBMol::GetInternalCoord(void)
 ??0OBInternalCoord@OpenBabel@@QAE@PAVOBAtom@1@00@Z @ 1403 NONAME ; public: __thiscall OpenBabel::OBInternalCoord::OBInternalCoord(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBAtom *)
 ?GetSSSR@OBMol@OpenBabel@@QAEAAV?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@XZ @ 1404 NONAME ; public: class std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> > & __thiscall OpenBabel::OBMol::GetSSSR(void)
 ?GetData@OBRingData@OpenBabel@@QAEAAV?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@XZ @ 1405 NONAME ; public: class std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> > & __thiscall OpenBabel::OBRingData::GetData(void)
 ?GetMolWt@OBMol@OpenBabel@@QAENXZ @ 1406 NONAME ; public: double __thiscall OpenBabel::OBMol::GetMolWt(void)
 ?GetExactMass@OBMol@OpenBabel@@QAENXZ @ 1407 NONAME ; public: double __thiscall OpenBabel::OBMol::GetExactMass(void)
 ?SetTotalCharge@OBMol@OpenBabel@@QAEXH@Z @ 1408 NONAME ; public: void __thiscall OpenBabel::OBMol::SetTotalCharge(int)
 ?GetTotalCharge@OBMol@OpenBabel@@QAEHXZ @ 1409 NONAME ; public: int __thiscall OpenBabel::OBMol::GetTotalCharge(void)
 ?SetTotalSpinMultiplicity@OBMol@OpenBabel@@QAEXI@Z @ 1410 NONAME ; public: void __thiscall OpenBabel::OBMol::SetTotalSpinMultiplicity(unsigned int)
 ?GetTotalSpinMultiplicity@OBMol@OpenBabel@@QAEIXZ @ 1411 NONAME ; public: unsigned int __thiscall OpenBabel::OBMol::GetTotalSpinMultiplicity(void)
 ?GetSpinMultiplicity@OBAtom@OpenBabel@@QBEHXZ @ 1412 NONAME ; public: int __thiscall OpenBabel::OBAtom::GetSpinMultiplicity(void)const 
 ??4OBMol@OpenBabel@@QAEAAV01@ABV01@@Z @ 1413 NONAME ; public: class OpenBabel::OBMol & __thiscall OpenBabel::OBMol::operator=(class OpenBabel::OBMol const &)
 ?GetInputType@OBMol@OpenBabel@@QBE?AW4io_type@2@XZ @ 1414 NONAME ; public: enum OpenBabel::io_type __thiscall OpenBabel::OBMol::GetInputType(void)const 
 ?GetOutputType@OBMol@OpenBabel@@QBE?AW4io_type@2@XZ @ 1415 NONAME ; public: enum OpenBabel::io_type __thiscall OpenBabel::OBMol::GetOutputType(void)const 
 ?GetEnergy@OBMol@OpenBabel@@QBENXZ @ 1416 NONAME ; public: double __thiscall OpenBabel::OBMol::GetEnergy(void)const 
 ?GetConformer@OBMol@OpenBabel@@QAEPANH@Z @ 1417 NONAME ; public: double * __thiscall OpenBabel::OBMol::GetConformer(int)
 ??YOBMol@OpenBabel@@QAEAAV01@ABV01@@Z @ 1418 NONAME ; public: class OpenBabel::OBMol & __thiscall OpenBabel::OBMol::operator+=(class OpenBabel::OBMol const &)
 ?Clear@OBMol@OpenBabel@@QAE_NXZ @ 1419 NONAME ; public: bool __thiscall OpenBabel::OBMol::Clear(void)
 ?BeginModify@OBMol@OpenBabel@@UAEXXZ @ 1420 NONAME ; public: virtual void __thiscall OpenBabel::OBMol::BeginModify(void)
 ?ClearCoordPtr@OBAtom@OpenBabel@@QAEXXZ @ 1421 NONAME ; public: void __thiscall OpenBabel::OBAtom::ClearCoordPtr(void)
 ?Empty@OBMol@OpenBabel@@QAE_NXZ @ 1422 NONAME ; public: bool __thiscall OpenBabel::OBMol::Empty(void)
 ?EndModify@OBMol@OpenBabel@@UAEX_N@Z @ 1423 NONAME ; public: virtual void __thiscall OpenBabel::OBMol::EndModify(bool)
 ?SetIdx@OBAtom@OpenBabel@@QAEXH@Z @ 1424 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetIdx(int)
 ?SetCoordPtr@OBAtom@OpenBabel@@QAEXPAPAN@Z @ 1425 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetCoordPtr(double * *)
 ?UnsetAromaticPerceived@OBMol@OpenBabel@@QAEXXZ @ 1426 NONAME ; public: void __thiscall OpenBabel::OBMol::UnsetAromaticPerceived(void)
 ?UnsetImplicitValencePerceived@OBMol@OpenBabel@@QAEXXZ @ 1427 NONAME ; public: void __thiscall OpenBabel::OBMol::UnsetImplicitValencePerceived(void)
 ?CreateAtom@OBMol@OpenBabel@@UAEPAVOBAtom@2@XZ @ 1428 NONAME ; public: virtual class OpenBabel::OBAtom * __thiscall OpenBabel::OBMol::CreateAtom(void)
 ?CreateBond@OBMol@OpenBabel@@UAEPAVOBBond@2@XZ @ 1429 NONAME ; public: virtual class OpenBabel::OBBond * __thiscall OpenBabel::OBMol::CreateBond(void)
 ?DestroyAtom@OBMol@OpenBabel@@UAEXPAVOBNodeBase@2@@Z @ 1430 NONAME ; public: virtual void __thiscall OpenBabel::OBMol::DestroyAtom(class OpenBabel::OBNodeBase *)
 ?DestroyBond@OBMol@OpenBabel@@UAEXPAVOBEdgeBase@2@@Z @ 1431 NONAME ; public: virtual void __thiscall OpenBabel::OBMol::DestroyBond(class OpenBabel::OBEdgeBase *)
 ?NewAtom@OBMol@OpenBabel@@QAEPAVOBAtom@2@XZ @ 1432 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBMol::NewAtom(void)
 ?GetBgn@OBVirtualBond@OpenBabel@@QAEHXZ @ 1433 NONAME ; public: int __thiscall OpenBabel::OBVirtualBond::GetBgn(void)
 ?GetEnd@OBVirtualBond@OpenBabel@@QAEHXZ @ 1434 NONAME ; public: int __thiscall OpenBabel::OBVirtualBond::GetEnd(void)
 ?GetOrder@OBVirtualBond@OpenBabel@@QAEHXZ @ 1435 NONAME ; public: int __thiscall OpenBabel::OBVirtualBond::GetOrder(void)
 ?BeginData@OBMol@OpenBabel@@QAEPAPAVOBGenericData@2@XZ @ 1436 NONAME ; public: class OpenBabel::OBGenericData * * __thiscall OpenBabel::OBMol::BeginData(void)
 ?EndData@OBMol@OpenBabel@@QAEPAPAVOBGenericData@2@XZ @ 1437 NONAME ; public: class OpenBabel::OBGenericData * * __thiscall OpenBabel::OBMol::EndData(void)
 ?NewResidue@OBMol@OpenBabel@@QAEPAVOBResidue@2@XZ @ 1438 NONAME ; public: class OpenBabel::OBResidue * __thiscall OpenBabel::OBMol::NewResidue(void)
 ?AddAtom@OBMol@OpenBabel@@QAE_NAAVOBAtom@2@@Z @ 1439 NONAME ; public: bool __thiscall OpenBabel::OBMol::AddAtom(class OpenBabel::OBAtom &)
 ?InsertAtom@OBMol@OpenBabel@@QAE_NAAVOBAtom@2@@Z @ 1440 NONAME ; public: bool __thiscall OpenBabel::OBMol::InsertAtom(class OpenBabel::OBAtom &)
 ?AddResidue@OBMol@OpenBabel@@QAE_NAAVOBResidue@2@@Z @ 1441 NONAME ; public: bool __thiscall OpenBabel::OBMol::AddResidue(class OpenBabel::OBResidue &)
 ?StripSalts@OBMol@OpenBabel@@QAE_NXZ @ 1442 NONAME ; public: bool __thiscall OpenBabel::OBMol::StripSalts(void)
 ?DeleteNonPolarHydrogens@OBMol@OpenBabel@@QAE_NXZ @ 1443 NONAME ; public: bool __thiscall OpenBabel::OBMol::DeleteNonPolarHydrogens(void)
 ?DeleteHydrogens@OBMol@OpenBabel@@QAE_NXZ @ 1444 NONAME ; public: bool __thiscall OpenBabel::OBMol::DeleteHydrogens(void)
 ?DeleteHydrogens@OBMol@OpenBabel@@QAE_NPAVOBAtom@2@@Z @ 1445 NONAME ; public: bool __thiscall OpenBabel::OBMol::DeleteHydrogens(class OpenBabel::OBAtom *)
 ?DeleteHydrogen@OBMol@OpenBabel@@QAE_NPAVOBAtom@2@@Z @ 1446 NONAME ; public: bool __thiscall OpenBabel::OBMol::DeleteHydrogen(class OpenBabel::OBAtom *)
 ?AddHydrogens@OBMol@OpenBabel@@QAE_N_N0@Z @ 1447 NONAME ; public: bool __thiscall OpenBabel::OBMol::AddHydrogens(bool,bool)
 ?SetResidue@OBAtom@OpenBabel@@QAEXPAVOBResidue@2@@Z @ 1448 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetResidue(class OpenBabel::OBResidue *)
 ?HasResidue@OBAtom@OpenBabel@@QAE_NXZ @ 1449 NONAME ; public: bool __thiscall OpenBabel::OBAtom::HasResidue(void)
 ?SetHydrogensAdded@OBMol@OpenBabel@@QAEXXZ @ 1450 NONAME ; public: void __thiscall OpenBabel::OBMol::SetHydrogensAdded(void)
 ?HasHydrogensAdded@OBMol@OpenBabel@@QAE_NXZ @ 1451 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasHydrogensAdded(void)
 ?IsCorrectedForPH@OBMol@OpenBabel@@QAE_NXZ @ 1452 NONAME ; public: bool __thiscall OpenBabel::OBMol::IsCorrectedForPH(void)
 ?SetConformer@OBMol@OpenBabel@@QAEXH@Z @ 1453 NONAME ; public: void __thiscall OpenBabel::OBMol::SetConformer(int)
 ?AddPolarHydrogens@OBMol@OpenBabel@@QAE_NXZ @ 1454 NONAME ; public: bool __thiscall OpenBabel::OBMol::AddPolarHydrogens(void)
 ?AddHydrogens@OBMol@OpenBabel@@QAE_NPAVOBAtom@2@@Z @ 1455 NONAME ; public: bool __thiscall OpenBabel::OBMol::AddHydrogens(class OpenBabel::OBAtom *)
 ?CorrectForPH@OBMol@OpenBabel@@QAE_NXZ @ 1456 NONAME ; public: bool __thiscall OpenBabel::OBMol::CorrectForPH(void)
 ?GetCurrentValence@OpenBabel@@YAHPAVOBAtom@1@@Z @ 1457 NONAME ; int __cdecl OpenBabel::GetCurrentValence(class OpenBabel::OBAtom *)
 ?ExpandKekule@OpenBabel@@YA_NAAVOBMol@1@AAV?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@PAPAVOBNodeBase@1@AAV?$vector@HV?$allocator@H@std@@@4@_N@Z @ 1458 NONAME ; bool __cdecl OpenBabel::ExpandKekule(class OpenBabel::OBMol &,class std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> > &,class OpenBabel::OBNodeBase * *,class std::vector<int,class std::allocator<int> > &,bool)
 ?IncrementImplicitValence@OBAtom@OpenBabel@@QAEXXZ @ 1459 NONAME ; public: void __thiscall OpenBabel::OBAtom::IncrementImplicitValence(void)
 ?DecrementImplicitValence@OBAtom@OpenBabel@@QAEXXZ @ 1460 NONAME ; public: void __thiscall OpenBabel::OBAtom::DecrementImplicitValence(void)
 ?SetFormalCharge@OBAtom@OpenBabel@@QAEXH@Z @ 1461 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetFormalCharge(int)
 ?CorrectBadResonanceForm@OpenBabel@@YAXAAVOBMol@1@@Z @ 1462 NONAME ; void __cdecl OpenBabel::CorrectBadResonanceForm(class OpenBabel::OBMol &)
 ?PerceiveKekuleBonds@OBMol@OpenBabel@@QAE_NXZ @ 1463 NONAME ; public: bool __thiscall OpenBabel::OBMol::PerceiveKekuleBonds(void)
 ?SetKekulePerceived@OBMol@OpenBabel@@QAEXXZ @ 1464 NONAME ; public: void __thiscall OpenBabel::OBMol::SetKekulePerceived(void)
 ?Kekulize@OBMol@OpenBabel@@QAE_NXZ @ 1465 NONAME ; public: bool __thiscall OpenBabel::OBMol::Kekulize(void)
 ?DeleteAtom@OBMol@OpenBabel@@QAE_NPAVOBAtom@2@@Z @ 1466 NONAME ; public: bool __thiscall OpenBabel::OBMol::DeleteAtom(class OpenBabel::OBAtom *)
 ?DeleteResidue@OBMol@OpenBabel@@QAE_NPAVOBResidue@2@@Z @ 1467 NONAME ; public: bool __thiscall OpenBabel::OBMol::DeleteResidue(class OpenBabel::OBResidue *)
 ?AddBond@OBMol@OpenBabel@@QAE_NHHHHH@Z @ 1468 NONAME ; public: bool __thiscall OpenBabel::OBMol::AddBond(int,int,int,int,int)
 ?AddBond@OBAtom@OpenBabel@@QAEXPAVOBBond@2@@Z @ 1469 NONAME ; public: void __thiscall OpenBabel::OBAtom::AddBond(class OpenBabel::OBBond *)
 ?InsertBond@OBAtom@OpenBabel@@QAEXAAPAPAVOBEdgeBase@2@PAVOBBond@2@@Z @ 1470 NONAME ; public: void __thiscall OpenBabel::OBAtom::InsertBond(class OpenBabel::OBEdgeBase * * &,class OpenBabel::OBBond *)
 ?AddBond@OBMol@OpenBabel@@QAE_NAAVOBBond@2@@Z @ 1471 NONAME ; public: bool __thiscall OpenBabel::OBMol::AddBond(class OpenBabel::OBBond &)
 ?GetFlags@OBBond@OpenBabel@@QBEIXZ @ 1472 NONAME ; public: unsigned int __thiscall OpenBabel::OBBond::GetFlags(void)const 
 ?DeleteBond@OBMol@OpenBabel@@QAE_NPAVOBBond@2@@Z @ 1473 NONAME ; public: bool __thiscall OpenBabel::OBMol::DeleteBond(class OpenBabel::OBBond *)
 ?Align@OBMol@OpenBabel@@QAEXPAVOBAtom@2@0AAVvector3@2@1@Z @ 1474 NONAME ; public: void __thiscall OpenBabel::OBMol::Align(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::vector3 &,class OpenBabel::vector3 &)
 ?ToInertialFrame@OBMol@OpenBabel@@QAEXXZ @ 1475 NONAME ; public: void __thiscall OpenBabel::OBMol::ToInertialFrame(void)
 ?ToInertialFrame@OBMol@OpenBabel@@QAEXHPAN@Z @ 1476 NONAME ; public: void __thiscall OpenBabel::OBMol::ToInertialFrame(int,double *)
 ??0OBMol@OpenBabel@@QAE@W4io_type@1@0@Z @ 1477 NONAME ; public: __thiscall OpenBabel::OBMol::OBMol(enum OpenBabel::io_type,enum OpenBabel::io_type)
 ??0OBGraphBase@OpenBabel@@QAE@XZ @ 1478 NONAME ; public: __thiscall OpenBabel::OBGraphBase::OBGraphBase(void)
 ??1OBGraphBase@OpenBabel@@UAE@XZ @ 1479 NONAME ; public: virtual __thiscall OpenBabel::OBGraphBase::~OBGraphBase(void)
 ?SingleMatch@OBGraphBase@OpenBabel@@UBE_NXZ @ 1480 NONAME ; public: virtual bool __thiscall OpenBabel::OBGraphBase::SingleMatch(void)const 
 ?SetSingleMatch@OBGraphBase@OpenBabel@@UAEX_N@Z @ 1481 NONAME ; public: virtual void __thiscall OpenBabel::OBGraphBase::SetSingleMatch(bool)
 ?FinishedMatch@OBGraphBase@OpenBabel@@UBE_NXZ @ 1482 NONAME ; public: virtual bool __thiscall OpenBabel::OBGraphBase::FinishedMatch(void)const 
 ?SetFinishedMatch@OBGraphBase@OpenBabel@@UAEX_N@Z @ 1483 NONAME ; public: virtual void __thiscall OpenBabel::OBGraphBase::SetFinishedMatch(bool)
 ?ClearMatches@OBGraphBase@OpenBabel@@UAEXXZ @ 1484 NONAME ; public: virtual void __thiscall OpenBabel::OBGraphBase::ClearMatches(void)
 ?PushBack@OBGraphBase@OpenBabel@@UAEXAAV?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@@Z @ 1485 NONAME ; public: virtual void __thiscall OpenBabel::OBGraphBase::PushBack(class std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> > &)
 ?PrepForMatch@OBGraphBase@OpenBabel@@UAEXXZ @ 1486 NONAME ; public: virtual void __thiscall OpenBabel::OBGraphBase::PrepForMatch(void)
 ?BgnMatch@OBGraphBase@OpenBabel@@UAEPAU?$pair@PAVOBNodeBase@OpenBabel@@V?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@@std@@XZ @ 1487 NONAME ; public: virtual struct std::pair<class OpenBabel::OBNodeBase *,class std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> > > * __thiscall OpenBabel::OBGraphBase::BgnMatch(void)
 ?EndMatch@OBGraphBase@OpenBabel@@UAEPAU?$pair@PAVOBNodeBase@OpenBabel@@V?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@@std@@XZ @ 1488 NONAME ; public: virtual struct std::pair<class OpenBabel::OBNodeBase *,class std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> > > * __thiscall OpenBabel::OBGraphBase::EndMatch(void)
 ?GetFirstSeed@OBGraphBase@OpenBabel@@UAEPAVOBNodeBase@2@XZ @ 1489 NONAME ; public: virtual class OpenBabel::OBNodeBase * __thiscall OpenBabel::OBGraphBase::GetFirstSeed(void)
 ??0OBMol@OpenBabel@@QAE@ABV01@@Z @ 1490 NONAME ; public: __thiscall OpenBabel::OBMol::OBMol(class OpenBabel::OBMol const &)
 ??1OBMol@OpenBabel@@UAE@XZ @ 1491 NONAME ; public: virtual __thiscall OpenBabel::OBMol::~OBMol(void)
 ?HasData@OBMol@OpenBabel@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1492 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?HasData@OBMol@OpenBabel@@QAE_NPBD@Z @ 1493 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasData(char const *)
 ?HasData@OBMol@OpenBabel@@QAE_NW4obDataType@2@@Z @ 1494 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasData(enum OpenBabel::obDataType)
 ?GetData@OBMol@OpenBabel@@QAEPAVOBGenericData@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1495 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBMol::GetData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?GetData@OBMol@OpenBabel@@QAEPAVOBGenericData@2@PBD@Z @ 1496 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBMol::GetData(char const *)
 ?GetData@OBMol@OpenBabel@@QAEPAVOBGenericData@2@W4obDataType@2@@Z @ 1497 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBMol::GetData(enum OpenBabel::obDataType)
 ?DeleteData@OBMol@OpenBabel@@QAEXW4obDataType@2@@Z @ 1498 NONAME ; public: void __thiscall OpenBabel::OBMol::DeleteData(enum OpenBabel::obDataType)
 ?DeleteData@OBMol@OpenBabel@@QAEXAAV?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@@Z @ 1499 NONAME ; public: void __thiscall OpenBabel::OBMol::DeleteData(class std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> > &)
 ?DeleteData@OBMol@OpenBabel@@QAEXPAVOBGenericData@2@@Z @ 1500 NONAME ; public: void __thiscall OpenBabel::OBMol::DeleteData(class OpenBabel::OBGenericData *)
 ?HasNonZeroCoords@OBMol@OpenBabel@@QAE_NXZ @ 1501 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasNonZeroCoords(void)
 ?Has2D@OBMol@OpenBabel@@QAE_NXZ @ 1502 NONAME ; public: bool __thiscall OpenBabel::OBMol::Has2D(void)
 ?Has3D@OBMol@OpenBabel@@QAE_NXZ @ 1503 NONAME ; public: bool __thiscall OpenBabel::OBMol::Has3D(void)
 ?IsChiral@OBMol@OpenBabel@@QAE_NXZ @ 1504 NONAME ; public: bool __thiscall OpenBabel::OBMol::IsChiral(void)
 ?RenumberAtoms@OBMol@OpenBabel@@QAEXAAV?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@@Z @ 1505 NONAME ; public: void __thiscall OpenBabel::OBMol::RenumberAtoms(class std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> > &)
 ?SetIdx@OBNodeBase@OpenBabel@@QAEXH@Z @ 1506 NONAME ; public: void __thiscall OpenBabel::OBNodeBase::SetIdx(int)
 ?WriteTitles@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 1507 NONAME ; bool __cdecl OpenBabel::WriteTitles(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?ConnectTheDots@OBMol@OpenBabel@@QAEXXZ @ 1508 NONAME ; public: void __thiscall OpenBabel::OBMol::ConnectTheDots(void)
 ?PerceiveBondOrders@OBMol@OpenBabel@@QAEXXZ @ 1509 NONAME ; public: void __thiscall OpenBabel::OBMol::PerceiveBondOrders(void)
 ?UnsetKekule@OBBond@OpenBabel@@QAEXXZ @ 1510 NONAME ; public: void __thiscall OpenBabel::OBBond::UnsetKekule(void)
 ?SetHybridizationPerceived@OBMol@OpenBabel@@QAEXXZ @ 1511 NONAME ; public: void __thiscall OpenBabel::OBMol::SetHybridizationPerceived(void)
 ?Center@OBMol@OpenBabel@@QAEXXZ @ 1512 NONAME ; public: void __thiscall OpenBabel::OBMol::Center(void)
 ?Center@OBMol@OpenBabel@@QAE?AVvector3@2@H@Z @ 1513 NONAME ; public: class OpenBabel::vector3 __thiscall OpenBabel::OBMol::Center(int)
 ?Translate@OBMol@OpenBabel@@QAEXABVvector3@2@@Z @ 1514 NONAME ; public: void __thiscall OpenBabel::OBMol::Translate(class OpenBabel::vector3 const &)
 ?Translate@OBMol@OpenBabel@@QAEXABVvector3@2@H@Z @ 1515 NONAME ; public: void __thiscall OpenBabel::OBMol::Translate(class OpenBabel::vector3 const &,int)
 ?Rotate@OBMol@OpenBabel@@QAEXQAY02$$CBN@Z @ 1516 NONAME ; public: void __thiscall OpenBabel::OBMol::Rotate(double const (* const)[3])
 ?Rotate@OBMol@OpenBabel@@QAEXQBN@Z @ 1517 NONAME ; public: void __thiscall OpenBabel::OBMol::Rotate(double const * const)
 ?Rotate@OBMol@OpenBabel@@QAEXQBNH@Z @ 1518 NONAME ; public: void __thiscall OpenBabel::OBMol::Rotate(double const * const,int)
 ?SetConformers@OBMol@OpenBabel@@QAEXAAV?$vector@PANV?$allocator@PAN@std@@@std@@@Z @ 1519 NONAME ; public: void __thiscall OpenBabel::OBMol::SetConformers(class std::vector<double *,class std::allocator<double *> > &)
 ?CopyConformer@OBMol@OpenBabel@@QAEXPANH@Z @ 1520 NONAME ; public: void __thiscall OpenBabel::OBMol::CopyConformer(double *,int)
 ?DeleteConformer@OBMol@OpenBabel@@QAEXH@Z @ 1521 NONAME ; public: void __thiscall OpenBabel::OBMol::DeleteConformer(int)
 ?BeginAtom@OBMol@OpenBabel@@QAEPAVOBAtom@2@AAPAPAVOBNodeBase@2@@Z @ 1522 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBMol::BeginAtom(class OpenBabel::OBNodeBase * * &)
 ?NextAtom@OBMol@OpenBabel@@QAEPAVOBAtom@2@AAPAPAVOBNodeBase@2@@Z @ 1523 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBMol::NextAtom(class OpenBabel::OBNodeBase * * &)
 ?BeginBond@OBMol@OpenBabel@@QAEPAVOBBond@2@AAPAPAVOBEdgeBase@2@@Z @ 1524 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBMol::BeginBond(class OpenBabel::OBEdgeBase * * &)
 ?NextBond@OBMol@OpenBabel@@QAEPAVOBBond@2@AAPAPAVOBEdgeBase@2@@Z @ 1525 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBMol::NextBond(class OpenBabel::OBEdgeBase * * &)
 ?resize@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEXIABQAVOBEdgeBase@OpenBabel@@@Z @ 1526 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::resize(unsigned int,class OpenBabel::OBEdgeBase * const &)
 ??A?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEAAPAVOBEdgeBase@OpenBabel@@I@Z @ 1527 NONAME ; public: class OpenBabel::OBEdgeBase * & __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::operator[](unsigned int)
 ?push_back@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEXABQAVOBEdgeBase@OpenBabel@@@Z @ 1528 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::push_back(class OpenBabel::OBEdgeBase * const &)
 ?insert@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBEdgeBase@OpenBabel@@PAPAV34@ABQAV34@@Z @ 1529 NONAME ; public: class OpenBabel::OBEdgeBase * * __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::insert(class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * const &)
 ?resize@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEXIABQAVOBNodeBase@OpenBabel@@@Z @ 1530 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::resize(unsigned int,class OpenBabel::OBNodeBase * const &)
 ??A?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEAAPAVOBNodeBase@OpenBabel@@I@Z @ 1531 NONAME ; public: class OpenBabel::OBNodeBase * & __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::operator[](unsigned int)
 ?erase@?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@QAEPAPAVOBNodeBase@OpenBabel@@PAPAV34@@Z @ 1532 NONAME ; public: class OpenBabel::OBNodeBase * * __thiscall std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> >::erase(class OpenBabel::OBNodeBase * *)
 ?resize@?$vector@_NV?$allocator@_N@std@@@std@@QAEXIAB_N@Z @ 1533 NONAME ; public: void __thiscall std::vector<bool,class std::allocator<bool> >::resize(unsigned int,bool const &)
 ?empty@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QBE_NXZ @ 1534 NONAME ; public: bool __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::empty(void)const 
 ?clear@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAEXXZ @ 1535 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::clear(void)
 ?erase@?$vector@PAVOBResidue@OpenBabel@@V?$allocator@PAVOBResidue@OpenBabel@@@std@@@std@@QAEPAPAVOBResidue@OpenBabel@@PAPAV34@@Z @ 1536 NONAME ; public: class OpenBabel::OBResidue * * __thiscall std::vector<class OpenBabel::OBResidue *,class std::allocator<class OpenBabel::OBResidue *> >::erase(class OpenBabel::OBResidue * *)
 ??0?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBInternalCoord@OpenBabel@@@1@@Z @ 1537 NONAME ; public: __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >(class std::allocator<class OpenBabel::OBInternalCoord *> const &)
 ??0?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QAE@ABV01@@Z @ 1538 NONAME ; public: __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >(class std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> > const &)
 ??1?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QAE@XZ @ 1539 NONAME ; public: __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::~vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >(void)
 ?empty@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QBE_NXZ @ 1540 NONAME ; public: bool __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::empty(void)const 
 ?push_back@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QAEXABQAVOBInternalCoord@OpenBabel@@@Z @ 1541 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::push_back(class OpenBabel::OBInternalCoord * const &)
 ?end@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QAEPAPAVOBInternalCoord@OpenBabel@@XZ @ 1542 NONAME ; public: class OpenBabel::OBInternalCoord * * __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::end(void)
 ?resize@?$vector@PANV?$allocator@PAN@std@@@std@@QAEXIABQAN@Z @ 1543 NONAME ; public: void __thiscall std::vector<double *,class std::allocator<double *> >::resize(unsigned int,double * const &)
 ?erase@?$vector@PANV?$allocator@PAN@std@@@std@@QAEPAPANPAPAN@Z @ 1544 NONAME ; public: double * * __thiscall std::vector<double *,class std::allocator<double *> >::erase(double * *)
 ??0?$pair@PAVOBAtom@OpenBabel@@N@std@@QAE@ABQAVOBAtom@OpenBabel@@ABN@Z @ 1545 NONAME ; public: __thiscall std::pair<class OpenBabel::OBAtom *,double>::pair<class OpenBabel::OBAtom *,double>(class OpenBabel::OBAtom * const &,double const &)
 ??0?$pair@PAVOBAtom@OpenBabel@@I@std@@QAE@ABQAVOBAtom@OpenBabel@@ABI@Z @ 1546 NONAME ; public: __thiscall std::pair<class OpenBabel::OBAtom *,unsigned int>::pair<class OpenBabel::OBAtom *,unsigned int>(class OpenBabel::OBAtom * const &,unsigned int const &)
 ??0?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@1@@Z @ 1547 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >(class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > const &)
 ??1?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAE@XZ @ 1548 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::~vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >(void)
 ??4?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAEAAV01@ABV01@@Z @ 1549 NONAME ; public: class std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > > & __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::operator=(class std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > > const &)
 ?begin@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@I@2@XZ @ 1550 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::begin(void)
 ?end@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@I@2@XZ @ 1551 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::end(void)
 ??A?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAEAAU?$pair@PAVOBAtom@OpenBabel@@I@1@I@Z @ 1552 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,unsigned int> & __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::operator[](unsigned int)
 ?push_back@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAEXABU?$pair@PAVOBAtom@OpenBabel@@I@2@@Z @ 1553 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::push_back(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &)
 ?clear@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAEXXZ @ 1554 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::clear(void)
 ??0?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@1@@Z @ 1555 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >(class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > const &)
 ??1?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@QAE@XZ @ 1556 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::~vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >(void)
 ?begin@?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@H@2@XZ @ 1557 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::begin(void)
 ?end@?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@H@2@XZ @ 1558 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::end(void)
 ?push_back@?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@QAEXABU?$pair@PAVOBAtom@OpenBabel@@H@2@@Z @ 1559 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::push_back(struct std::pair<class OpenBabel::OBAtom *,int> const &)
 ??0?$pair@PAVOBAtom@OpenBabel@@H@std@@QAE@ABQAVOBAtom@OpenBabel@@ABH@Z @ 1560 NONAME ; public: __thiscall std::pair<class OpenBabel::OBAtom *,int>::pair<class OpenBabel::OBAtom *,int>(class OpenBabel::OBAtom * const &,int const &)
 ??0?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@1@@Z @ 1561 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >(class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > const &)
 ??1?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@QAE@XZ @ 1562 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::~vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >(void)
 ?begin@?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@N@2@XZ @ 1563 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,double> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::begin(void)
 ?end@?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@N@2@XZ @ 1564 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,double> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::end(void)
 ?size@?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@QBEIXZ @ 1565 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::size(void)const 
 ??A?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@QAEAAU?$pair@PAVOBAtom@OpenBabel@@N@1@I@Z @ 1566 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,double> & __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::operator[](unsigned int)
 ?push_back@?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@QAEXABU?$pair@PAVOBAtom@OpenBabel@@N@2@@Z @ 1567 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::push_back(struct std::pair<class OpenBabel::OBAtom *,double> const &)
 ?insert@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEXPAPAVOBEdgeBase@OpenBabel@@IABQAV34@@Z @ 1568 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::insert(class OpenBabel::OBEdgeBase * *,unsigned int,class OpenBabel::OBEdgeBase * const &)
 ?end@?$vector@_NV?$allocator@_N@std@@@std@@QAEPA_NXZ @ 1569 NONAME ; public: bool * __thiscall std::vector<bool,class std::allocator<bool> >::end(void)
 ?size@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ @ 1570 NONAME ; public: unsigned int __thiscall std::vector<bool,class std::allocator<bool> >::size(void)const 
 ?insert@?$vector@_NV?$allocator@_N@std@@@std@@QAEXPA_NIAB_N@Z @ 1571 NONAME ; public: void __thiscall std::vector<bool,class std::allocator<bool> >::insert(bool *,unsigned int,bool const &)
 ?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAEPA_NPA_N0@Z @ 1572 NONAME ; public: bool * __thiscall std::vector<bool,class std::allocator<bool> >::erase(bool *,bool *)
 ?erase@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAEPAPAVOBAtom@OpenBabel@@PAPAV34@0@Z @ 1573 NONAME ; public: class OpenBabel::OBAtom * * __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::erase(class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * *)
 ?begin@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QBEPBQAVOBInternalCoord@OpenBabel@@XZ @ 1574 NONAME ; public: class OpenBabel::OBInternalCoord * const * __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::begin(void)const 
 ?end@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QBEPBQAVOBInternalCoord@OpenBabel@@XZ @ 1575 NONAME ; public: class OpenBabel::OBInternalCoord * const * __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::end(void)const 
 ?size@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QBEIXZ @ 1576 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::size(void)const 
 ?insert@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QAEPAPAVOBInternalCoord@OpenBabel@@PAPAV34@ABQAV34@@Z @ 1577 NONAME ; public: class OpenBabel::OBInternalCoord * * __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::insert(class OpenBabel::OBInternalCoord * *,class OpenBabel::OBInternalCoord * const &)
 ?begin@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QAEPAPAVOBInternalCoord@OpenBabel@@XZ @ 1578 NONAME ; public: class OpenBabel::OBInternalCoord * * __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::begin(void)
 ?_Destroy@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@IAEXPAPAVOBInternalCoord@OpenBabel@@0@Z @ 1579 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::_Destroy(class OpenBabel::OBInternalCoord * *,class OpenBabel::OBInternalCoord * *)
 ?_Ucopy@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@IAEPAPAVOBInternalCoord@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 1580 NONAME ; protected: class OpenBabel::OBInternalCoord * * __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::_Ucopy(class OpenBabel::OBInternalCoord * const *,class OpenBabel::OBInternalCoord * const *,class OpenBabel::OBInternalCoord * *)
 ?allocate@?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@QAEPAPAVOBInternalCoord@OpenBabel@@IPBX@Z @ 1581 NONAME ; public: class OpenBabel::OBInternalCoord * * __thiscall std::allocator<class OpenBabel::OBInternalCoord *>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@QAEXPAXI@Z @ 1582 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBInternalCoord *>::deallocate(void *,unsigned int)
 ?capacity@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QBEIXZ @ 1583 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::capacity(void)const 
 ?begin@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QBEPBU?$pair@PAVOBAtom@OpenBabel@@I@2@XZ @ 1584 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,unsigned int> const * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::begin(void)const 
 ?end@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QBEPBU?$pair@PAVOBAtom@OpenBabel@@I@2@XZ @ 1585 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,unsigned int> const * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::end(void)const 
 ?size@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QBEIXZ @ 1586 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::size(void)const 
 ?insert@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@I@2@PAU32@ABU32@@Z @ 1587 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::insert(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &)
 ?erase@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@I@2@PAU32@0@Z @ 1588 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::erase(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?_Destroy@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@IAEXPAU?$pair@PAVOBAtom@OpenBabel@@I@2@0@Z @ 1589 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::_Destroy(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?_Ucopy@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@IAEPAU?$pair@PAVOBAtom@OpenBabel@@I@2@PBU32@0PAU32@@Z @ 1590 NONAME ; protected: struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::_Ucopy(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?allocate@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@I@2@IPBX@Z @ 1591 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> >::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@std@@QAEXPAXI@Z @ 1592 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> >::deallocate(void *,unsigned int)
 ?insert@?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@H@2@PAU32@ABU32@@Z @ 1593 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::insert(struct std::pair<class OpenBabel::OBAtom *,int> *,struct std::pair<class OpenBabel::OBAtom *,int> const &)
 ?_Destroy@?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@IAEXPAU?$pair@PAVOBAtom@OpenBabel@@H@2@0@Z @ 1594 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::_Destroy(struct std::pair<class OpenBabel::OBAtom *,int> *,struct std::pair<class OpenBabel::OBAtom *,int> *)
 ?deallocate@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@std@@QAEXPAXI@Z @ 1595 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> >::deallocate(void *,unsigned int)
 ?insert@?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@N@2@PAU32@ABU32@@Z @ 1596 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,double> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::insert(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> const &)
 ?_Destroy@?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@IAEXPAU?$pair@PAVOBAtom@OpenBabel@@N@2@0@Z @ 1597 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::_Destroy(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?deallocate@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@std@@QAEXPAXI@Z @ 1598 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> >::deallocate(void *,unsigned int)
 ?_Ufill@?$vector@PAVOBEdgeBase@OpenBabel@@V?$allocator@PAVOBEdgeBase@OpenBabel@@@std@@@std@@IAEXPAPAVOBEdgeBase@OpenBabel@@IABQAV34@@Z @ 1599 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBEdgeBase *,class std::allocator<class OpenBabel::OBEdgeBase *> >::_Ufill(class OpenBabel::OBEdgeBase * *,unsigned int,class OpenBabel::OBEdgeBase * const &)
 ?_Ucopy@?$vector@_NV?$allocator@_N@std@@@std@@IAEPA_NPB_N0PA_N@Z @ 1600 NONAME ; protected: bool * __thiscall std::vector<bool,class std::allocator<bool> >::_Ucopy(bool const *,bool const *,bool *)
 ?_Ufill@?$vector@_NV?$allocator@_N@std@@@std@@IAEXPA_NIAB_N@Z @ 1601 NONAME ; protected: void __thiscall std::vector<bool,class std::allocator<bool> >::_Ufill(bool *,unsigned int,bool const &)
 ?allocate@?$allocator@_N@std@@QAEPA_NIPBX@Z @ 1602 NONAME ; public: bool * __thiscall std::allocator<bool>::allocate(unsigned int,void const *)
 ?insert@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QAEXPAPAVOBInternalCoord@OpenBabel@@IABQAV34@@Z @ 1603 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::insert(class OpenBabel::OBInternalCoord * *,unsigned int,class OpenBabel::OBInternalCoord * const &)
 ?construct@?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@QAEXPAPAVOBInternalCoord@OpenBabel@@ABQAV34@@Z @ 1604 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBInternalCoord *>::construct(class OpenBabel::OBInternalCoord * *,class OpenBabel::OBInternalCoord * const &)
 ?destroy@?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@QAEXPAPAVOBInternalCoord@OpenBabel@@@Z @ 1605 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBInternalCoord *>::destroy(class OpenBabel::OBInternalCoord * *)
 ?insert@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@QAEXPAU?$pair@PAVOBAtom@OpenBabel@@I@2@IABU32@@Z @ 1606 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::insert(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,unsigned int,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &)
 ?construct@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@std@@QAEXPAU?$pair@PAVOBAtom@OpenBabel@@I@2@ABU32@@Z @ 1607 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> >::construct(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &)
 ?destroy@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@std@@QAEXPAU?$pair@PAVOBAtom@OpenBabel@@I@2@@Z @ 1608 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> >::destroy(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?insert@?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@QAEXPAU?$pair@PAVOBAtom@OpenBabel@@H@2@IABU32@@Z @ 1609 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::insert(struct std::pair<class OpenBabel::OBAtom *,int> *,unsigned int,struct std::pair<class OpenBabel::OBAtom *,int> const &)
 ?destroy@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@std@@QAEXPAU?$pair@PAVOBAtom@OpenBabel@@H@2@@Z @ 1610 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> >::destroy(struct std::pair<class OpenBabel::OBAtom *,int> *)
 ?insert@?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@QAEXPAU?$pair@PAVOBAtom@OpenBabel@@N@2@IABU32@@Z @ 1611 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::insert(struct std::pair<class OpenBabel::OBAtom *,double> *,unsigned int,struct std::pair<class OpenBabel::OBAtom *,double> const &)
 ?destroy@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@std@@QAEXPAU?$pair@PAVOBAtom@OpenBabel@@N@2@@Z @ 1612 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> >::destroy(struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?construct@?$allocator@_N@std@@QAEXPA_NAB_N@Z @ 1613 NONAME ; public: void __thiscall std::allocator<bool>::construct(bool *,bool const &)
 ?_Ufill@?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@IAEXPAPAVOBInternalCoord@OpenBabel@@IABQAV34@@Z @ 1614 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::_Ufill(class OpenBabel::OBInternalCoord * *,unsigned int,class OpenBabel::OBInternalCoord * const &)
 ?_Ufill@?$vector@U?$pair@PAVOBAtom@OpenBabel@@I@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@I@std@@@2@@std@@IAEXPAU?$pair@PAVOBAtom@OpenBabel@@I@2@IABU32@@Z @ 1615 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,unsigned int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,unsigned int> > >::_Ufill(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,unsigned int,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &)
 ?size@?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@QBEIXZ @ 1616 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::size(void)const 
 ?_Ucopy@?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@IAEPAU?$pair@PAVOBAtom@OpenBabel@@H@2@PBU32@0PAU32@@Z @ 1617 NONAME ; protected: struct std::pair<class OpenBabel::OBAtom *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::_Ucopy(struct std::pair<class OpenBabel::OBAtom *,int> const *,struct std::pair<class OpenBabel::OBAtom *,int> const *,struct std::pair<class OpenBabel::OBAtom *,int> *)
 ?_Ufill@?$vector@U?$pair@PAVOBAtom@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@2@@std@@IAEXPAU?$pair@PAVOBAtom@OpenBabel@@H@2@IABU32@@Z @ 1618 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,int>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> > >::_Ufill(struct std::pair<class OpenBabel::OBAtom *,int> *,unsigned int,struct std::pair<class OpenBabel::OBAtom *,int> const &)
 ?allocate@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@H@2@IPBX@Z @ 1619 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,int> * __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> >::allocate(unsigned int,void const *)
 ?_Ucopy@?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@IAEPAU?$pair@PAVOBAtom@OpenBabel@@N@2@PBU32@0PAU32@@Z @ 1620 NONAME ; protected: struct std::pair<class OpenBabel::OBAtom *,double> * __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::_Ucopy(struct std::pair<class OpenBabel::OBAtom *,double> const *,struct std::pair<class OpenBabel::OBAtom *,double> const *,struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?_Ufill@?$vector@U?$pair@PAVOBAtom@OpenBabel@@N@std@@V?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@2@@std@@IAEXPAU?$pair@PAVOBAtom@OpenBabel@@N@2@IABU32@@Z @ 1621 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBAtom *,double>,class std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> > >::_Ufill(struct std::pair<class OpenBabel::OBAtom *,double> *,unsigned int,struct std::pair<class OpenBabel::OBAtom *,double> const &)
 ?allocate@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@std@@QAEPAU?$pair@PAVOBAtom@OpenBabel@@N@2@IPBX@Z @ 1622 NONAME ; public: struct std::pair<class OpenBabel::OBAtom *,double> * __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> >::allocate(unsigned int,void const *)
 ?construct@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@H@std@@@std@@QAEXPAU?$pair@PAVOBAtom@OpenBabel@@H@2@ABU32@@Z @ 1623 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,int> >::construct(struct std::pair<class OpenBabel::OBAtom *,int> *,struct std::pair<class OpenBabel::OBAtom *,int> const &)
 ?construct@?$allocator@U?$pair@PAVOBAtom@OpenBabel@@N@std@@@std@@QAEXPAU?$pair@PAVOBAtom@OpenBabel@@N@2@ABU32@@Z @ 1624 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBAtom *,double> >::construct(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> const &)
 ?sort@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@0P6A_NABV21@1@Z@Z @ 1625 NONAME ; void __cdecl std::sort(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,bool (__cdecl*)(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > const &))
 ?sort@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@0P6A_NABU21@1@Z@Z @ 1626 NONAME ; void __cdecl std::sort(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &))
 ?sort@std@@YAXPAI0P6A_NABI1@Z@Z @ 1627 NONAME ; void __cdecl std::sort(unsigned int *,unsigned int *,bool (__cdecl*)(unsigned int const &,unsigned int const &))
 ?sort@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@0P6A_NABU21@1@Z@Z @ 1628 NONAME ; void __cdecl std::sort(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,double> const &,struct std::pair<class OpenBabel::OBAtom *,double> const &))
 ?copy@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@I@1@PBU21@0PAU21@@Z @ 1629 NONAME ; struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __cdecl std::copy(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?fill@std@@YAXPAPAVOBEdgeBase@OpenBabel@@0ABQAV23@@Z @ 1630 NONAME ; void __cdecl std::fill(class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * const &)
 ?copy_backward@std@@YAPAPAVOBEdgeBase@OpenBabel@@PAPAV23@00@Z @ 1631 NONAME ; class OpenBabel::OBEdgeBase * * __cdecl std::copy_backward(class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * *,class OpenBabel::OBEdgeBase * *)
 ?fill@std@@YAXPA_N0AB_N@Z @ 1632 NONAME ; void __cdecl std::fill(bool *,bool *,bool const &)
 ?copy_backward@std@@YAPA_NPA_N00@Z @ 1633 NONAME ; bool * __cdecl std::copy_backward(bool *,bool *,bool *)
 ?copy@std@@YAPA_NPA_N00@Z @ 1634 NONAME ; bool * __cdecl std::copy(bool *,bool *,bool *)
 ?copy@std@@YAPAPAVOBAtom@OpenBabel@@PAPAV23@00@Z @ 1635 NONAME ; class OpenBabel::OBAtom * * __cdecl std::copy(class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * *,class OpenBabel::OBAtom * *)
 ?_Allocate@std@@YAPAPAVOBInternalCoord@OpenBabel@@HPAPAV23@@Z @ 1636 NONAME ; class OpenBabel::OBInternalCoord * * __cdecl std::_Allocate(int,class OpenBabel::OBInternalCoord * *)
 ?copy@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@I@1@PAU21@00@Z @ 1637 NONAME ; struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __cdecl std::copy(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?_Allocate@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@I@1@HPAU21@@Z @ 1638 NONAME ; struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __cdecl std::_Allocate(int,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?_Allocate@std@@YAPA_NHPA_N@Z @ 1639 NONAME ; bool * __cdecl std::_Allocate(int,bool *)
 ?fill@std@@YAXPAPAVOBInternalCoord@OpenBabel@@0ABQAV23@@Z @ 1640 NONAME ; void __cdecl std::fill(class OpenBabel::OBInternalCoord * *,class OpenBabel::OBInternalCoord * *,class OpenBabel::OBInternalCoord * const &)
 ?copy_backward@std@@YAPAPAVOBInternalCoord@OpenBabel@@PAPAV23@00@Z @ 1641 NONAME ; class OpenBabel::OBInternalCoord * * __cdecl std::copy_backward(class OpenBabel::OBInternalCoord * *,class OpenBabel::OBInternalCoord * *,class OpenBabel::OBInternalCoord * *)
 ?_Construct@std@@YAXPAPAVOBInternalCoord@OpenBabel@@ABQAV23@@Z @ 1642 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBInternalCoord * *,class OpenBabel::OBInternalCoord * const &)
 ?_Destroy@std@@YAXPAPAVOBInternalCoord@OpenBabel@@@Z @ 1643 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBInternalCoord * *)
 ?fill@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@0ABU21@@Z @ 1644 NONAME ; void __cdecl std::fill(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &)
 ?copy_backward@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@I@1@PAU21@00@Z @ 1645 NONAME ; struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __cdecl std::copy_backward(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?_Construct@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@ABU21@@Z @ 1646 NONAME ; void __cdecl std::_Construct(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &)
 ?_Destroy@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@@Z @ 1647 NONAME ; void __cdecl std::_Destroy(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?fill@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@H@1@0ABU21@@Z @ 1648 NONAME ; void __cdecl std::fill(struct std::pair<class OpenBabel::OBAtom *,int> *,struct std::pair<class OpenBabel::OBAtom *,int> *,struct std::pair<class OpenBabel::OBAtom *,int> const &)
 ?copy_backward@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@H@1@PAU21@00@Z @ 1649 NONAME ; struct std::pair<class OpenBabel::OBAtom *,int> * __cdecl std::copy_backward(struct std::pair<class OpenBabel::OBAtom *,int> *,struct std::pair<class OpenBabel::OBAtom *,int> *,struct std::pair<class OpenBabel::OBAtom *,int> *)
 ?_Destroy@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@H@1@@Z @ 1650 NONAME ; void __cdecl std::_Destroy(struct std::pair<class OpenBabel::OBAtom *,int> *)
 ?fill@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@0ABU21@@Z @ 1651 NONAME ; void __cdecl std::fill(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> const &)
 ?copy_backward@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@N@1@PAU21@00@Z @ 1652 NONAME ; struct std::pair<class OpenBabel::OBAtom *,double> * __cdecl std::copy_backward(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?_Destroy@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@@Z @ 1653 NONAME ; void __cdecl std::_Destroy(struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?_Construct@std@@YAXPA_NAB_N@Z @ 1654 NONAME ; void __cdecl std::_Construct(bool *,bool const &)
 ?_Allocate@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@H@1@HPAU21@@Z @ 1655 NONAME ; struct std::pair<class OpenBabel::OBAtom *,int> * __cdecl std::_Allocate(int,struct std::pair<class OpenBabel::OBAtom *,int> *)
 ?_Allocate@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@N@1@HPAU21@@Z @ 1656 NONAME ; struct std::pair<class OpenBabel::OBAtom *,double> * __cdecl std::_Allocate(int,struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?_Construct@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@H@1@ABU21@@Z @ 1657 NONAME ; void __cdecl std::_Construct(struct std::pair<class OpenBabel::OBAtom *,int> *,struct std::pair<class OpenBabel::OBAtom *,int> const &)
 ?_Construct@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@ABU21@@Z @ 1658 NONAME ; void __cdecl std::_Construct(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> const &)
 ?_Val_type@std@@YAPAV?$vector@HV?$allocator@H@std@@@1@PBV21@@Z @ 1659 NONAME ; class std::vector<int,class std::allocator<int> > * __cdecl std::_Val_type(class std::vector<int,class std::allocator<int> > const *)
 ?_Sort_0@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@0P6A_NABV21@1@Z0@Z @ 1660 NONAME ; void __cdecl std::_Sort_0(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,bool (__cdecl*)(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > const &),class std::vector<int,class std::allocator<int> > *)
 ?_Val_type@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@I@1@PBU21@@Z @ 1661 NONAME ; struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __cdecl std::_Val_type(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const *)
 ?_Sort_0@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@0P6A_NABU21@1@Z0@Z @ 1662 NONAME ; void __cdecl std::_Sort_0(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &),struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?_Val_type@std@@YAPAIPBI@Z @ 1663 NONAME ; unsigned int * __cdecl std::_Val_type(unsigned int const *)
 ?_Sort_0@std@@YAXPAI0P6A_NABI1@Z0@Z @ 1664 NONAME ; void __cdecl std::_Sort_0(unsigned int *,unsigned int *,bool (__cdecl*)(unsigned int const &,unsigned int const &),unsigned int *)
 ?_Val_type@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@N@1@PBU21@@Z @ 1665 NONAME ; struct std::pair<class OpenBabel::OBAtom *,double> * __cdecl std::_Val_type(struct std::pair<class OpenBabel::OBAtom *,double> const *)
 ?_Sort_0@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@0P6A_NABU21@1@Z0@Z @ 1666 NONAME ; void __cdecl std::_Sort_0(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,double> const &,struct std::pair<class OpenBabel::OBAtom *,double> const &),struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?_Insertion_sort@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@0P6A_NABV21@1@Z@Z @ 1667 NONAME ; void __cdecl std::_Insertion_sort(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,bool (__cdecl*)(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > const &))
 ?_Sort@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@0P6A_NABV21@1@Z0@Z @ 1668 NONAME ; void __cdecl std::_Sort(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,bool (__cdecl*)(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > const &),class std::vector<int,class std::allocator<int> > *)
 ?_Unguarded_insert@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@V21@P6A_NABV21@2@Z@Z @ 1669 NONAME ; void __cdecl std::_Unguarded_insert(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> >,bool (__cdecl*)(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > const &))
 ?_Insertion_sort@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@0P6A_NABU21@1@Z@Z @ 1670 NONAME ; void __cdecl std::_Insertion_sort(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &))
 ?_Sort@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@0P6A_NABU21@1@Z0@Z @ 1671 NONAME ; void __cdecl std::_Sort(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &),struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?_Unguarded_insert@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@U21@P6A_NABU21@2@Z@Z @ 1672 NONAME ; void __cdecl std::_Unguarded_insert(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int>,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &))
 ?_Insertion_sort@std@@YAXPAI0P6A_NABI1@Z@Z @ 1673 NONAME ; void __cdecl std::_Insertion_sort(unsigned int *,unsigned int *,bool (__cdecl*)(unsigned int const &,unsigned int const &))
 ?_Sort@std@@YAXPAI0P6A_NABI1@Z0@Z @ 1674 NONAME ; void __cdecl std::_Sort(unsigned int *,unsigned int *,bool (__cdecl*)(unsigned int const &,unsigned int const &),unsigned int *)
 ?_Unguarded_insert@std@@YAXPAIIP6A_NABI1@Z@Z @ 1675 NONAME ; void __cdecl std::_Unguarded_insert(unsigned int *,unsigned int,bool (__cdecl*)(unsigned int const &,unsigned int const &))
 ?_Insertion_sort@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@0P6A_NABU21@1@Z@Z @ 1676 NONAME ; void __cdecl std::_Insertion_sort(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,double> const &,struct std::pair<class OpenBabel::OBAtom *,double> const &))
 ?_Sort@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@0P6A_NABU21@1@Z0@Z @ 1677 NONAME ; void __cdecl std::_Sort(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,double> const &,struct std::pair<class OpenBabel::OBAtom *,double> const &),struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?_Unguarded_insert@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@U21@P6A_NABU21@2@Z@Z @ 1678 NONAME ; void __cdecl std::_Unguarded_insert(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double>,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,double> const &,struct std::pair<class OpenBabel::OBAtom *,double> const &))
 ?_Insertion_sort_1@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@0P6A_NABV21@1@Z0@Z @ 1679 NONAME ; void __cdecl std::_Insertion_sort_1(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,bool (__cdecl*)(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > const &),class std::vector<int,class std::allocator<int> > *)
 ?_Median@std@@YA?AV?$vector@HV?$allocator@H@std@@@1@V21@00P6A_NABV21@1@Z@Z @ 1680 NONAME ; class std::vector<int,class std::allocator<int> > __cdecl std::_Median(class std::vector<int,class std::allocator<int> >,class std::vector<int,class std::allocator<int> >,class std::vector<int,class std::allocator<int> >,bool (__cdecl*)(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > const &))
 ?_Unguarded_partition@std@@YAPAV?$vector@HV?$allocator@H@std@@@1@PAV21@0V21@P6A_NABV21@2@Z@Z @ 1681 NONAME ; class std::vector<int,class std::allocator<int> > * __cdecl std::_Unguarded_partition(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> >,bool (__cdecl*)(class std::vector<int,class std::allocator<int> > const &,class std::vector<int,class std::allocator<int> > const &))
 ?_Insertion_sort_1@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@0P6A_NABU21@1@Z0@Z @ 1682 NONAME ; void __cdecl std::_Insertion_sort_1(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &),struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?_Median@std@@YA?AU?$pair@PAVOBAtom@OpenBabel@@I@1@U21@00P6A_NABU21@1@Z@Z @ 1683 NONAME ; struct std::pair<class OpenBabel::OBAtom *,unsigned int> __cdecl std::_Median(struct std::pair<class OpenBabel::OBAtom *,unsigned int>,struct std::pair<class OpenBabel::OBAtom *,unsigned int>,struct std::pair<class OpenBabel::OBAtom *,unsigned int>,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &))
 ?_Unguarded_partition@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@I@1@PAU21@0U21@P6A_NABU21@2@Z@Z @ 1684 NONAME ; struct std::pair<class OpenBabel::OBAtom *,unsigned int> * __cdecl std::_Unguarded_partition(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int>,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &,struct std::pair<class OpenBabel::OBAtom *,unsigned int> const &))
 ?_Insertion_sort_1@std@@YAXPAI0P6A_NABI1@Z0@Z @ 1685 NONAME ; void __cdecl std::_Insertion_sort_1(unsigned int *,unsigned int *,bool (__cdecl*)(unsigned int const &,unsigned int const &),unsigned int *)
 ?_Median@std@@YAIIIIP6A_NABI0@Z@Z @ 1686 NONAME ; unsigned int __cdecl std::_Median(unsigned int,unsigned int,unsigned int,bool (__cdecl*)(unsigned int const &,unsigned int const &))
 ?_Unguarded_partition@std@@YAPAIPAI0IP6A_NABI1@Z@Z @ 1687 NONAME ; unsigned int * __cdecl std::_Unguarded_partition(unsigned int *,unsigned int *,unsigned int,bool (__cdecl*)(unsigned int const &,unsigned int const &))
 ?_Insertion_sort_1@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@0P6A_NABU21@1@Z0@Z @ 1688 NONAME ; void __cdecl std::_Insertion_sort_1(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,double> const &,struct std::pair<class OpenBabel::OBAtom *,double> const &),struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?_Median@std@@YA?AU?$pair@PAVOBAtom@OpenBabel@@N@1@U21@00P6A_NABU21@1@Z@Z @ 1689 NONAME ; struct std::pair<class OpenBabel::OBAtom *,double> __cdecl std::_Median(struct std::pair<class OpenBabel::OBAtom *,double>,struct std::pair<class OpenBabel::OBAtom *,double>,struct std::pair<class OpenBabel::OBAtom *,double>,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,double> const &,struct std::pair<class OpenBabel::OBAtom *,double> const &))
 ?_Unguarded_partition@std@@YAPAU?$pair@PAVOBAtom@OpenBabel@@N@1@PAU21@0U21@P6A_NABU21@2@Z@Z @ 1690 NONAME ; struct std::pair<class OpenBabel::OBAtom *,double> * __cdecl std::_Unguarded_partition(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double>,bool (__cdecl*)(struct std::pair<class OpenBabel::OBAtom *,double> const &,struct std::pair<class OpenBabel::OBAtom *,double> const &))
 ?iter_swap@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@0@Z @ 1691 NONAME ; void __cdecl std::iter_swap(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *)
 ?iter_swap@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@0@Z @ 1692 NONAME ; void __cdecl std::iter_swap(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?iter_swap@std@@YAXPAI0@Z @ 1693 NONAME ; void __cdecl std::iter_swap(unsigned int *,unsigned int *)
 ?iter_swap@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@0@Z @ 1694 NONAME ; void __cdecl std::iter_swap(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?_Iter_swap@std@@YAXPAV?$vector@HV?$allocator@H@std@@@1@00@Z @ 1695 NONAME ; void __cdecl std::_Iter_swap(class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *,class std::vector<int,class std::allocator<int> > *)
 ?_Iter_swap@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@I@1@00@Z @ 1696 NONAME ; void __cdecl std::_Iter_swap(struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *,struct std::pair<class OpenBabel::OBAtom *,unsigned int> *)
 ?_Iter_swap@std@@YAXPAI00@Z @ 1697 NONAME ; void __cdecl std::_Iter_swap(unsigned int *,unsigned int *,unsigned int *)
 ?_Iter_swap@std@@YAXPAU?$pair@PAVOBAtom@OpenBabel@@N@1@00@Z @ 1698 NONAME ; void __cdecl std::_Iter_swap(struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *,struct std::pair<class OpenBabel::OBAtom *,double> *)
 ?AssignPartialCharges@OBGastChrg@OpenBabel@@QAE_NAAVOBMol@2@@Z @ 1699 NONAME ; public: bool __thiscall OpenBabel::OBGastChrg::AssignPartialCharges(class OpenBabel::OBMol &)
 ?SetValues@GasteigerState@OpenBabel@@QAEXNNNN@Z @ 1700 NONAME ; public: void __thiscall OpenBabel::GasteigerState::SetValues(double,double,double,double)
 ?InitialPartialCharges@OBGastChrg@OpenBabel@@AAEXAAVOBMol@2@@Z @ 1701 NONAME ; private: void __thiscall OpenBabel::OBGastChrg::InitialPartialCharges(class OpenBabel::OBMol &)
 ?GasteigerSigmaChi@OBGastChrg@OpenBabel@@AAE_NPAVOBAtom@2@AAN11@Z @ 1702 NONAME ; private: bool __thiscall OpenBabel::OBGastChrg::GasteigerSigmaChi(class OpenBabel::OBAtom *,double &,double &,double &)
 ?GSVResize@OBGastChrg@OpenBabel@@QAEXH@Z @ 1703 NONAME ; public: void __thiscall OpenBabel::OBGastChrg::GSVResize(int)
 ??1GasteigerState@OpenBabel@@QAE@XZ @ 1704 NONAME ; public: __thiscall OpenBabel::GasteigerState::~GasteigerState(void)
 ??1OBGastChrg@OpenBabel@@QAE@XZ @ 1705 NONAME ; public: __thiscall OpenBabel::OBGastChrg::~OBGastChrg(void)
 ??0GasteigerState@OpenBabel@@QAE@XZ @ 1706 NONAME ; public: __thiscall OpenBabel::GasteigerState::GasteigerState(void)
 ??1?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAE@XZ @ 1707 NONAME ; public: __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::~vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >(void)
 ?begin@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAEPAPAVGasteigerState@OpenBabel@@XZ @ 1708 NONAME ; public: class OpenBabel::GasteigerState * * __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::begin(void)
 ?end@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAEPAPAVGasteigerState@OpenBabel@@XZ @ 1709 NONAME ; public: class OpenBabel::GasteigerState * * __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::end(void)
 ?size@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QBEIXZ @ 1710 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::size(void)const 
 ??A?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAEAAPAVGasteigerState@OpenBabel@@I@Z @ 1711 NONAME ; public: class OpenBabel::GasteigerState * & __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::operator[](unsigned int)
 ?push_back@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAEXABQAVGasteigerState@OpenBabel@@@Z @ 1712 NONAME ; public: void __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::push_back(class OpenBabel::GasteigerState * const &)
 ?clear@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAEXXZ @ 1713 NONAME ; public: void __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::clear(void)
 ?insert@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAEPAPAVGasteigerState@OpenBabel@@PAPAV34@ABQAV34@@Z @ 1714 NONAME ; public: class OpenBabel::GasteigerState * * __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::insert(class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * const &)
 ?erase@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAEPAPAVGasteigerState@OpenBabel@@PAPAV34@0@Z @ 1715 NONAME ; public: class OpenBabel::GasteigerState * * __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::erase(class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * *)
 ?_Destroy@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@IAEXPAPAVGasteigerState@OpenBabel@@0@Z @ 1716 NONAME ; protected: void __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::_Destroy(class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * *)
 ?deallocate@?$allocator@PAVGasteigerState@OpenBabel@@@std@@QAEXPAXI@Z @ 1717 NONAME ; public: void __thiscall std::allocator<class OpenBabel::GasteigerState *>::deallocate(void *,unsigned int)
 ?insert@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@QAEXPAPAVGasteigerState@OpenBabel@@IABQAV34@@Z @ 1718 NONAME ; public: void __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::insert(class OpenBabel::GasteigerState * *,unsigned int,class OpenBabel::GasteigerState * const &)
 ?destroy@?$allocator@PAVGasteigerState@OpenBabel@@@std@@QAEXPAPAVGasteigerState@OpenBabel@@@Z @ 1719 NONAME ; public: void __thiscall std::allocator<class OpenBabel::GasteigerState *>::destroy(class OpenBabel::GasteigerState * *)
 ?_Ucopy@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@IAEPAPAVGasteigerState@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 1720 NONAME ; protected: class OpenBabel::GasteigerState * * __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::_Ucopy(class OpenBabel::GasteigerState * const *,class OpenBabel::GasteigerState * const *,class OpenBabel::GasteigerState * *)
 ?_Ufill@?$vector@PAVGasteigerState@OpenBabel@@V?$allocator@PAVGasteigerState@OpenBabel@@@std@@@std@@IAEXPAPAVGasteigerState@OpenBabel@@IABQAV34@@Z @ 1721 NONAME ; protected: void __thiscall std::vector<class OpenBabel::GasteigerState *,class std::allocator<class OpenBabel::GasteigerState *> >::_Ufill(class OpenBabel::GasteigerState * *,unsigned int,class OpenBabel::GasteigerState * const &)
 ?allocate@?$allocator@PAVGasteigerState@OpenBabel@@@std@@QAEPAPAVGasteigerState@OpenBabel@@IPBX@Z @ 1722 NONAME ; public: class OpenBabel::GasteigerState * * __thiscall std::allocator<class OpenBabel::GasteigerState *>::allocate(unsigned int,void const *)
 ?construct@?$allocator@PAVGasteigerState@OpenBabel@@@std@@QAEXPAPAVGasteigerState@OpenBabel@@ABQAV34@@Z @ 1723 NONAME ; public: void __thiscall std::allocator<class OpenBabel::GasteigerState *>::construct(class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * const &)
 ?copy@std@@YAPAPAVGasteigerState@OpenBabel@@PAPAV23@00@Z @ 1724 NONAME ; class OpenBabel::GasteigerState * * __cdecl std::copy(class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * *)
 ?fill@std@@YAXPAPAVGasteigerState@OpenBabel@@0ABQAV23@@Z @ 1725 NONAME ; void __cdecl std::fill(class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * const &)
 ?copy_backward@std@@YAPAPAVGasteigerState@OpenBabel@@PAPAV23@00@Z @ 1726 NONAME ; class OpenBabel::GasteigerState * * __cdecl std::copy_backward(class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * *)
 ?_Destroy@std@@YAXPAPAVGasteigerState@OpenBabel@@@Z @ 1727 NONAME ; void __cdecl std::_Destroy(class OpenBabel::GasteigerState * *)
 ?_Allocate@std@@YAPAPAVGasteigerState@OpenBabel@@HPAPAV23@@Z @ 1728 NONAME ; class OpenBabel::GasteigerState * * __cdecl std::_Allocate(int,class OpenBabel::GasteigerState * *)
 ?_Construct@std@@YAXPAPAVGasteigerState@OpenBabel@@ABQAV23@@Z @ 1729 NONAME ; void __cdecl std::_Construct(class OpenBabel::GasteigerState * *,class OpenBabel::GasteigerState * const &)
 ??0OBError@OpenBabel@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0000@Z @ 1730 NONAME ; public: __thiscall OpenBabel::OBError::OBError(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<
 ?message@OBError@OpenBabel@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ @ 1731 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall OpenBabel::OBError::message(void)const 
 ?ThrowError@OpenBabel@@YAXPAD@Z @ 1732 NONAME ; void __cdecl OpenBabel::ThrowError(char *)
 ?ThrowError@OpenBabel@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1733 NONAME ; void __cdecl OpenBabel::ThrowError(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?PauseExit@OpenBabel@@YAXXZ @ 1734 NONAME ; void __cdecl OpenBabel::PauseExit(void)
 ?OBCompareInt@OpenBabel@@YA_NABH0@Z @ 1735 NONAME ; bool __cdecl OpenBabel::OBCompareInt(int const &,int const &)
 ?OBCompareUnsigned@OpenBabel@@YA_NABI0@Z @ 1736 NONAME ; bool __cdecl OpenBabel::OBCompareUnsigned(unsigned int const &,unsigned int const &)
 ?IsNear@OpenBabel@@YA_NABN0N@Z @ 1737 NONAME ; bool __cdecl OpenBabel::IsNear(double const &,double const &,double)
 ?IsNearZero@OpenBabel@@YA_NABNN@Z @ 1738 NONAME ; bool __cdecl OpenBabel::IsNearZero(double const &,double)
 ?NewExtension@OpenBabel@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV23@PAD@Z @ 1739 NONAME ; class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl OpenBabel::NewExtension(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char *)
 ?center_coords@OpenBabel@@YA?AVvector3@1@PANH@Z @ 1740 NONAME ; class OpenBabel::vector3 __cdecl OpenBabel::center_coords(double *,int)
 ?rotate_coords@OpenBabel@@YAXPANQAY02NH@Z @ 1741 NONAME ; void __cdecl OpenBabel::rotate_coords(double *,double (* const)[3],int)
 ?calc_rms@OpenBabel@@YANPAN0H@Z @ 1742 NONAME ; double __cdecl OpenBabel::calc_rms(double *,double *,int)
 ?SetRotorToAngle@OpenBabel@@YAXPANAAV?$vector@HV?$allocator@H@std@@@std@@N1@Z @ 1743 NONAME ; void __cdecl OpenBabel::SetRotorToAngle(double *,class std::vector<int,class std::allocator<int> > &,double,class std::vector<int,class std::allocator<int> > &)
 ?SafeOpen@OpenBabel@@YA_NAAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@PAD@Z @ 1744 NONAME ; bool __cdecl OpenBabel::SafeOpen(class std::basic_ifstream<char,struct std::char_traits<char> > &,char *)
 ?SafeOpen@OpenBabel@@YA_NAAVobifstream@@PAD@Z @ 1745 NONAME ; bool __cdecl OpenBabel::SafeOpen(class obifstream &,char *)
 ?SafeOpen@OpenBabel@@YA_NAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@PAD@Z @ 1746 NONAME ; bool __cdecl OpenBabel::SafeOpen(class std::basic_ofstream<char,struct std::char_traits<char> > &,char *)
 ?SafeOpen@OpenBabel@@YA_NAAV?$basic_ifstream@DU?$char_traits@D@std@@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z @ 1747 NONAME ; bool __cdecl OpenBabel::SafeOpen(class std::basic_ifstream<char,struct std::char_traits<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?SafeOpen@OpenBabel@@YA_NAAVobifstream@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1748 NONAME ; bool __cdecl OpenBabel::SafeOpen(class obifstream &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?SafeOpen@OpenBabel@@YA_NAAV?$basic_ofstream@DU?$char_traits@D@std@@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z @ 1749 NONAME ; bool __cdecl OpenBabel::SafeOpen(class std::basic_ofstream<char,struct std::char_traits<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?ToUpper@OpenBabel@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1750 NONAME ; void __cdecl OpenBabel::ToUpper(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?ToUpper@OpenBabel@@YAXPAD@Z @ 1751 NONAME ; void __cdecl OpenBabel::ToUpper(char *)
 ?ToLower@OpenBabel@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1752 NONAME ; void __cdecl OpenBabel::ToLower(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?ToLower@OpenBabel@@YAXPAD@Z @ 1753 NONAME ; void __cdecl OpenBabel::ToLower(char *)
 ?CleanAtomType@OpenBabel@@YAXPAD@Z @ 1754 NONAME ; void __cdecl OpenBabel::CleanAtomType(char *)
 ?SetInputType@OpenBabel@@YA_NAAVOBMol@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1755 NONAME ; bool __cdecl OpenBabel::SetInputType(class OpenBabel::OBMol &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?SetInputType@OBMol@OpenBabel@@QAEXW4io_type@2@@Z @ 1756 NONAME ; public: void __thiscall OpenBabel::OBMol::SetInputType(enum OpenBabel::io_type)
 ?SetOutputType@OpenBabel@@YA_NAAVOBMol@1@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1757 NONAME ; bool __cdecl OpenBabel::SetOutputType(class OpenBabel::OBMol &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?InternalToCartesian@OpenBabel@@YAXAAV?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@AAVOBMol@1@@Z @ 1758 NONAME ; void __cdecl OpenBabel::InternalToCartesian(class std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> > &,class OpenBabel::OBMol &)
 ?CartesianToInternal@OpenBabel@@YAXAAV?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@AAVOBMol@1@@Z @ 1759 NONAME ; void __cdecl OpenBabel::CartesianToInternal(class std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> > &,class OpenBabel::OBMol &)
 ?length_2@vector3@OpenBabel@@QBENXZ @ 1760 NONAME ; public: double __thiscall OpenBabel::vector3::length_2(void)const 
 ?qtrfit@OpenBabel@@YAXPAN0HQAY02N@Z @ 1761 NONAME ; void __cdecl OpenBabel::qtrfit(double *,double *,int,double (* const)[3])
 ?ob_make_rmat@OpenBabel@@YAXQAY02NQAN@Z @ 1762 NONAME ; void __cdecl OpenBabel::ob_make_rmat(double (* const)[3],double * const)
 ?superimpose@OpenBabel@@YANPAN0H@Z @ 1763 NONAME ; double __cdecl OpenBabel::superimpose(double *,double *,int)
 ?get_rmat@OpenBabel@@YAXPAN00H@Z @ 1764 NONAME ; void __cdecl OpenBabel::get_rmat(double *,double *,double *,int)
 ??A?$vector@PAVOBInternalCoord@OpenBabel@@V?$allocator@PAVOBInternalCoord@OpenBabel@@@std@@@std@@QAEAAPAVOBInternalCoord@OpenBabel@@I@Z @ 1765 NONAME ; public: class OpenBabel::OBInternalCoord * & __thiscall std::vector<class OpenBabel::OBInternalCoord *,class std::allocator<class OpenBabel::OBInternalCoord *> >::operator[](unsigned int)
 ?ParseSMARTSRecord@OpenBabel@@YAPAUPattern@1@PAD@Z @ 1766 NONAME ; struct OpenBabel::Pattern * __cdecl OpenBabel::ParseSMARTSRecord(char *)
 ?Init@OBSmartsPattern@OpenBabel@@QAE_NPBD@Z @ 1767 NONAME ; public: bool __thiscall OpenBabel::OBSmartsPattern::Init(char const *)
 ?Init@OBSmartsPattern@OpenBabel@@QAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1768 NONAME ; public: bool __thiscall OpenBabel::OBSmartsPattern::Init(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ??1OBSmartsPattern@OpenBabel@@UAE@XZ @ 1769 NONAME ; public: virtual __thiscall OpenBabel::OBSmartsPattern::~OBSmartsPattern(void)
 ?Match@OBSmartsPattern@OpenBabel@@QAE_NAAVOBMol@2@_N@Z @ 1770 NONAME ; public: bool __thiscall OpenBabel::OBSmartsPattern::Match(class OpenBabel::OBMol &,bool)
 ?RestrictedMatch@OBSmartsPattern@OpenBabel@@QAE_NAAVOBMol@2@AAV?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@_N@Z @ 1771 NONAME ; public: bool __thiscall OpenBabel::OBSmartsPattern::RestrictedMatch(class OpenBabel::OBMol &,class std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > > &,bool)
 ?RestrictedMatch@OBSmartsPattern@OpenBabel@@QAE_NAAVOBMol@2@AAVOBBitVec@2@_N@Z @ 1772 NONAME ; public: bool __thiscall OpenBabel::OBSmartsPattern::RestrictedMatch(class OpenBabel::OBMol &,class OpenBabel::OBBitVec &,bool)
 ?SetupAtomMatchTable@OpenBabel@@YAXAAV?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@PAUPattern@1@AAVOBMol@1@@Z @ 1773 NONAME ; void __cdecl OpenBabel::SetupAtomMatchTable(class std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > > &,struct OpenBabel::Pattern *,class OpenBabel::OBMol &)
 ??0OBBitVec@OpenBabel@@QAE@H@Z @ 1774 NONAME ; public: __thiscall OpenBabel::OBBitVec::OBBitVec(int)
 ??1?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@XZ @ 1775 NONAME ; public: __thiscall std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >::~pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >(void)
 ?GetUMapList@OBSmartsPattern@OpenBabel@@QAEAAV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@XZ @ 1776 NONAME ; public: class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > & __thiscall OpenBabel::OBSmartsPattern::GetUMapList(void)
 ?WriteMapList@OBSmartsPattern@OpenBabel@@QAEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z @ 1777 NONAME ; public: void __thiscall OpenBabel::OBSmartsPattern::WriteMapList(class std::basic_ostream<char,struct std::char_traits<char> > &)
 ??0OBSSMatch@OpenBabel@@QAE@AAVOBMol@1@PAUPattern@1@@Z @ 1778 NONAME ; public: __thiscall OpenBabel::OBSSMatch::OBSSMatch(class OpenBabel::OBMol &,struct OpenBabel::Pattern *)
 ??1OBSSMatch@OpenBabel@@QAE@XZ @ 1779 NONAME ; public: __thiscall OpenBabel::OBSSMatch::~OBSSMatch(void)
 ?Match@OBSSMatch@OpenBabel@@QAEXAAV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@H@Z @ 1780 NONAME ; public: void __thiscall OpenBabel::OBSSMatch::Match(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > &,int)
 ?GetCharge@OBSmartsPattern@OpenBabel@@QAEHH@Z @ 1781 NONAME ; public: int __thiscall OpenBabel::OBSmartsPattern::GetCharge(int)
 ?GetAtomicNum@OBSmartsPattern@OpenBabel@@QAEHH@Z @ 1782 NONAME ; public: int __thiscall OpenBabel::OBSmartsPattern::GetAtomicNum(int)
 ?GetBond@OBSmartsPattern@OpenBabel@@QAEXAAH00H@Z @ 1783 NONAME ; public: void __thiscall OpenBabel::OBSmartsPattern::GetBond(int &,int &,int &,int)
 ?SmartsLexReplace@OpenBabel@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@3@@Z @ 1784 NONAME ; void __cdecl OpenBabel::SmartsLexReplace(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::
 ??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@IAB_NABV?$allocator@_N@1@@Z @ 1785 NONAME ; public: __thiscall std::vector<bool,class std::allocator<bool> >::vector<bool,class std::allocator<bool> >(unsigned int,bool const &,class std::allocator<bool> const &)
 ?clear@?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAEXXZ @ 1786 NONAME ; public: void __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::clear(void)
 ?begin@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEPAU?$pair@HH@2@XZ @ 1787 NONAME ; public: struct std::pair<int,int> * __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::begin(void)
 ?end@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEPAU?$pair@HH@2@XZ @ 1788 NONAME ; public: struct std::pair<int,int> * __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::end(void)
 ??0?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@1@@Z @ 1789 NONAME ; public: __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >(class std::allocator<struc
 ??1?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QAE@XZ @ 1790 NONAME ; public: __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::~vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >(void)
 ?begin@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ @ 1791 NONAME ; public: struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > * __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::begin(void)
 ?end@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@XZ @ 1792 NONAME ; public: struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > * __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::end(void)
 ?push_back@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QAEXABU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@Z @ 1793 NONAME ; public: void __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::push_back(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > const &)
 ?clear@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QAEXXZ @ 1794 NONAME ; public: void __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::clear(void)
 ?resize@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAEXIABV?$vector@_NV?$allocator@_N@std@@@2@@Z @ 1795 NONAME ; public: void __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::resize(unsigned int,class std::vector<bool,class std::allocator<bool> > const &)
 ??A?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAEAAV?$vector@_NV?$allocator@_N@std@@@1@I@Z @ 1796 NONAME ; public: class std::vector<bool,class std::allocator<bool> > & __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::operator[](unsigned int)
 ??0?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAPAVOBEdgeBase@OpenBabel@@@1@@Z @ 1797 NONAME ; public: __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >(class std::allocator<class OpenBabel::OBEdgeBase * *> const &)
 ??1?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@QAE@XZ @ 1798 NONAME ; public: __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::~vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >(void)
 ?resize@?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEXIABQAPAVOBEdgeBase@OpenBabel@@@Z @ 1799 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::resize(unsigned int,class OpenBabel::OBEdgeBase * * const &)
 ??A?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEAAPAPAVOBEdgeBase@OpenBabel@@I@Z @ 1800 NONAME ; public: class OpenBabel::OBEdgeBase * * & __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::operator[](unsigned int)
 ??0?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@ABQAUPattern@OpenBabel@@ABV?$vector@_NV?$allocator@_N@std@@@1@@Z @ 1801 NONAME ; public: __thiscall std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >(struct OpenBabel::Pattern * const &,class std::vector<bool,class std::allocator<bool> > const &)
 ??0?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@VOBBitVec@OpenBabel@@@1@@Z @ 1802 NONAME ; public: __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >(class std::allocator<class OpenBabel::OBBitVec> const &)
 ??1?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@QAE@XZ @ 1803 NONAME ; public: __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::~vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >(void)
 ?begin@?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@QAEPAVOBBitVec@OpenBabel@@XZ @ 1804 NONAME ; public: class OpenBabel::OBBitVec * __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::begin(void)
 ?end@?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@QAEPAVOBBitVec@OpenBabel@@XZ @ 1805 NONAME ; public: class OpenBabel::OBBitVec * __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::end(void)
 ?push_back@?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@QAEXABVOBBitVec@OpenBabel@@@Z @ 1806 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::push_back(class OpenBabel::OBBitVec const &)
 ?begin@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@XZ @ 1807 NONAME ; public: struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __thiscall std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_trai
 ?end@?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QAEPAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@2@XZ @ 1808 NONAME ; public: struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __thiscall std::vector<struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class std::basic_string<char,struct std::char_trai
 ??0?$vector@_NV?$allocator@_N@std@@@std@@QAE@ABV01@@Z @ 1809 NONAME ; public: __thiscall std::vector<bool,class std::allocator<bool> >::vector<bool,class std::allocator<bool> >(class std::vector<bool,class std::allocator<bool> > const &)
 ?insert@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@PAU32@ABU32@@Z @ 1810 NONAME ; public: struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > * __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::insert(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,cl
 ?erase@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@PAU32@0@Z @ 1811 NONAME ; public: struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > * __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::erase(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,cla
 ?_Destroy@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@IAEXPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@0@Z @ 1812 NONAME ; protected: void __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::_Destroy(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *)
 ?deallocate@?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAEXPAXI@Z @ 1813 NONAME ; public: void __thiscall std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > >::deallocate(void *,unsigned int)
 ?begin@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAEPAV?$vector@_NV?$allocator@_N@std@@@2@XZ @ 1814 NONAME ; public: class std::vector<bool,class std::allocator<bool> > * __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::begin(void)
 ?end@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAEPAV?$vector@_NV?$allocator@_N@std@@@2@XZ @ 1815 NONAME ; public: class std::vector<bool,class std::allocator<bool> > * __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::end(void)
 ?size@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QBEIXZ @ 1816 NONAME ; public: unsigned int __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::size(void)const 
 ?insert@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@2@IABV32@@Z @ 1817 NONAME ; public: void __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::insert(class std::vector<bool,class std::allocator<bool> > *,unsigned int,class std::vector<bool,class std::allocator<bool> > const &)
 ?erase@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@QAEPAV?$vector@_NV?$allocator@_N@std@@@2@PAV32@0@Z @ 1818 NONAME ; public: class std::vector<bool,class std::allocator<bool> > * __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::erase(class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > *)
 ?begin@?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEPAPAPAVOBEdgeBase@OpenBabel@@XZ @ 1819 NONAME ; public: class OpenBabel::OBEdgeBase * * * __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::begin(void)
 ?end@?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEPAPAPAVOBEdgeBase@OpenBabel@@XZ @ 1820 NONAME ; public: class OpenBabel::OBEdgeBase * * * __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::end(void)
 ?size@?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@QBEIXZ @ 1821 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::size(void)const 
 ?insert@?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEXPAPAPAVOBEdgeBase@OpenBabel@@IABQAPAV34@@Z @ 1822 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::insert(class OpenBabel::OBEdgeBase * * *,unsigned int,class OpenBabel::OBEdgeBase * * const &)
 ?erase@?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@QAEPAPAPAVOBEdgeBase@OpenBabel@@PAPAPAV34@0@Z @ 1823 NONAME ; public: class OpenBabel::OBEdgeBase * * * __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::erase(class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * *)
 ?_Destroy@?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@IAEXPAPAPAVOBEdgeBase@OpenBabel@@0@Z @ 1824 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::_Destroy(class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * *)
 ?deallocate@?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@QAEXPAXI@Z @ 1825 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBEdgeBase * *>::deallocate(void *,unsigned int)
 ?insert@?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@QAEPAVOBBitVec@OpenBabel@@PAV34@ABV34@@Z @ 1826 NONAME ; public: class OpenBabel::OBBitVec * __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::insert(class OpenBabel::OBBitVec *,class OpenBabel::OBBitVec const &)
 ?_Destroy@?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@IAEXPAVOBBitVec@OpenBabel@@0@Z @ 1827 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::_Destroy(class OpenBabel::OBBitVec *,class OpenBabel::OBBitVec *)
 ?deallocate@?$allocator@VOBBitVec@OpenBabel@@@std@@QAEXPAXI@Z @ 1828 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBBitVec>::deallocate(void *,unsigned int)
 ?begin@?$vector@_NV?$allocator@_N@std@@@std@@QBEPB_NXZ @ 1829 NONAME ; public: bool const * __thiscall std::vector<bool,class std::allocator<bool> >::begin(void)const 
 ?end@?$vector@_NV?$allocator@_N@std@@@std@@QBEPB_NXZ @ 1830 NONAME ; public: bool const * __thiscall std::vector<bool,class std::allocator<bool> >::end(void)const 
 ?insert@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QAEXPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@IABU32@@Z @ 1831 NONAME ; public: void __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::insert(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,unsigned int,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > const &)
 ?destroy@?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAEXPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@Z @ 1832 NONAME ; public: void __thiscall std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > >::destroy(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *)
 ?_Destroy@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IAEXPAV?$vector@_NV?$allocator@_N@std@@@2@0@Z @ 1833 NONAME ; protected: void __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::_Destroy(class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > *)
 ?_Ucopy@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IAEPAV?$vector@_NV?$allocator@_N@std@@@2@PBV32@0PAV32@@Z @ 1834 NONAME ; protected: class std::vector<bool,class std::allocator<bool> > * __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::_Ucopy(class std::vector<bool,class std::allocator<bool> > const *,class std::vector<bool,class std::allocator<bool> > const *,class std::vector<bool,class std::allocator<bool> > *)
 ?_Ufill@?$vector@V?$vector@_NV?$allocator@_N@std@@@std@@V?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@2@@std@@IAEXPAV?$vector@_NV?$allocator@_N@std@@@2@IABV32@@Z @ 1835 NONAME ; protected: void __thiscall std::vector<class std::vector<bool,class std::allocator<bool> >,class std::allocator<class std::vector<bool,class std::allocator<bool> > > >::_Ufill(class std::vector<bool,class std::allocator<bool> > *,unsigned int,class std::vector<bool,class std::allocator<bool> > const &)
 ?allocate@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEPAV?$vector@_NV?$allocator@_N@std@@@2@IPBX@Z @ 1836 NONAME ; public: class std::vector<bool,class std::allocator<bool> > * __thiscall std::allocator<class std::vector<bool,class std::allocator<bool> > >::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEXPAXI@Z @ 1837 NONAME ; public: void __thiscall std::allocator<class std::vector<bool,class std::allocator<bool> > >::deallocate(void *,unsigned int)
 ?_Ucopy@?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@IAEPAPAPAVOBEdgeBase@OpenBabel@@PBQAPAV34@0PAPAPAV34@@Z @ 1838 NONAME ; protected: class OpenBabel::OBEdgeBase * * * __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::_Ucopy(class OpenBabel::OBEdgeBase * * const *,class OpenBabel::OBEdgeBase * * const *,class OpenBabel::OBEdgeBase * * *)
 ?_Ufill@?$vector@PAPAVOBEdgeBase@OpenBabel@@V?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@@std@@IAEXPAPAPAVOBEdgeBase@OpenBabel@@IABQAPAV34@@Z @ 1839 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBEdgeBase * *,class std::allocator<class OpenBabel::OBEdgeBase * *> >::_Ufill(class OpenBabel::OBEdgeBase * * *,unsigned int,class OpenBabel::OBEdgeBase * * const &)
 ?allocate@?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@QAEPAPAPAVOBEdgeBase@OpenBabel@@IPBX@Z @ 1840 NONAME ; public: class OpenBabel::OBEdgeBase * * * __thiscall std::allocator<class OpenBabel::OBEdgeBase * *>::allocate(unsigned int,void const *)
 ?destroy@?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@QAEXPAPAPAVOBEdgeBase@OpenBabel@@@Z @ 1841 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBEdgeBase * *>::destroy(class OpenBabel::OBEdgeBase * * *)
 ?insert@?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@QAEXPAVOBBitVec@OpenBabel@@IABV34@@Z @ 1842 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::insert(class OpenBabel::OBBitVec *,unsigned int,class OpenBabel::OBBitVec const &)
 ?destroy@?$allocator@VOBBitVec@OpenBabel@@@std@@QAEXPAVOBBitVec@OpenBabel@@@Z @ 1843 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBBitVec>::destroy(class OpenBabel::OBBitVec *)
 ?size@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@QBEIXZ @ 1844 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::size(void)const 
 ?_Ucopy@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@IAEPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@PBU32@0PAU32@@Z @ 1845 NONAME ; protected: struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > * __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::_Ucopy(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > const *,struct std::pair<struct OpenBabel::Pat
 ?_Ufill@?$vector@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@V?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@2@@std@@IAEXPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@IABU32@@Z @ 1846 NONAME ; protected: void __thiscall std::vector<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >,class std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > > >::_Ufill(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,unsigned int,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > const &)
 ?allocate@?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAEPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@IPBX@Z @ 1847 NONAME ; public: struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > * __thiscall std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > >::allocate(unsigned int,void const *)
 ?construct@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@2@ABV32@@Z @ 1848 NONAME ; public: void __thiscall std::allocator<class std::vector<bool,class std::allocator<bool> > >::construct(class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > const &)
 ?destroy@?$allocator@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEXPAV?$vector@_NV?$allocator@_N@std@@@2@@Z @ 1849 NONAME ; public: void __thiscall std::allocator<class std::vector<bool,class std::allocator<bool> > >::destroy(class std::vector<bool,class std::allocator<bool> > *)
 ?construct@?$allocator@PAPAVOBEdgeBase@OpenBabel@@@std@@QAEXPAPAPAVOBEdgeBase@OpenBabel@@ABQAPAV34@@Z @ 1850 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBEdgeBase * *>::construct(class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * const &)
 ?size@?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@QBEIXZ @ 1851 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::size(void)const 
 ?_Ucopy@?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@IAEPAVOBBitVec@OpenBabel@@PBV34@0PAV34@@Z @ 1852 NONAME ; protected: class OpenBabel::OBBitVec * __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::_Ucopy(class OpenBabel::OBBitVec const *,class OpenBabel::OBBitVec const *,class OpenBabel::OBBitVec *)
 ?_Ufill@?$vector@VOBBitVec@OpenBabel@@V?$allocator@VOBBitVec@OpenBabel@@@std@@@std@@IAEXPAVOBBitVec@OpenBabel@@IABV34@@Z @ 1853 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBBitVec,class std::allocator<class OpenBabel::OBBitVec> >::_Ufill(class OpenBabel::OBBitVec *,unsigned int,class OpenBabel::OBBitVec const &)
 ?allocate@?$allocator@VOBBitVec@OpenBabel@@@std@@QAEPAVOBBitVec@OpenBabel@@IPBX@Z @ 1854 NONAME ; public: class OpenBabel::OBBitVec * __thiscall std::allocator<class OpenBabel::OBBitVec>::allocate(unsigned int,void const *)
 ?construct@?$allocator@U?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@@std@@QAEXPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@2@ABU32@@Z @ 1855 NONAME ; public: void __thiscall std::allocator<struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > >::construct(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > const &)
 ?construct@?$allocator@VOBBitVec@OpenBabel@@@std@@QAEXPAVOBBitVec@OpenBabel@@ABV34@@Z @ 1856 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBBitVec>::construct(class OpenBabel::OBBitVec *,class OpenBabel::OBBitVec const &)
 ?copy@std@@YAPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@1@PAU21@00@Z @ 1857 NONAME ; struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > * __cdecl std::copy(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *)
 ?fill@std@@YAXPAV?$vector@_NV?$allocator@_N@std@@@1@0ABV21@@Z @ 1858 NONAME ; void __cdecl std::fill(class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > const &)
 ?copy_backward@std@@YAPAV?$vector@_NV?$allocator@_N@std@@@1@PAV21@00@Z @ 1859 NONAME ; class std::vector<bool,class std::allocator<bool> > * __cdecl std::copy_backward(class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > *)
 ?copy@std@@YAPAV?$vector@_NV?$allocator@_N@std@@@1@PAV21@00@Z @ 1860 NONAME ; class std::vector<bool,class std::allocator<bool> > * __cdecl std::copy(class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > *)
 ?fill@std@@YAXPAPAPAVOBEdgeBase@OpenBabel@@0ABQAPAV23@@Z @ 1861 NONAME ; void __cdecl std::fill(class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * const &)
 ?copy_backward@std@@YAPAPAPAVOBEdgeBase@OpenBabel@@PAPAPAV23@00@Z @ 1862 NONAME ; class OpenBabel::OBEdgeBase * * * __cdecl std::copy_backward(class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * *)
 ?copy@std@@YAPAPAPAVOBEdgeBase@OpenBabel@@PAPAPAV23@00@Z @ 1863 NONAME ; class OpenBabel::OBEdgeBase * * * __cdecl std::copy(class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * *)
 ?fill@std@@YAXPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@1@0ABU21@@Z @ 1864 NONAME ; void __cdecl std::fill(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > const &)
 ?copy_backward@std@@YAPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@1@PAU21@00@Z @ 1865 NONAME ; struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > * __cdecl std::copy_backward(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *)
 ?_Destroy@std@@YAXPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@1@@Z @ 1866 NONAME ; void __cdecl std::_Destroy(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *)
 ?_Allocate@std@@YAPAV?$vector@_NV?$allocator@_N@std@@@1@HPAV21@@Z @ 1867 NONAME ; class std::vector<bool,class std::allocator<bool> > * __cdecl std::_Allocate(int,class std::vector<bool,class std::allocator<bool> > *)
 ?_Allocate@std@@YAPAPAPAVOBEdgeBase@OpenBabel@@HPAPAPAV23@@Z @ 1868 NONAME ; class OpenBabel::OBEdgeBase * * * __cdecl std::_Allocate(int,class OpenBabel::OBEdgeBase * * *)
 ?_Destroy@std@@YAXPAPAPAVOBEdgeBase@OpenBabel@@@Z @ 1869 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBEdgeBase * * *)
 ?fill@std@@YAXPAVOBBitVec@OpenBabel@@0ABV23@@Z @ 1870 NONAME ; void __cdecl std::fill(class OpenBabel::OBBitVec *,class OpenBabel::OBBitVec *,class OpenBabel::OBBitVec const &)
 ?copy_backward@std@@YAPAVOBBitVec@OpenBabel@@PAV23@00@Z @ 1871 NONAME ; class OpenBabel::OBBitVec * __cdecl std::copy_backward(class OpenBabel::OBBitVec *,class OpenBabel::OBBitVec *,class OpenBabel::OBBitVec *)
 ?_Destroy@std@@YAXPAVOBBitVec@OpenBabel@@@Z @ 1872 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBBitVec *)
 ?_Allocate@std@@YAPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@1@HPAU21@@Z @ 1873 NONAME ; struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > * __cdecl std::_Allocate(int,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *)
 ?_Construct@std@@YAXPAV?$vector@_NV?$allocator@_N@std@@@1@ABV21@@Z @ 1874 NONAME ; void __cdecl std::_Construct(class std::vector<bool,class std::allocator<bool> > *,class std::vector<bool,class std::allocator<bool> > const &)
 ?_Destroy@std@@YAXPAV?$vector@_NV?$allocator@_N@std@@@1@@Z @ 1875 NONAME ; void __cdecl std::_Destroy(class std::vector<bool,class std::allocator<bool> > *)
 ?_Construct@std@@YAXPAPAPAVOBEdgeBase@OpenBabel@@ABQAPAV23@@Z @ 1876 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBEdgeBase * * *,class OpenBabel::OBEdgeBase * * const &)
 ?_Allocate@std@@YAPAVOBBitVec@OpenBabel@@HPAV23@@Z @ 1877 NONAME ; class OpenBabel::OBBitVec * __cdecl std::_Allocate(int,class OpenBabel::OBBitVec *)
 ?_Construct@std@@YAXPAU?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@1@ABU21@@Z @ 1878 NONAME ; void __cdecl std::_Construct(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > *,struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > const &)
 ?_Construct@std@@YAXPAVOBBitVec@OpenBabel@@ABV23@@Z @ 1879 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBBitVec *,class OpenBabel::OBBitVec const &)
 ??4?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAEAAU01@ABU01@@Z @ 1880 NONAME ; public: struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > & __thiscall std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >::operator=(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > const &)
 ??0?$pair@PAUPattern@OpenBabel@@V?$vector@_NV?$allocator@_N@std@@@std@@@std@@QAE@ABU01@@Z @ 1881 NONAME ; public: __thiscall std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > >(struct std::pair<struct OpenBabel::Pattern *,class std::vector<bool,class std::allocator<bool> > > const &)
 ??4?$vector@_NV?$allocator@_N@std@@@std@@QAEAAV01@ABV01@@Z @ 1882 NONAME ; public: class std::vector<bool,class std::allocator<bool> > & __thiscall std::vector<bool,class std::allocator<bool> >::operator=(class std::vector<bool,class std::allocator<bool> > const &)
 ?capacity@?$vector@_NV?$allocator@_N@std@@@std@@QBEIXZ @ 1883 NONAME ; public: unsigned int __thiscall std::vector<bool,class std::allocator<bool> >::capacity(void)const 
 ?copy@std@@YAPA_NPB_N0PA_N@Z @ 1884 NONAME ; bool * __cdecl std::copy(bool const *,bool const *,bool *)
 ?read_rules@patty@OpenBabel@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1885 NONAME ; public: void __thiscall OpenBabel::patty::read_rules(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ?assign_rules@patty@OpenBabel@@QAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z @ 1886 NONAME ; public: void __thiscall OpenBabel::patty::assign_rules(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &)
 ?assign_types@patty@OpenBabel@@QAEXAAVOBMol@2@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z @ 1887 NONAME ; public: void __thiscall OpenBabel::patty::assign_types(class OpenBabel::OBMol &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &)
 ?GetMapList@OBSmartsPattern@OpenBabel@@QAEAAV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@XZ @ 1888 NONAME ; public: class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > & __thiscall OpenBabel::OBSmartsPattern::GetMapList(void)
 ?assign_types@patty@OpenBabel@@QAEXAAVOBMol@2@AAV?$vector@HV?$allocator@H@std@@@std@@@Z @ 1889 NONAME ; public: void __thiscall OpenBabel::patty::assign_types(class OpenBabel::OBMol &,class std::vector<int,class std::allocator<int> > &)
 ?type_to_int@patty@OpenBabel@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z @ 1890 NONAME ; public: int __thiscall OpenBabel::patty::type_to_int(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)
 ?Istype@patty@OpenBabel@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 1891 NONAME ; public: int __thiscall OpenBabel::patty::Istype(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ?resize@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z @ 1892 NONAME ; public: void __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::resize(unsigned int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ??0?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@std@@QAE@ABV01@@Z @ 1893 NONAME ; public: __thiscall std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >(class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &)
 ?size@?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@QBEIXZ @ 1894 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::size(void)const 
 ??A?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@QAEAAPAVOBSmartsPattern@OpenBabel@@I@Z @ 1895 NONAME ; public: class OpenBabel::OBSmartsPattern * & __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::operator[](unsigned int)
 ?begin@?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@QAEPAPAVOBSmartsPattern@OpenBabel@@XZ @ 1896 NONAME ; public: class OpenBabel::OBSmartsPattern * * __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::begin(void)
 ?push_back@?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@QAEXABQAVOBSmartsPattern@OpenBabel@@@Z @ 1897 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::push_back(class OpenBabel::OBSmartsPattern * const &)
 ?end@?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@QAEPAPAVOBSmartsPattern@OpenBabel@@XZ @ 1898 NONAME ; public: class OpenBabel::OBSmartsPattern * * __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::end(void)
 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@0@Z @ 1899 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::erase(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
 ?insert@?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@QAEPAPAVOBSmartsPattern@OpenBabel@@PAPAV34@ABQAV34@@Z @ 1900 NONAME ; public: class OpenBabel::OBSmartsPattern * * __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::insert(class OpenBabel::OBSmartsPattern * *,class OpenBabel::OBSmartsPattern * const &)
 ?insert@?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@QAEXPAPAVOBSmartsPattern@OpenBabel@@IABQAV34@@Z @ 1901 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::insert(class OpenBabel::OBSmartsPattern * *,unsigned int,class OpenBabel::OBSmartsPattern * const &)
 ?_Destroy@?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@IAEXPAPAVOBSmartsPattern@OpenBabel@@0@Z @ 1902 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::_Destroy(class OpenBabel::OBSmartsPattern * *,class OpenBabel::OBSmartsPattern * *)
 ?deallocate@?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@QAEXPAXI@Z @ 1903 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBSmartsPattern *>::deallocate(void *,unsigned int)
 ?destroy@?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@QAEXPAPAVOBSmartsPattern@OpenBabel@@@Z @ 1904 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBSmartsPattern *>::destroy(class OpenBabel::OBSmartsPattern * *)
 ?_Ucopy@?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@IAEPAPAVOBSmartsPattern@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 1905 NONAME ; protected: class OpenBabel::OBSmartsPattern * * __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::_Ucopy(class OpenBabel::OBSmartsPattern * const *,class OpenBabel::OBSmartsPattern * const *,class OpenBabel::OBSmartsPattern * *)
 ?_Ufill@?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@IAEXPAPAVOBSmartsPattern@OpenBabel@@IABQAV34@@Z @ 1906 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::_Ufill(class OpenBabel::OBSmartsPattern * *,unsigned int,class OpenBabel::OBSmartsPattern * const &)
 ?allocate@?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@QAEPAPAVOBSmartsPattern@OpenBabel@@IPBX@Z @ 1907 NONAME ; public: class OpenBabel::OBSmartsPattern * * __thiscall std::allocator<class OpenBabel::OBSmartsPattern *>::allocate(unsigned int,void const *)
 ?construct@?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@QAEXPAPAVOBSmartsPattern@OpenBabel@@ABQAV34@@Z @ 1908 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBSmartsPattern *>::construct(class OpenBabel::OBSmartsPattern * *,class OpenBabel::OBSmartsPattern * const &)
 ?copy@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z @ 1909 NONAME ; class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl std::copy(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
 ?fill@std@@YAXPAPAVOBSmartsPattern@OpenBabel@@0ABQAV23@@Z @ 1910 NONAME ; void __cdecl std::fill(class OpenBabel::OBSmartsPattern * *,class OpenBabel::OBSmartsPattern * *,class OpenBabel::OBSmartsPattern * const &)
 ?copy_backward@std@@YAPAPAVOBSmartsPattern@OpenBabel@@PAPAV23@00@Z @ 1911 NONAME ; class OpenBabel::OBSmartsPattern * * __cdecl std::copy_backward(class OpenBabel::OBSmartsPattern * *,class OpenBabel::OBSmartsPattern * *,class OpenBabel::OBSmartsPattern * *)
 ?_Destroy@std@@YAXPAPAVOBSmartsPattern@OpenBabel@@@Z @ 1912 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBSmartsPattern * *)
 ?_Allocate@std@@YAPAPAVOBSmartsPattern@OpenBabel@@HPAPAV23@@Z @ 1913 NONAME ; class OpenBabel::OBSmartsPattern * * __cdecl std::_Allocate(int,class OpenBabel::OBSmartsPattern * *)
 ?_Construct@std@@YAXPAPAVOBSmartsPattern@OpenBabel@@ABQAV23@@Z @ 1914 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBSmartsPattern * *,class OpenBabel::OBSmartsPattern * const &)
 ??0OBPhModel@OpenBabel@@QAE@XZ @ 1915 NONAME ; public: __thiscall OpenBabel::OBPhModel::OBPhModel(void)
 ??1OBPhModel@OpenBabel@@UAE@XZ @ 1916 NONAME ; public: virtual __thiscall OpenBabel::OBPhModel::~OBPhModel(void)
 ??1OBChemTsfm@OpenBabel@@QAE@XZ @ 1917 NONAME ; public: __thiscall OpenBabel::OBChemTsfm::~OBChemTsfm(void)
 ?ParseLine@OBPhModel@OpenBabel@@UAEXPBD@Z @ 1918 NONAME ; public: virtual void __thiscall OpenBabel::OBPhModel::ParseLine(char const *)
 ?NumAtoms@OBSmartsPattern@OpenBabel@@QBEIXZ @ 1919 NONAME ; public: unsigned int __thiscall OpenBabel::OBSmartsPattern::NumAtoms(void)const 
 ??0OBChemTsfm@OpenBabel@@QAE@XZ @ 1920 NONAME ; public: __thiscall OpenBabel::OBChemTsfm::OBChemTsfm(void)
 ??1?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@QAE@XZ @ 1921 NONAME ; public: __thiscall std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >::~pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >(void)
 ?AssignSeedPartialCharge@OBPhModel@OpenBabel@@QAEXAAVOBMol@2@@Z @ 1922 NONAME ; public: void __thiscall OpenBabel::OBPhModel::AssignSeedPartialCharge(class OpenBabel::OBMol &)
 ?SetPartialChargesPerceived@OBMol@OpenBabel@@QAEXXZ @ 1923 NONAME ; public: void __thiscall OpenBabel::OBMol::SetPartialChargesPerceived(void)
 ?CorrectForPH@OBPhModel@OpenBabel@@QAEXAAVOBMol@2@@Z @ 1924 NONAME ; public: void __thiscall OpenBabel::OBPhModel::CorrectForPH(class OpenBabel::OBMol &)
 ?AutomaticFormalCharge@OBMol@OpenBabel@@QAE_NXZ @ 1925 NONAME ; public: bool __thiscall OpenBabel::OBMol::AutomaticFormalCharge(void)
 ?SetCorrectedForPH@OBMol@OpenBabel@@QAEXXZ @ 1926 NONAME ; public: void __thiscall OpenBabel::OBMol::SetCorrectedForPH(void)
 ?Init@OBChemTsfm@OpenBabel@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z @ 1927 NONAME ; public: bool __thiscall OpenBabel::OBChemTsfm::Init(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?NumBonds@OBSmartsPattern@OpenBabel@@QBEIXZ @ 1928 NONAME ; public: unsigned int __thiscall OpenBabel::OBSmartsPattern::NumBonds(void)const 
 ?GetVectorBinding@OBSmartsPattern@OpenBabel@@QBEHH@Z @ 1929 NONAME ; public: int __thiscall OpenBabel::OBSmartsPattern::GetVectorBinding(int)const 
 ?Apply@OBChemTsfm@OpenBabel@@QAE_NAAVOBMol@2@@Z @ 1930 NONAME ; public: bool __thiscall OpenBabel::OBChemTsfm::Apply(class OpenBabel::OBMol &)
 ??0?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@HH@std@@@1@@Z @ 1931 NONAME ; public: __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >(class std::allocator<struct std::pair<int,int> > const &)
 ??1?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAE@XZ @ 1932 NONAME ; public: __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::~vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >(void)
 ?empty@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QBE_NXZ @ 1933 NONAME ; public: bool __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::empty(void)const 
 ?push_back@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEXABU?$pair@HH@2@@Z @ 1934 NONAME ; public: void __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::push_back(struct std::pair<int,int> const &)
 ??0?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@1@@Z @ 1935 NONAME ; public: __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >(class std::allocator<struct std::pair<struct std::pair<int,int>,int> > const &)
 ??1?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@QAE@XZ @ 1936 NONAME ; public: __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::~vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >(void)
 ?begin@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@QAEPAU?$pair@U?$pair@HH@std@@H@2@XZ @ 1937 NONAME ; public: struct std::pair<struct std::pair<int,int>,int> * __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::begin(void)
 ?end@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@QAEPAU?$pair@U?$pair@HH@std@@H@2@XZ @ 1938 NONAME ; public: struct std::pair<struct std::pair<int,int>,int> * __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::end(void)
 ?empty@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@QBE_NXZ @ 1939 NONAME ; public: bool __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::empty(void)const 
 ?push_back@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@QAEXABU?$pair@U?$pair@HH@std@@H@2@@Z @ 1940 NONAME ; public: void __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::push_back(struct std::pair<struct std::pair<int,int>,int> const &)
 ??0?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBChemTsfm@OpenBabel@@@1@@Z @ 1941 NONAME ; public: __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >(class std::allocator<class OpenBabel::OBChemTsfm *> const &)
 ??1?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@QAE@XZ @ 1942 NONAME ; public: __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::~vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >(void)
 ?begin@?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@QAEPAPAVOBChemTsfm@OpenBabel@@XZ @ 1943 NONAME ; public: class OpenBabel::OBChemTsfm * * __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::begin(void)
 ?end@?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@QAEPAPAVOBChemTsfm@OpenBabel@@XZ @ 1944 NONAME ; public: class OpenBabel::OBChemTsfm * * __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::end(void)
 ?push_back@?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@QAEXABQAVOBChemTsfm@OpenBabel@@@Z @ 1945 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::push_back(class OpenBabel::OBChemTsfm * const &)
 ??0?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@1@@Z @ 1946 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocato
 ??1?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@QAE@XZ @ 1947 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::~vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocat
 ?begin@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@XZ @ 1948 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::begin(void)
 ?end@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@XZ @ 1949 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::end(void)
 ?push_back@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@QAEXABU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@@Z @ 1950 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::push_back(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > const &)
 ??0?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@QAE@ABQAVOBSmartsPattern@OpenBabel@@ABV?$vector@NV?$allocator@N@std@@@1@@Z @ 1951 NONAME ; public: __thiscall std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >(class OpenBabel::OBSmartsPattern * const &,class std::vector<double,class std::allocator<double> > const &)
 ?push_back@?$vector@NV?$allocator@N@std@@@std@@QAEXABN@Z @ 1952 NONAME ; public: void __thiscall std::vector<double,class std::allocator<double> >::push_back(double const &)
 ??0?$pair@HH@std@@QAE@ABH0@Z @ 1953 NONAME ; public: __thiscall std::pair<int,int>::pair<int,int>(int const &,int const &)
 ??0?$pair@U?$pair@HH@std@@H@std@@QAE@ABU?$pair@HH@1@ABH@Z @ 1954 NONAME ; public: __thiscall std::pair<struct std::pair<int,int>,int>::pair<struct std::pair<int,int>,int>(struct std::pair<int,int> const &,int const &)
 ?size@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QBEIXZ @ 1955 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::size(void)const 
 ?insert@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEPAU?$pair@HH@2@PAU32@ABU32@@Z @ 1956 NONAME ; public: struct std::pair<int,int> * __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::insert(struct std::pair<int,int> *,struct std::pair<int,int> const &)
 ?_Destroy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IAEXPAU?$pair@HH@2@0@Z @ 1957 NONAME ; protected: void __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::_Destroy(struct std::pair<int,int> *,struct std::pair<int,int> *)
 ?deallocate@?$allocator@U?$pair@HH@std@@@std@@QAEXPAXI@Z @ 1958 NONAME ; public: void __thiscall std::allocator<struct std::pair<int,int> >::deallocate(void *,unsigned int)
 ?size@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@QBEIXZ @ 1959 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::size(void)const 
 ?insert@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@QAEPAU?$pair@U?$pair@HH@std@@H@2@PAU32@ABU32@@Z @ 1960 NONAME ; public: struct std::pair<struct std::pair<int,int>,int> * __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::insert(struct std::pair<struct std::pair<int,int>,int> *,struct std::pair<struct std::pair<int,int>,int> const &)
 ?_Destroy@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@IAEXPAU?$pair@U?$pair@HH@std@@H@2@0@Z @ 1961 NONAME ; protected: void __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::_Destroy(struct std::pair<struct std::pair<int,int>,int> *,struct std::pair<struct std::pair<int,int>,int> *)
 ?deallocate@?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@std@@QAEXPAXI@Z @ 1962 NONAME ; public: void __thiscall std::allocator<struct std::pair<struct std::pair<int,int>,int> >::deallocate(void *,unsigned int)
 ?insert@?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@QAEPAPAVOBChemTsfm@OpenBabel@@PAPAV34@ABQAV34@@Z @ 1963 NONAME ; public: class OpenBabel::OBChemTsfm * * __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::insert(class OpenBabel::OBChemTsfm * *,class OpenBabel::OBChemTsfm * const &)
 ?_Destroy@?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@IAEXPAPAVOBChemTsfm@OpenBabel@@0@Z @ 1964 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::_Destroy(class OpenBabel::OBChemTsfm * *,class OpenBabel::OBChemTsfm * *)
 ?deallocate@?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@QAEXPAXI@Z @ 1965 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBChemTsfm *>::deallocate(void *,unsigned int)
 ?insert@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@PAU32@ABU32@@Z @ 1966 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::insert(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,str
 ?_Destroy@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@IAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@0@Z @ 1967 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::_Destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double>
 ?deallocate@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@std@@QAEXPAXI@Z @ 1968 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > >::deallocate(void *,unsigned int)
 ?insert@?$vector@NV?$allocator@N@std@@@std@@QAEPANPANABN@Z @ 1969 NONAME ; public: double * __thiscall std::vector<double,class std::allocator<double> >::insert(double *,double const &)
 ?insert@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEXPAU?$pair@HH@2@IABU32@@Z @ 1970 NONAME ; public: void __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::insert(struct std::pair<int,int> *,unsigned int,struct std::pair<int,int> const &)
 ?destroy@?$allocator@U?$pair@HH@std@@@std@@QAEXPAU?$pair@HH@2@@Z @ 1971 NONAME ; public: void __thiscall std::allocator<struct std::pair<int,int> >::destroy(struct std::pair<int,int> *)
 ?insert@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@QAEXPAU?$pair@U?$pair@HH@std@@H@2@IABU32@@Z @ 1972 NONAME ; public: void __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::insert(struct std::pair<struct std::pair<int,int>,int> *,unsigned int,struct std::pair<struct std::pair<int,int>,int> const &)
 ?destroy@?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@std@@QAEXPAU?$pair@U?$pair@HH@std@@H@2@@Z @ 1973 NONAME ; public: void __thiscall std::allocator<struct std::pair<struct std::pair<int,int>,int> >::destroy(struct std::pair<struct std::pair<int,int>,int> *)
 ?insert@?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@QAEXPAPAVOBChemTsfm@OpenBabel@@IABQAV34@@Z @ 1974 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::insert(class OpenBabel::OBChemTsfm * *,unsigned int,class OpenBabel::OBChemTsfm * const &)
 ?destroy@?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@QAEXPAPAVOBChemTsfm@OpenBabel@@@Z @ 1975 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBChemTsfm *>::destroy(class OpenBabel::OBChemTsfm * *)
 ?insert@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@IABU32@@Z @ 1976 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::insert(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,unsigned int,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator
 ?destroy@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@@Z @ 1977 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > >::destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *)
 ?_Ucopy@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IAEPAU?$pair@HH@2@PBU32@0PAU32@@Z @ 1978 NONAME ; protected: struct std::pair<int,int> * __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::_Ucopy(struct std::pair<int,int> const *,struct std::pair<int,int> const *,struct std::pair<int,int> *)
 ?_Ufill@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@IAEXPAU?$pair@HH@2@IABU32@@Z @ 1979 NONAME ; protected: void __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::_Ufill(struct std::pair<int,int> *,unsigned int,struct std::pair<int,int> const &)
 ?allocate@?$allocator@U?$pair@HH@std@@@std@@QAEPAU?$pair@HH@2@IPBX@Z @ 1980 NONAME ; public: struct std::pair<int,int> * __thiscall std::allocator<struct std::pair<int,int> >::allocate(unsigned int,void const *)
 ?_Ucopy@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@IAEPAU?$pair@U?$pair@HH@std@@H@2@PBU32@0PAU32@@Z @ 1981 NONAME ; protected: struct std::pair<struct std::pair<int,int>,int> * __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::_Ucopy(struct std::pair<struct std::pair<int,int>,int> const *,struct std::pair<struct std::pair<int,int>,int> const *,struct std::pair<struct std::pair<int,int>,int> *)
 ?_Ufill@?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@std@@IAEXPAU?$pair@U?$pair@HH@std@@H@2@IABU32@@Z @ 1982 NONAME ; protected: void __thiscall std::vector<struct std::pair<struct std::pair<int,int>,int>,class std::allocator<struct std::pair<struct std::pair<int,int>,int> > >::_Ufill(struct std::pair<struct std::pair<int,int>,int> *,unsigned int,struct std::pair<struct std::pair<int,int>,int> const &)
 ?allocate@?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@std@@QAEPAU?$pair@U?$pair@HH@std@@H@2@IPBX@Z @ 1983 NONAME ; public: struct std::pair<struct std::pair<int,int>,int> * __thiscall std::allocator<struct std::pair<struct std::pair<int,int>,int> >::allocate(unsigned int,void const *)
 ?size@?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@QBEIXZ @ 1984 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::size(void)const 
 ?_Ucopy@?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@IAEPAPAVOBChemTsfm@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 1985 NONAME ; protected: class OpenBabel::OBChemTsfm * * __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::_Ucopy(class OpenBabel::OBChemTsfm * const *,class OpenBabel::OBChemTsfm * const *,class OpenBabel::OBChemTsfm * *)
 ?_Ufill@?$vector@PAVOBChemTsfm@OpenBabel@@V?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@@std@@IAEXPAPAVOBChemTsfm@OpenBabel@@IABQAV34@@Z @ 1986 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBChemTsfm *,class std::allocator<class OpenBabel::OBChemTsfm *> >::_Ufill(class OpenBabel::OBChemTsfm * *,unsigned int,class OpenBabel::OBChemTsfm * const &)
 ?allocate@?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@QAEPAPAVOBChemTsfm@OpenBabel@@IPBX@Z @ 1987 NONAME ; public: class OpenBabel::OBChemTsfm * * __thiscall std::allocator<class OpenBabel::OBChemTsfm *>::allocate(unsigned int,void const *)
 ?size@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@QBEIXZ @ 1988 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::size(void)const 
 ?_Ucopy@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@IAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@PBU32@0PAU32@@Z @ 1989 NONAME ; protected: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::_Ucopy(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > co
 ?_Ufill@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@2@@std@@IAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@IABU32@@Z @ 1990 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > > >::_Ufill(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,unsigned int,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::alloca
 ?allocate@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@IPBX@Z @ 1991 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > * __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > >::allocate(unsigned int,void const *)
 ?construct@?$allocator@U?$pair@HH@std@@@std@@QAEXPAU?$pair@HH@2@ABU32@@Z @ 1992 NONAME ; public: void __thiscall std::allocator<struct std::pair<int,int> >::construct(struct std::pair<int,int> *,struct std::pair<int,int> const &)
 ?construct@?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@std@@QAEXPAU?$pair@U?$pair@HH@std@@H@2@ABU32@@Z @ 1993 NONAME ; public: void __thiscall std::allocator<struct std::pair<struct std::pair<int,int>,int> >::construct(struct std::pair<struct std::pair<int,int>,int> *,struct std::pair<struct std::pair<int,int>,int> const &)
 ?construct@?$allocator@PAVOBChemTsfm@OpenBabel@@@std@@QAEXPAPAVOBChemTsfm@OpenBabel@@ABQAV34@@Z @ 1994 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBChemTsfm *>::construct(class OpenBabel::OBChemTsfm * *,class OpenBabel::OBChemTsfm * const &)
 ?construct@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@2@ABU32@@Z @ 1995 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > >::construct(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > const &)
 ?fill@std@@YAXPAU?$pair@HH@1@0ABU21@@Z @ 1996 NONAME ; void __cdecl std::fill(struct std::pair<int,int> *,struct std::pair<int,int> *,struct std::pair<int,int> const &)
 ?copy_backward@std@@YAPAU?$pair@HH@1@PAU21@00@Z @ 1997 NONAME ; struct std::pair<int,int> * __cdecl std::copy_backward(struct std::pair<int,int> *,struct std::pair<int,int> *,struct std::pair<int,int> *)
 ?_Destroy@std@@YAXPAU?$pair@HH@1@@Z @ 1998 NONAME ; void __cdecl std::_Destroy(struct std::pair<int,int> *)
 ?fill@std@@YAXPAU?$pair@U?$pair@HH@std@@H@1@0ABU21@@Z @ 1999 NONAME ; void __cdecl std::fill(struct std::pair<struct std::pair<int,int>,int> *,struct std::pair<struct std::pair<int,int>,int> *,struct std::pair<struct std::pair<int,int>,int> const &)
 ?copy_backward@std@@YAPAU?$pair@U?$pair@HH@std@@H@1@PAU21@00@Z @ 2000 NONAME ; struct std::pair<struct std::pair<int,int>,int> * __cdecl std::copy_backward(struct std::pair<struct std::pair<int,int>,int> *,struct std::pair<struct std::pair<int,int>,int> *,struct std::pair<struct std::pair<int,int>,int> *)
 ?_Destroy@std@@YAXPAU?$pair@U?$pair@HH@std@@H@1@@Z @ 2001 NONAME ; void __cdecl std::_Destroy(struct std::pair<struct std::pair<int,int>,int> *)
 ?fill@std@@YAXPAPAVOBChemTsfm@OpenBabel@@0ABQAV23@@Z @ 2002 NONAME ; void __cdecl std::fill(class OpenBabel::OBChemTsfm * *,class OpenBabel::OBChemTsfm * *,class OpenBabel::OBChemTsfm * const &)
 ?copy_backward@std@@YAPAPAVOBChemTsfm@OpenBabel@@PAPAV23@00@Z @ 2003 NONAME ; class OpenBabel::OBChemTsfm * * __cdecl std::copy_backward(class OpenBabel::OBChemTsfm * *,class OpenBabel::OBChemTsfm * *,class OpenBabel::OBChemTsfm * *)
 ?_Destroy@std@@YAXPAPAVOBChemTsfm@OpenBabel@@@Z @ 2004 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBChemTsfm * *)
 ?fill@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@1@0ABU21@@Z @ 2005 NONAME ; void __cdecl std::fill(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > const &)
 ?copy_backward@std@@YAPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@1@PAU21@00@Z @ 2006 NONAME ; struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > * __cdecl std::copy_backward(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *)
 ?_Destroy@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@1@@Z @ 2007 NONAME ; void __cdecl std::_Destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *)
 ?_Allocate@std@@YAPAU?$pair@HH@1@HPAU21@@Z @ 2008 NONAME ; struct std::pair<int,int> * __cdecl std::_Allocate(int,struct std::pair<int,int> *)
 ?_Allocate@std@@YAPAU?$pair@U?$pair@HH@std@@H@1@HPAU21@@Z @ 2009 NONAME ; struct std::pair<struct std::pair<int,int>,int> * __cdecl std::_Allocate(int,struct std::pair<struct std::pair<int,int>,int> *)
 ?_Allocate@std@@YAPAPAVOBChemTsfm@OpenBabel@@HPAPAV23@@Z @ 2010 NONAME ; class OpenBabel::OBChemTsfm * * __cdecl std::_Allocate(int,class OpenBabel::OBChemTsfm * *)
 ?_Allocate@std@@YAPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@1@HPAU21@@Z @ 2011 NONAME ; struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > * __cdecl std::_Allocate(int,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *)
 ?_Construct@std@@YAXPAU?$pair@HH@1@ABU21@@Z @ 2012 NONAME ; void __cdecl std::_Construct(struct std::pair<int,int> *,struct std::pair<int,int> const &)
 ?_Construct@std@@YAXPAU?$pair@U?$pair@HH@std@@H@1@ABU21@@Z @ 2013 NONAME ; void __cdecl std::_Construct(struct std::pair<struct std::pair<int,int>,int> *,struct std::pair<struct std::pair<int,int>,int> const &)
 ?_Construct@std@@YAXPAPAVOBChemTsfm@OpenBabel@@ABQAV23@@Z @ 2014 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBChemTsfm * *,class OpenBabel::OBChemTsfm * const &)
 ?_Construct@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@1@ABU21@@Z @ 2015 NONAME ; void __cdecl std::_Construct(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > const &)
 ??4?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@QAEAAU01@ABU01@@Z @ 2016 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > & __thiscall std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >::operator=(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > const &)
 ??0?$pair@PAVOBSmartsPattern@OpenBabel@@V?$vector@NV?$allocator@N@std@@@std@@@std@@QAE@ABU01@@Z @ 2017 NONAME ; public: __thiscall std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > >(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::vector<double,class std::allocator<double> > > const &)
 ?DoubleAdd@OpenBabel@@YAXPAUDoubleType@1@I@Z @ 2018 NONAME ; void __cdecl OpenBabel::DoubleAdd(struct OpenBabel::DoubleType *,unsigned int)
 ?DoubleMultiply@OpenBabel@@YAXIIPAUDoubleType@1@@Z @ 2019 NONAME ; void __cdecl OpenBabel::DoubleMultiply(unsigned int,unsigned int,struct OpenBabel::DoubleType *)
 ?DoubleModulus@OpenBabel@@YAIPAUDoubleType@1@I@Z @ 2020 NONAME ; unsigned int __cdecl OpenBabel::DoubleModulus(struct OpenBabel::DoubleType *,unsigned int)
 ?DetermineSequence@OpenBabel@@YAHIPAI00@Z @ 2021 NONAME ; int __cdecl OpenBabel::DetermineSequence(unsigned int,unsigned int *,unsigned int *,unsigned int *)
 ?GenerateSequence@OpenBabel@@YAXIIII@Z @ 2022 NONAME ; void __cdecl OpenBabel::GenerateSequence(unsigned int,unsigned int,unsigned int,unsigned int)
 ??0OBRandom@OpenBabel@@QAE@_N@Z @ 2023 NONAME ; public: __thiscall OpenBabel::OBRandom::OBRandom(bool)
 ?NextInt@OBRandom@OpenBabel@@QAEHXZ @ 2024 NONAME ; public: int __thiscall OpenBabel::OBRandom::NextInt(void)
 ?NextFloat@OBRandom@OpenBabel@@QAENXZ @ 2025 NONAME ; public: double __thiscall OpenBabel::OBRandom::NextFloat(void)
 ?TimeSeed@OBRandom@OpenBabel@@QAEXXZ @ 2026 NONAME ; public: void __thiscall OpenBabel::OBRandom::TimeSeed(void)
 ?WriteCharges@OpenBabel@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 2027 NONAME ; void __cdecl OpenBabel::WriteCharges(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?WriteDistanceMatrix@OpenBabel@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 2028 NONAME ; void __cdecl OpenBabel::WriteDistanceMatrix(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?WriteTorsions@OpenBabel@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 2029 NONAME ; void __cdecl OpenBabel::WriteTorsions(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?WriteAngles@OpenBabel@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 2030 NONAME ; void __cdecl OpenBabel::WriteAngles(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?WriteChiral@OpenBabel@@YAXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 2031 NONAME ; void __cdecl OpenBabel::WriteChiral(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?IsClockwise@OBAtom@OpenBabel@@QAE_NXZ @ 2032 NONAME ; public: bool __thiscall OpenBabel::OBAtom::IsClockwise(void)
 ?WriteReport@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 2033 NONAME ; bool __cdecl OpenBabel::WriteReport(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ??0OBResidue@OpenBabel@@QAE@XZ @ 2034 NONAME ; public: __thiscall OpenBabel::OBResidue::OBResidue(void)
 ??0OBResidue@OpenBabel@@QAE@ABV01@@Z @ 2035 NONAME ; public: __thiscall OpenBabel::OBResidue::OBResidue(class OpenBabel::OBResidue const &)
 ??1OBResidue@OpenBabel@@UAE@XZ @ 2036 NONAME ; public: virtual __thiscall OpenBabel::OBResidue::~OBResidue(void)
 ??4OBResidue@OpenBabel@@QAEAAV01@ABV01@@Z @ 2037 NONAME ; public: class OpenBabel::OBResidue & __thiscall OpenBabel::OBResidue::operator=(class OpenBabel::OBResidue const &)
 ?AddAtom@OBResidue@OpenBabel@@QAEXPAVOBAtom@2@@Z @ 2038 NONAME ; public: void __thiscall OpenBabel::OBResidue::AddAtom(class OpenBabel::OBAtom *)
 ?InsertAtom@OBResidue@OpenBabel@@QAEXPAVOBAtom@2@@Z @ 2039 NONAME ; public: void __thiscall OpenBabel::OBResidue::InsertAtom(class OpenBabel::OBAtom *)
 ?RemoveAtom@OBResidue@OpenBabel@@QAEXPAVOBAtom@2@@Z @ 2040 NONAME ; public: void __thiscall OpenBabel::OBResidue::RemoveAtom(class OpenBabel::OBAtom *)
 ?Clear@OBResidue@OpenBabel@@QAEXXZ @ 2041 NONAME ; public: void __thiscall OpenBabel::OBResidue::Clear(void)
 ?SetChain@OBResidue@OpenBabel@@QAEXD@Z @ 2042 NONAME ; public: void __thiscall OpenBabel::OBResidue::SetChain(char)
 ?SetChainNum@OBResidue@OpenBabel@@QAEXI@Z @ 2043 NONAME ; public: void __thiscall OpenBabel::OBResidue::SetChainNum(unsigned int)
 ?SetIdx@OBResidue@OpenBabel@@QAEXI@Z @ 2044 NONAME ; public: void __thiscall OpenBabel::OBResidue::SetIdx(unsigned int)
 ?SetName@OBResidue@OpenBabel@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 2045 NONAME ; public: void __thiscall OpenBabel::OBResidue::SetName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ?SetNum@OBResidue@OpenBabel@@QAEXI@Z @ 2046 NONAME ; public: void __thiscall OpenBabel::OBResidue::SetNum(unsigned int)
 ?SetAtomID@OBResidue@OpenBabel@@QAEXPAVOBAtom@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 2047 NONAME ; public: void __thiscall OpenBabel::OBResidue::SetAtomID(class OpenBabel::OBAtom *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ?SetHetAtom@OBResidue@OpenBabel@@QAEXPAVOBAtom@2@_N@Z @ 2048 NONAME ; public: void __thiscall OpenBabel::OBResidue::SetHetAtom(class OpenBabel::OBAtom *,bool)
 ?SetSerialNum@OBResidue@OpenBabel@@QAEXPAVOBAtom@2@I@Z @ 2049 NONAME ; public: void __thiscall OpenBabel::OBResidue::SetSerialNum(class OpenBabel::OBAtom *,unsigned int)
 ?GetAtoms@OBResidue@OpenBabel@@QBE?AV?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@XZ @ 2050 NONAME ; public: class std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> > __thiscall OpenBabel::OBResidue::GetAtoms(void)const 
 ?GetBonds@OBResidue@OpenBabel@@QBE?AV?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@_N@Z @ 2051 NONAME ; public: class std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> > __thiscall OpenBabel::OBResidue::GetBonds(bool)const 
 ?GetName@OBResidue@OpenBabel@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ @ 2052 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall OpenBabel::OBResidue::GetName(void)const 
 ?GetNum@OBResidue@OpenBabel@@QBEIXZ @ 2053 NONAME ; public: unsigned int __thiscall OpenBabel::OBResidue::GetNum(void)const 
 ?GetNumAtoms@OBResidue@OpenBabel@@QBEIXZ @ 2054 NONAME ; public: unsigned int __thiscall OpenBabel::OBResidue::GetNumAtoms(void)const 
 ?GetChain@OBResidue@OpenBabel@@QBEDXZ @ 2055 NONAME ; public: char __thiscall OpenBabel::OBResidue::GetChain(void)const 
 ?GetChainNum@OBResidue@OpenBabel@@QBEIXZ @ 2056 NONAME ; public: unsigned int __thiscall OpenBabel::OBResidue::GetChainNum(void)const 
 ?GetIdx@OBResidue@OpenBabel@@QBEIXZ @ 2057 NONAME ; public: unsigned int __thiscall OpenBabel::OBResidue::GetIdx(void)const 
 ?GetResKey@OBResidue@OpenBabel@@QBEIXZ @ 2058 NONAME ; public: unsigned int __thiscall OpenBabel::OBResidue::GetResKey(void)const 
 ?GetAtomID@OBResidue@OpenBabel@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVOBAtom@2@@Z @ 2059 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall OpenBabel::OBResidue::GetAtomID(class OpenBabel::OBAtom *)const 
 ?GetSerialNum@OBResidue@OpenBabel@@QBEIPAVOBAtom@2@@Z @ 2060 NONAME ; public: unsigned int __thiscall OpenBabel::OBResidue::GetSerialNum(class OpenBabel::OBAtom *)const 
 ?IsHetAtom@OBResidue@OpenBabel@@QBE_NPAVOBAtom@2@@Z @ 2061 NONAME ; public: bool __thiscall OpenBabel::OBResidue::IsHetAtom(class OpenBabel::OBAtom *)const 
 ?BeginAtom@OBResidue@OpenBabel@@QAEPAVOBAtom@2@AAPAPAV32@@Z @ 2062 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBResidue::BeginAtom(class OpenBabel::OBAtom * * &)
 ?NextAtom@OBResidue@OpenBabel@@QAEPAVOBAtom@2@AAPAPAV32@@Z @ 2063 NONAME ; public: class OpenBabel::OBAtom * __thiscall OpenBabel::OBResidue::NextAtom(class OpenBabel::OBAtom * * &)
 ?GetAminoAcidProperty@OBResidue@OpenBabel@@QBE_NH@Z @ 2064 NONAME ; public: bool __thiscall OpenBabel::OBResidue::GetAminoAcidProperty(int)const 
 ?GetAtomProperty@OBResidue@OpenBabel@@QBE_NPAVOBAtom@2@H@Z @ 2065 NONAME ; public: bool __thiscall OpenBabel::OBResidue::GetAtomProperty(class OpenBabel::OBAtom *,int)const 
 ?GetResidueProperty@OBResidue@OpenBabel@@QBE_NH@Z @ 2066 NONAME ; public: bool __thiscall OpenBabel::OBResidue::GetResidueProperty(int)const 
 ?IsResidueType@OBResidue@OpenBabel@@QBE_NH@Z @ 2067 NONAME ; public: bool __thiscall OpenBabel::OBResidue::IsResidueType(int)const 
 ?HasData@OBResidue@OpenBabel@@QAE_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 2068 NONAME ; public: bool __thiscall OpenBabel::OBResidue::HasData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?HasData@OBResidue@OpenBabel@@QAE_NPBD@Z @ 2069 NONAME ; public: bool __thiscall OpenBabel::OBResidue::HasData(char const *)
 ?HasData@OBResidue@OpenBabel@@QAE_NW4obDataType@2@@Z @ 2070 NONAME ; public: bool __thiscall OpenBabel::OBResidue::HasData(enum OpenBabel::obDataType)
 ?GetData@OBResidue@OpenBabel@@QAEPAVOBGenericData@2@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z @ 2071 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBResidue::GetData(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
 ?GetData@OBResidue@OpenBabel@@QAEPAVOBGenericData@2@PBD@Z @ 2072 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBResidue::GetData(char const *)
 ?GetData@OBResidue@OpenBabel@@QAEPAVOBGenericData@2@W4obDataType@2@@Z @ 2073 NONAME ; public: class OpenBabel::OBGenericData * __thiscall OpenBabel::OBResidue::GetData(enum OpenBabel::obDataType)
 ?DeleteData@OBResidue@OpenBabel@@QAEXW4obDataType@2@@Z @ 2074 NONAME ; public: void __thiscall OpenBabel::OBResidue::DeleteData(enum OpenBabel::obDataType)
 ?DeleteData@OBResidue@OpenBabel@@QAEXAAV?$vector@PAVOBGenericData@OpenBabel@@V?$allocator@PAVOBGenericData@OpenBabel@@@std@@@std@@@Z @ 2075 NONAME ; public: void __thiscall OpenBabel::OBResidue::DeleteData(class std::vector<class OpenBabel::OBGenericData *,class std::allocator<class OpenBabel::OBGenericData *> > &)
 ?DeleteData@OBResidue@OpenBabel@@QAEXPAVOBGenericData@2@@Z @ 2076 NONAME ; public: void __thiscall OpenBabel::OBResidue::DeleteData(class OpenBabel::OBGenericData *)
 ??A?$vector@IV?$allocator@I@std@@@std@@QBEABII@Z @ 2077 NONAME ; public: unsigned int const & __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::operator[](unsigned int)const 
 ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI@Z @ 2078 NONAME ; public: unsigned int * __thiscall std::vector<unsigned int,class std::allocator<unsigned int> >::erase(unsigned int *)
 ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z @ 2079 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::operator[](unsigned int)const 
 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAV32@@Z @ 2080 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::erase(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > *)
 ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ @ 2081 NONAME ; public: void __thiscall std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::clear(void)
 ??0?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBBond@OpenBabel@@@1@@Z @ 2082 NONAME ; public: __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >(class std::allocator<class OpenBabel::OBBond *> const &)
 ??0?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QAE@ABV01@@Z @ 2083 NONAME ; public: __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >(class std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> > const &)
 ??1?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QAE@XZ @ 2084 NONAME ; public: __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::~vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >(void)
 ?push_back@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QAEXABQAVOBBond@OpenBabel@@@Z @ 2085 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::push_back(class OpenBabel::OBBond * const &)
 ??A?$vector@_NV?$allocator@_N@std@@@std@@QBEAB_NI@Z @ 2086 NONAME ; public: bool const & __thiscall std::vector<bool,class std::allocator<bool> >::operator[](unsigned int)const 
 ?push_back@?$vector@_NV?$allocator@_N@std@@@std@@QAEXAB_N@Z @ 2087 NONAME ; public: void __thiscall std::vector<bool,class std::allocator<bool> >::push_back(bool const &)
 ?erase@?$vector@_NV?$allocator@_N@std@@@std@@QAEPA_NPA_N@Z @ 2088 NONAME ; public: bool * __thiscall std::vector<bool,class std::allocator<bool> >::erase(bool *)
 ?clear@?$vector@_NV?$allocator@_N@std@@@std@@QAEXXZ @ 2089 NONAME ; public: void __thiscall std::vector<bool,class std::allocator<bool> >::clear(void)
 ??0?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAE@ABV01@@Z @ 2090 NONAME ; public: __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >(class std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> > const &)
 ??A?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QBEABQAVOBAtom@OpenBabel@@I@Z @ 2091 NONAME ; public: class OpenBabel::OBAtom * const & __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::operator[](unsigned int)const 
 ??A?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAEAAPAVOBAtom@OpenBabel@@I@Z @ 2092 NONAME ; public: class OpenBabel::OBAtom * & __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::operator[](unsigned int)
 ?erase@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QAEPAPAVOBAtom@OpenBabel@@PAPAV34@@Z @ 2093 NONAME ; public: class OpenBabel::OBAtom * * __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::erase(class OpenBabel::OBAtom * *)
 ?begin@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QBEPBQAVOBBond@OpenBabel@@XZ @ 2094 NONAME ; public: class OpenBabel::OBBond * const * __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::begin(void)const 
 ?end@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QAEPAPAVOBBond@OpenBabel@@XZ @ 2095 NONAME ; public: class OpenBabel::OBBond * * __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::end(void)
 ?end@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QBEPBQAVOBBond@OpenBabel@@XZ @ 2096 NONAME ; public: class OpenBabel::OBBond * const * __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::end(void)const 
 ?size@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QBEIXZ @ 2097 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::size(void)const 
 ?insert@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QAEPAPAVOBBond@OpenBabel@@PAPAV34@ABQAV34@@Z @ 2098 NONAME ; public: class OpenBabel::OBBond * * __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::insert(class OpenBabel::OBBond * *,class OpenBabel::OBBond * const &)
 ?_Destroy@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@IAEXPAPAVOBBond@OpenBabel@@0@Z @ 2099 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::_Destroy(class OpenBabel::OBBond * *,class OpenBabel::OBBond * *)
 ?_Ucopy@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@IAEPAPAVOBBond@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 2100 NONAME ; protected: class OpenBabel::OBBond * * __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::_Ucopy(class OpenBabel::OBBond * const *,class OpenBabel::OBBond * const *,class OpenBabel::OBBond * *)
 ?allocate@?$allocator@PAVOBBond@OpenBabel@@@std@@QAEPAPAVOBBond@OpenBabel@@IPBX@Z @ 2101 NONAME ; public: class OpenBabel::OBBond * * __thiscall std::allocator<class OpenBabel::OBBond *>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@PAVOBBond@OpenBabel@@@std@@QAEXPAXI@Z @ 2102 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBBond *>::deallocate(void *,unsigned int)
 ?insert@?$vector@_NV?$allocator@_N@std@@@std@@QAEPA_NPA_NAB_N@Z @ 2103 NONAME ; public: bool * __thiscall std::vector<bool,class std::allocator<bool> >::insert(bool *,bool const &)
 ?begin@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QBEPBQAVOBAtom@OpenBabel@@XZ @ 2104 NONAME ; public: class OpenBabel::OBAtom * const * __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::begin(void)const 
 ?end@?$vector@PAVOBAtom@OpenBabel@@V?$allocator@PAVOBAtom@OpenBabel@@@std@@@std@@QBEPBQAVOBAtom@OpenBabel@@XZ @ 2105 NONAME ; public: class OpenBabel::OBAtom * const * __thiscall std::vector<class OpenBabel::OBAtom *,class std::allocator<class OpenBabel::OBAtom *> >::end(void)const 
 ?begin@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QAEPAPAVOBBond@OpenBabel@@XZ @ 2106 NONAME ; public: class OpenBabel::OBBond * * __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::begin(void)
 ?insert@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@QAEXPAPAVOBBond@OpenBabel@@IABQAV34@@Z @ 2107 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::insert(class OpenBabel::OBBond * *,unsigned int,class OpenBabel::OBBond * const &)
 ?construct@?$allocator@PAVOBBond@OpenBabel@@@std@@QAEXPAPAVOBBond@OpenBabel@@ABQAV34@@Z @ 2108 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBBond *>::construct(class OpenBabel::OBBond * *,class OpenBabel::OBBond * const &)
 ?destroy@?$allocator@PAVOBBond@OpenBabel@@@std@@QAEXPAPAVOBBond@OpenBabel@@@Z @ 2109 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBBond *>::destroy(class OpenBabel::OBBond * *)
 ?_Ufill@?$vector@PAVOBBond@OpenBabel@@V?$allocator@PAVOBBond@OpenBabel@@@std@@@std@@IAEXPAPAVOBBond@OpenBabel@@IABQAV34@@Z @ 2110 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBBond *,class std::allocator<class OpenBabel::OBBond *> >::_Ufill(class OpenBabel::OBBond * *,unsigned int,class OpenBabel::OBBond * const &)
 ?_Allocate@std@@YAPAPAVOBBond@OpenBabel@@HPAPAV23@@Z @ 2111 NONAME ; class OpenBabel::OBBond * * __cdecl std::_Allocate(int,class OpenBabel::OBBond * *)
 ?fill@std@@YAXPAPAVOBBond@OpenBabel@@0ABQAV23@@Z @ 2112 NONAME ; void __cdecl std::fill(class OpenBabel::OBBond * *,class OpenBabel::OBBond * *,class OpenBabel::OBBond * const &)
 ?copy_backward@std@@YAPAPAVOBBond@OpenBabel@@PAPAV23@00@Z @ 2113 NONAME ; class OpenBabel::OBBond * * __cdecl std::copy_backward(class OpenBabel::OBBond * *,class OpenBabel::OBBond * *,class OpenBabel::OBBond * *)
 ?_Construct@std@@YAXPAPAVOBBond@OpenBabel@@ABQAV23@@Z @ 2114 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBBond * *,class OpenBabel::OBBond * const &)
 ?_Destroy@std@@YAXPAPAVOBBond@OpenBabel@@@Z @ 2115 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBBond * *)
 ?FindSSSR@OBMol@OpenBabel@@QAEXXZ @ 2116 NONAME ; public: void __thiscall OpenBabel::OBMol::FindSSSR(void)
 ?SetParent@OBRing@OpenBabel@@QAEXPAVOBMol@2@@Z @ 2117 NONAME ; public: void __thiscall OpenBabel::OBRing::SetParent(class OpenBabel::OBMol *)
 ??0OBRingSearch@OpenBabel@@QAE@XZ @ 2118 NONAME ; public: __thiscall OpenBabel::OBRingSearch::OBRingSearch(void)
 ?SortRings@OBRingSearch@OpenBabel@@QAEXXZ @ 2119 NONAME ; public: void __thiscall OpenBabel::OBRingSearch::SortRings(void)
 ?BeginRings@OBRingSearch@OpenBabel@@QAEPAPAVOBRing@2@XZ @ 2120 NONAME ; public: class OpenBabel::OBRing * * __thiscall OpenBabel::OBRingSearch::BeginRings(void)
 ?EndRings@OBRingSearch@OpenBabel@@QAEPAPAVOBRing@2@XZ @ 2121 NONAME ; public: class OpenBabel::OBRing * * __thiscall OpenBabel::OBRingSearch::EndRings(void)
 ?SetData@OBRingData@OpenBabel@@QAEXAAV?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@@Z @ 2122 NONAME ; public: void __thiscall OpenBabel::OBRingData::SetData(class std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> > &)
 ?SetSSSRPerceived@OBMol@OpenBabel@@QAEXXZ @ 2123 NONAME ; public: void __thiscall OpenBabel::OBMol::SetSSSRPerceived(void)
 ?RemoveRedundant@OBRingSearch@OpenBabel@@QAEXH@Z @ 2124 NONAME ; public: void __thiscall OpenBabel::OBRingSearch::RemoveRedundant(int)
 ?AddRingFromClosure@OBRingSearch@OpenBabel@@QAEXAAVOBMol@2@PAVOBBond@2@@Z @ 2125 NONAME ; public: void __thiscall OpenBabel::OBRingSearch::AddRingFromClosure(class OpenBabel::OBMol &,class OpenBabel::OBBond *)
 ??1OBRTree@OpenBabel@@QAE@XZ @ 2126 NONAME ; public: __thiscall OpenBabel::OBRTree::~OBRTree(void)
 ?SaveUniqueRing@OBRingSearch@OpenBabel@@QAE_NAAV?$deque@HV?$allocator@H@std@@@std@@0@Z @ 2127 NONAME ; public: bool __thiscall OpenBabel::OBRingSearch::SaveUniqueRing(class std::deque<int,class std::allocator<int> > &,class std::deque<int,class std::allocator<int> > &)
 ??1OBRingSearch@OpenBabel@@QAE@XZ @ 2128 NONAME ; public: __thiscall OpenBabel::OBRingSearch::~OBRingSearch(void)
 ?CompareRingSize@OpenBabel@@YA_NPBVOBRing@1@0@Z @ 2129 NONAME ; bool __cdecl OpenBabel::CompareRingSize(class OpenBabel::OBRing const *,class OpenBabel::OBRing const *)
 ?WriteRings@OBRingSearch@OpenBabel@@QAEXXZ @ 2130 NONAME ; public: void __thiscall OpenBabel::OBRingSearch::WriteRings(void)
 ?FindRingAtomsAndBonds@OBMol@OpenBabel@@QAEXXZ @ 2131 NONAME ; public: void __thiscall OpenBabel::OBMol::FindRingAtomsAndBonds(void)
 ?SetInRing@OBAtom@OpenBabel@@QAEXXZ @ 2132 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetInRing(void)
 ?SetInRing@OBBond@OpenBabel@@QAEXXZ @ 2133 NONAME ; public: void __thiscall OpenBabel::OBBond::SetInRing(void)
 ?IsAromatic@OBRing@OpenBabel@@QAE_NXZ @ 2134 NONAME ; public: bool __thiscall OpenBabel::OBRing::IsAromatic(void)
 ?IsMember@OBRing@OpenBabel@@QAE_NPAVOBAtom@2@@Z @ 2135 NONAME ; public: bool __thiscall OpenBabel::OBRing::IsMember(class OpenBabel::OBAtom *)
 ?IsMember@OBRing@OpenBabel@@QAE_NPAVOBBond@2@@Z @ 2136 NONAME ; public: bool __thiscall OpenBabel::OBRing::IsMember(class OpenBabel::OBBond *)
 ??0OBRing@OpenBabel@@QAE@AAV?$vector@HV?$allocator@H@std@@@std@@H@Z @ 2137 NONAME ; public: __thiscall OpenBabel::OBRing::OBRing(class std::vector<int,class std::allocator<int> > &,int)
 ??0OBRing@OpenBabel@@QAE@ABV01@@Z @ 2138 NONAME ; public: __thiscall OpenBabel::OBRing::OBRing(class OpenBabel::OBRing const &)
 ??4OBRing@OpenBabel@@QAEAAV01@ABV01@@Z @ 2139 NONAME ; public: class OpenBabel::OBRing & __thiscall OpenBabel::OBRing::operator=(class OpenBabel::OBRing const &)
 ??0OBRTree@OpenBabel@@QAE@PAVOBAtom@1@PAV01@@Z @ 2140 NONAME ; public: __thiscall OpenBabel::OBRTree::OBRTree(class OpenBabel::OBAtom *,class OpenBabel::OBRTree *)
 ?PathToRoot@OBRTree@OpenBabel@@QAEXAAV?$vector@PAVOBNodeBase@OpenBabel@@V?$allocator@PAVOBNodeBase@OpenBabel@@@std@@@std@@@Z @ 2141 NONAME ; public: void __thiscall OpenBabel::OBRTree::PathToRoot(class std::vector<class OpenBabel::OBNodeBase *,class std::allocator<class OpenBabel::OBNodeBase *> > &)
 ?GetAtomIdx@OBRTree@OpenBabel@@QAEHXZ @ 2142 NONAME ; public: int __thiscall OpenBabel::OBRTree::GetAtomIdx(void)
 ?findCenterAndNormal@OBRing@OpenBabel@@QAE_NAAVvector3@2@00@Z @ 2143 NONAME ; public: bool __thiscall OpenBabel::OBRing::findCenterAndNormal(class OpenBabel::vector3 &,class OpenBabel::vector3 &,class OpenBabel::vector3 &)
 ??A?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEAAPAVOBRing@OpenBabel@@I@Z @ 2144 NONAME ; public: class OpenBabel::OBRing * & __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::operator[](unsigned int)
 ?push_back@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEXABQAVOBRing@OpenBabel@@@Z @ 2145 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::push_back(class OpenBabel::OBRing * const &)
 ?erase@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEPAPAVOBRing@OpenBabel@@PAPAV34@@Z @ 2146 NONAME ; public: class OpenBabel::OBRing * * __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::erase(class OpenBabel::OBRing * *)
 ??0?$vector@PAVOBRTree@OpenBabel@@V?$allocator@PAVOBRTree@OpenBabel@@@std@@@std@@QAE@IABQAVOBRTree@OpenBabel@@ABV?$allocator@PAVOBRTree@OpenBabel@@@1@@Z @ 2147 NONAME ; public: __thiscall std::vector<class OpenBabel::OBRTree *,class std::allocator<class OpenBabel::OBRTree *> >::vector<class OpenBabel::OBRTree *,class std::allocator<class OpenBabel::OBRTree *> >(unsigned int,class OpenBabel::OBRTree * const &,class std::allocator<class OpenBabel::OBRTree *> const &)
 ??1?$vector@PAVOBRTree@OpenBabel@@V?$allocator@PAVOBRTree@OpenBabel@@@std@@@std@@QAE@XZ @ 2148 NONAME ; public: __thiscall std::vector<class OpenBabel::OBRTree *,class std::allocator<class OpenBabel::OBRTree *> >::~vector<class OpenBabel::OBRTree *,class std::allocator<class OpenBabel::OBRTree *> >(void)
 ?begin@?$vector@PAVOBRTree@OpenBabel@@V?$allocator@PAVOBRTree@OpenBabel@@@std@@@std@@QAEPAPAVOBRTree@OpenBabel@@XZ @ 2149 NONAME ; public: class OpenBabel::OBRTree * * __thiscall std::vector<class OpenBabel::OBRTree *,class std::allocator<class OpenBabel::OBRTree *> >::begin(void)
 ?end@?$vector@PAVOBRTree@OpenBabel@@V?$allocator@PAVOBRTree@OpenBabel@@@std@@@std@@QAEPAPAVOBRTree@OpenBabel@@XZ @ 2150 NONAME ; public: class OpenBabel::OBRTree * * __thiscall std::vector<class OpenBabel::OBRTree *,class std::allocator<class OpenBabel::OBRTree *> >::end(void)
 ??A?$vector@PAVOBRTree@OpenBabel@@V?$allocator@PAVOBRTree@OpenBabel@@@std@@@std@@QAEAAPAVOBRTree@OpenBabel@@I@Z @ 2151 NONAME ; public: class OpenBabel::OBRTree * & __thiscall std::vector<class OpenBabel::OBRTree *,class std::allocator<class OpenBabel::OBRTree *> >::operator[](unsigned int)
 ??0?$deque@HV?$allocator@H@std@@@std@@QAE@ABV?$allocator@H@1@@Z @ 2152 NONAME ; public: __thiscall std::deque<int,class std::allocator<int> >::deque<int,class std::allocator<int> >(class std::allocator<int> const &)
 ??1?$deque@HV?$allocator@H@std@@@std@@QAE@XZ @ 2153 NONAME ; public: __thiscall std::deque<int,class std::allocator<int> >::~deque<int,class std::allocator<int> >(void)
 ?begin@?$deque@HV?$allocator@H@std@@@std@@QAE?AViterator@12@XZ @ 2154 NONAME ; public: class std::deque<int,class std::allocator<int> >::iterator __thiscall std::deque<int,class std::allocator<int> >::begin(void)
 ?end@?$deque@HV?$allocator@H@std@@@std@@QAE?AViterator@12@XZ @ 2155 NONAME ; public: class std::deque<int,class std::allocator<int> >::iterator __thiscall std::deque<int,class std::allocator<int> >::end(void)
 ?size@?$deque@HV?$allocator@H@std@@@std@@QBEIXZ @ 2156 NONAME ; public: unsigned int __thiscall std::deque<int,class std::allocator<int> >::size(void)const 
 ?push_front@?$deque@HV?$allocator@H@std@@@std@@QAEXABH@Z @ 2157 NONAME ; public: void __thiscall std::deque<int,class std::allocator<int> >::push_front(int const &)
 ?pop_front@?$deque@HV?$allocator@H@std@@@std@@QAEXXZ @ 2158 NONAME ; public: void __thiscall std::deque<int,class std::allocator<int> >::pop_front(void)
 ?push_back@?$deque@HV?$allocator@H@std@@@std@@QAEXABH@Z @ 2159 NONAME ; public: void __thiscall std::deque<int,class std::allocator<int> >::push_back(int const &)
 ?clear@?$deque@HV?$allocator@H@std@@@std@@QAEXXZ @ 2160 NONAME ; public: void __thiscall std::deque<int,class std::allocator<int> >::clear(void)
 ??0iterator@?$deque@HV?$allocator@H@std@@@std@@QAE@XZ @ 2161 NONAME ; public: __thiscall std::deque<int,class std::allocator<int> >::iterator::iterator(void)
 ??Diterator@?$deque@HV?$allocator@H@std@@@std@@QBEAAHXZ @ 2162 NONAME ; public: int & __thiscall std::deque<int,class std::allocator<int> >::iterator::operator*(void)const 
 ??Eiterator@?$deque@HV?$allocator@H@std@@@std@@QAE?AV012@H@Z @ 2163 NONAME ; public: class std::deque<int,class std::allocator<int> >::iterator __thiscall std::deque<int,class std::allocator<int> >::iterator::operator++(int)
 ??9iterator@?$deque@HV?$allocator@H@std@@@std@@QBE_NABV012@@Z @ 2164 NONAME ; public: bool __thiscall std::deque<int,class std::allocator<int> >::iterator::operator!=(class std::deque<int,class std::allocator<int> >::iterator const &)const 
 ?insert@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEPAPAVOBRing@OpenBabel@@PAPAV34@ABQAV34@@Z @ 2165 NONAME ; public: class OpenBabel::OBRing * * __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::insert(class OpenBabel::OBRing * *,class OpenBabel::OBRing * const &)
 ?_Destroy@?$vector@PAVOBRTree@OpenBabel@@V?$allocator@PAVOBRTree@OpenBabel@@@std@@@std@@IAEXPAPAVOBRTree@OpenBabel@@0@Z @ 2166 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBRTree *,class std::allocator<class OpenBabel::OBRTree *> >::_Destroy(class OpenBabel::OBRTree * *,class OpenBabel::OBRTree * *)
 ?_Ufill@?$vector@PAVOBRTree@OpenBabel@@V?$allocator@PAVOBRTree@OpenBabel@@@std@@@std@@IAEXPAPAVOBRTree@OpenBabel@@IABQAV34@@Z @ 2167 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBRTree *,class std::allocator<class OpenBabel::OBRTree *> >::_Ufill(class OpenBabel::OBRTree * *,unsigned int,class OpenBabel::OBRTree * const &)
 ?allocate@?$allocator@PAVOBRTree@OpenBabel@@@std@@QAEPAPAVOBRTree@OpenBabel@@IPBX@Z @ 2168 NONAME ; public: class OpenBabel::OBRTree * * __thiscall std::allocator<class OpenBabel::OBRTree *>::allocate(unsigned int,void const *)
 ?deallocate@?$allocator@PAVOBRTree@OpenBabel@@@std@@QAEXPAXI@Z @ 2169 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRTree *>::deallocate(void *,unsigned int)
 ?empty@?$deque@HV?$allocator@H@std@@@std@@QBE_NXZ @ 2170 NONAME ; public: bool __thiscall std::deque<int,class std::allocator<int> >::empty(void)const 
 ?erase@?$deque@HV?$allocator@H@std@@@std@@QAE?AViterator@12@V312@0@Z @ 2171 NONAME ; public: class std::deque<int,class std::allocator<int> >::iterator __thiscall std::deque<int,class std::allocator<int> >::erase(class std::deque<int,class std::allocator<int> >::iterator,class std::deque<int,class std::allocator<int> >::iterator)
 ?_Buyback@?$deque@HV?$allocator@H@std@@@std@@IAEXXZ @ 2172 NONAME ; protected: void __thiscall std::deque<int,class std::allocator<int> >::_Buyback(void)
 ?_Buyfront@?$deque@HV?$allocator@H@std@@@std@@IAEXXZ @ 2173 NONAME ; protected: void __thiscall std::deque<int,class std::allocator<int> >::_Buyfront(void)
 ?_Freefront@?$deque@HV?$allocator@H@std@@@std@@IAEXXZ @ 2174 NONAME ; protected: void __thiscall std::deque<int,class std::allocator<int> >::_Freefront(void)
 ??0const_iterator@?$deque@HV?$allocator@H@std@@@std@@QAE@XZ @ 2175 NONAME ; public: __thiscall std::deque<int,class std::allocator<int> >::const_iterator::const_iterator(void)
 ??Eiterator@?$deque@HV?$allocator@H@std@@@std@@QAEAAV012@XZ @ 2176 NONAME ; public: class std::deque<int,class std::allocator<int> >::iterator & __thiscall std::deque<int,class std::allocator<int> >::iterator::operator++(void)
 ??8iterator@?$deque@HV?$allocator@H@std@@@std@@QBE_NABV012@@Z @ 2177 NONAME ; public: bool __thiscall std::deque<int,class std::allocator<int> >::iterator::operator==(class std::deque<int,class std::allocator<int> >::iterator const &)const 
 ?insert@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@QAEXPAPAVOBRing@OpenBabel@@IABQAV34@@Z @ 2178 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::insert(class OpenBabel::OBRing * *,unsigned int,class OpenBabel::OBRing * const &)
 ?construct@?$allocator@PAVOBRTree@OpenBabel@@@std@@QAEXPAPAVOBRTree@OpenBabel@@ABQAV34@@Z @ 2179 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRTree *>::construct(class OpenBabel::OBRTree * *,class OpenBabel::OBRTree * const &)
 ?destroy@?$allocator@PAVOBRTree@OpenBabel@@@std@@QAEXPAPAVOBRTree@OpenBabel@@@Z @ 2180 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRTree *>::destroy(class OpenBabel::OBRTree * *)
 ?pop_back@?$deque@HV?$allocator@H@std@@@std@@QAEXXZ @ 2181 NONAME ; public: void __thiscall std::deque<int,class std::allocator<int> >::pop_back(void)
 ?_Freemap@?$deque@HV?$allocator@H@std@@@std@@IAEXXZ @ 2182 NONAME ; protected: void __thiscall std::deque<int,class std::allocator<int> >::_Freemap(void)
 ?_Freeptr@?$deque@HV?$allocator@H@std@@@std@@IAEXPAPAH@Z @ 2183 NONAME ; protected: void __thiscall std::deque<int,class std::allocator<int> >::_Freeptr(int * *)
 ?_Getmap@?$deque@HV?$allocator@H@std@@@std@@IAEXXZ @ 2184 NONAME ; protected: void __thiscall std::deque<int,class std::allocator<int> >::_Getmap(void)
 ?_Growmap@?$deque@HV?$allocator@H@std@@@std@@IAEPAPAHI@Z @ 2185 NONAME ; protected: int * * __thiscall std::deque<int,class std::allocator<int> >::_Growmap(unsigned int)
 ?_Setptr@?$deque@HV?$allocator@H@std@@@std@@IAEXPAPAHPAH@Z @ 2186 NONAME ; protected: void __thiscall std::deque<int,class std::allocator<int> >::_Setptr(int * *,int *)
 ??0iterator@?$deque@HV?$allocator@H@std@@@std@@QAE@PAHPAPAH@Z @ 2187 NONAME ; public: __thiscall std::deque<int,class std::allocator<int> >::iterator::iterator(int *,int * *)
 ??Hiterator@?$deque@HV?$allocator@H@std@@@std@@QBE?AV012@H@Z @ 2188 NONAME ; public: class std::deque<int,class std::allocator<int> >::iterator __thiscall std::deque<int,class std::allocator<int> >::iterator::operator+(int)const 
 ??Giterator@?$deque@HV?$allocator@H@std@@@std@@QBEHABV012@@Z @ 2189 NONAME ; public: int __thiscall std::deque<int,class std::allocator<int> >::iterator::operator-(class std::deque<int,class std::allocator<int> >::iterator const &)const 
 ?_Charalloc@?$allocator@H@std@@QAEPADI@Z @ 2190 NONAME ; public: char * __thiscall std::allocator<int>::_Charalloc(unsigned int)
 ?_Ufill@?$vector@PAVOBRing@OpenBabel@@V?$allocator@PAVOBRing@OpenBabel@@@std@@@std@@IAEXPAPAVOBRing@OpenBabel@@IABQAV34@@Z @ 2191 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBRing *,class std::allocator<class OpenBabel::OBRing *> >::_Ufill(class OpenBabel::OBRing * *,unsigned int,class OpenBabel::OBRing * const &)
 ?_Freeback@?$deque@HV?$allocator@H@std@@@std@@IAEXXZ @ 2192 NONAME ; protected: void __thiscall std::deque<int,class std::allocator<int> >::_Freeback(void)
 ??0const_iterator@?$deque@HV?$allocator@H@std@@@std@@QAE@PAHPAPAH@Z @ 2193 NONAME ; public: __thiscall std::deque<int,class std::allocator<int> >::const_iterator::const_iterator(int *,int * *)
 ??Yiterator@?$deque@HV?$allocator@H@std@@@std@@QAEAAV012@H@Z @ 2194 NONAME ; public: class std::deque<int,class std::allocator<int> >::iterator & __thiscall std::deque<int,class std::allocator<int> >::iterator::operator+=(int)
 ?_Add@const_iterator@?$deque@HV?$allocator@H@std@@@std@@IAEXH@Z @ 2195 NONAME ; protected: void __thiscall std::deque<int,class std::allocator<int> >::const_iterator::_Add(int)
 ?sort@std@@YAXPAPAVOBRing@OpenBabel@@0P6A_NPBV23@1@Z@Z @ 2196 NONAME ; void __cdecl std::sort(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,bool (__cdecl*)(class OpenBabel::OBRing const *,class OpenBabel::OBRing const *))
 ?_Allocate@std@@YAPAPAVOBRTree@OpenBabel@@HPAPAV23@@Z @ 2197 NONAME ; class OpenBabel::OBRTree * * __cdecl std::_Allocate(int,class OpenBabel::OBRTree * *)
 ?copy_backward@std@@YA?AViterator@?$deque@HV?$allocator@H@std@@@1@V231@00@Z @ 2198 NONAME ; class std::deque<int,class std::allocator<int> >::iterator __cdecl std::copy_backward(class std::deque<int,class std::allocator<int> >::iterator,class std::deque<int,class std::allocator<int> >::iterator,class std::deque<int,class std::allocator<int> >::iterator)
 ?copy@std@@YA?AViterator@?$deque@HV?$allocator@H@std@@@1@V231@00@Z @ 2199 NONAME ; class std::deque<int,class std::allocator<int> >::iterator __cdecl std::copy(class std::deque<int,class std::allocator<int> >::iterator,class std::deque<int,class std::allocator<int> >::iterator,class std::deque<int,class std::allocator<int> >::iterator)
 ?fill@std@@YAXPAPAVOBRing@OpenBabel@@0ABQAV23@@Z @ 2200 NONAME ; void __cdecl std::fill(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,class OpenBabel::OBRing * const &)
 ?copy_backward@std@@YAPAPAVOBRing@OpenBabel@@PAPAV23@00@Z @ 2201 NONAME ; class OpenBabel::OBRing * * __cdecl std::copy_backward(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,class OpenBabel::OBRing * *)
 ?_Construct@std@@YAXPAPAVOBRTree@OpenBabel@@ABQAV23@@Z @ 2202 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBRTree * *,class OpenBabel::OBRTree * const &)
 ?_Destroy@std@@YAXPAPAVOBRTree@OpenBabel@@@Z @ 2203 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBRTree * *)
 ?copy@std@@YAPAPAHPAPAH00@Z @ 2204 NONAME ; int * * __cdecl std::copy(int * *,int * *,int * *)
 ??Fiterator@?$deque@HV?$allocator@H@std@@@std@@QAEAAV012@XZ @ 2205 NONAME ; public: class std::deque<int,class std::allocator<int> >::iterator & __thiscall std::deque<int,class std::allocator<int> >::iterator::operator--(void)
 ?_Val_type@std@@YAPAPAVOBRing@OpenBabel@@PBQAV23@@Z @ 2206 NONAME ; class OpenBabel::OBRing * * __cdecl std::_Val_type(class OpenBabel::OBRing * const *)
 ?_Sort_0@std@@YAXPAPAVOBRing@OpenBabel@@0P6A_NPBV23@1@Z0@Z @ 2207 NONAME ; void __cdecl std::_Sort_0(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,bool (__cdecl*)(class OpenBabel::OBRing const *,class OpenBabel::OBRing const *),class OpenBabel::OBRing * *)
 ?_Insertion_sort@std@@YAXPAPAVOBRing@OpenBabel@@0P6A_NPBV23@1@Z@Z @ 2208 NONAME ; void __cdecl std::_Insertion_sort(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,bool (__cdecl*)(class OpenBabel::OBRing const *,class OpenBabel::OBRing const *))
 ?_Sort@std@@YAXPAPAVOBRing@OpenBabel@@0P6A_NPBV23@1@Z0@Z @ 2209 NONAME ; void __cdecl std::_Sort(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,bool (__cdecl*)(class OpenBabel::OBRing const *,class OpenBabel::OBRing const *),class OpenBabel::OBRing * *)
 ?_Unguarded_insert@std@@YAXPAPAVOBRing@OpenBabel@@PAV23@P6A_NPBV23@2@Z@Z @ 2210 NONAME ; void __cdecl std::_Unguarded_insert(class OpenBabel::OBRing * *,class OpenBabel::OBRing *,bool (__cdecl*)(class OpenBabel::OBRing const *,class OpenBabel::OBRing const *))
 ?_Insertion_sort_1@std@@YAXPAPAVOBRing@OpenBabel@@0P6A_NPBV23@1@Z0@Z @ 2211 NONAME ; void __cdecl std::_Insertion_sort_1(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,bool (__cdecl*)(class OpenBabel::OBRing const *,class OpenBabel::OBRing const *),class OpenBabel::OBRing * *)
 ?_Median@std@@YAPAVOBRing@OpenBabel@@PAV23@00P6A_NPBV23@1@Z@Z @ 2212 NONAME ; class OpenBabel::OBRing * __cdecl std::_Median(class OpenBabel::OBRing *,class OpenBabel::OBRing *,class OpenBabel::OBRing *,bool (__cdecl*)(class OpenBabel::OBRing const *,class OpenBabel::OBRing const *))
 ?_Unguarded_partition@std@@YAPAPAVOBRing@OpenBabel@@PAPAV23@0PAV23@P6A_NPBV23@2@Z@Z @ 2213 NONAME ; class OpenBabel::OBRing * * __cdecl std::_Unguarded_partition(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,class OpenBabel::OBRing *,bool (__cdecl*)(class OpenBabel::OBRing const *,class OpenBabel::OBRing const *))
 ?iter_swap@std@@YAXPAPAVOBRing@OpenBabel@@0@Z @ 2214 NONAME ; void __cdecl std::iter_swap(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *)
 ?_Iter_swap@std@@YAXPAPAVOBRing@OpenBabel@@00@Z @ 2215 NONAME ; void __cdecl std::_Iter_swap(class OpenBabel::OBRing * *,class OpenBabel::OBRing * *,class OpenBabel::OBRing * *)
 ?Setup@OBRotorList@OpenBabel@@QAE_NAAVOBMol@2@@Z @ 2216 NONAME ; public: bool __thiscall OpenBabel::OBRotorList::Setup(class OpenBabel::OBMol &)
 ?Size@OBRotor@OpenBabel@@QAEHXZ @ 2217 NONAME ; public: int __thiscall OpenBabel::OBRotor::Size(void)
 ?Size@OBRotorList@OpenBabel@@QAEHXZ @ 2218 NONAME ; public: int __thiscall OpenBabel::OBRotorList::Size(void)
 ?FindRotors@OBRotorList@OpenBabel@@QAE_NAAVOBMol@2@@Z @ 2219 NONAME ; public: bool __thiscall OpenBabel::OBRotorList::FindRotors(class OpenBabel::OBMol &)
 ?SetNumCoords@OBRotor@OpenBabel@@QAEXH@Z @ 2220 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetNumCoords(int)
 ?SetBond@OBRotor@OpenBabel@@QAEXPAVOBBond@2@@Z @ 2221 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetBond(class OpenBabel::OBBond *)
 ?SetIdx@OBRotor@OpenBabel@@QAEXH@Z @ 2222 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetIdx(int)
 ?HasFixedAtoms@OBRotorList@OpenBabel@@QAE_NXZ @ 2223 NONAME ; public: bool __thiscall OpenBabel::OBRotorList::HasFixedAtoms(void)
 ?IsFixedBond@OBRotorList@OpenBabel@@QAE_NPAVOBBond@2@@Z @ 2224 NONAME ; public: bool __thiscall OpenBabel::OBRotorList::IsFixedBond(class OpenBabel::OBBond *)
 ?RemoveSymVals@OBRotorList@OpenBabel@@QAEXAAVOBMol@2@@Z @ 2225 NONAME ; public: void __thiscall OpenBabel::OBRotorList::RemoveSymVals(class OpenBabel::OBMol &)
 ?SetToAngle@OBRotor@OpenBabel@@QAEXPANN@Z @ 2226 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetToAngle(double *,double)
 ?GetBond@OBRotor@OpenBabel@@QAEPAVOBBond@2@XZ @ 2227 NONAME ; public: class OpenBabel::OBBond * __thiscall OpenBabel::OBRotor::GetBond(void)
 ?SetEvalAtoms@OBRotorList@OpenBabel@@QAE_NAAVOBMol@2@@Z @ 2228 NONAME ; public: bool __thiscall OpenBabel::OBRotorList::SetEvalAtoms(class OpenBabel::OBMol &)
 ?SetEvalAtoms@OBRotor@OpenBabel@@QAEXAAVOBBitVec@2@@Z @ 2229 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetEvalAtoms(class OpenBabel::OBBitVec &)
 ?AssignTorVals@OBRotorList@OpenBabel@@QAE_NAAVOBMol@2@@Z @ 2230 NONAME ; public: bool __thiscall OpenBabel::OBRotorList::AssignTorVals(class OpenBabel::OBMol &)
 ?SetDelta@OBRotor@OpenBabel@@QAEXN@Z @ 2231 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetDelta(double)
 ?SetTorsionValues@OBRotor@OpenBabel@@QAEXAAV?$vector@NV?$allocator@N@std@@@std@@@Z @ 2232 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetTorsionValues(class std::vector<double,class std::allocator<double> > &)
 ?SetRotAtoms@OBRotorList@OpenBabel@@QAE_NAAVOBMol@2@@Z @ 2233 NONAME ; public: bool __thiscall OpenBabel::OBRotorList::SetRotAtoms(class OpenBabel::OBMol &)
 ?GetDihedralAtoms@OBRotor@OpenBabel@@QAEAAV?$vector@HV?$allocator@H@std@@@std@@XZ @ 2234 NONAME ; public: class std::vector<int,class std::allocator<int> > & __thiscall OpenBabel::OBRotor::GetDihedralAtoms(void)
 ?SetRotAtomsByFix@OBRotorList@OpenBabel@@QAEXAAVOBMol@2@@Z @ 2235 NONAME ; public: void __thiscall OpenBabel::OBRotorList::SetRotAtomsByFix(class OpenBabel::OBMol &)
 ??0OBRotorList@OpenBabel@@QAE@XZ @ 2236 NONAME ; public: __thiscall OpenBabel::OBRotorList::OBRotorList(void)
 ??1OBRotorList@OpenBabel@@QAE@XZ @ 2237 NONAME ; public: __thiscall OpenBabel::OBRotorList::~OBRotorList(void)
 ??1OBRotor@OpenBabel@@QAE@XZ @ 2238 NONAME ; public: __thiscall OpenBabel::OBRotor::~OBRotor(void)
 ?Clear@OBRotorList@OpenBabel@@QAEXXZ @ 2239 NONAME ; public: void __thiscall OpenBabel::OBRotorList::Clear(void)
 ??0OBRotor@OpenBabel@@QAE@XZ @ 2240 NONAME ; public: __thiscall OpenBabel::OBRotor::OBRotor(void)
 ?CalcTorsion@OBRotor@OpenBabel@@QAENPAN@Z @ 2241 NONAME ; public: double __thiscall OpenBabel::OBRotor::CalcTorsion(double *)
 ?CalcBondLength@OBRotor@OpenBabel@@QAENPAN@Z @ 2242 NONAME ; public: double __thiscall OpenBabel::OBRotor::CalcBondLength(double *)
 ?Precalc@OBRotor@OpenBabel@@QAEXAAV?$vector@PANV?$allocator@PAN@std@@@std@@@Z @ 2243 NONAME ; public: void __thiscall OpenBabel::OBRotor::Precalc(class std::vector<double *,class std::allocator<double *> > &)
 ?SetRotor@OBRotor@OpenBabel@@QAEXPANHH@Z @ 2244 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetRotor(double *,int,int)
 ?Precompute@OBRotor@OpenBabel@@QAEXPAN@Z @ 2245 NONAME ; public: void __thiscall OpenBabel::OBRotor::Precompute(double *)
 ?Set@OBRotor@OpenBabel@@QAEXPANH@Z @ 2246 NONAME ; public: void __thiscall OpenBabel::OBRotor::Set(double *,int)
 ?Set@OBRotor@OpenBabel@@QAEXPANNNNN@Z @ 2247 NONAME ; public: void __thiscall OpenBabel::OBRotor::Set(double *,double,double,double,double)
 ?RemoveSymTorsionValues@OBRotor@OpenBabel@@QAEXH@Z @ 2248 NONAME ; public: void __thiscall OpenBabel::OBRotor::RemoveSymTorsionValues(int)
 ?SetDihedralAtoms@OBRotor@OpenBabel@@QAEXQAH@Z @ 2249 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetDihedralAtoms(int * const)
 ?SetRotAtoms@OBRotor@OpenBabel@@QAEXAAV?$vector@HV?$allocator@H@std@@@std@@@Z @ 2250 NONAME ; public: void __thiscall OpenBabel::OBRotor::SetRotAtoms(class std::vector<int,class std::allocator<int> > &)
 ??0OBRotorRules@OpenBabel@@QAE@XZ @ 2251 NONAME ; public: __thiscall OpenBabel::OBRotorRules::OBRotorRules(void)
 ?ParseLine@OBRotorRules@OpenBabel@@UAEXPBD@Z @ 2252 NONAME ; public: virtual void __thiscall OpenBabel::OBRotorRules::ParseLine(char const *)
 ??0OBRotorRule@OpenBabel@@QAE@PADQAHAAV?$vector@NV?$allocator@N@std@@@std@@N@Z @ 2253 NONAME ; public: __thiscall OpenBabel::OBRotorRule::OBRotorRule(char *,int * const,class std::vector<double,class std::allocator<double> > &,double)
 ?IsValid@OBRotorRule@OpenBabel@@QAE_NXZ @ 2254 NONAME ; public: bool __thiscall OpenBabel::OBRotorRule::IsValid(void)
 ?IsValid@OBSmartsPattern@OpenBabel@@QBE_NXZ @ 2255 NONAME ; public: bool __thiscall OpenBabel::OBSmartsPattern::IsValid(void)const 
 ??1OBRotorRule@OpenBabel@@QAE@XZ @ 2256 NONAME ; public: __thiscall OpenBabel::OBRotorRule::~OBRotorRule(void)
 ?GetRotorIncrements@OBRotorRules@OpenBabel@@QAEXAAVOBMol@2@PAVOBBond@2@QAHAAV?$vector@NV?$allocator@N@std@@@std@@AAN@Z @ 2257 NONAME ; public: void __thiscall OpenBabel::OBRotorRules::GetRotorIncrements(class OpenBabel::OBMol &,class OpenBabel::OBBond *,int * const,class std::vector<double,class std::allocator<double> > &,double &)
 ?GetReferenceAtoms@OBRotorRule@OpenBabel@@QAEXQAH@Z @ 2258 NONAME ; public: void __thiscall OpenBabel::OBRotorRule::GetReferenceAtoms(int * const)
 ?GetDelta@OBRotorRule@OpenBabel@@QAENXZ @ 2259 NONAME ; public: double __thiscall OpenBabel::OBRotorRule::GetDelta(void)
 ?GetSmartsString@OBRotorRule@OpenBabel@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ @ 2260 NONAME ; public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __thiscall OpenBabel::OBRotorRule::GetSmartsString(void)
 ?GetTorsionVals@OBRotorRule@OpenBabel@@QAEAAV?$vector@NV?$allocator@N@std@@@std@@XZ @ 2261 NONAME ; public: class std::vector<double,class std::allocator<double> > & __thiscall OpenBabel::OBRotorRule::GetTorsionVals(void)
 ?GetSmartsPattern@OBRotorRule@OpenBabel@@QAEPAVOBSmartsPattern@2@XZ @ 2262 NONAME ; public: class OpenBabel::OBSmartsPattern * __thiscall OpenBabel::OBRotorRule::GetSmartsPattern(void)
 ??1OBRotorRules@OpenBabel@@UAE@XZ @ 2263 NONAME ; public: virtual __thiscall OpenBabel::OBRotorRules::~OBRotorRules(void)
 ??A?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEAAU?$pair@HH@1@I@Z @ 2264 NONAME ; public: struct std::pair<int,int> & __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::operator[](unsigned int)
 ?empty@?$vector@NV?$allocator@N@std@@@std@@QBE_NXZ @ 2265 NONAME ; public: bool __thiscall std::vector<double,class std::allocator<double> >::empty(void)const 
 ?clear@?$vector@NV?$allocator@N@std@@@std@@QAEXXZ @ 2266 NONAME ; public: void __thiscall std::vector<double,class std::allocator<double> >::clear(void)
 ??0?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBRotorRule@OpenBabel@@@1@@Z @ 2267 NONAME ; public: __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >(class std::allocator<class OpenBabel::OBRotorRule *> const &)
 ??1?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@QAE@XZ @ 2268 NONAME ; public: __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::~vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >(void)
 ?begin@?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@QAEPAPAVOBRotorRule@OpenBabel@@XZ @ 2269 NONAME ; public: class OpenBabel::OBRotorRule * * __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::begin(void)
 ?end@?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@QAEPAPAVOBRotorRule@OpenBabel@@XZ @ 2270 NONAME ; public: class OpenBabel::OBRotorRule * * __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::end(void)
 ?push_back@?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@QAEXABQAVOBRotorRule@OpenBabel@@@Z @ 2271 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::push_back(class OpenBabel::OBRotorRule * const &)
 ??0?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBRotor@OpenBabel@@@1@@Z @ 2272 NONAME ; public: __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >(class std::allocator<class OpenBabel::OBRotor *> const &)
 ??1?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QAE@XZ @ 2273 NONAME ; public: __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::~vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >(void)
 ?size@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QBEIXZ @ 2274 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::size(void)const 
 ?empty@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QBE_NXZ @ 2275 NONAME ; public: bool __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::empty(void)const 
 ?push_back@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QAEXABQAVOBRotor@OpenBabel@@@Z @ 2276 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::push_back(class OpenBabel::OBRotor * const &)
 ?clear@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QAEXXZ @ 2277 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::clear(void)
 ??0?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@1@@Z @ 2278 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >(class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > >
 ??1?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@QAE@XZ @ 2279 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::~vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >(void)
 ?begin@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@XZ @ 2280 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::begin(void)
 ?end@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@XZ @ 2281 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::end(void)
 ?push_back@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@QAEXABU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@@Z @ 2282 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::push_back(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > const &)
 ??0?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@1@@Z @ 2283 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >(class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > const &)
 ??1?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@QAE@XZ @ 2284 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::~vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >(void)
 ?begin@?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@QAEPAU?$pair@PAVOBBond@OpenBabel@@H@2@XZ @ 2285 NONAME ; public: struct std::pair<class OpenBabel::OBBond *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::begin(void)
 ?end@?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@QAEPAU?$pair@PAVOBBond@OpenBabel@@H@2@XZ @ 2286 NONAME ; public: struct std::pair<class OpenBabel::OBBond *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::end(void)
 ?push_back@?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@QAEXABU?$pair@PAVOBBond@OpenBabel@@H@2@@Z @ 2287 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::push_back(struct std::pair<class OpenBabel::OBBond *,int> const &)
 ??0?$pair@PAVOBBond@OpenBabel@@H@std@@QAE@ABQAVOBBond@OpenBabel@@ABH@Z @ 2288 NONAME ; public: __thiscall std::pair<class OpenBabel::OBBond *,int>::pair<class OpenBabel::OBBond *,int>(class OpenBabel::OBBond * const &,int const &)
 ??0?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@QAE@ABQAVOBSmartsPattern@OpenBabel@@ABU?$pair@HH@1@@Z @ 2289 NONAME ; public: __thiscall std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >(class OpenBabel::OBSmartsPattern * const &,struct std::pair<int,int> const &)
 ?insert@?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@QAEPAPAVOBRotorRule@OpenBabel@@PAPAV34@ABQAV34@@Z @ 2290 NONAME ; public: class OpenBabel::OBRotorRule * * __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::insert(class OpenBabel::OBRotorRule * *,class OpenBabel::OBRotorRule * const &)
 ?_Destroy@?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@IAEXPAPAVOBRotorRule@OpenBabel@@0@Z @ 2291 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::_Destroy(class OpenBabel::OBRotorRule * *,class OpenBabel::OBRotorRule * *)
 ?deallocate@?$allocator@PAVOBRotorRule@OpenBabel@@@std@@QAEXPAXI@Z @ 2292 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRotorRule *>::deallocate(void *,unsigned int)
 ?insert@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QAEPAPAVOBRotor@OpenBabel@@PAPAV34@ABQAV34@@Z @ 2293 NONAME ; public: class OpenBabel::OBRotor * * __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::insert(class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * const &)
 ?erase@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QAEPAPAVOBRotor@OpenBabel@@PAPAV34@0@Z @ 2294 NONAME ; public: class OpenBabel::OBRotor * * __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::erase(class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * *)
 ?_Destroy@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@IAEXPAPAVOBRotor@OpenBabel@@0@Z @ 2295 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::_Destroy(class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * *)
 ?deallocate@?$allocator@PAVOBRotor@OpenBabel@@@std@@QAEXPAXI@Z @ 2296 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRotor *>::deallocate(void *,unsigned int)
 ?insert@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@PAU32@ABU32@@Z @ 2297 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::insert(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > const &)
 ?_Destroy@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@IAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@0@Z @ 2298 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::_Destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *)
 ?deallocate@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@std@@QAEXPAXI@Z @ 2299 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > >::deallocate(void *,unsigned int)
 ?insert@?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@QAEPAU?$pair@PAVOBBond@OpenBabel@@H@2@PAU32@ABU32@@Z @ 2300 NONAME ; public: struct std::pair<class OpenBabel::OBBond *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::insert(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> const &)
 ?_Destroy@?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@IAEXPAU?$pair@PAVOBBond@OpenBabel@@H@2@0@Z @ 2301 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::_Destroy(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *)
 ?deallocate@?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@std@@QAEXPAXI@Z @ 2302 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBBond *,int> >::deallocate(void *,unsigned int)
 ?insert@?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@QAEXPAPAVOBRotorRule@OpenBabel@@IABQAV34@@Z @ 2303 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::insert(class OpenBabel::OBRotorRule * *,unsigned int,class OpenBabel::OBRotorRule * const &)
 ?destroy@?$allocator@PAVOBRotorRule@OpenBabel@@@std@@QAEXPAPAVOBRotorRule@OpenBabel@@@Z @ 2304 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRotorRule *>::destroy(class OpenBabel::OBRotorRule * *)
 ?insert@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@QAEXPAPAVOBRotor@OpenBabel@@IABQAV34@@Z @ 2305 NONAME ; public: void __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::insert(class OpenBabel::OBRotor * *,unsigned int,class OpenBabel::OBRotor * const &)
 ?destroy@?$allocator@PAVOBRotor@OpenBabel@@@std@@QAEXPAPAVOBRotor@OpenBabel@@@Z @ 2306 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRotor *>::destroy(class OpenBabel::OBRotor * *)
 ?insert@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@IABU32@@Z @ 2307 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::insert(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,unsigned int,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > const &)
 ?destroy@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@@Z @ 2308 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > >::destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *)
 ?insert@?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@QAEXPAU?$pair@PAVOBBond@OpenBabel@@H@2@IABU32@@Z @ 2309 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::insert(struct std::pair<class OpenBabel::OBBond *,int> *,unsigned int,struct std::pair<class OpenBabel::OBBond *,int> const &)
 ?destroy@?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@std@@QAEXPAU?$pair@PAVOBBond@OpenBabel@@H@2@@Z @ 2310 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBBond *,int> >::destroy(struct std::pair<class OpenBabel::OBBond *,int> *)
 ?size@?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@QBEIXZ @ 2311 NONAME ; public: unsigned int __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::size(void)const 
 ?_Ucopy@?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@IAEPAPAVOBRotorRule@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 2312 NONAME ; protected: class OpenBabel::OBRotorRule * * __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::_Ucopy(class OpenBabel::OBRotorRule * const *,class OpenBabel::OBRotorRule * const *,class OpenBabel::OBRotorRule * *)
 ?_Ufill@?$vector@PAVOBRotorRule@OpenBabel@@V?$allocator@PAVOBRotorRule@OpenBabel@@@std@@@std@@IAEXPAPAVOBRotorRule@OpenBabel@@IABQAV34@@Z @ 2313 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBRotorRule *,class std::allocator<class OpenBabel::OBRotorRule *> >::_Ufill(class OpenBabel::OBRotorRule * *,unsigned int,class OpenBabel::OBRotorRule * const &)
 ?allocate@?$allocator@PAVOBRotorRule@OpenBabel@@@std@@QAEPAPAVOBRotorRule@OpenBabel@@IPBX@Z @ 2314 NONAME ; public: class OpenBabel::OBRotorRule * * __thiscall std::allocator<class OpenBabel::OBRotorRule *>::allocate(unsigned int,void const *)
 ?_Ucopy@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@IAEPAPAVOBRotor@OpenBabel@@PBQAV34@0PAPAV34@@Z @ 2315 NONAME ; protected: class OpenBabel::OBRotor * * __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::_Ucopy(class OpenBabel::OBRotor * const *,class OpenBabel::OBRotor * const *,class OpenBabel::OBRotor * *)
 ?_Ufill@?$vector@PAVOBRotor@OpenBabel@@V?$allocator@PAVOBRotor@OpenBabel@@@std@@@std@@IAEXPAPAVOBRotor@OpenBabel@@IABQAV34@@Z @ 2316 NONAME ; protected: void __thiscall std::vector<class OpenBabel::OBRotor *,class std::allocator<class OpenBabel::OBRotor *> >::_Ufill(class OpenBabel::OBRotor * *,unsigned int,class OpenBabel::OBRotor * const &)
 ?allocate@?$allocator@PAVOBRotor@OpenBabel@@@std@@QAEPAPAVOBRotor@OpenBabel@@IPBX@Z @ 2317 NONAME ; public: class OpenBabel::OBRotor * * __thiscall std::allocator<class OpenBabel::OBRotor *>::allocate(unsigned int,void const *)
 ?size@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@QBEIXZ @ 2318 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::size(void)const 
 ?_Ucopy@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@IAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@PBU32@0PAU32@@Z @ 2319 NONAME ; protected: struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::_Ucopy(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > const *,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > const *,struct std::pair<class Ope
 ?_Ufill@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@2@@std@@IAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@IABU32@@Z @ 2320 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > > >::_Ufill(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,unsigned int,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > const &)
 ?allocate@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@IPBX@Z @ 2321 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > * __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > >::allocate(unsigned int,void const *)
 ?size@?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@QBEIXZ @ 2322 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::size(void)const 
 ?_Ucopy@?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@IAEPAU?$pair@PAVOBBond@OpenBabel@@H@2@PBU32@0PAU32@@Z @ 2323 NONAME ; protected: struct std::pair<class OpenBabel::OBBond *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::_Ucopy(struct std::pair<class OpenBabel::OBBond *,int> const *,struct std::pair<class OpenBabel::OBBond *,int> const *,struct std::pair<class OpenBabel::OBBond *,int> *)
 ?_Ufill@?$vector@U?$pair@PAVOBBond@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@2@@std@@IAEXPAU?$pair@PAVOBBond@OpenBabel@@H@2@IABU32@@Z @ 2324 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBBond *,int>,class std::allocator<struct std::pair<class OpenBabel::OBBond *,int> > >::_Ufill(struct std::pair<class OpenBabel::OBBond *,int> *,unsigned int,struct std::pair<class OpenBabel::OBBond *,int> const &)
 ?allocate@?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@std@@QAEPAU?$pair@PAVOBBond@OpenBabel@@H@2@IPBX@Z @ 2325 NONAME ; public: struct std::pair<class OpenBabel::OBBond *,int> * __thiscall std::allocator<struct std::pair<class OpenBabel::OBBond *,int> >::allocate(unsigned int,void const *)
 ?construct@?$allocator@PAVOBRotorRule@OpenBabel@@@std@@QAEXPAPAVOBRotorRule@OpenBabel@@ABQAV34@@Z @ 2326 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRotorRule *>::construct(class OpenBabel::OBRotorRule * *,class OpenBabel::OBRotorRule * const &)
 ?construct@?$allocator@PAVOBRotor@OpenBabel@@@std@@QAEXPAPAVOBRotor@OpenBabel@@ABQAV34@@Z @ 2327 NONAME ; public: void __thiscall std::allocator<class OpenBabel::OBRotor *>::construct(class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * const &)
 ?construct@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@std@@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@2@ABU32@@Z @ 2328 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > >::construct(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > const &)
 ?construct@?$allocator@U?$pair@PAVOBBond@OpenBabel@@H@std@@@std@@QAEXPAU?$pair@PAVOBBond@OpenBabel@@H@2@ABU32@@Z @ 2329 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBBond *,int> >::construct(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> const &)
 ?sort@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@0P6A_NABU21@1@Z@Z @ 2330 NONAME ; void __cdecl std::sort(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBBond *,int> const &,struct std::pair<class OpenBabel::OBBond *,int> const &))
 ?swap@std@@YAXAAH0@Z @ 2331 NONAME ; void __cdecl std::swap(int &,int &)
 ?swap@std@@YAXAAPAVOBAtom@OpenBabel@@0@Z @ 2332 NONAME ; void __cdecl std::swap(class OpenBabel::OBAtom * &,class OpenBabel::OBAtom * &)
 ?copy@std@@YAPAPAVOBRotor@OpenBabel@@PAPAV23@00@Z @ 2333 NONAME ; class OpenBabel::OBRotor * * __cdecl std::copy(class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * *)
 ?fill@std@@YAXPAPAVOBRotorRule@OpenBabel@@0ABQAV23@@Z @ 2334 NONAME ; void __cdecl std::fill(class OpenBabel::OBRotorRule * *,class OpenBabel::OBRotorRule * *,class OpenBabel::OBRotorRule * const &)
 ?copy_backward@std@@YAPAPAVOBRotorRule@OpenBabel@@PAPAV23@00@Z @ 2335 NONAME ; class OpenBabel::OBRotorRule * * __cdecl std::copy_backward(class OpenBabel::OBRotorRule * *,class OpenBabel::OBRotorRule * *,class OpenBabel::OBRotorRule * *)
 ?_Destroy@std@@YAXPAPAVOBRotorRule@OpenBabel@@@Z @ 2336 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBRotorRule * *)
 ?fill@std@@YAXPAPAVOBRotor@OpenBabel@@0ABQAV23@@Z @ 2337 NONAME ; void __cdecl std::fill(class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * const &)
 ?copy_backward@std@@YAPAPAVOBRotor@OpenBabel@@PAPAV23@00@Z @ 2338 NONAME ; class OpenBabel::OBRotor * * __cdecl std::copy_backward(class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * *)
 ?_Destroy@std@@YAXPAPAVOBRotor@OpenBabel@@@Z @ 2339 NONAME ; void __cdecl std::_Destroy(class OpenBabel::OBRotor * *)
 ?fill@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@1@0ABU21@@Z @ 2340 NONAME ; void __cdecl std::fill(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > const &)
 ?copy_backward@std@@YAPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@1@PAU21@00@Z @ 2341 NONAME ; struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > * __cdecl std::copy_backward(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *)
 ?_Destroy@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@1@@Z @ 2342 NONAME ; void __cdecl std::_Destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *)
 ?fill@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@0ABU21@@Z @ 2343 NONAME ; void __cdecl std::fill(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> const &)
 ?copy_backward@std@@YAPAU?$pair@PAVOBBond@OpenBabel@@H@1@PAU21@00@Z @ 2344 NONAME ; struct std::pair<class OpenBabel::OBBond *,int> * __cdecl std::copy_backward(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *)
 ?_Destroy@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@@Z @ 2345 NONAME ; void __cdecl std::_Destroy(struct std::pair<class OpenBabel::OBBond *,int> *)
 ?_Allocate@std@@YAPAPAVOBRotorRule@OpenBabel@@HPAPAV23@@Z @ 2346 NONAME ; class OpenBabel::OBRotorRule * * __cdecl std::_Allocate(int,class OpenBabel::OBRotorRule * *)
 ?_Allocate@std@@YAPAPAVOBRotor@OpenBabel@@HPAPAV23@@Z @ 2347 NONAME ; class OpenBabel::OBRotor * * __cdecl std::_Allocate(int,class OpenBabel::OBRotor * *)
 ?_Allocate@std@@YAPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@1@HPAU21@@Z @ 2348 NONAME ; struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > * __cdecl std::_Allocate(int,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *)
 ?_Allocate@std@@YAPAU?$pair@PAVOBBond@OpenBabel@@H@1@HPAU21@@Z @ 2349 NONAME ; struct std::pair<class OpenBabel::OBBond *,int> * __cdecl std::_Allocate(int,struct std::pair<class OpenBabel::OBBond *,int> *)
 ?_Construct@std@@YAXPAPAVOBRotorRule@OpenBabel@@ABQAV23@@Z @ 2350 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBRotorRule * *,class OpenBabel::OBRotorRule * const &)
 ?_Construct@std@@YAXPAPAVOBRotor@OpenBabel@@ABQAV23@@Z @ 2351 NONAME ; void __cdecl std::_Construct(class OpenBabel::OBRotor * *,class OpenBabel::OBRotor * const &)
 ?_Construct@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@U?$pair@HH@std@@@1@ABU21@@Z @ 2352 NONAME ; void __cdecl std::_Construct(struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > *,struct std::pair<class OpenBabel::OBSmartsPattern *,struct std::pair<int,int> > const &)
 ?_Construct@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@ABU21@@Z @ 2353 NONAME ; void __cdecl std::_Construct(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> const &)
 ?_Val_type@std@@YAPAU?$pair@PAVOBBond@OpenBabel@@H@1@PBU21@@Z @ 2354 NONAME ; struct std::pair<class OpenBabel::OBBond *,int> * __cdecl std::_Val_type(struct std::pair<class OpenBabel::OBBond *,int> const *)
 ?_Sort_0@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@0P6A_NABU21@1@Z0@Z @ 2355 NONAME ; void __cdecl std::_Sort_0(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBBond *,int> const &,struct std::pair<class OpenBabel::OBBond *,int> const &),struct std::pair<class OpenBabel::OBBond *,int> *)
 ?_Insertion_sort@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@0P6A_NABU21@1@Z@Z @ 2356 NONAME ; void __cdecl std::_Insertion_sort(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBBond *,int> const &,struct std::pair<class OpenBabel::OBBond *,int> const &))
 ?_Sort@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@0P6A_NABU21@1@Z0@Z @ 2357 NONAME ; void __cdecl std::_Sort(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBBond *,int> const &,struct std::pair<class OpenBabel::OBBond *,int> const &),struct std::pair<class OpenBabel::OBBond *,int> *)
 ?_Unguarded_insert@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@U21@P6A_NABU21@2@Z@Z @ 2358 NONAME ; void __cdecl std::_Unguarded_insert(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int>,bool (__cdecl*)(struct std::pair<class OpenBabel::OBBond *,int> const &,struct std::pair<class OpenBabel::OBBond *,int> const &))
 ?_Insertion_sort_1@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@0P6A_NABU21@1@Z0@Z @ 2359 NONAME ; void __cdecl std::_Insertion_sort_1(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *,bool (__cdecl*)(struct std::pair<class OpenBabel::OBBond *,int> const &,struct std::pair<class OpenBabel::OBBond *,int> const &),struct std::pair<class OpenBabel::OBBond *,int> *)
 ?_Median@std@@YA?AU?$pair@PAVOBBond@OpenBabel@@H@1@U21@00P6A_NABU21@1@Z@Z @ 2360 NONAME ; struct std::pair<class OpenBabel::OBBond *,int> __cdecl std::_Median(struct std::pair<class OpenBabel::OBBond *,int>,struct std::pair<class OpenBabel::OBBond *,int>,struct std::pair<class OpenBabel::OBBond *,int>,bool (__cdecl*)(struct std::pair<class OpenBabel::OBBond *,int> const &,struct std::pair<class OpenBabel::OBBond *,int> const &))
 ?_Unguarded_partition@std@@YAPAU?$pair@PAVOBBond@OpenBabel@@H@1@PAU21@0U21@P6A_NABU21@2@Z@Z @ 2361 NONAME ; struct std::pair<class OpenBabel::OBBond *,int> * __cdecl std::_Unguarded_partition(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int>,bool (__cdecl*)(struct std::pair<class OpenBabel::OBBond *,int> const &,struct std::pair<class OpenBabel::OBBond *,int> const &))
 ?iter_swap@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@0@Z @ 2362 NONAME ; void __cdecl std::iter_swap(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *)
 ?_Iter_swap@std@@YAXPAU?$pair@PAVOBBond@OpenBabel@@H@1@00@Z @ 2363 NONAME ; void __cdecl std::_Iter_swap(struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *,struct std::pair<class OpenBabel::OBBond *,int> *)
 ?WriteTinker@OpenBabel@@YA_NAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAVOBMol@1@@Z @ 2364 NONAME ; bool __cdecl OpenBabel::WriteTinker(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::OBMol &)
 ?tokenize@OpenBabel@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PBD1@Z @ 2365 NONAME ; bool __cdecl OpenBabel::tokenize(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,char const *,char const *)
 ?trim_spaces@OpenBabel@@YAPADPAD@Z @ 2366 NONAME ; char * __cdecl OpenBabel::trim_spaces(char *)
 ?tokenize@OpenBabel@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@PBDH@Z @ 2367 NONAME ; bool __cdecl OpenBabel::tokenize(class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char const *,int)
 ?DoTransformations@OBMol@OpenBabel@@UAEPAVOBBase@2@PBD@Z @ 2368 NONAME ; public: virtual class OpenBabel::OBBase * __thiscall OpenBabel::OBMol::DoTransformations(char const *)
 ?ClassDescription@OBMol@OpenBabel@@SAPBDXZ @ 2369 NONAME ; public: static char const * __cdecl OpenBabel::OBMol::ClassDescription(void)
 ??0OBAtomTyper@OpenBabel@@QAE@XZ @ 2370 NONAME ; public: __thiscall OpenBabel::OBAtomTyper::OBAtomTyper(void)
 ?ParseLine@OBAtomTyper@OpenBabel@@UAEXPBD@Z @ 2371 NONAME ; public: virtual void __thiscall OpenBabel::OBAtomTyper::ParseLine(char const *)
 ??1?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ @ 2372 NONAME ; public: __thiscall std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::~pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(void)
 ??1OBAtomTyper@OpenBabel@@UAE@XZ @ 2373 NONAME ; public: virtual __thiscall OpenBabel::OBAtomTyper::~OBAtomTyper(void)
 ?AssignTypes@OBAtomTyper@OpenBabel@@QAEXAAVOBMol@2@@Z @ 2374 NONAME ; public: void __thiscall OpenBabel::OBAtomTyper::AssignTypes(class OpenBabel::OBMol &)
 ?SetAtomTypesPerceived@OBMol@OpenBabel@@QAEXXZ @ 2375 NONAME ; public: void __thiscall OpenBabel::OBMol::SetAtomTypesPerceived(void)
 ?AssignHyb@OBAtomTyper@OpenBabel@@QAEXAAVOBMol@2@@Z @ 2376 NONAME ; public: void __thiscall OpenBabel::OBAtomTyper::AssignHyb(class OpenBabel::OBMol &)
 ?AssignImplicitValence@OBAtomTyper@OpenBabel@@QAEXAAVOBMol@2@@Z @ 2377 NONAME ; public: void __thiscall OpenBabel::OBAtomTyper::AssignImplicitValence(class OpenBabel::OBMol &)
 ?SetImplicitValence@OBAtom@OpenBabel@@QAEXH@Z @ 2378 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetImplicitValence(int)
 ?SetSpinMultiplicity@OBAtom@OpenBabel@@QAEXH@Z @ 2379 NONAME ; public: void __thiscall OpenBabel::OBAtom::SetSpinMultiplicity(int)
 ?GetFlags@OBMol@OpenBabel@@QAEHXZ @ 2380 NONAME ; public: int __thiscall OpenBabel::OBMol::GetFlags(void)
 ?SetImplicitValencePerceived@OBMol@OpenBabel@@QAEXXZ @ 2381 NONAME ; public: void __thiscall OpenBabel::OBMol::SetImplicitValencePerceived(void)
 ?SetFlags@OBMol@OpenBabel@@QAEXH@Z @ 2382 NONAME ; public: void __thiscall OpenBabel::OBMol::SetFlags(int)
 ?HasAromaticCorrected@OBMol@OpenBabel@@QAE_NXZ @ 2383 NONAME ; public: bool __thiscall OpenBabel::OBMol::HasAromaticCorrected(void)
 ?CorrectAromaticNitrogens@OBAtomTyper@OpenBabel@@QAEXAAVOBMol@2@@Z @ 2384 NONAME ; public: void __thiscall OpenBabel::OBAtomTyper::CorrectAromaticNitrogens(class OpenBabel::OBMol &)
 ?HasDoubleBond@OBAtom@OpenBabel@@QAE_NXZ @ 2385 NONAME ; public: bool __thiscall OpenBabel::OBAtom::HasDoubleBond(void)
 ?SetAromaticCorrected@OBMol@OpenBabel@@QAEXXZ @ 2386 NONAME ; public: void __thiscall OpenBabel::OBMol::SetAromaticCorrected(void)
 ??0OBAromaticTyper@OpenBabel@@QAE@XZ @ 2387 NONAME ; public: __thiscall OpenBabel::OBAromaticTyper::OBAromaticTyper(void)
 ?ParseLine@OBAromaticTyper@OpenBabel@@UAEXPBD@Z @ 2388 NONAME ; public: virtual void __thiscall OpenBabel::OBAromaticTyper::ParseLine(char const *)
 ??1OBAromaticTyper@OpenBabel@@UAE@XZ @ 2389 NONAME ; public: virtual __thiscall OpenBabel::OBAromaticTyper::~OBAromaticTyper(void)
 ?AssignAromaticFlags@OBAromaticTyper@OpenBabel@@QAEXAAVOBMol@2@@Z @ 2390 NONAME ; public: void __thiscall OpenBabel::OBAromaticTyper::AssignAromaticFlags(class OpenBabel::OBMol &)
 ?UnsetAromatic@OBAtom@OpenBabel@@QAEXXZ @ 2391 NONAME ; public: void __thiscall OpenBabel::OBAtom::UnsetAromatic(void)
 ?TraverseCycle@OBAromaticTyper@OpenBabel@@QAE_NPAVOBAtom@2@0PAVOBBond@2@AAU?$pair@HH@std@@H@Z @ 2392 NONAME ; public: bool __thiscall OpenBabel::OBAromaticTyper::TraverseCycle(class OpenBabel::OBAtom *,class OpenBabel::OBAtom *,class OpenBabel::OBBond *,struct std::pair<int,int> &,int)
 ?CheckAromaticity@OBAromaticTyper@OpenBabel@@QAEXPAVOBAtom@2@H@Z @ 2393 NONAME ; public: void __thiscall OpenBabel::OBAromaticTyper::CheckAromaticity(class OpenBabel::OBAtom *,int)
 ?PropagatePotentialAromatic@OBAromaticTyper@OpenBabel@@QAEXPAVOBAtom@2@@Z @ 2394 NONAME ; public: void __thiscall OpenBabel::OBAromaticTyper::PropagatePotentialAromatic(class OpenBabel::OBAtom *)
 ?SelectRootAtoms@OBAromaticTyper@OpenBabel@@QAEXAAVOBMol@2@_N@Z @ 2395 NONAME ; public: void __thiscall OpenBabel::OBAromaticTyper::SelectRootAtoms(class OpenBabel::OBMol &,bool)
 ?ExcludeSmallRing@OBAromaticTyper@OpenBabel@@QAEXAAVOBMol@2@@Z @ 2396 NONAME ; public: void __thiscall OpenBabel::OBAromaticTyper::ExcludeSmallRing(class OpenBabel::OBMol &)
 ??0?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@1@@Z @ 2397 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >(class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > const &)
 ??1?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@QAE@XZ @ 2398 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::~vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >(void)
 ?begin@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@XZ @ 2399 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::begin(void)
 ?end@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@XZ @ 2400 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::end(void)
 ?push_back@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@QAEXABU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@@Z @ 2401 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::push_back(struct std::pair<class OpenBabel::OBSmartsPattern *,int> const &)
 ??0?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@@Z @ 2402 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<
 ??1?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@XZ @ 2403 NONAME ; public: __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::~vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator
 ?begin@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ @ 2404 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::begin(void)
 ?end@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ @ 2405 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::end(void)
 ?push_back@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEXABU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z @ 2406 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::push_back(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const &)
 ??0?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@QAE@ABV?$allocator@PAVOBSmartsPattern@OpenBabel@@@1@@Z @ 2407 NONAME ; public: __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >(class std::allocator<class OpenBabel::OBSmartsPattern *> const &)
 ??1?$vector@PAVOBSmartsPattern@OpenBabel@@V?$allocator@PAVOBSmartsPattern@OpenBabel@@@std@@@std@@QAE@XZ @ 2408 NONAME ; public: __thiscall std::vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >::~vector<class OpenBabel::OBSmartsPattern *,class std::allocator<class OpenBabel::OBSmartsPattern *> >(void)
 ?resize@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEXIABU?$pair@HH@2@@Z @ 2409 NONAME ; public: void __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::resize(unsigned int,struct std::pair<int,int> const &)
 ?clear@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEXXZ @ 2410 NONAME ; public: void __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::clear(void)
 ??0?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@QAE@ABQAVOBSmartsPattern@OpenBabel@@ABH@Z @ 2411 NONAME ; public: __thiscall std::pair<class OpenBabel::OBSmartsPattern *,int>::pair<class OpenBabel::OBSmartsPattern *,int>(class OpenBabel::OBSmartsPattern * const &,int const &)
 ??0?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABQAVOBSmartsPattern@OpenBabel@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z @ 2412 NONAME ; public: __thiscall std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(class OpenBabel::OBSmartsPattern * const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
 ??0?$pair@HH@std@@QAE@XZ @ 2413 NONAME ; public: __thiscall std::pair<int,int>::pair<int,int>(void)
 ?insert@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@PAU32@ABU32@@Z @ 2414 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::insert(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> const &)
 ?_Destroy@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@IAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@0@Z @ 2415 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::_Destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> *)
 ?deallocate@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@std@@QAEXPAXI@Z @ 2416 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> >::deallocate(void *,unsigned int)
 ?insert@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@PAU32@ABU32@@Z @ 2417 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::insert(struct std::pair<cl
 ?_Destroy@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@IAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@0@Z @ 2418 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *,struct st
 ?deallocate@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAXI@Z @ 2419 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::deallocate(void *,unsigned int)
 ?erase@?$vector@U?$pair@HH@std@@V?$allocator@U?$pair@HH@std@@@2@@std@@QAEPAU?$pair@HH@2@PAU32@0@Z @ 2420 NONAME ; public: struct std::pair<int,int> * __thiscall std::vector<struct std::pair<int,int>,class std::allocator<struct std::pair<int,int> > >::erase(struct std::pair<int,int> *,struct std::pair<int,int> *)
 ?insert@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@IABU32@@Z @ 2421 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::insert(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,unsigned int,struct std::pair<class OpenBabel::OBSmartsPattern *,int> const &)
 ?destroy@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@@Z @ 2422 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> >::destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *)
 ?insert@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@IABU32@@Z @ 2423 NONAME ; public: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::insert(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *,unsigned int,s
 ?destroy@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z @ 2424 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *)
 ?size@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@QBEIXZ @ 2425 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::size(void)const 
 ?_Ucopy@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@IAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@PBU32@0PAU32@@Z @ 2426 NONAME ; protected: struct std::pair<class OpenBabel::OBSmartsPattern *,int> * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::_Ucopy(struct std::pair<class OpenBabel::OBSmartsPattern *,int> const *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> const *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> *)
 ?_Ufill@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@2@@std@@IAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@IABU32@@Z @ 2427 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,int>,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> > >::_Ufill(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,unsigned int,struct std::pair<class OpenBabel::OBSmartsPattern *,int> const &)
 ?allocate@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@IPBX@Z @ 2428 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,int> * __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> >::allocate(unsigned int,void const *)
 ?size@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QBEIXZ @ 2429 NONAME ; public: unsigned int __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::size(void)const 
 ?_Ucopy@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@IAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@PBU32@0PAU32@@Z @ 2430 NONAME ; protected: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Ucopy(struct std::pair
 ?_Ufill@?$vector@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@IAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@IABU32@@Z @ 2431 NONAME ; protected: void __thiscall std::vector<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > >::_Ufill(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *,unsigned in
 ?allocate@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@IPBX@Z @ 2432 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::allocate(unsigned int,void const *)
 ?construct@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@H@std@@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@2@ABU32@@Z @ 2433 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,int> >::construct(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> const &)
 ?construct@?$allocator@U?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@ABU32@@Z @ 2434 NONAME ; public: void __thiscall std::allocator<struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > >::construct(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const &)
 ?copy@std@@YAPAU?$pair@HH@1@PAU21@00@Z @ 2435 NONAME ; struct std::pair<int,int> * __cdecl std::copy(struct std::pair<int,int> *,struct std::pair<int,int> *,struct std::pair<int,int> *)
 ?fill@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@1@0ABU21@@Z @ 2436 NONAME ; void __cdecl std::fill(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> const &)
 ?copy_backward@std@@YAPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@1@PAU21@00@Z @ 2437 NONAME ; struct std::pair<class OpenBabel::OBSmartsPattern *,int> * __cdecl std::copy_backward(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> *)
 ?_Destroy@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@1@@Z @ 2438 NONAME ; void __cdecl std::_Destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *)
 ?fill@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@0ABU21@@Z @ 2439 NONAME ; void __cdecl std::fill(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const &)
 ?copy_backward@std@@YAPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAU21@00@Z @ 2440 NONAME ; struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __cdecl std::copy_backward(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,
 ?_Destroy@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z @ 2441 NONAME ; void __cdecl std::_Destroy(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *)
 ?_Allocate@std@@YAPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@1@HPAU21@@Z @ 2442 NONAME ; struct std::pair<class OpenBabel::OBSmartsPattern *,int> * __cdecl std::_Allocate(int,struct std::pair<class OpenBabel::OBSmartsPattern *,int> *)
 ?_Allocate@std@@YAPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@HPAU21@@Z @ 2443 NONAME ; struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > * __cdecl std::_Allocate(int,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *)
 ?_Construct@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@H@1@ABU21@@Z @ 2444 NONAME ; void __cdecl std::_Construct(struct std::pair<class OpenBabel::OBSmartsPattern *,int> *,struct std::pair<class OpenBabel::OBSmartsPattern *,int> const &)
 ?_Construct@std@@YAXPAU?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABU21@@Z @ 2445 NONAME ; void __cdecl std::_Construct(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > *,struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const &)
 ??4?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEAAU01@ABU01@@Z @ 2446 NONAME ; public: struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > & __thiscall std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::operator=(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const &)
 ??0?$pair@PAVOBSmartsPattern@OpenBabel@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABU01@@Z @ 2447 NONAME ; public: __thiscall std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >(struct std::pair<class OpenBabel::OBSmartsPattern *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > const &)
 ??Avector3@OpenBabel@@QAEAANI@Z @ 2448 NONAME ; public: double & __thiscall OpenBabel::vector3::operator[](unsigned int)
 ?randomUnitVector@vector3@OpenBabel@@QAEXPAVOBRandom@2@@Z @ 2449 NONAME ; public: void __thiscall OpenBabel::vector3::randomUnitVector(class OpenBabel::OBRandom *)
 ??6OpenBabel@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV12@ABVvector3@0@@Z @ 2450 NONAME ; class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl OpenBabel::operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,class OpenBabel::vector3 const &)
 ??8OpenBabel@@YAHABVvector3@0@0@Z @ 2451 NONAME ; int __cdecl OpenBabel::operator==(class OpenBabel::vector3 const &,class OpenBabel::vector3 const &)
 ??9OpenBabel@@YAHABVvector3@0@0@Z @ 2452 NONAME ; int __cdecl OpenBabel::operator!=(class OpenBabel::vector3 const &,class OpenBabel::vector3 const &)
 ?normalize@vector3@OpenBabel@@QAEAAV12@XZ @ 2453 NONAME ; public: class OpenBabel::vector3 & __thiscall OpenBabel::vector3::normalize(void)
 ?dot@OpenBabel@@YANABVvector3@1@0@Z @ 2454 NONAME ; double __cdecl OpenBabel::dot(class OpenBabel::vector3 const &,class OpenBabel::vector3 const &)
 ?cross@OpenBabel@@YA?AVvector3@1@ABV21@0@Z @ 2455 NONAME ; class OpenBabel::vector3 __cdecl OpenBabel::cross(class OpenBabel::vector3 const &,class OpenBabel::vector3 const &)
 ?vectorAngle@OpenBabel@@YANABVvector3@1@0@Z @ 2456 NONAME ; double __cdecl OpenBabel::vectorAngle(class OpenBabel::vector3 const &,class OpenBabel::vector3 const &)
 ?CalcTorsionAngle@OpenBabel@@YANABVvector3@1@000@Z @ 2457 NONAME ; double __cdecl OpenBabel::CalcTorsionAngle(class OpenBabel::vector3 const &,class OpenBabel::vector3 const &,class OpenBabel::vector3 const &,class OpenBabel::vector3 const &)
 ?createOrthoVector@vector3@OpenBabel@@QBEXAAV12@@Z @ 2458 NONAME ; public: void __thiscall OpenBabel::vector3::createOrthoVector(class OpenBabel::vector3 &)const 
 ??_7OBAtom@OpenBabel@@6B@ @ 2459 NONAME ; const OpenBabel::OBAtom::`vftable'
 ??_7OBNodeBase@OpenBabel@@6B@ @ 2460 NONAME ; const OpenBabel::OBNodeBase::`vftable'
 ??_7OBBase@OpenBabel@@6B@ @ 2461 NONAME ; const OpenBabel::OBBase::`vftable'
 ??_7OBTypeTable@OpenBabel@@6B@ @ 2462 NONAME ; const OpenBabel::OBTypeTable::`vftable'
 ??_7OBGlobalDataBase@OpenBabel@@6B@ @ 2463 NONAME ; const OpenBabel::OBGlobalDataBase::`vftable'
 ??_7OBSmartsPattern@OpenBabel@@6B@ @ 2464 NONAME ; const OpenBabel::OBSmartsPattern::`vftable'
 ??_7OBRotamerList@OpenBabel@@6B@ @ 2465 NONAME ; const OpenBabel::OBRotamerList::`vftable'
 ??_7OBGenericData@OpenBabel@@6B@ @ 2466 NONAME ; const OpenBabel::OBGenericData::`vftable'
 ??_7OBBond@OpenBabel@@6B@ @ 2467 NONAME ; const OpenBabel::OBBond::`vftable'
 ??_7OBEdgeBase@OpenBabel@@6B@ @ 2468 NONAME ; const OpenBabel::OBEdgeBase::`vftable'
 ??_7OBExtensionTable@OpenBabel@@6B@ @ 2469 NONAME ; const OpenBabel::OBExtensionTable::`vftable'
 ??_7OBIsotopeTable@OpenBabel@@6B@ @ 2470 NONAME ; const OpenBabel::OBIsotopeTable::`vftable'
 ??_7OBElementTable@OpenBabel@@6B@ @ 2471 NONAME ; const OpenBabel::OBElementTable::`vftable'
 ??_7OBCommentData@OpenBabel@@6B@ @ 2472 NONAME ; const OpenBabel::OBCommentData::`vftable'
 ??_7OBExternalBondData@OpenBabel@@6B@ @ 2473 NONAME ; const OpenBabel::OBExternalBondData::`vftable'
 ??_7OBPairData@OpenBabel@@6B@ @ 2474 NONAME ; const OpenBabel::OBPairData::`vftable'
 ??_7OBVirtualBond@OpenBabel@@6B@ @ 2475 NONAME ; const OpenBabel::OBVirtualBond::`vftable'
 ??_7OBUnitCell@OpenBabel@@6B@ @ 2476 NONAME ; const OpenBabel::OBUnitCell::`vftable'
 ??_7OBRingData@OpenBabel@@6B@ @ 2477 NONAME ; const OpenBabel::OBRingData::`vftable'
 ??_7OBAngleData@OpenBabel@@6B@ @ 2478 NONAME ; const OpenBabel::OBAngleData::`vftable'
 ??_7OBTorsionData@OpenBabel@@6B@ @ 2479 NONAME ; const OpenBabel::OBTorsionData::`vftable'
 ??_7OBMol@OpenBabel@@6B@ @ 2480 NONAME ; const OpenBabel::OBMol::`vftable'
 ??_7OBGraphBase@OpenBabel@@6B@ @ 2481 NONAME ; const OpenBabel::OBGraphBase::`vftable'
 ??_7OBPhModel@OpenBabel@@6B@ @ 2482 NONAME ; const OpenBabel::OBPhModel::`vftable'
 ??_7OBResidue@OpenBabel@@6B@ @ 2483 NONAME ; const OpenBabel::OBResidue::`vftable'
 ??_7OBRotorRules@OpenBabel@@6B@ @ 2484 NONAME ; const OpenBabel::OBRotorRules::`vftable'
 ??_7OBAtomTyper@OpenBabel@@6B@ @ 2485 NONAME ; const OpenBabel::OBAtomTyper::`vftable'
 ??_7OBAromaticTyper@OpenBabel@@6B@ @ 2486 NONAME ; const OpenBabel::OBAromaticTyper::`vftable'
 ??_R1A@?0A@A@OBBase@OpenBabel@@8 @ 2487 NONAME ; OpenBabel::OBBase::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R1A@?0A@A@OBNodeBase@OpenBabel@@8 @ 2488 NONAME ; OpenBabel::OBNodeBase::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R1A@?0A@A@OBAtom@OpenBabel@@8 @ 2489 NONAME ; OpenBabel::OBAtom::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBAtom@OpenBabel@@8 @ 2490 NONAME ; OpenBabel::OBAtom::`RTTI Base Class Array'
 ??_R3OBAtom@OpenBabel@@8 @ 2491 NONAME ; OpenBabel::OBAtom::`RTTI Class Hierarchy Descriptor'
 ??_R4OBAtom@OpenBabel@@6B@ @ 2492 NONAME ; const OpenBabel::OBAtom::`RTTI Complete Object Locator'
 ??_R2OBNodeBase@OpenBabel@@8 @ 2493 NONAME ; OpenBabel::OBNodeBase::`RTTI Base Class Array'
 ??_R3OBNodeBase@OpenBabel@@8 @ 2494 NONAME ; OpenBabel::OBNodeBase::`RTTI Class Hierarchy Descriptor'
 ??_R4OBNodeBase@OpenBabel@@6B@ @ 2495 NONAME ; const OpenBabel::OBNodeBase::`RTTI Complete Object Locator'
 ??_R2OBBase@OpenBabel@@8 @ 2496 NONAME ; OpenBabel::OBBase::`RTTI Base Class Array'
 ??_R3OBBase@OpenBabel@@8 @ 2497 NONAME ; OpenBabel::OBBase::`RTTI Class Hierarchy Descriptor'
 ??_R4OBBase@OpenBabel@@6B@ @ 2498 NONAME ; const OpenBabel::OBBase::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBGlobalDataBase@OpenBabel@@8 @ 2499 NONAME ; OpenBabel::OBGlobalDataBase::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R1A@?0A@A@OBTypeTable@OpenBabel@@8 @ 2500 NONAME ; OpenBabel::OBTypeTable::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBTypeTable@OpenBabel@@8 @ 2501 NONAME ; OpenBabel::OBTypeTable::`RTTI Base Class Array'
 ??_R3OBTypeTable@OpenBabel@@8 @ 2502 NONAME ; OpenBabel::OBTypeTable::`RTTI Class Hierarchy Descriptor'
 ??_R4OBTypeTable@OpenBabel@@6B@ @ 2503 NONAME ; const OpenBabel::OBTypeTable::`RTTI Complete Object Locator'
 ??_R2OBGlobalDataBase@OpenBabel@@8 @ 2504 NONAME ; OpenBabel::OBGlobalDataBase::`RTTI Base Class Array'
 ??_R3OBGlobalDataBase@OpenBabel@@8 @ 2505 NONAME ; OpenBabel::OBGlobalDataBase::`RTTI Class Hierarchy Descriptor'
 ??_R4OBGlobalDataBase@OpenBabel@@6B@ @ 2506 NONAME ; const OpenBabel::OBGlobalDataBase::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBSmartsPattern@OpenBabel@@8 @ 2507 NONAME ; OpenBabel::OBSmartsPattern::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBSmartsPattern@OpenBabel@@8 @ 2508 NONAME ; OpenBabel::OBSmartsPattern::`RTTI Base Class Array'
 ??_R3OBSmartsPattern@OpenBabel@@8 @ 2509 NONAME ; OpenBabel::OBSmartsPattern::`RTTI Class Hierarchy Descriptor'
 ??_R4OBSmartsPattern@OpenBabel@@6B@ @ 2510 NONAME ; const OpenBabel::OBSmartsPattern::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBGenericData@OpenBabel@@8 @ 2511 NONAME ; OpenBabel::OBGenericData::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R1A@?0A@A@OBRotamerList@OpenBabel@@8 @ 2512 NONAME ; OpenBabel::OBRotamerList::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBRotamerList@OpenBabel@@8 @ 2513 NONAME ; OpenBabel::OBRotamerList::`RTTI Base Class Array'
 ??_R3OBRotamerList@OpenBabel@@8 @ 2514 NONAME ; OpenBabel::OBRotamerList::`RTTI Class Hierarchy Descriptor'
 ??_R4OBRotamerList@OpenBabel@@6B@ @ 2515 NONAME ; const OpenBabel::OBRotamerList::`RTTI Complete Object Locator'
 ??_R2OBGenericData@OpenBabel@@8 @ 2516 NONAME ; OpenBabel::OBGenericData::`RTTI Base Class Array'
 ??_R3OBGenericData@OpenBabel@@8 @ 2517 NONAME ; OpenBabel::OBGenericData::`RTTI Class Hierarchy Descriptor'
 ??_R4OBGenericData@OpenBabel@@6B@ @ 2518 NONAME ; const OpenBabel::OBGenericData::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBEdgeBase@OpenBabel@@8 @ 2519 NONAME ; OpenBabel::OBEdgeBase::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R1A@?0A@A@OBBond@OpenBabel@@8 @ 2520 NONAME ; OpenBabel::OBBond::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBBond@OpenBabel@@8 @ 2521 NONAME ; OpenBabel::OBBond::`RTTI Base Class Array'
 ??_R3OBBond@OpenBabel@@8 @ 2522 NONAME ; OpenBabel::OBBond::`RTTI Class Hierarchy Descriptor'
 ??_R4OBBond@OpenBabel@@6B@ @ 2523 NONAME ; const OpenBabel::OBBond::`RTTI Complete Object Locator'
 ??_R2OBEdgeBase@OpenBabel@@8 @ 2524 NONAME ; OpenBabel::OBEdgeBase::`RTTI Base Class Array'
 ??_R3OBEdgeBase@OpenBabel@@8 @ 2525 NONAME ; OpenBabel::OBEdgeBase::`RTTI Class Hierarchy Descriptor'
 ??_R4OBEdgeBase@OpenBabel@@6B@ @ 2526 NONAME ; const OpenBabel::OBEdgeBase::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBExtensionTable@OpenBabel@@8 @ 2527 NONAME ; OpenBabel::OBExtensionTable::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBExtensionTable@OpenBabel@@8 @ 2528 NONAME ; OpenBabel::OBExtensionTable::`RTTI Base Class Array'
 ??_R3OBExtensionTable@OpenBabel@@8 @ 2529 NONAME ; OpenBabel::OBExtensionTable::`RTTI Class Hierarchy Descriptor'
 ??_R4OBExtensionTable@OpenBabel@@6B@ @ 2530 NONAME ; const OpenBabel::OBExtensionTable::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBIsotopeTable@OpenBabel@@8 @ 2531 NONAME ; OpenBabel::OBIsotopeTable::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBIsotopeTable@OpenBabel@@8 @ 2532 NONAME ; OpenBabel::OBIsotopeTable::`RTTI Base Class Array'
 ??_R3OBIsotopeTable@OpenBabel@@8 @ 2533 NONAME ; OpenBabel::OBIsotopeTable::`RTTI Class Hierarchy Descriptor'
 ??_R4OBIsotopeTable@OpenBabel@@6B@ @ 2534 NONAME ; const OpenBabel::OBIsotopeTable::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBElementTable@OpenBabel@@8 @ 2535 NONAME ; OpenBabel::OBElementTable::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBElementTable@OpenBabel@@8 @ 2536 NONAME ; OpenBabel::OBElementTable::`RTTI Base Class Array'
 ??_R3OBElementTable@OpenBabel@@8 @ 2537 NONAME ; OpenBabel::OBElementTable::`RTTI Class Hierarchy Descriptor'
 ??_R4OBElementTable@OpenBabel@@6B@ @ 2538 NONAME ; const OpenBabel::OBElementTable::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBCommentData@OpenBabel@@8 @ 2539 NONAME ; OpenBabel::OBCommentData::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBCommentData@OpenBabel@@8 @ 2540 NONAME ; OpenBabel::OBCommentData::`RTTI Base Class Array'
 ??_R3OBCommentData@OpenBabel@@8 @ 2541 NONAME ; OpenBabel::OBCommentData::`RTTI Class Hierarchy Descriptor'
 ??_R4OBCommentData@OpenBabel@@6B@ @ 2542 NONAME ; const OpenBabel::OBCommentData::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBExternalBondData@OpenBabel@@8 @ 2543 NONAME ; OpenBabel::OBExternalBondData::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBExternalBondData@OpenBabel@@8 @ 2544 NONAME ; OpenBabel::OBExternalBondData::`RTTI Base Class Array'
 ??_R3OBExternalBondData@OpenBabel@@8 @ 2545 NONAME ; OpenBabel::OBExternalBondData::`RTTI Class Hierarchy Descriptor'
 ??_R4OBExternalBondData@OpenBabel@@6B@ @ 2546 NONAME ; const OpenBabel::OBExternalBondData::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBPairData@OpenBabel@@8 @ 2547 NONAME ; OpenBabel::OBPairData::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBPairData@OpenBabel@@8 @ 2548 NONAME ; OpenBabel::OBPairData::`RTTI Base Class Array'
 ??_R3OBPairData@OpenBabel@@8 @ 2549 NONAME ; OpenBabel::OBPairData::`RTTI Class Hierarchy Descriptor'
 ??_R4OBPairData@OpenBabel@@6B@ @ 2550 NONAME ; const OpenBabel::OBPairData::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBVirtualBond@OpenBabel@@8 @ 2551 NONAME ; OpenBabel::OBVirtualBond::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBVirtualBond@OpenBabel@@8 @ 2552 NONAME ; OpenBabel::OBVirtualBond::`RTTI Base Class Array'
 ??_R3OBVirtualBond@OpenBabel@@8 @ 2553 NONAME ; OpenBabel::OBVirtualBond::`RTTI Class Hierarchy Descriptor'
 ??_R4OBVirtualBond@OpenBabel@@6B@ @ 2554 NONAME ; const OpenBabel::OBVirtualBond::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBUnitCell@OpenBabel@@8 @ 2555 NONAME ; OpenBabel::OBUnitCell::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBUnitCell@OpenBabel@@8 @ 2556 NONAME ; OpenBabel::OBUnitCell::`RTTI Base Class Array'
 ??_R3OBUnitCell@OpenBabel@@8 @ 2557 NONAME ; OpenBabel::OBUnitCell::`RTTI Class Hierarchy Descriptor'
 ??_R4OBUnitCell@OpenBabel@@6B@ @ 2558 NONAME ; const OpenBabel::OBUnitCell::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBRingData@OpenBabel@@8 @ 2559 NONAME ; OpenBabel::OBRingData::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBRingData@OpenBabel@@8 @ 2560 NONAME ; OpenBabel::OBRingData::`RTTI Base Class Array'
 ??_R3OBRingData@OpenBabel@@8 @ 2561 NONAME ; OpenBabel::OBRingData::`RTTI Class Hierarchy Descriptor'
 ??_R4OBRingData@OpenBabel@@6B@ @ 2562 NONAME ; const OpenBabel::OBRingData::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBAngleData@OpenBabel@@8 @ 2563 NONAME ; OpenBabel::OBAngleData::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBAngleData@OpenBabel@@8 @ 2564 NONAME ; OpenBabel::OBAngleData::`RTTI Base Class Array'
 ??_R3OBAngleData@OpenBabel@@8 @ 2565 NONAME ; OpenBabel::OBAngleData::`RTTI Class Hierarchy Descriptor'
 ??_R4OBAngleData@OpenBabel@@6B@ @ 2566 NONAME ; const OpenBabel::OBAngleData::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBTorsionData@OpenBabel@@8 @ 2567 NONAME ; OpenBabel::OBTorsionData::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBTorsionData@OpenBabel@@8 @ 2568 NONAME ; OpenBabel::OBTorsionData::`RTTI Base Class Array'
 ??_R3OBTorsionData@OpenBabel@@8 @ 2569 NONAME ; OpenBabel::OBTorsionData::`RTTI Class Hierarchy Descriptor'
 ??_R4OBTorsionData@OpenBabel@@6B@ @ 2570 NONAME ; const OpenBabel::OBTorsionData::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBGraphBase@OpenBabel@@8 @ 2571 NONAME ; OpenBabel::OBGraphBase::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R1A@?0A@A@OBMol@OpenBabel@@8 @ 2572 NONAME ; OpenBabel::OBMol::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBMol@OpenBabel@@8 @ 2573 NONAME ; OpenBabel::OBMol::`RTTI Base Class Array'
 ??_R3OBMol@OpenBabel@@8 @ 2574 NONAME ; OpenBabel::OBMol::`RTTI Class Hierarchy Descriptor'
 ??_R4OBMol@OpenBabel@@6B@ @ 2575 NONAME ; const OpenBabel::OBMol::`RTTI Complete Object Locator'
 ??_R2OBGraphBase@OpenBabel@@8 @ 2576 NONAME ; OpenBabel::OBGraphBase::`RTTI Base Class Array'
 ??_R3OBGraphBase@OpenBabel@@8 @ 2577 NONAME ; OpenBabel::OBGraphBase::`RTTI Class Hierarchy Descriptor'
 ??_R4OBGraphBase@OpenBabel@@6B@ @ 2578 NONAME ; const OpenBabel::OBGraphBase::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBPhModel@OpenBabel@@8 @ 2579 NONAME ; OpenBabel::OBPhModel::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBPhModel@OpenBabel@@8 @ 2580 NONAME ; OpenBabel::OBPhModel::`RTTI Base Class Array'
 ??_R3OBPhModel@OpenBabel@@8 @ 2581 NONAME ; OpenBabel::OBPhModel::`RTTI Class Hierarchy Descriptor'
 ??_R4OBPhModel@OpenBabel@@6B@ @ 2582 NONAME ; const OpenBabel::OBPhModel::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBResidue@OpenBabel@@8 @ 2583 NONAME ; OpenBabel::OBResidue::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBResidue@OpenBabel@@8 @ 2584 NONAME ; OpenBabel::OBResidue::`RTTI Base Class Array'
 ??_R3OBResidue@OpenBabel@@8 @ 2585 NONAME ; OpenBabel::OBResidue::`RTTI Class Hierarchy Descriptor'
 ??_R4OBResidue@OpenBabel@@6B@ @ 2586 NONAME ; const OpenBabel::OBResidue::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBRotorRules@OpenBabel@@8 @ 2587 NONAME ; OpenBabel::OBRotorRules::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBRotorRules@OpenBabel@@8 @ 2588 NONAME ; OpenBabel::OBRotorRules::`RTTI Base Class Array'
 ??_R3OBRotorRules@OpenBabel@@8 @ 2589 NONAME ; OpenBabel::OBRotorRules::`RTTI Class Hierarchy Descriptor'
 ??_R4OBRotorRules@OpenBabel@@6B@ @ 2590 NONAME ; const OpenBabel::OBRotorRules::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBAtomTyper@OpenBabel@@8 @ 2591 NONAME ; OpenBabel::OBAtomTyper::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBAtomTyper@OpenBabel@@8 @ 2592 NONAME ; OpenBabel::OBAtomTyper::`RTTI Base Class Array'
 ??_R3OBAtomTyper@OpenBabel@@8 @ 2593 NONAME ; OpenBabel::OBAtomTyper::`RTTI Class Hierarchy Descriptor'
 ??_R4OBAtomTyper@OpenBabel@@6B@ @ 2594 NONAME ; const OpenBabel::OBAtomTyper::`RTTI Complete Object Locator'
 ??_R1A@?0A@A@OBAromaticTyper@OpenBabel@@8 @ 2595 NONAME ; OpenBabel::OBAromaticTyper::`RTTI Base Class Descriptor at (0,-1,0,0)'
 ??_R2OBAromaticTyper@OpenBabel@@8 @ 2596 NONAME ; OpenBabel::OBAromaticTyper::`RTTI Base Class Array'
 ??_R3OBAromaticTyper@OpenBabel@@8 @ 2597 NONAME ; OpenBabel::OBAromaticTyper::`RTTI Class Hierarchy Descriptor'
 ??_R4OBAromaticTyper@OpenBabel@@6B@ @ 2598 NONAME ; const OpenBabel::OBAromaticTyper::`RTTI Complete Object Locator'
 __CT??_R0?AVOBError@OpenBabel@@@8??0OBError@OpenBabel@@QAE@ABV01@@Z80 @ 2599 NONAME ; __CT??_R0?AVOBError@OpenBabel@@@8??0OBError@OpenBabel@@QAE@ABV01@@Z80
 __CTA1?AVOBError@OpenBabel@@ @ 2600 NONAME ; __CTA1?AVOBError@OpenBabel@@
 __TI1?AVOBError@OpenBabel@@ @ 2601 NONAME ; __TI1?AVOBError@OpenBabel@@
 ??_R0?AVOBBase@OpenBabel@@@8 @ 2602 NONAME ; class OpenBabel::OBBase `RTTI Type Descriptor'
 ??_R0?AVOBNodeBase@OpenBabel@@@8 @ 2603 NONAME ; class OpenBabel::OBNodeBase `RTTI Type Descriptor'
 ??_R0?AVOBAtom@OpenBabel@@@8 @ 2604 NONAME ; class OpenBabel::OBAtom `RTTI Type Descriptor'
 ??_R0?AVOBGlobalDataBase@OpenBabel@@@8 @ 2605 NONAME ; class OpenBabel::OBGlobalDataBase `RTTI Type Descriptor'
 ??_R0?AVOBTypeTable@OpenBabel@@@8 @ 2606 NONAME ; class OpenBabel::OBTypeTable `RTTI Type Descriptor'
 ??_R0?AVOBSmartsPattern@OpenBabel@@@8 @ 2607 NONAME ; class OpenBabel::OBSmartsPattern `RTTI Type Descriptor'
 ??_R0?AVOBGenericData@OpenBabel@@@8 @ 2608 NONAME ; class OpenBabel::OBGenericData `RTTI Type Descriptor'
 ??_R0?AVOBRotamerList@OpenBabel@@@8 @ 2609 NONAME ; class OpenBabel::OBRotamerList `RTTI Type Descriptor'
 ??_R0?AVOBEdgeBase@OpenBabel@@@8 @ 2610 NONAME ; class OpenBabel::OBEdgeBase `RTTI Type Descriptor'
 ??_R0?AVOBBond@OpenBabel@@@8 @ 2611 NONAME ; class OpenBabel::OBBond `RTTI Type Descriptor'
 ??_R0?AVOBExtensionTable@OpenBabel@@@8 @ 2612 NONAME ; class OpenBabel::OBExtensionTable `RTTI Type Descriptor'
 ??_R0?AVOBIsotopeTable@OpenBabel@@@8 @ 2613 NONAME ; class OpenBabel::OBIsotopeTable `RTTI Type Descriptor'
 ??_R0?AVOBElementTable@OpenBabel@@@8 @ 2614 NONAME ; class OpenBabel::OBElementTable `RTTI Type Descriptor'
 ??_R0?AVOBCommentData@OpenBabel@@@8 @ 2615 NONAME ; class OpenBabel::OBCommentData `RTTI Type Descriptor'
 ??_R0?AVOBExternalBondData@OpenBabel@@@8 @ 2616 NONAME ; class OpenBabel::OBExternalBondData `RTTI Type Descriptor'
 ??_R0?AVOBPairData@OpenBabel@@@8 @ 2617 NONAME ; class OpenBabel::OBPairData `RTTI Type Descriptor'
 ??_R0?AVOBVirtualBond@OpenBabel@@@8 @ 2618 NONAME ; class OpenBabel::OBVirtualBond `RTTI Type Descriptor'
 ??_R0?AVOBUnitCell@OpenBabel@@@8 @ 2619 NONAME ; class OpenBabel::OBUnitCell `RTTI Type Descriptor'
 ??_R0?AVOBRingData@OpenBabel@@@8 @ 2620 NONAME ; class OpenBabel::OBRingData `RTTI Type Descriptor'
 ??_R0?AVOBAngleData@OpenBabel@@@8 @ 2621 NONAME ; class OpenBabel::OBAngleData `RTTI Type Descriptor'
 ??_R0?AVOBTorsionData@OpenBabel@@@8 @ 2622 NONAME ; class OpenBabel::OBTorsionData `RTTI Type Descriptor'
 ??_R0?AVOBError@OpenBabel@@@8 @ 2623 NONAME ; class OpenBabel::OBError `RTTI Type Descriptor'
 ??_R0?AVOBGraphBase@OpenBabel@@@8 @ 2624 NONAME ; class OpenBabel::OBGraphBase `RTTI Type Descriptor'
 ??_R0?AVOBMol@OpenBabel@@@8 @ 2625 NONAME ; class OpenBabel::OBMol `RTTI Type Descriptor'
 ??_R0?AVOBPhModel@OpenBabel@@@8 @ 2626 NONAME ; class OpenBabel::OBPhModel `RTTI Type Descriptor'
 ??_R0?AVOBResidue@OpenBabel@@@8 @ 2627 NONAME ; class OpenBabel::OBResidue `RTTI Type Descriptor'
 ??_R0?AVOBRotorRules@OpenBabel@@@8 @ 2628 NONAME ; class OpenBabel::OBRotorRules `RTTI Type Descriptor'
 ??_R0?AVOBAtomTyper@OpenBabel@@@8 @ 2629 NONAME ; class OpenBabel::OBAtomTyper `RTTI Type Descriptor'
 ??_R0?AVOBAromaticTyper@OpenBabel@@@8 @ 2630 NONAME ; class OpenBabel::OBAromaticTyper `RTTI Type Descriptor'
 ?_Nil@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@1PAU_Node@12@A @ 2631 NONAME ; protected: static struct std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Node * std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel
 ?_Nilrefs@?$_Tree@FU?$pair@$$CBFPAVOBResidue@OpenBabel@@@std@@U_Kfn@?$map@FPAVOBResidue@OpenBabel@@U?$less@F@std@@V?$allocator@PAVOBResidue@OpenBabel@@@4@@2@U?$less@F@2@V?$allocator@PAVOBResidue@OpenBabel@@@2@@std@@1IA @ 2632 NONAME ; protected: static unsigned int std::_Tree<short,struct std::pair<short const ,class OpenBabel::OBResidue *>,struct std::map<short,class OpenBabel::OBResidue *,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Kfn,struct std::less<short>,class std::allocator<class OpenBabel::OBResidue *> >::_Nilrefs
