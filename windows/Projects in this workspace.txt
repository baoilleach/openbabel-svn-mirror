The projects in this workspace are intended for Visual C++6.

It is probable that they will be automatically converted by Visual Studio.NET

Standalone EXE files

OBabel
This produces the command line program obabel.exe by compiling all the core 
OpenBabel files, the conversion files, obconversion.cpp and a number of format files.
If more format files become available, just add them to the compilation, no other
code changes are necessary. This does not need any other files to run.

OBGUIs
This produces a statically linked Windows interface and does not require any other 
files to run.  It handles the formats included during its compilation. Others can 
be added by including their cpp files during the build. Alternatively, it will
automatically use any format dll (of type *.obf) in the same directory when
it starts.

Dynamic link libraries

OBDLL
This makes obdll.dll from the files in the OpenBabel core API.  It does not include
any input/output capability.

OBConv
This makes obconv.dll which contains the I/O routines and can recognize format files,
*.obf.

EXE files using DLLs

OBConsole
This makes a version of obabel.exe which links with obconv.lib and needs obconv.dll, 
obdll.dll and one or more format files, *.obf, at runtime.

OBFormats
Makes OBFormats.obf, a DLL which contains format classes. Currently only a few MDL Mol, SMILES, CML, etc

OBFormats2
Makes OBFormats2.obf which contains all the currently available formats.  

OBGUI
This makes OBGUI.exe which links with obconv.lib and needs obconv.dll, 
obdll.dll and one or more format files, *.obf, at runtime.

ProgramTest
This uses prog1.cpp to illustrate a command line program using the OB API and I/O
capabilities in DLLs. It links with obconv.lib and obdll.lib and needs obconv.dll, 
obdll.dll and one or more format files, *.obf, at runtime. Alternatively it would
have been possible to build prog1.cpp with all the files in the OBabel project except
main.cpp.

ProgramTest2
This example shows how to add automatic format conversion to an existing Windows program
using the DLL form of OpenBabel. It does not need mol.h to compile, but does need 
obconv.dll, obdll.dll and one or more format files, *.obf, at runtime.
