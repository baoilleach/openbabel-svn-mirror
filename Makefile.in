#Open Babel top-level Makefile

version       = @openbabel_version@

srcdir        = @srcdir@
VPATH         = @srcdir@
top_srcdir    = @top_srcdir@
prefix        = @prefix@
exec_prefix   = @exec_prefix@
mandir        = @mandir@/man1
bindir        = @bindir@

DESTDIR       =

INSTALL	      = @INSTALL@
MKDIRS        = $(top_srcdir)/mkinstalldirs

SUBDIRS	      = src test
DISTDIR       = $(top_srcdir)/../openbabel-$(version)

all:
		@for i in $(SUBDIRS); do \
			(cd $$i; $(MAKE) $(MFLAGS) all) \
			|| case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
		done && test -z "$$fail"

apidoc:		
		doxygen

test:		check
check:
		@for i in $(SUBDIRS); do \
			(cd $$i; $(MAKE) $(MFLAGS) check) \
			|| case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
		done && test -z "$$fail"

clean:
		rm -f *~
		@for i in $(SUBDIRS); do \
			(cd $$i; $(MAKE) $(MFLAGS) clean) \
			|| case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
		done && test -z "$$fail"

distclean:
		rm -f config.cache config.status config.log config.h *~ 
		@for i in $(SUBDIRS); do \
			(cd $$i; $(MAKE) $(MFLAGS) distclean) \
			|| case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
		done && test -z "$$fail"
		rm -f Makefile stamp-h

install:	all
		(cd src; $(MAKE) $(MFLAGS) install)
		$(MKDIRS) $(DESTDIR)$(mandir)
		$(INSTALL) $(top_srcdir)/doc/babel.1 $(DESTDIR)$(mandir)


dist:		distclean
	        rm -rf $(DISTDIR) openbabel.tar.gz
		mkdir $(DISTDIR)
		tar cf - $(top_srcdir) | (cd $(DISTDIR); tar xf -)
		(cd $(DISTDIR); rm -fr RCS CVS *~ .#\*);
		(cd $(DISTDIR); rm -fr */RCS */CVS */*~ */.#\*);
		(cd $(DISTDIR)/..; tar cvzf openbabel-$(version).tar.gz openbabel-$(version))
		rm -rf $(DISTDIR)

# Update the Makefiles if things are updated
#$(srcdir)/configure:  configure.in
#		cd $(srcdir) && autoconf

# autoheader might not change config.h.in, so touch a stamp file.
${srcdir}/config.h.in:  stamp-h.in
${srcdir}/stamp.h.in:  configure.in aclocal.m4
		cd ${srcdir} && autoheader
		echo timestamp > ${srcdir}/stamp-h.in

config.h: stamp-h
stamp-h:  config.h.in config.status
		./config.status

Makefile:  Makefile.in config.status
		./config.status

config.status:  configure
		./config.status --recheck
